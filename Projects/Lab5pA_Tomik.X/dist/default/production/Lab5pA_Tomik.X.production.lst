

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Sep 29 21:25:05 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataBANK0
    45  0029B4                     __pidataBANK0:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _array
    49  0029B4  0040               	dw	64
    50  0029B6  0079               	dw	121
    51  0029B8  0024               	dw	36
    52  0029BA  0030               	dw	48
    53  0029BC  0019               	dw	25
    54  0029BE  0012               	dw	18
    55  0029C0  0002               	dw	2
    56  0029C2  0078               	dw	120
    57  0029C4  0000               	dw	0
    58  0029C6  0010               	dw	16
    59                           
    60                           	psect	smallconst
    61  001000                     __psmallconst:
    62                           	opt stack 0
    63  001000  00                 	db	0
    64  001001                     _dpowers:
    65                           	opt stack 0
    66  001001  0001               	dw	1
    67  001003  0000               	dw	0
    68  001005  000A               	dw	10
    69  001007  0000               	dw	0
    70  001009  0064               	dw	100
    71  00100B  0000               	dw	0
    72  00100D  03E8               	dw	1000
    73  00100F  0000               	dw	0
    74  001011  2710               	dw	10000
    75  001013  0000               	dw	0
    76  001015  86A0               	dw	34464
    77  001017  0001               	dw	1
    78  001019  4240               	dw	16960
    79  00101B  000F               	dw	15
    80  00101D  9680               	dw	38528
    81  00101F  0098               	dw	152
    82  001021  E100               	dw	57600
    83  001023  05F5               	dw	1525
    84  001025  CA00               	dw	51712
    85  001027  3B9A               	dw	15258
    86  001029                     __end_of_dpowers:
    87                           	opt stack 0
    88  001029                     __npowers_:
    89                           	opt stack 0
    90  001029  00                 	db	0
    91  00102A  80                 	db	128
    92  00102B  3F                 	db	63
    93  00102C  CD                 	db	205
    94  00102D  CC                 	db	204
    95  00102E  3D                 	db	61
    96  00102F  D7                 	db	215
    97  001030  23                 	db	35
    98  001031  3C                 	db	60
    99  001032  12                 	db	18
   100  001033  83                 	db	131
   101  001034  3A                 	db	58
   102  001035  B7                 	db	183
   103  001036  D1                 	db	209
   104  001037  38                 	db	56
   105  001038  C6                 	db	198
   106  001039  27                 	db	39
   107  00103A  37                 	db	55
   108  00103B  38                 	db	56
   109  00103C  86                 	db	134
   110  00103D  35                 	db	53
   111  00103E  C0                 	db	192
   112  00103F  D6                 	db	214
   113  001040  33                 	db	51
   114  001041  CC                 	db	204
   115  001042  2B                 	db	43
   116  001043  32                 	db	50
   117  001044  70                 	db	112
   118  001045  89                 	db	137
   119  001046  30                 	db	48
   120  001047  E7                 	db	231
   121  001048  DB                 	db	219
   122  001049  2E                 	db	46
   123  00104A  E5                 	db	229
   124  00104B  3C                 	db	60
   125  00104C  1E                 	db	30
   126  00104D  42                 	db	66
   127  00104E  A2                 	db	162
   128  00104F  0D                 	db	13
   129  001050                     __end_of__npowers_:
   130                           	opt stack 0
   131  001050                     __powers_:
   132                           	opt stack 0
   133  001050  00                 	db	0
   134  001051  80                 	db	128
   135  001052  3F                 	db	63
   136  001053  00                 	db	0
   137  001054  20                 	db	32
   138  001055  41                 	db	65
   139  001056  00                 	db	0
   140  001057  C8                 	db	200
   141  001058  42                 	db	66
   142  001059  00                 	db	0
   143  00105A  7A                 	db	122
   144  00105B  44                 	db	68
   145  00105C  40                 	db	64
   146  00105D  1C                 	db	28
   147  00105E  46                 	db	70
   148  00105F  50                 	db	80
   149  001060  C3                 	db	195
   150  001061  47                 	db	71
   151  001062  24                 	db	36
   152  001063  74                 	db	116
   153  001064  49                 	db	73
   154  001065  97                 	db	151
   155  001066  18                 	db	24
   156  001067  4B                 	db	75
   157  001068  BC                 	db	188
   158  001069  BE                 	db	190
   159  00106A  4C                 	db	76
   160  00106B  6B                 	db	107
   161  00106C  6E                 	db	110
   162  00106D  4E                 	db	78
   163  00106E  03                 	db	3
   164  00106F  15                 	db	21
   165  001070  50                 	db	80
   166  001071  79                 	db	121
   167  001072  AD                 	db	173
   168  001073  60                 	db	96
   169  001074  F3                 	db	243
   170  001075  49                 	db	73
   171  001076  71                 	db	113
   172  001077                     __end_of__powers_:
   173                           	opt stack 0
   174  0000                     _ADCON0	set	4034
   175  0000                     _ADCON0bits	set	4034
   176  0000                     _ADCON1	set	4033
   177  0000                     _ADCON2	set	4032
   178  0000                     _ADRESH	set	4036
   179  0000                     _ADRESL	set	4035
   180  0000                     _OSCCON	set	4051
   181  0000                     _PIE1bits	set	3997
   182  0000                     _PIR1bits	set	3998
   183  0000                     _PORTC	set	3970
   184  0000                     _PORTD	set	3971
   185  0000                     _PORTDbits	set	3971
   186  0000                     _PORTE	set	3972
   187  0000                     _RCSTA	set	4011
   188  0000                     _RCSTAbits	set	4011
   189  0000                     _SPBRG	set	4015
   190  0000                     _SPBRGH	set	4016
   191  0000                     _TRISA	set	3986
   192  0000                     _TRISB	set	3987
   193  0000                     _TRISC	set	3988
   194  0000                     _TRISCbits	set	3988
   195  0000                     _TRISD	set	3989
   196  0000                     _TRISE	set	3990
   197  0000                     _TXSTA	set	4012
   198  0000                     _TXSTAbits	set	4012
   199  001077                     STR_1:
   200  001077  76                 	db	118	;'v'
   201  001078  6F                 	db	111	;'o'
   202  001079  6C                 	db	108	;'l'
   203  00107A  74                 	db	116	;'t'
   204  00107B  20                 	db	32
   205  00107C  3D                 	db	61	;'='
   206  00107D  20                 	db	32
   207  00107E  25                 	db	37
   208  00107F  66                 	db	102	;'f'
   209  001080  20                 	db	32
   210  001081  0D                 	db	13
   211  001082  0A                 	db	10
   212  001083  00                 	db	0
   213                           
   214                           ; #config settings
   215  001084  00                 	db	0	; dummy byte at the end
   216  0000                     
   217                           	psect	cinit
   218  0028D6                     __pcinit:
   219                           	opt stack 0
   220  0028D6                     start_initialization:
   221                           	opt stack 0
   222  0028D6                     __initialization:
   223                           	opt stack 0
   224                           
   225                           ; Clear objects allocated to COMRAM (5 bytes)
   226  0028D6  6A7F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   227  0028D8  6A7E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   228  0028DA  6A7D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   229  0028DC  6A7C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   230  0028DE  6A7B               	clrf	__pbssCOMRAM& (0+255),c
   231                           
   232                           ; Initialize objects allocated to BANK0 (20 bytes)
   233                           ; load TBLPTR registers with __pidataBANK0
   234  0028E0  0EB4               	movlw	low __pidataBANK0
   235  0028E2  6EF6               	movwf	tblptrl,c
   236  0028E4  0E29               	movlw	high __pidataBANK0
   237  0028E6  6EF7               	movwf	tblptrh,c
   238  0028E8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   239  0028EA  6EF8               	movwf	tblptru,c
   240  0028EC  EE00  F080         	lfsr	0,__pdataBANK0
   241  0028F0  EE10 F014          	lfsr	1,20
   242  0028F4                     copy_data0:
   243  0028F4  0009               	tblrd		*+
   244  0028F6  CFF5 FFEE          	movff	tablat,postinc0
   245  0028FA  50E5               	movf	postdec1,w,c
   246  0028FC  50E1               	movf	fsr1l,w,c
   247  0028FE  E1FA               	bnz	copy_data0
   248  002900                     end_of_initialization:
   249                           	opt stack 0
   250  002900                     __end_of__initialization:
   251                           	opt stack 0
   252  002900  0E00               	movlw	low (__Lmediumconst shr (0+16))
   253  002902  6EF8               	movwf	tblptru,c
   254  002904  0100               	movlb	0
   255  002906  EF57  F010         	goto	_main	;jump to C main() function
   256                           tblptru	equ	0xFF8
   257                           tblptrh	equ	0xFF7
   258                           tblptrl	equ	0xFF6
   259                           tablat	equ	0xFF5
   260                           postinc0	equ	0xFEE
   261                           postdec1	equ	0xFE5
   262                           fsr1l	equ	0xFE1
   263                           
   264                           	psect	bssCOMRAM
   265  00007B                     __pbssCOMRAM:
   266                           	opt stack 0
   267  00007B                     _volt:
   268                           	opt stack 0
   269  00007B                     	ds	3
   270  00007E                     _num_step:
   271                           	opt stack 0
   272  00007E                     	ds	2
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           postdec1	equ	0xFE5
   279                           fsr1l	equ	0xFE1
   280                           
   281                           	psect	dataBANK0
   282  000080                     __pdataBANK0:
   283                           	opt stack 0
   284  000080                     _array:
   285                           	opt stack 0
   286  000080                     	ds	20
   287                           tblptru	equ	0xFF8
   288                           tblptrh	equ	0xFF7
   289                           tblptrl	equ	0xFF6
   290                           tablat	equ	0xFF5
   291                           postinc0	equ	0xFEE
   292                           postdec1	equ	0xFE5
   293                           fsr1l	equ	0xFE1
   294                           
   295                           	psect	cstackBANK0
   296  000094                     __pcstackBANK0:
   297                           	opt stack 0
   298  000094                     main@num_step:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0x0
   302  000094                     	ds	2
   303  000096                     main@U:
   304                           	opt stack 0
   305                           
   306                           ; 2 bytes @ 0x2
   307  000096                     	ds	2
   308  000098                     main@L:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0x4
   312  000098                     	ds	2
   313  00009A                     main@volt:
   314                           	opt stack 0
   315                           
   316                           ; 3 bytes @ 0x6
   317  00009A                     	ds	3
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           postdec1	equ	0xFE5
   324                           fsr1l	equ	0xFE1
   325                           
   326                           	psect	cstackCOMRAM
   327  000001                     __pcstackCOMRAM:
   328                           	opt stack 0
   329  000001                     ?_Get_Full_ADC:
   330                           	opt stack 0
   331  000001                     ?___ftpack:
   332                           	opt stack 0
   333  000001                     ?___ftneg:
   334                           	opt stack 0
   335  000001                     ?__tdiv_to_l_:
   336                           	opt stack 0
   337  000001                     ?__div_to_l_:
   338                           	opt stack 0
   339  000001                     ?___lldiv:
   340                           	opt stack 0
   341  000001                     ?___llmod:
   342                           	opt stack 0
   343  000001                     select_ADC_Channel@channel:
   344                           	opt stack 0
   345  000001                     DO_DISPLAY7_SEG_UPPER@digit:
   346                           	opt stack 0
   347  000001                     DO_DISPLAY7_SEG_LOWER@digit:
   348                           	opt stack 0
   349  000001                     Delay_One_Sec@I:
   350                           	opt stack 0
   351  000001                     OpenUSART@spbrg:
   352                           	opt stack 0
   353  000001                     __div_to_l_@f1:
   354                           	opt stack 0
   355  000001                     ___ftpack@arg:
   356                           	opt stack 0
   357  000001                     __tdiv_to_l_@f1:
   358                           	opt stack 0
   359  000001                     ___ftge@ff1:
   360                           	opt stack 0
   361  000001                     ___ftneg@f1:
   362                           	opt stack 0
   363  000001                     ___lldiv@dividend:
   364                           	opt stack 0
   365  000001                     ___llmod@dividend:
   366                           	opt stack 0
   367                           
   368                           ; 4 bytes @ 0x0
   369  000001                     	ds	1
   370  000002                     DO_DISPLAY7_SEG_UPPER@PC:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x1
   374  000002                     	ds	1
   375  000003                     ??_Get_Full_ADC:
   376  000003                     DO_DISPLAY7_SEG_UPPER@PE:
   377                           	opt stack 0
   378  000003                     OpenUSART@config:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0x2
   382  000003                     	ds	1
   383  000004                     ___ftpack@exp:
   384                           	opt stack 0
   385  000004                     __div_to_l_@f2:
   386                           	opt stack 0
   387  000004                     __tdiv_to_l_@f2:
   388                           	opt stack 0
   389  000004                     ___ftge@ff2:
   390                           	opt stack 0
   391                           
   392                           ; 3 bytes @ 0x3
   393  000004                     	ds	1
   394  000005                     ___ftpack@sign:
   395                           	opt stack 0
   396  000005                     Get_Full_ADC@result:
   397                           	opt stack 0
   398  000005                     ___lldiv@divisor:
   399                           	opt stack 0
   400  000005                     ___llmod@divisor:
   401                           	opt stack 0
   402                           
   403                           ; 4 bytes @ 0x4
   404  000005                     	ds	1
   405  000006                     ??___ftpack:
   406                           
   407                           ; 0 bytes @ 0x5
   408  000006                     	ds	1
   409  000007                     ??__tdiv_to_l_:
   410  000007                     ??___ftge:
   411  000007                     __div_to_l_@quot:
   412                           	opt stack 0
   413                           
   414                           ; 4 bytes @ 0x6
   415  000007                     	ds	2
   416  000009                     ?___ftmul:
   417                           	opt stack 0
   418  000009                     ?___lltoft:
   419                           	opt stack 0
   420  000009                     ___llmod@counter:
   421                           	opt stack 0
   422  000009                     ___ftmul@f1:
   423                           	opt stack 0
   424  000009                     ___lldiv@quotient:
   425                           	opt stack 0
   426  000009                     ___lltoft@c:
   427                           	opt stack 0
   428                           
   429                           ; 4 bytes @ 0x8
   430  000009                     	ds	1
   431  00000A                     __tdiv_to_l_@quot:
   432                           	opt stack 0
   433                           
   434                           ; 4 bytes @ 0x9
   435  00000A                     	ds	1
   436  00000B                     __div_to_l_@cntr:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0xA
   440  00000B                     	ds	1
   441  00000C                     __div_to_l_@exp1:
   442                           	opt stack 0
   443  00000C                     ___ftmul@f2:
   444                           	opt stack 0
   445                           
   446                           ; 3 bytes @ 0xB
   447  00000C                     	ds	1
   448  00000D                     ??___lltoft:
   449  00000D                     ___lldiv@counter:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0xC
   453  00000D                     	ds	1
   454  00000E                     __tdiv_to_l_@cntr:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0xD
   458  00000E                     	ds	1
   459  00000F                     ??___ftmul:
   460  00000F                     __tdiv_to_l_@exp1:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0xE
   464  00000F                     	ds	2
   465  000011                     ___lltoft@exp:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x10
   469  000011                     	ds	1
   470  000012                     ___ftmul@exp:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x11
   474  000012                     	ds	1
   475  000013                     ___ftmul@f3_as_product:
   476                           	opt stack 0
   477                           
   478                           ; 3 bytes @ 0x12
   479  000013                     	ds	3
   480  000016                     ___ftmul@cntr:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0x15
   484  000016                     	ds	1
   485  000017                     ___ftmul@sign:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x16
   489  000017                     	ds	1
   490  000018                     ?___fttol:
   491                           	opt stack 0
   492  000018                     ___fttol@f1:
   493                           	opt stack 0
   494                           
   495                           ; 3 bytes @ 0x17
   496  000018                     	ds	4
   497  00001C                     ??___fttol:
   498                           
   499                           ; 0 bytes @ 0x1B
   500  00001C                     	ds	5
   501  000021                     ___fttol@sign1:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x20
   505  000021                     	ds	1
   506  000022                     ___fttol@lval:
   507                           	opt stack 0
   508                           
   509                           ; 4 bytes @ 0x21
   510  000022                     	ds	4
   511  000026                     ___fttol@exp1:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x25
   515  000026                     	ds	1
   516  000027                     ?___awmod:
   517                           	opt stack 0
   518  000027                     ___awmod@dividend:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x26
   522  000027                     	ds	2
   523  000029                     ___awmod@divisor:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x28
   527  000029                     	ds	2
   528  00002B                     ___awmod@counter:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x2A
   532  00002B                     	ds	1
   533  00002C                     ___awmod@sign:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x2B
   537  00002C                     	ds	1
   538  00002D                     ?___awdiv:
   539                           	opt stack 0
   540  00002D                     ___awdiv@dividend:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x2C
   544  00002D                     	ds	2
   545  00002F                     ___awdiv@divisor:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x2E
   549  00002F                     	ds	2
   550  000031                     ___awdiv@counter:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x30
   554  000031                     	ds	1
   555  000032                     ___awdiv@sign:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x31
   559  000032                     	ds	1
   560  000033                     ___awdiv@quotient:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x32
   564  000033                     	ds	2
   565  000035                     ?___wmul:
   566                           	opt stack 0
   567  000035                     ?___awtoft:
   568                           	opt stack 0
   569  000035                     ___wmul@multiplier:
   570                           	opt stack 0
   571  000035                     ___awtoft@c:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x34
   575  000035                     	ds	2
   576  000037                     ___wmul@multiplicand:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x36
   580  000037                     	ds	1
   581  000038                     ___awtoft@sign:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x37
   585  000038                     	ds	1
   586  000039                     ___wmul@product:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x38
   590  000039                     	ds	2
   591  00003B                     ?_fround:
   592                           	opt stack 0
   593  00003B                     ?_scale:
   594                           	opt stack 0
   595                           
   596                           ; 3 bytes @ 0x3A
   597  00003B                     	ds	3
   598  00003E                     _fround$1107:
   599                           	opt stack 0
   600  00003E                     _scale$1108:
   601                           	opt stack 0
   602                           
   603                           ; 3 bytes @ 0x3D
   604  00003E                     	ds	3
   605  000041                     scale@scl:
   606                           	opt stack 0
   607  000041                     _fround$1106:
   608                           	opt stack 0
   609                           
   610                           ; 3 bytes @ 0x40
   611  000041                     	ds	3
   612  000044                     fround@prec:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x43
   616  000044                     	ds	1
   617  000045                     ?___ftadd:
   618                           	opt stack 0
   619  000045                     ___ftadd@f1:
   620                           	opt stack 0
   621                           
   622                           ; 3 bytes @ 0x44
   623  000045                     	ds	3
   624  000048                     ___ftadd@f2:
   625                           	opt stack 0
   626                           
   627                           ; 3 bytes @ 0x47
   628  000048                     	ds	3
   629  00004B                     ??___ftadd:
   630                           
   631                           ; 0 bytes @ 0x4A
   632  00004B                     	ds	3
   633  00004E                     ___ftadd@sign:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x4D
   637  00004E                     	ds	1
   638  00004F                     ___ftadd@exp2:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x4E
   642  00004F                     	ds	1
   643  000050                     ___ftadd@exp1:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x4F
   647  000050                     	ds	1
   648  000051                     ?___ftsub:
   649                           	opt stack 0
   650  000051                     ___ftsub@f1:
   651                           	opt stack 0
   652                           
   653                           ; 3 bytes @ 0x50
   654  000051                     	ds	3
   655  000054                     ___ftsub@f2:
   656                           	opt stack 0
   657                           
   658                           ; 3 bytes @ 0x53
   659  000054                     	ds	3
   660  000057                     ?_printf:
   661                           	opt stack 0
   662  000057                     printf@f:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x56
   666  000057                     	ds	5
   667  00005C                     ??_printf:
   668                           
   669                           ; 0 bytes @ 0x5B
   670  00005C                     	ds	6
   671  000062                     _printf$1109:
   672                           	opt stack 0
   673                           
   674                           ; 3 bytes @ 0x61
   675  000062                     	ds	3
   676  000065                     printf@ap:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x64
   680  000065                     	ds	2
   681  000067                     printf@flag:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x66
   685  000067                     	ds	2
   686  000069                     printf@prec:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x68
   690  000069                     	ds	2
   691  00006B                     printf@val:
   692                           	opt stack 0
   693                           
   694                           ; 4 bytes @ 0x6A
   695  00006B                     	ds	4
   696  00006F                     printf@exp:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x6E
   700  00006F                     	ds	2
   701  000071                     printf@tmpval:
   702                           	opt stack 0
   703                           
   704                           ; 4 bytes @ 0x70
   705  000071                     	ds	4
   706  000075                     printf@fval:
   707                           	opt stack 0
   708                           
   709                           ; 3 bytes @ 0x74
   710  000075                     	ds	3
   711  000078                     printf@c:
   712                           	opt stack 0
   713                           
   714                           ; 1 bytes @ 0x77
   715  000078                     	ds	1
   716  000079                     ??_main:
   717                           
   718                           ; 0 bytes @ 0x78
   719  000079                     	ds	2
   720                           tblptru	equ	0xFF8
   721                           tblptrh	equ	0xFF7
   722                           tblptrl	equ	0xFF6
   723                           tablat	equ	0xFF5
   724                           postinc0	equ	0xFEE
   725                           postdec1	equ	0xFE5
   726                           fsr1l	equ	0xFE1
   727                           
   728 ;;
   729 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   730 ;;
   731 ;; *************** function _main *****************
   732 ;; Defined at:
   733 ;;		line 29 in file "Lab5p1_Tomik.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  volt            3    6[BANK0 ] float 
   738 ;;  L               2    4[BANK0 ] int 
   739 ;;  U               2    2[BANK0 ] int 
   740 ;;  num_step        2    0[BANK0 ] int 
   741 ;; Return value:  Size  Location     Type
   742 ;;		None               void
   743 ;; Registers used:
   744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;Total ram usage:       11 bytes
   755 ;; Hardware stack levels required when called:    4
   756 ;; This function calls:
   757 ;;		_DO_DISPLAY7_SEG_LOWER
   758 ;;		_DO_DISPLAY7_SEG_UPPER
   759 ;;		_Delay_One_Sec
   760 ;;		_Get_Full_ADC
   761 ;;		_Init_ADC
   762 ;;		___awdiv
   763 ;;		___awmod
   764 ;;		___awtoft
   765 ;;		___ftmul
   766 ;;		___fttol
   767 ;;		_init_UART
   768 ;;		_printf
   769 ;;		_select_ADC_Channel
   770 ;; This function is called by:
   771 ;;		Startup code after reset
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text0
   776  0020AE                     __ptext0:
   777                           	opt stack 0
   778  0020AE                     _main:
   779                           	opt stack 27
   780                           
   781                           ;Lab5p1_Tomik.c: 32: init_UART();
   782                           
   783                           ;incstack = 0
   784  0020AE  ECE4  F014         	call	_init_UART	;wreg free
   785                           
   786                           ;Lab5p1_Tomik.c: 33: Init_ADC();
   787  0020B2  ECEE  F014         	call	_Init_ADC	;wreg free
   788                           
   789                           ;Lab5p1_Tomik.c: 35: TRISA = 0xFF;
   790  0020B6  6892               	setf	3986,c	;volatile
   791                           
   792                           ;Lab5p1_Tomik.c: 36: TRISB = 0x00;
   793  0020B8  0E00               	movlw	0
   794  0020BA  6E93               	movwf	3987,c	;volatile
   795                           
   796                           ;Lab5p1_Tomik.c: 37: TRISC = 0x00;
   797  0020BC  0E00               	movlw	0
   798  0020BE  6E94               	movwf	3988,c	;volatile
   799                           
   800                           ;Lab5p1_Tomik.c: 38: TRISD = 0x00;
   801  0020C0  0E00               	movlw	0
   802  0020C2  6E95               	movwf	3989,c	;volatile
   803                           
   804                           ;Lab5p1_Tomik.c: 39: TRISE = 0X00;
   805  0020C4  0E00               	movlw	0
   806  0020C6  6E96               	movwf	3990,c	;volatile
   807  0020C8  D000               	goto	l2518
   808  0020CA                     l2518:
   809                           
   810                           ;Lab5p1_Tomik.c: 43: {
   811                           ;Lab5p1_Tomik.c: 45: select_ADC_Channel(0);
   812  0020CA  0E00               	movlw	0
   813  0020CC  ECF5  F014         	call	_select_ADC_Channel
   814                           
   815                           ;Lab5p1_Tomik.c: 46: int num_step = Get_Full_ADC();
   816  0020D0  EC99  F014         	call	_Get_Full_ADC	;wreg free
   817  0020D4  C001  F094         	movff	?_Get_Full_ADC,main@num_step
   818  0020D8  C002  F095         	movff	?_Get_Full_ADC+1,main@num_step+1
   819                           
   820                           ;Lab5p1_Tomik.c: 47: float volt = num_step * 4 / 1000;
   821  0020DC  0E03               	movlw	3
   822  0020DE  6E30               	movwf	___awdiv@divisor+1,c
   823  0020E0  0EE8               	movlw	232
   824  0020E2  6E2F               	movwf	___awdiv@divisor,c
   825  0020E4  C094  F079         	movff	main@num_step,??_main
   826  0020E8  C095  F07A         	movff	main@num_step+1,??_main+1
   827  0020EC  90D8               	bcf	status,0,c
   828  0020EE  3679               	rlcf	??_main,f,c
   829  0020F0  367A               	rlcf	??_main+1,f,c
   830  0020F2  90D8               	bcf	status,0,c
   831  0020F4  3679               	rlcf	??_main,f,c
   832  0020F6  367A               	rlcf	??_main+1,f,c
   833  0020F8  C079  F02D         	movff	??_main,___awdiv@dividend
   834  0020FC  C07A  F02E         	movff	??_main+1,___awdiv@dividend+1
   835  002100  EC2A  F012         	call	___awdiv	;wreg free
   836  002104  C02D  F035         	movff	?___awdiv,___awtoft@c
   837  002108  C02E  F036         	movff	?___awdiv+1,___awtoft@c+1
   838  00210C  EC4D  F014         	call	___awtoft	;wreg free
   839  002110  C035  F09A         	movff	?___awtoft,main@volt
   840  002114  C036  F09B         	movff	?___awtoft+1,main@volt+1
   841  002118  C037  F09C         	movff	?___awtoft+2,main@volt+2
   842                           
   843                           ;Lab5p1_Tomik.c: 49: printf("volt = %f \r\n",volt);
   844  00211C  0E77               	movlw	low STR_1
   845  00211E  6E57               	movwf	printf@f,c
   846  002120  0E10               	movlw	high STR_1
   847  002122  6E58               	movwf	printf@f+1,c
   848  002124  C09A  F059         	movff	main@volt,?_printf+2
   849  002128  C09B  F05A         	movff	main@volt+1,?_printf+3
   850  00212C  C09C  F05B         	movff	main@volt+2,?_printf+4
   851  002130  EC43  F008         	call	_printf	;wreg free
   852                           
   853                           ;Lab5p1_Tomik.c: 50: int U = ((int)(volt));
   854  002134  C09A  F018         	movff	main@volt,___fttol@f1
   855  002138  C09B  F019         	movff	main@volt+1,___fttol@f1+1
   856  00213C  C09C  F01A         	movff	main@volt+2,___fttol@f1+2
   857  002140  EC54  F011         	call	___fttol	;wreg free
   858  002144  C018  F096         	movff	?___fttol,main@U
   859  002148  C019  F097         	movff	?___fttol+1,main@U+1
   860                           
   861                           ;Lab5p1_Tomik.c: 51: int L = ((int)(volt*10)%10);
   862  00214C  0E00               	movlw	0
   863  00214E  6E0C               	movwf	___ftmul@f2,c
   864  002150  0E20               	movlw	32
   865  002152  6E0D               	movwf	___ftmul@f2+1,c
   866  002154  0E41               	movlw	65
   867  002156  6E0E               	movwf	___ftmul@f2+2,c
   868  002158  C09A  F009         	movff	main@volt,___ftmul@f1
   869  00215C  C09B  F00A         	movff	main@volt+1,___ftmul@f1+1
   870  002160  C09C  F00B         	movff	main@volt+2,___ftmul@f1+2
   871  002164  ECD8  F010         	call	___ftmul	;wreg free
   872  002168  C009  F018         	movff	?___ftmul,___fttol@f1
   873  00216C  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
   874  002170  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
   875  002174  EC54  F011         	call	___fttol	;wreg free
   876  002178  C018  F027         	movff	?___fttol,___awmod@dividend
   877  00217C  C019  F028         	movff	?___fttol+1,___awmod@dividend+1
   878  002180  0E00               	movlw	0
   879  002182  6E2A               	movwf	___awmod@divisor+1,c
   880  002184  0E0A               	movlw	10
   881  002186  6E29               	movwf	___awmod@divisor,c
   882  002188  EC4A  F013         	call	___awmod	;wreg free
   883  00218C  C027  F098         	movff	?___awmod,main@L
   884  002190  C028  F099         	movff	?___awmod+1,main@L+1
   885                           
   886                           ;Lab5p1_Tomik.c: 52: PORTDbits.RD7 = 0;
   887  002194  9E83               	bcf	3971,7,c	;volatile
   888                           
   889                           ;Lab5p1_Tomik.c: 56: DO_DISPLAY7_SEG_LOWER(L);
   890  002196  0100               	movlb	0	; () banked
   891  002198  5198               	movf	main@L& (0+255),w,b
   892  00219A  ECCE  F014         	call	_DO_DISPLAY7_SEG_LOWER
   893                           
   894                           ;Lab5p1_Tomik.c: 57: DO_DISPLAY7_SEG_UPPER(U);
   895  00219E  0100               	movlb	0	; () banked
   896  0021A0  5196               	movf	main@U& (0+255),w,b
   897  0021A2  EC06  F013         	call	_DO_DISPLAY7_SEG_UPPER
   898                           
   899                           ;Lab5p1_Tomik.c: 60: Delay_One_Sec();
   900  0021A6  ECBE  F014         	call	_Delay_One_Sec	;wreg free
   901  0021AA  D78F               	goto	l2518
   902  0021AC  EF00  F000         	goto	start
   903  0021B0                     __end_of_main:
   904                           	opt stack 0
   905                           tblptru	equ	0xFF8
   906                           tblptrh	equ	0xFF7
   907                           tblptrl	equ	0xFF6
   908                           tablat	equ	0xFF5
   909                           postinc0	equ	0xFEE
   910                           postdec1	equ	0xFE5
   911                           fsr1l	equ	0xFE1
   912                           status	equ	0xFD8
   913                           
   914 ;; *************** function _select_ADC_Channel *****************
   915 ;; Defined at:
   916 ;;		line 74 in file "Lab5p1_Tomik.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  channel         1    wreg     unsigned char 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  channel         1    0[COMRAM] unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;		None               void
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0, prodl, prodh
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;Total ram usage:        1 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_main
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text1
   944  0029EA                     __ptext1:
   945                           	opt stack 0
   946  0029EA                     _select_ADC_Channel:
   947                           	opt stack 30
   948                           
   949                           ;incstack = 0
   950                           ;select_ADC_Channel@channel stored from wreg
   951  0029EA  6E01               	movwf	select_ADC_Channel@channel,c
   952                           
   953                           ;Lab5p1_Tomik.c: 76: ADCON0 = (channel * 4) + 1;
   954  0029EC  5001               	movf	select_ADC_Channel@channel,w,c
   955  0029EE  0D04               	mullw	4
   956  0029F0  28F3               	incf	prodl,w,c
   957  0029F2  6EC2               	movwf	4034,c	;volatile
   958  0029F4  0012               	return		;funcret
   959  0029F6                     __end_of_select_ADC_Channel:
   960                           	opt stack 0
   961                           tblptru	equ	0xFF8
   962                           tblptrh	equ	0xFF7
   963                           tblptrl	equ	0xFF6
   964                           tablat	equ	0xFF5
   965                           prodl	equ	0xFF3
   966                           postinc0	equ	0xFEE
   967                           postdec1	equ	0xFE5
   968                           fsr1l	equ	0xFE1
   969                           status	equ	0xFD8
   970                           
   971 ;; *************** function _printf *****************
   972 ;; Defined at:
   973 ;;		line 464 in file "E:\XC8\sources\common\doprnt.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  f               2   86[COMRAM] PTR const unsigned char 
   976 ;;		 -> STR_1(13), 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  tmpval          4  112[COMRAM] struct .
   979 ;;  val             4  106[COMRAM] unsigned long 
   980 ;;  fval            3  116[COMRAM] unsigned long 
   981 ;;  cp              3    0        PTR const unsigned char 
   982 ;;  exp             2  110[COMRAM] int 
   983 ;;  prec            2  104[COMRAM] int 
   984 ;;  flag            2  102[COMRAM] unsigned short 
   985 ;;  ap              2  100[COMRAM] PTR void [1]
   986 ;;		 -> ?_printf(2), 
   987 ;;  len             2    0        unsigned int 
   988 ;;  width           2    0        int 
   989 ;;  c               1  119[COMRAM] char 
   990 ;;  d               1    0        unsigned char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  2   86[COMRAM] int 
   993 ;; Registers used:
   994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1000 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1003 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;Total ram usage:       34 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    3
  1007 ;; This function calls:
  1008 ;;		___awdiv
  1009 ;;		___ftadd
  1010 ;;		___ftge
  1011 ;;		___ftmul
  1012 ;;		___ftneg
  1013 ;;		___ftsub
  1014 ;;		___fttol
  1015 ;;		___lldiv
  1016 ;;		___llmod
  1017 ;;		___lltoft
  1018 ;;		___wmul
  1019 ;;		__div_to_l_
  1020 ;;		__tdiv_to_l_
  1021 ;;		_fround
  1022 ;;		_putch
  1023 ;;		_scale
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text2
  1030  001086                     __ptext2:
  1031                           	opt stack 0
  1032  001086                     _printf:
  1033                           	opt stack 27
  1034                           
  1035                           ;doprnt.c: 466: va_list ap;
  1036                           ;doprnt.c: 499: signed char c;
  1037                           ;doprnt.c: 501: int width;
  1038                           ;doprnt.c: 504: int prec;
  1039                           ;doprnt.c: 508: unsigned short flag;
  1040                           ;doprnt.c: 515: char d;
  1041                           ;doprnt.c: 516: double fval;
  1042                           ;doprnt.c: 517: int exp;
  1043                           ;doprnt.c: 523: union {
  1044                           ;doprnt.c: 524: unsigned long vd;
  1045                           ;doprnt.c: 525: double integ;
  1046                           ;doprnt.c: 526: } tmpval;
  1047                           ;doprnt.c: 528: unsigned long val;
  1048                           ;doprnt.c: 529: unsigned len;
  1049                           ;doprnt.c: 530: const char * cp;
  1050                           ;doprnt.c: 533: *ap = __va_start();
  1051                           
  1052                           ;incstack = 0
  1053  001086  0E59               	movlw	low (?_printf+2)
  1054  001088  6E65               	movwf	printf@ap,c
  1055  00108A  0E00               	movlw	high (?_printf+2)
  1056  00108C  6E66               	movwf	printf@ap+1,c
  1057                           
  1058                           ;doprnt.c: 536: while(c = *f++) {
  1059  00108E  D2FF               	goto	l2454
  1060  001090                     l2306:
  1061                           
  1062                           ;doprnt.c: 538: if(c != '%')
  1063  001090  0E25               	movlw	37
  1064  001092  1878               	xorwf	printf@c,w,c
  1065  001094  B4D8               	btfsc	status,2,c
  1066  001096  D004               	goto	l2310
  1067                           
  1068                           ;doprnt.c: 540: {
  1069                           ;doprnt.c: 541: (putch(c) );
  1070  001098  5078               	movf	printf@c,w,c
  1071  00109A  ECFB  F014         	call	_putch
  1072                           
  1073                           ;doprnt.c: 542: continue;
  1074  00109E  D2F7               	goto	l2454
  1075  0010A0                     l2310:
  1076                           
  1077                           ;doprnt.c: 543: }
  1078                           ;doprnt.c: 548: flag = 0;
  1079  0010A0  0E00               	movlw	0
  1080  0010A2  6E68               	movwf	printf@flag+1,c
  1081  0010A4  0E00               	movlw	0
  1082  0010A6  6E67               	movwf	printf@flag,c
  1083                           
  1084                           ;doprnt.c: 635: switch(c = *f++) {
  1085  0010A8  D005               	goto	l2316
  1086                           
  1087                           ;doprnt.c: 638: goto alldone;
  1088                           
  1089                           ;doprnt.c: 637: case 0:
  1090  0010AA  D2FF               	goto	l178
  1091  0010AC                     l2312:
  1092                           
  1093                           ;doprnt.c: 663: flag |= 0x400;
  1094  0010AC  8468               	bsf	printf@flag+1,2,c
  1095                           
  1096                           ;doprnt.c: 664: break;
  1097  0010AE  D013               	goto	l2318
  1098                           
  1099                           ;doprnt.c: 813: continue;
  1100                           
  1101                           ;doprnt.c: 802: default:
  1102  0010B0  D2EE               	goto	l2454
  1103                           
  1104                           ;doprnt.c: 822: }
  1105  0010B2  D011               	goto	l2318
  1106  0010B4                     l2316:
  1107  0010B4  C057  FFF6         	movff	printf@f,tblptrl
  1108  0010B8  C058  FFF7         	movff	printf@f+1,tblptrh
  1109  0010BC  4A57               	infsnz	printf@f,f,c
  1110  0010BE  2A58               	incf	printf@f+1,f,c
  1111  0010C0                     	if	0	;tblptru may be non-zero
  1112  0010C0                     	endif
  1113  0010C0                     	if	0	;tblptru may be non-zero
  1114  0010C0                     	endif
  1115  0010C0  0008               	tblrd		*
  1116  0010C2  CFF5 F078          	movff	tablat,printf@c
  1117  0010C6  5078               	movf	printf@c,w,c
  1118                           
  1119                           ; Switch size 1, requested type "space"
  1120                           ; Number of cases is 2, Range of values is 0 to 102
  1121                           ; switch strategies available:
  1122                           ; Name         Instructions Cycles
  1123                           ; simple_byte            7     4 (average)
  1124                           ;	Chosen strategy is simple_byte
  1125  0010C8  0A00               	xorlw	0	; case 0
  1126  0010CA  B4D8               	btfsc	status,2,c
  1127  0010CC  D2EE               	goto	l178
  1128  0010CE  0A66               	xorlw	102	; case 102
  1129  0010D0  B4D8               	btfsc	status,2,c
  1130  0010D2  D7EC               	goto	l2312
  1131  0010D4  D2DC               	goto	l2454
  1132  0010D6                     l2318:
  1133                           
  1134                           ;doprnt.c: 825: if(flag & (0x700)) {
  1135  0010D6  0E07               	movlw	7
  1136  0010D8  1468               	andwf	printf@flag+1,w,c
  1137  0010DA  B4D8               	btfsc	status,2,c
  1138  0010DC  D2CA               	goto	l2450
  1139                           
  1140                           ;doprnt.c: 829: prec = 6;
  1141  0010DE  0E00               	movlw	0
  1142  0010E0  6E6A               	movwf	printf@prec+1,c
  1143  0010E2  0E06               	movlw	6
  1144  0010E4  6E69               	movwf	printf@prec,c
  1145                           
  1146                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1147  0010E6  C065  FFD9         	movff	printf@ap,fsr2l
  1148  0010EA  C066  FFDA         	movff	printf@ap+1,fsr2h
  1149  0010EE  CFDE F075          	movff	postinc2,printf@fval
  1150  0010F2  CFDE F076          	movff	postinc2,printf@fval+1
  1151  0010F6  CFDD F077          	movff	postdec2,printf@fval+2
  1152  0010FA  0E03               	movlw	3
  1153  0010FC  2665               	addwf	printf@ap,f,c
  1154  0010FE  0E00               	movlw	0
  1155  001100  2266               	addwfc	printf@ap+1,f,c
  1156                           
  1157                           ;doprnt.c: 831: if(fval < 0.0) {
  1158  001102  AE77               	btfss	printf@fval+2,7,c
  1159  001104  D011               	goto	l2332
  1160                           
  1161                           ;doprnt.c: 832: fval = -fval;
  1162  001106  C075  F001         	movff	printf@fval,___ftneg@f1
  1163  00110A  C076  F002         	movff	printf@fval+1,___ftneg@f1+1
  1164  00110E  C077  F003         	movff	printf@fval+2,___ftneg@f1+2
  1165  001112  ECAC  F014         	call	___ftneg	;wreg free
  1166  001116  C001  F075         	movff	?___ftneg,printf@fval
  1167  00111A  C002  F076         	movff	?___ftneg+1,printf@fval+1
  1168  00111E  C003  F077         	movff	?___ftneg+2,printf@fval+2
  1169                           
  1170                           ;doprnt.c: 833: flag |= 0x03;
  1171  001122  0E03               	movlw	3
  1172  001124  1267               	iorwf	printf@flag,f,c
  1173  001126  D000               	goto	l2332
  1174  001128                     l2332:
  1175                           
  1176                           ;doprnt.c: 834: }
  1177                           ;doprnt.c: 835: exp = 0;
  1178  001128  0E00               	movlw	0
  1179  00112A  6E70               	movwf	printf@exp+1,c
  1180  00112C  0E00               	movlw	0
  1181  00112E  6E6F               	movwf	printf@exp,c
  1182                           
  1183                           ;doprnt.c: 836: if( fval!=0) {
  1184  001130  5075               	movf	printf@fval,w,c
  1185  001132  1076               	iorwf	printf@fval+1,w,c
  1186  001134  1077               	iorwf	printf@fval+2,w,c
  1187  001136  B4D8               	btfsc	status,2,c
  1188  001138  D085               	goto	l2360
  1189                           
  1190                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1191  00113A  0E82               	movlw	130
  1192  00113C  6E5C               	movwf	??_printf& (0+255),c
  1193  00113E  0EFF               	movlw	255
  1194  001140  6E5D               	movwf	(??_printf+1)& (0+255),c
  1195  001142  C075  F05E         	movff	printf@fval,??_printf+2
  1196  001146  C076  F05F         	movff	printf@fval+1,??_printf+3
  1197  00114A  C077  F060         	movff	printf@fval+2,??_printf+4
  1198  00114E  C078  F061         	movff	printf@fval+3,??_printf+5
  1199  001152  0E10               	movlw	16
  1200  001154  D005               	goto	u2440
  1201  001156                     u2445:
  1202  001156  90D8               	bcf	status,0,c
  1203  001158  3261               	rrcf	??_printf+5,f,c
  1204  00115A  3260               	rrcf	??_printf+4,f,c
  1205  00115C  325F               	rrcf	??_printf+3,f,c
  1206  00115E  325E               	rrcf	??_printf+2,f,c
  1207  001160                     u2440:
  1208  001160  2EE8               	decfsz	wreg,f,c
  1209  001162  D7F9               	goto	u2445
  1210  001164  505E               	movf	??_printf+2,w,c
  1211  001166  245C               	addwf	??_printf,w,c
  1212  001168  6E6F               	movwf	printf@exp,c
  1213  00116A  0E00               	movlw	0
  1214  00116C  205D               	addwfc	??_printf+1,w,c
  1215  00116E  6E70               	movwf	printf@exp+1,c
  1216                           
  1217                           ;doprnt.c: 838: exp--;
  1218  001170  066F               	decf	printf@exp,f,c
  1219  001172  A0D8               	btfss	status,0,c
  1220  001174  0670               	decf	printf@exp+1,f,c
  1221                           
  1222                           ;doprnt.c: 839: exp *= 3;
  1223  001176  C06F  F035         	movff	printf@exp,___wmul@multiplier
  1224  00117A  C070  F036         	movff	printf@exp+1,___wmul@multiplier+1
  1225  00117E  0E00               	movlw	0
  1226  001180  6E38               	movwf	___wmul@multiplicand+1,c
  1227  001182  0E03               	movlw	3
  1228  001184  6E37               	movwf	___wmul@multiplicand,c
  1229  001186  EC85  F014         	call	___wmul	;wreg free
  1230  00118A  C035  F06F         	movff	?___wmul,printf@exp
  1231  00118E  C036  F070         	movff	?___wmul+1,printf@exp+1
  1232                           
  1233                           ;doprnt.c: 840: exp /= 10;
  1234  001192  C06F  F02D         	movff	printf@exp,___awdiv@dividend
  1235  001196  C070  F02E         	movff	printf@exp+1,___awdiv@dividend+1
  1236  00119A  0E00               	movlw	0
  1237  00119C  6E30               	movwf	___awdiv@divisor+1,c
  1238  00119E  0E0A               	movlw	10
  1239  0011A0  6E2F               	movwf	___awdiv@divisor,c
  1240  0011A2  EC2A  F012         	call	___awdiv	;wreg free
  1241  0011A6  C02D  F06F         	movff	?___awdiv,printf@exp
  1242  0011AA  C02E  F070         	movff	?___awdiv+1,printf@exp+1
  1243                           
  1244                           ;doprnt.c: 841: if(exp < 0)
  1245  0011AE  AE70               	btfss	printf@exp+1,7,c
  1246  0011B0  D004               	goto	l2348
  1247                           
  1248                           ;doprnt.c: 842: exp--;
  1249  0011B2  066F               	decf	printf@exp,f,c
  1250  0011B4  A0D8               	btfss	status,0,c
  1251  0011B6  0670               	decf	printf@exp+1,f,c
  1252  0011B8  D000               	goto	l2348
  1253  0011BA                     l2348:
  1254                           
  1255                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1256  0011BA  506F               	movf	printf@exp,w,c
  1257  0011BC  0800               	sublw	0
  1258  0011BE  EC56  F00B         	call	_scale
  1259  0011C2  C03B  F071         	movff	?_scale,printf@tmpval
  1260  0011C6  C03C  F072         	movff	?_scale+1,printf@tmpval+1
  1261  0011CA  C03D  F073         	movff	?_scale+2,printf@tmpval+2
  1262                           
  1263                           ;doprnt.c: 847: tmpval.integ *= fval;
  1264  0011CE  C071  F009         	movff	printf@tmpval,___ftmul@f1
  1265  0011D2  C072  F00A         	movff	printf@tmpval+1,___ftmul@f1+1
  1266  0011D6  C073  F00B         	movff	printf@tmpval+2,___ftmul@f1+2
  1267  0011DA  C075  F00C         	movff	printf@fval,___ftmul@f2
  1268  0011DE  C076  F00D         	movff	printf@fval+1,___ftmul@f2+1
  1269  0011E2  C077  F00E         	movff	printf@fval+2,___ftmul@f2+2
  1270  0011E6  ECD8  F010         	call	___ftmul	;wreg free
  1271  0011EA  C009  F071         	movff	?___ftmul,printf@tmpval
  1272  0011EE  C00A  F072         	movff	?___ftmul+1,printf@tmpval+1
  1273  0011F2  C00B  F073         	movff	?___ftmul+2,printf@tmpval+2
  1274                           
  1275                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1276  0011F6  C071  F001         	movff	printf@tmpval,___ftge@ff1
  1277  0011FA  C072  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1278  0011FE  C073  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1279  001202  0E00               	movlw	0
  1280  001204  6E04               	movwf	___ftge@ff2,c
  1281  001206  0E80               	movlw	128
  1282  001208  6E05               	movwf	___ftge@ff2+1,c
  1283  00120A  0E3F               	movlw	63
  1284  00120C  6E06               	movwf	___ftge@ff2+2,c
  1285  00120E  EC75  F012         	call	___ftge	;wreg free
  1286  001212  B0D8               	btfsc	status,0,c
  1287  001214  D004               	goto	l2356
  1288                           
  1289                           ;doprnt.c: 849: exp--;
  1290  001216  066F               	decf	printf@exp,f,c
  1291  001218  A0D8               	btfss	status,0,c
  1292  00121A  0670               	decf	printf@exp+1,f,c
  1293  00121C  D013               	goto	l2360
  1294  00121E                     l2356:
  1295                           
  1296                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1297  00121E  C071  F001         	movff	printf@tmpval,___ftge@ff1
  1298  001222  C072  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1299  001226  C073  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1300  00122A  0E00               	movlw	0
  1301  00122C  6E04               	movwf	___ftge@ff2,c
  1302  00122E  0E20               	movlw	32
  1303  001230  6E05               	movwf	___ftge@ff2+1,c
  1304  001232  0E41               	movlw	65
  1305  001234  6E06               	movwf	___ftge@ff2+2,c
  1306  001236  EC75  F012         	call	___ftge	;wreg free
  1307  00123A  A0D8               	btfss	status,0,c
  1308  00123C  D003               	goto	l2360
  1309                           
  1310                           ;doprnt.c: 851: exp++;
  1311  00123E  4A6F               	infsnz	printf@exp,f,c
  1312  001240  2A70               	incf	printf@exp+1,f,c
  1313  001242  D000               	goto	l2360
  1314  001244                     l2360:
  1315                           
  1316                           ;doprnt.c: 852: }
  1317                           ;doprnt.c: 1112: if(prec <= 12)
  1318  001244  BE6A               	btfsc	printf@prec+1,7,c
  1319  001246  D006               	goto	l2362
  1320  001248  506A               	movf	printf@prec+1,w,c
  1321  00124A  E11C               	bnz	l2364
  1322  00124C  0E0D               	movlw	13
  1323  00124E  5C69               	subwf	printf@prec,w,c
  1324  001250  B0D8               	btfsc	status,0,c
  1325  001252  D018               	goto	l2364
  1326  001254                     l2362:
  1327                           
  1328                           ;doprnt.c: 1113: fval += fround(prec);
  1329  001254  C075  F045         	movff	printf@fval,___ftadd@f1
  1330  001258  C076  F046         	movff	printf@fval+1,___ftadd@f1+1
  1331  00125C  C077  F047         	movff	printf@fval+2,___ftadd@f1+2
  1332  001260  5069               	movf	printf@prec,w,c
  1333  001262  EC46  F00D         	call	_fround
  1334  001266  C03B  F048         	movff	?_fround,___ftadd@f2
  1335  00126A  C03C  F049         	movff	?_fround+1,___ftadd@f2+1
  1336  00126E  C03D  F04A         	movff	?_fround+2,___ftadd@f2+2
  1337  001272  EC68  F00E         	call	___ftadd	;wreg free
  1338  001276  C045  F075         	movff	?___ftadd,printf@fval
  1339  00127A  C046  F076         	movff	?___ftadd+1,printf@fval+1
  1340  00127E  C047  F077         	movff	?___ftadd+2,printf@fval+2
  1341  001282  D000               	goto	l2364
  1342  001284                     l2364:
  1343                           
  1344                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1345  001284  BE70               	btfsc	printf@exp+1,7,c
  1346  001286  D006               	goto	l2366
  1347  001288  5070               	movf	printf@exp+1,w,c
  1348  00128A  E120               	bnz	l2372
  1349  00128C  0E0A               	movlw	10
  1350  00128E  5C6F               	subwf	printf@exp,w,c
  1351  001290  B0D8               	btfsc	status,0,c
  1352  001292  D01C               	goto	l2372
  1353  001294                     l2366:
  1354  001294  5075               	movf	printf@fval,w,c
  1355  001296  1076               	iorwf	printf@fval+1,w,c
  1356  001298  1077               	iorwf	printf@fval+2,w,c
  1357  00129A  B4D8               	btfsc	status,2,c
  1358  00129C  D06D               	goto	l2386
  1359  00129E  C075  F018         	movff	printf@fval,___fttol@f1
  1360  0012A2  C076  F019         	movff	printf@fval+1,___fttol@f1+1
  1361  0012A6  C077  F01A         	movff	printf@fval+2,___fttol@f1+2
  1362  0012AA  EC54  F011         	call	___fttol	;wreg free
  1363  0012AE  5018               	movf	?___fttol,w,c
  1364  0012B0  1019               	iorwf	?___fttol+1,w,c
  1365  0012B2  101A               	iorwf	?___fttol+2,w,c
  1366  0012B4  101B               	iorwf	?___fttol+3,w,c
  1367  0012B6  B4D8               	btfsc	status,2,c
  1368  0012B8  BE70               	btfsc	printf@exp+1,7,c
  1369  0012BA  D05E               	goto	l2386
  1370  0012BC  5070               	movf	printf@exp+1,w,c
  1371  0012BE  E106               	bnz	l2372
  1372  0012C0  0E02               	movlw	2
  1373  0012C2  5C6F               	subwf	printf@exp,w,c
  1374  0012C4  B0D8               	btfsc	status,0,c
  1375  0012C6  D002               	goto	l2372
  1376  0012C8  D057               	goto	l2386
  1377  0012CA  D000               	goto	l2372
  1378  0012CC                     l2372:
  1379                           
  1380                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1381  0012CC  C071  F001         	movff	printf@tmpval,___ftge@ff1
  1382  0012D0  C072  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1383  0012D4  C073  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1384  0012D8  0E70               	movlw	112
  1385  0012DA  6E04               	movwf	___ftge@ff2,c
  1386  0012DC  0E89               	movlw	137
  1387  0012DE  6E05               	movwf	___ftge@ff2+1,c
  1388  0012E0  0E40               	movlw	64
  1389  0012E2  6E06               	movwf	___ftge@ff2+2,c
  1390  0012E4  EC75  F012         	call	___ftge	;wreg free
  1391  0012E8  B0D8               	btfsc	status,0,c
  1392  0012EA  D002               	goto	l2376
  1393                           
  1394                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1395  0012EC  0EF7               	movlw	247
  1396  0012EE  D001               	goto	L1
  1397  0012F0                     l2376:
  1398                           
  1399                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1400  0012F0  0EF8               	movlw	248
  1401  0012F2                     L1:
  1402  0012F2  266F               	addwf	printf@exp,f,c
  1403  0012F4  0EFF               	movlw	255
  1404  0012F6  2270               	addwfc	printf@exp+1,f,c
  1405  0012F8  D000               	goto	l2378
  1406  0012FA                     l2378:
  1407                           
  1408                           ;doprnt.c: 1124: }
  1409                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1410  0012FA  506F               	movf	printf@exp,w,c
  1411  0012FC  EC56  F00B         	call	_scale
  1412  001300  C03B  F071         	movff	?_scale,printf@tmpval
  1413  001304  C03C  F072         	movff	?_scale+1,printf@tmpval+1
  1414  001308  C03D  F073         	movff	?_scale+2,printf@tmpval+2
  1415                           
  1416                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1417  00130C  D017               	goto	l2382
  1418  00130E  C075  F001         	movff	printf@fval,__div_to_l_@f1
  1419  001312  C076  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1420  001316  C077  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1421  00131A  C071  F004         	movff	printf@tmpval,__div_to_l_@f2
  1422  00131E  C072  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1423  001322  C073  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1424  001326  ECD2  F00F         	call	__div_to_l_	;wreg free
  1425  00132A  C001  F06B         	movff	?__div_to_l_,printf@val
  1426  00132E  C002  F06C         	movff	?__div_to_l_+1,printf@val+1
  1427  001332  C003  F06D         	movff	?__div_to_l_+2,printf@val+2
  1428  001336  C004  F06E         	movff	?__div_to_l_+3,printf@val+3
  1429  00133A  D017               	goto	l2384
  1430  00133C                     l2382:
  1431  00133C  C075  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1432  001340  C076  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1433  001344  C077  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1434  001348  C071  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1435  00134C  C072  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1436  001350  C073  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1437  001354  EC4A  F00F         	call	__tdiv_to_l_	;wreg free
  1438  001358  C001  F06B         	movff	?__tdiv_to_l_,printf@val
  1439  00135C  C002  F06C         	movff	?__tdiv_to_l_+1,printf@val+1
  1440  001360  C003  F06D         	movff	?__tdiv_to_l_+2,printf@val+2
  1441  001364  C004  F06E         	movff	?__tdiv_to_l_+3,printf@val+3
  1442  001368  D000               	goto	l2384
  1443  00136A                     l2384:
  1444                           
  1445                           ;doprnt.c: 1129: fval = 0.0;
  1446  00136A  0E00               	movlw	0
  1447  00136C  6E75               	movwf	printf@fval,c
  1448  00136E  0E00               	movlw	0
  1449  001370  6E76               	movwf	printf@fval+1,c
  1450  001372  0E00               	movlw	0
  1451  001374  6E77               	movwf	printf@fval+2,c
  1452                           
  1453                           ;doprnt.c: 1130: } else {
  1454  001376  D033               	goto	l2390
  1455  001378                     l2386:
  1456                           
  1457                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1458  001378  C075  F018         	movff	printf@fval,___fttol@f1
  1459  00137C  C076  F019         	movff	printf@fval+1,___fttol@f1+1
  1460  001380  C077  F01A         	movff	printf@fval+2,___fttol@f1+2
  1461  001384  EC54  F011         	call	___fttol	;wreg free
  1462  001388  C018  F06B         	movff	?___fttol,printf@val
  1463  00138C  C019  F06C         	movff	?___fttol+1,printf@val+1
  1464  001390  C01A  F06D         	movff	?___fttol+2,printf@val+2
  1465  001394  C01B  F06E         	movff	?___fttol+3,printf@val+3
  1466                           
  1467                           ;doprnt.c: 1132: fval -= (double)val;
  1468  001398  C075  F051         	movff	printf@fval,___ftsub@f1
  1469  00139C  C076  F052         	movff	printf@fval+1,___ftsub@f1+1
  1470  0013A0  C077  F053         	movff	printf@fval+2,___ftsub@f1+2
  1471  0013A4  C06B  F009         	movff	printf@val,___lltoft@c
  1472  0013A8  C06C  F00A         	movff	printf@val+1,___lltoft@c+1
  1473  0013AC  C06D  F00B         	movff	printf@val+2,___lltoft@c+2
  1474  0013B0  C06E  F00C         	movff	printf@val+3,___lltoft@c+3
  1475  0013B4  ECFB  F013         	call	___lltoft	;wreg free
  1476  0013B8  C009  F054         	movff	?___lltoft,___ftsub@f2
  1477  0013BC  C00A  F055         	movff	?___lltoft+1,___ftsub@f2+1
  1478  0013C0  C00B  F056         	movff	?___lltoft+2,___ftsub@f2+2
  1479  0013C4  EC2B  F014         	call	___ftsub	;wreg free
  1480  0013C8  C051  F075         	movff	?___ftsub,printf@fval
  1481  0013CC  C052  F076         	movff	?___ftsub+1,printf@fval+1
  1482  0013D0  C053  F077         	movff	?___ftsub+2,printf@fval+2
  1483                           
  1484                           ;doprnt.c: 1133: exp = 0;
  1485  0013D4  0E00               	movlw	0
  1486  0013D6  6E70               	movwf	printf@exp+1,c
  1487  0013D8  0E00               	movlw	0
  1488  0013DA  6E6F               	movwf	printf@exp,c
  1489  0013DC  D000               	goto	l2390
  1490  0013DE                     l2390:
  1491                           
  1492                           ;doprnt.c: 1134: }
  1493                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1494  0013DE  0E01               	movlw	1
  1495  0013E0  6E78               	movwf	printf@c,c
  1496  0013E2                     l2392:
  1497  0013E2  0E0A               	movlw	10
  1498  0013E4  1878               	xorwf	printf@c,w,c
  1499  0013E6  B4D8               	btfsc	status,2,c
  1500  0013E8  D01C               	goto	l2404
  1501  0013EA  D001               	goto	l2396
  1502  0013EC  D01A               	goto	l2404
  1503  0013EE                     l2396:
  1504                           
  1505                           ;doprnt.c: 1137: if(val < dpowers[c])
  1506  0013EE  5078               	movf	printf@c,w,c
  1507  0013F0  0D04               	mullw	4
  1508  0013F2  0E01               	movlw	low _dpowers
  1509  0013F4  24F3               	addwf	prodl,w,c
  1510  0013F6  6EF6               	movwf	tblptrl,c
  1511  0013F8  0E10               	movlw	high _dpowers
  1512  0013FA  20F4               	addwfc	prodh,w,c
  1513  0013FC  6EF7               	movwf	tblptrh,c
  1514  0013FE                     	if	0	;There are less than 3 active tblptr bytes
  1515  0013FE                     	endif
  1516  0013FE  0009               	tblrd		*+
  1517  001400  50F5               	movf	tablat,w,c
  1518  001402  5C6B               	subwf	printf@val,w,c
  1519  001404  0009               	tblrd		*+
  1520  001406  50F5               	movf	tablat,w,c
  1521  001408  586C               	subwfb	printf@val+1,w,c
  1522  00140A  0009               	tblrd		*+
  1523  00140C  50F5               	movf	tablat,w,c
  1524  00140E  586D               	subwfb	printf@val+2,w,c
  1525  001410  0009               	tblrd		*+
  1526  001412  50F5               	movf	tablat,w,c
  1527  001414  586E               	subwfb	printf@val+3,w,c
  1528  001416  A0D8               	btfss	status,0,c
  1529  001418  D004               	goto	l2404
  1530  00141A  D001               	goto	l2400
  1531                           
  1532                           ;doprnt.c: 1138: break;
  1533  00141C  D002               	goto	l2404
  1534  00141E                     l2400:
  1535  00141E  2A78               	incf	printf@c,f,c
  1536  001420  D7E0               	goto	l2392
  1537  001422                     l2404:
  1538                           
  1539                           ;doprnt.c: 1175: {
  1540                           ;doprnt.c: 1188: if(flag & 0x03)
  1541  001422  0E03               	movlw	3
  1542  001424  1467               	andwf	printf@flag,w,c
  1543  001426  6E5C               	movwf	??_printf& (0+255),c
  1544  001428  0E00               	movlw	0
  1545  00142A  1468               	andwf	printf@flag+1,w,c
  1546  00142C  6E5D               	movwf	(??_printf+1)& (0+255),c
  1547  00142E  505C               	movf	??_printf,w,c
  1548  001430  105D               	iorwf	??_printf+1,w,c
  1549  001432  B4D8               	btfsc	status,2,c
  1550  001434  D049               	goto	l2414
  1551                           
  1552                           ;doprnt.c: 1190: (putch('-') );
  1553  001436  0E2D               	movlw	45
  1554  001438  ECFB  F014         	call	_putch
  1555                           
  1556                           ;doprnt.c: 1195: }
  1557                           ;doprnt.c: 1196: while(c--) {
  1558  00143C  D045               	goto	l2414
  1559  00143E                     l2408:
  1560                           
  1561                           ;doprnt.c: 1200: {
  1562                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1563  00143E  C06B  F001         	movff	printf@val,___lldiv@dividend
  1564  001442  C06C  F002         	movff	printf@val+1,___lldiv@dividend+1
  1565  001446  C06D  F003         	movff	printf@val+2,___lldiv@dividend+2
  1566  00144A  C06E  F004         	movff	printf@val+3,___lldiv@dividend+3
  1567  00144E  5078               	movf	printf@c,w,c
  1568  001450  0D04               	mullw	4
  1569  001452  0E01               	movlw	low _dpowers
  1570  001454  24F3               	addwf	prodl,w,c
  1571  001456  6EF6               	movwf	tblptrl,c
  1572  001458  0E10               	movlw	high _dpowers
  1573  00145A  20F4               	addwfc	prodh,w,c
  1574  00145C  6EF7               	movwf	tblptrh,c
  1575  00145E                     	if	0	;There are less than 3 active tblptr bytes
  1576  00145E                     	endif
  1577  00145E  0009               	tblrd		*+
  1578  001460  CFF5 F005          	movff	tablat,___lldiv@divisor
  1579  001464  0009               	tblrd		*+
  1580  001466  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1581  00146A  0009               	tblrd		*+
  1582  00146C  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1583  001470  000A               	tblrd		*-
  1584  001472  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1585  001476  ECC0  F012         	call	___lldiv	;wreg free
  1586  00147A  C001  F071         	movff	?___lldiv,printf@tmpval
  1587  00147E  C002  F072         	movff	?___lldiv+1,printf@tmpval+1
  1588  001482  C003  F073         	movff	?___lldiv+2,printf@tmpval+2
  1589  001486  C004  F074         	movff	?___lldiv+3,printf@tmpval+3
  1590                           
  1591                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1592  00148A  C071  F001         	movff	printf@tmpval,___llmod@dividend
  1593  00148E  C072  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1594  001492  C073  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1595  001496  C074  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1596  00149A  0E0A               	movlw	10
  1597  00149C  6E05               	movwf	___llmod@divisor,c
  1598  00149E  0E00               	movlw	0
  1599  0014A0  6E06               	movwf	___llmod@divisor+1,c
  1600  0014A2  0E00               	movlw	0
  1601  0014A4  6E07               	movwf	___llmod@divisor+2,c
  1602  0014A6  0E00               	movlw	0
  1603  0014A8  6E08               	movwf	___llmod@divisor+3,c
  1604  0014AA  EC8B  F013         	call	___llmod	;wreg free
  1605  0014AE  C001  F071         	movff	?___llmod,printf@tmpval
  1606  0014B2  C002  F072         	movff	?___llmod+1,printf@tmpval+1
  1607  0014B6  C003  F073         	movff	?___llmod+2,printf@tmpval+2
  1608  0014BA  C004  F074         	movff	?___llmod+3,printf@tmpval+3
  1609                           
  1610                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1611  0014BE  5071               	movf	printf@tmpval,w,c
  1612  0014C0  0F30               	addlw	48
  1613  0014C2  ECFB  F014         	call	_putch
  1614  0014C6  D000               	goto	l2414
  1615  0014C8                     l2414:
  1616  0014C8  0678               	decf	printf@c,f,c
  1617  0014CA  2878               	incf	printf@c,w,c
  1618  0014CC  B4D8               	btfsc	status,2,c
  1619  0014CE  D009               	goto	l2420
  1620  0014D0  D7B6               	goto	l2408
  1621                           
  1622                           ;doprnt.c: 1204: }
  1623                           ;doprnt.c: 1206: }
  1624                           ;doprnt.c: 1207: while(exp > 0) {
  1625  0014D2  D007               	goto	l2420
  1626  0014D4                     l2416:
  1627                           
  1628                           ;doprnt.c: 1208: (putch('0') );
  1629  0014D4  0E30               	movlw	48
  1630  0014D6  ECFB  F014         	call	_putch
  1631                           
  1632                           ;doprnt.c: 1209: exp--;
  1633  0014DA  066F               	decf	printf@exp,f,c
  1634  0014DC  A0D8               	btfss	status,0,c
  1635  0014DE  0670               	decf	printf@exp+1,f,c
  1636  0014E0  D000               	goto	l2420
  1637  0014E2                     l2420:
  1638  0014E2  BE70               	btfsc	printf@exp+1,7,c
  1639  0014E4  D005               	goto	l2422
  1640  0014E6  5070               	movf	printf@exp+1,w,c
  1641  0014E8  E1F5               	bnz	l2416
  1642  0014EA  046F               	decf	printf@exp,w,c
  1643  0014EC  B0D8               	btfsc	status,0,c
  1644  0014EE  D7F2               	goto	l2416
  1645  0014F0                     l2422:
  1646                           
  1647                           ;doprnt.c: 1210: }
  1648                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1649  0014F0  BE6A               	btfsc	printf@prec+1,7,c
  1650  0014F2  D009               	goto	l167
  1651  0014F4  506A               	movf	printf@prec+1,w,c
  1652  0014F6  E104               	bnz	u2600
  1653  0014F8  0E09               	movlw	9
  1654  0014FA  5C69               	subwf	printf@prec,w,c
  1655  0014FC  A0D8               	btfss	status,0,c
  1656  0014FE  D003               	goto	l167
  1657  001500                     u2600:
  1658                           
  1659                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1660  001500  0E08               	movlw	8
  1661  001502  6E78               	movwf	printf@c,c
  1662  001504  D003               	goto	l2426
  1663  001506                     l167:
  1664                           
  1665                           ;doprnt.c: 1213: else
  1666                           ;doprnt.c: 1214: c = prec;
  1667  001506  C069  F078         	movff	printf@prec,printf@c
  1668  00150A  D000               	goto	l2426
  1669  00150C                     l2426:
  1670                           
  1671                           ;doprnt.c: 1215: prec -= c;
  1672  00150C  5078               	movf	printf@c,w,c
  1673  00150E  5E69               	subwf	printf@prec,f,c
  1674  001510  0E00               	movlw	0
  1675  001512  BE78               	btfsc	printf@c,7,c
  1676  001514  0EFF               	movlw	255
  1677  001516  5A6A               	subwfb	printf@prec+1,f,c
  1678                           
  1679                           ;doprnt.c: 1219: if(c)
  1680  001518  5078               	movf	printf@c,w,c
  1681  00151A  B4D8               	btfsc	status,2,c
  1682  00151C  D004               	goto	l2432
  1683                           
  1684                           ;doprnt.c: 1221: (putch('.') );
  1685  00151E  0E2E               	movlw	46
  1686  001520  ECFB  F014         	call	_putch
  1687  001524  D000               	goto	l2432
  1688  001526                     l2432:
  1689                           
  1690                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1691  001526  5078               	movf	printf@c,w,c
  1692  001528  EC56  F00B         	call	_scale
  1693  00152C  C03B  F062         	movff	?_scale,_printf$1109
  1694  001530  C03C  F063         	movff	?_scale+1,_printf$1109+1
  1695  001534  C03D  F064         	movff	?_scale+2,_printf$1109+2
  1696                           
  1697                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1698  001538  C075  F00C         	movff	printf@fval,___ftmul@f2
  1699  00153C  C076  F00D         	movff	printf@fval+1,___ftmul@f2+1
  1700  001540  C077  F00E         	movff	printf@fval+2,___ftmul@f2+2
  1701  001544  C062  F009         	movff	_printf$1109,___ftmul@f1
  1702  001548  C063  F00A         	movff	_printf$1109+1,___ftmul@f1+1
  1703  00154C  C064  F00B         	movff	_printf$1109+2,___ftmul@f1+2
  1704  001550  ECD8  F010         	call	___ftmul	;wreg free
  1705  001554  C009  F018         	movff	?___ftmul,___fttol@f1
  1706  001558  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
  1707  00155C  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
  1708  001560  EC54  F011         	call	___fttol	;wreg free
  1709  001564  C018  F06B         	movff	?___fttol,printf@val
  1710  001568  C019  F06C         	movff	?___fttol+1,printf@val+1
  1711  00156C  C01A  F06D         	movff	?___fttol+2,printf@val+2
  1712  001570  C01B  F06E         	movff	?___fttol+3,printf@val+3
  1713                           
  1714                           ;doprnt.c: 1228: while(c--) {
  1715  001574  D06B               	goto	l2442
  1716  001576                     l2436:
  1717                           
  1718                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  1719  001576  C06B  F001         	movff	printf@val,___lldiv@dividend
  1720  00157A  C06C  F002         	movff	printf@val+1,___lldiv@dividend+1
  1721  00157E  C06D  F003         	movff	printf@val+2,___lldiv@dividend+2
  1722  001582  C06E  F004         	movff	printf@val+3,___lldiv@dividend+3
  1723  001586  5078               	movf	printf@c,w,c
  1724  001588  0D04               	mullw	4
  1725  00158A  0E01               	movlw	low _dpowers
  1726  00158C  24F3               	addwf	prodl,w,c
  1727  00158E  6EF6               	movwf	tblptrl,c
  1728  001590  0E10               	movlw	high _dpowers
  1729  001592  20F4               	addwfc	prodh,w,c
  1730  001594  6EF7               	movwf	tblptrh,c
  1731  001596                     	if	0	;There are less than 3 active tblptr bytes
  1732  001596                     	endif
  1733  001596  0009               	tblrd		*+
  1734  001598  CFF5 F005          	movff	tablat,___lldiv@divisor
  1735  00159C  0009               	tblrd		*+
  1736  00159E  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1737  0015A2  0009               	tblrd		*+
  1738  0015A4  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1739  0015A8  000A               	tblrd		*-
  1740  0015AA  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1741  0015AE  ECC0  F012         	call	___lldiv	;wreg free
  1742  0015B2  C001  F071         	movff	?___lldiv,printf@tmpval
  1743  0015B6  C002  F072         	movff	?___lldiv+1,printf@tmpval+1
  1744  0015BA  C003  F073         	movff	?___lldiv+2,printf@tmpval+2
  1745  0015BE  C004  F074         	movff	?___lldiv+3,printf@tmpval+3
  1746                           
  1747                           ;doprnt.c: 1230: tmpval.vd %= 10;
  1748  0015C2  C071  F001         	movff	printf@tmpval,___llmod@dividend
  1749  0015C6  C072  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1750  0015CA  C073  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1751  0015CE  C074  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1752  0015D2  0E0A               	movlw	10
  1753  0015D4  6E05               	movwf	___llmod@divisor,c
  1754  0015D6  0E00               	movlw	0
  1755  0015D8  6E06               	movwf	___llmod@divisor+1,c
  1756  0015DA  0E00               	movlw	0
  1757  0015DC  6E07               	movwf	___llmod@divisor+2,c
  1758  0015DE  0E00               	movlw	0
  1759  0015E0  6E08               	movwf	___llmod@divisor+3,c
  1760  0015E2  EC8B  F013         	call	___llmod	;wreg free
  1761  0015E6  C001  F071         	movff	?___llmod,printf@tmpval
  1762  0015EA  C002  F072         	movff	?___llmod+1,printf@tmpval+1
  1763  0015EE  C003  F073         	movff	?___llmod+2,printf@tmpval+2
  1764  0015F2  C004  F074         	movff	?___llmod+3,printf@tmpval+3
  1765                           
  1766                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  1767  0015F6  5071               	movf	printf@tmpval,w,c
  1768  0015F8  0F30               	addlw	48
  1769  0015FA  ECFB  F014         	call	_putch
  1770                           
  1771                           ;doprnt.c: 1232: val %= dpowers[c];
  1772  0015FE  C06B  F001         	movff	printf@val,___llmod@dividend
  1773  001602  C06C  F002         	movff	printf@val+1,___llmod@dividend+1
  1774  001606  C06D  F003         	movff	printf@val+2,___llmod@dividend+2
  1775  00160A  C06E  F004         	movff	printf@val+3,___llmod@dividend+3
  1776  00160E  5078               	movf	printf@c,w,c
  1777  001610  0D04               	mullw	4
  1778  001612  0E01               	movlw	low _dpowers
  1779  001614  24F3               	addwf	prodl,w,c
  1780  001616  6EF6               	movwf	tblptrl,c
  1781  001618  0E10               	movlw	high _dpowers
  1782  00161A  20F4               	addwfc	prodh,w,c
  1783  00161C  6EF7               	movwf	tblptrh,c
  1784  00161E                     	if	0	;There are less than 3 active tblptr bytes
  1785  00161E                     	endif
  1786  00161E  0009               	tblrd		*+
  1787  001620  CFF5 F005          	movff	tablat,___llmod@divisor
  1788  001624  0009               	tblrd		*+
  1789  001626  CFF5 F006          	movff	tablat,___llmod@divisor+1
  1790  00162A  0009               	tblrd		*+
  1791  00162C  CFF5 F007          	movff	tablat,___llmod@divisor+2
  1792  001630  000A               	tblrd		*-
  1793  001632  CFF5 F008          	movff	tablat,___llmod@divisor+3
  1794  001636  EC8B  F013         	call	___llmod	;wreg free
  1795  00163A  C001  F06B         	movff	?___llmod,printf@val
  1796  00163E  C002  F06C         	movff	?___llmod+1,printf@val+1
  1797  001642  C003  F06D         	movff	?___llmod+2,printf@val+2
  1798  001646  C004  F06E         	movff	?___llmod+3,printf@val+3
  1799  00164A  D000               	goto	l2442
  1800  00164C                     l2442:
  1801  00164C  0678               	decf	printf@c,f,c
  1802  00164E  2878               	incf	printf@c,w,c
  1803  001650  B4D8               	btfsc	status,2,c
  1804  001652  D009               	goto	l2448
  1805  001654  D790               	goto	l2436
  1806                           
  1807                           ;doprnt.c: 1233: }
  1808                           ;doprnt.c: 1235: while(prec) {
  1809  001656  D007               	goto	l2448
  1810  001658                     l2444:
  1811                           
  1812                           ;doprnt.c: 1236: (putch('0') );
  1813  001658  0E30               	movlw	48
  1814  00165A  ECFB  F014         	call	_putch
  1815                           
  1816                           ;doprnt.c: 1237: prec--;
  1817  00165E  0669               	decf	printf@prec,f,c
  1818  001660  A0D8               	btfss	status,0,c
  1819  001662  066A               	decf	printf@prec+1,f,c
  1820  001664  D000               	goto	l2448
  1821  001666                     l2448:
  1822  001666  5069               	movf	printf@prec,w,c
  1823  001668  106A               	iorwf	printf@prec+1,w,c
  1824  00166A  B4D8               	btfsc	status,2,c
  1825  00166C  D010               	goto	l2454
  1826  00166E  D7F4               	goto	l2444
  1827                           
  1828                           ;doprnt.c: 1238: }
  1829                           ;doprnt.c: 1245: continue;
  1830  001670  D00E               	goto	l2454
  1831  001672                     l2450:
  1832                           
  1833                           ;doprnt.c: 1246: }
  1834                           ;doprnt.c: 1422: {
  1835                           ;doprnt.c: 1438: if(flag & 0x03)
  1836  001672  0E03               	movlw	3
  1837  001674  1467               	andwf	printf@flag,w,c
  1838  001676  6E5C               	movwf	??_printf& (0+255),c
  1839  001678  0E00               	movlw	0
  1840  00167A  1468               	andwf	printf@flag+1,w,c
  1841  00167C  6E5D               	movwf	(??_printf+1)& (0+255),c
  1842  00167E  505C               	movf	??_printf,w,c
  1843  001680  105D               	iorwf	??_printf+1,w,c
  1844  001682  B4D8               	btfsc	status,2,c
  1845  001684  D004               	goto	l2454
  1846                           
  1847                           ;doprnt.c: 1439: (putch('-') );
  1848  001686  0E2D               	movlw	45
  1849  001688  ECFB  F014         	call	_putch
  1850  00168C  D000               	goto	l2454
  1851  00168E                     l2454:
  1852  00168E  C057  FFF6         	movff	printf@f,tblptrl
  1853  001692  C058  FFF7         	movff	printf@f+1,tblptrh
  1854  001696  4A57               	infsnz	printf@f,f,c
  1855  001698  2A58               	incf	printf@f+1,f,c
  1856  00169A                     	if	0	;tblptru may be non-zero
  1857  00169A                     	endif
  1858  00169A                     	if	0	;tblptru may be non-zero
  1859  00169A                     	endif
  1860  00169A  0008               	tblrd		*
  1861  00169C  CFF5 F078          	movff	tablat,printf@c
  1862  0016A0  5078               	movf	printf@c,w,c
  1863  0016A2  B4D8               	btfsc	status,2,c
  1864  0016A4  D002               	goto	l178
  1865  0016A6  D4F4               	goto	l2306
  1866  0016A8  D000               	goto	l178
  1867  0016AA                     l178:
  1868  0016AA  0012               	return		;funcret
  1869  0016AC                     __end_of_printf:
  1870                           	opt stack 0
  1871                           tblptru	equ	0xFF8
  1872                           tblptrh	equ	0xFF7
  1873                           tblptrl	equ	0xFF6
  1874                           tablat	equ	0xFF5
  1875                           prodh	equ	0xFF4
  1876                           prodl	equ	0xFF3
  1877                           postinc0	equ	0xFEE
  1878                           wreg	equ	0xFE8
  1879                           postdec1	equ	0xFE5
  1880                           fsr1l	equ	0xFE1
  1881                           postinc2	equ	0xFDE
  1882                           postdec2	equ	0xFDD
  1883                           fsr2h	equ	0xFDA
  1884                           fsr2l	equ	0xFD9
  1885                           status	equ	0xFD8
  1886                           
  1887 ;; *************** function _scale *****************
  1888 ;; Defined at:
  1889 ;;		line 425 in file "E:\XC8\sources\common\doprnt.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  scl             1    wreg     char 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  scl             1   64[COMRAM] char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  3   58[COMRAM] char 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1903 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;Total ram usage:        7 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    2
  1910 ;; This function calls:
  1911 ;;		___awdiv
  1912 ;;		___awmod
  1913 ;;		___ftmul
  1914 ;;		___wmul
  1915 ;; This function is called by:
  1916 ;;		_printf
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text3
  1921  0016AC                     __ptext3:
  1922                           	opt stack 0
  1923  0016AC                     _scale:
  1924                           	opt stack 27
  1925                           
  1926                           ;incstack = 0
  1927                           ;scale@scl stored from wreg
  1928  0016AC  6E41               	movwf	scale@scl,c
  1929                           
  1930                           ;doprnt.c: 428: if(scl < 0) {
  1931  0016AE  AE41               	btfss	scale@scl,7,c
  1932  0016B0  D0EF               	goto	l2030
  1933                           
  1934                           ;doprnt.c: 429: scl = -scl;
  1935  0016B2  6C41               	negf	scale@scl,c
  1936                           
  1937                           ;doprnt.c: 430: if(scl>=110)
  1938  0016B4  5041               	movf	scale@scl,w,c
  1939  0016B6  0A80               	xorlw	128
  1940  0016B8  0F12               	addlw	-238
  1941  0016BA  A0D8               	btfss	status,0,c
  1942  0016BC  D08D               	goto	l2020
  1943                           
  1944                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  1945  0016BE  0E00               	movlw	0
  1946  0016C0  6E38               	movwf	___wmul@multiplicand+1,c
  1947  0016C2  0E03               	movlw	3
  1948  0016C4  6E37               	movwf	___wmul@multiplicand,c
  1949  0016C6  0E00               	movlw	0
  1950  0016C8  6E30               	movwf	___awdiv@divisor+1,c
  1951  0016CA  0E0A               	movlw	10
  1952  0016CC  6E2F               	movwf	___awdiv@divisor,c
  1953  0016CE  0E00               	movlw	0
  1954  0016D0  6E2A               	movwf	___awmod@divisor+1,c
  1955  0016D2  0E64               	movlw	100
  1956  0016D4  6E29               	movwf	___awmod@divisor,c
  1957  0016D6  5041               	movf	scale@scl,w,c
  1958  0016D8  6E27               	movwf	___awmod@dividend,c
  1959  0016DA  6A28               	clrf	___awmod@dividend+1,c
  1960  0016DC  BE27               	btfsc	___awmod@dividend,7,c
  1961  0016DE  0628               	decf	___awmod@dividend+1,f,c
  1962  0016E0  EC4A  F013         	call	___awmod	;wreg free
  1963  0016E4  C027  F02D         	movff	?___awmod,___awdiv@dividend
  1964  0016E8  C028  F02E         	movff	?___awmod+1,___awdiv@dividend+1
  1965  0016EC  EC2A  F012         	call	___awdiv	;wreg free
  1966  0016F0  0E09               	movlw	9
  1967  0016F2  242D               	addwf	?___awdiv,w,c
  1968  0016F4  6E35               	movwf	___wmul@multiplier,c
  1969  0016F6  0E00               	movlw	0
  1970  0016F8  202E               	addwfc	?___awdiv+1,w,c
  1971  0016FA  6E36               	movwf	___wmul@multiplier+1,c
  1972  0016FC  EC85  F014         	call	___wmul	;wreg free
  1973  001700  0E29               	movlw	low __npowers_
  1974  001702  2435               	addwf	?___wmul,w,c
  1975  001704  6EF6               	movwf	tblptrl,c
  1976  001706  0E10               	movlw	high __npowers_
  1977  001708  2036               	addwfc	?___wmul+1,w,c
  1978  00170A  6EF7               	movwf	tblptrh,c
  1979  00170C                     	if	0	;There are less than 3 active tblptr bytes
  1980  00170C                     	endif
  1981  00170C  0009               	tblrd		*+
  1982  00170E  CFF5 F00C          	movff	tablat,___ftmul@f2
  1983  001712  0009               	tblrd		*+
  1984  001714  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  1985  001718  000A               	tblrd		*-
  1986  00171A  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  1987  00171E  0E00               	movlw	0
  1988  001720  6E30               	movwf	___awdiv@divisor+1,c
  1989  001722  0E64               	movlw	100
  1990  001724  6E2F               	movwf	___awdiv@divisor,c
  1991  001726  5041               	movf	scale@scl,w,c
  1992  001728  6E2D               	movwf	___awdiv@dividend,c
  1993  00172A  6A2E               	clrf	___awdiv@dividend+1,c
  1994  00172C  BE2D               	btfsc	___awdiv@dividend,7,c
  1995  00172E  062E               	decf	___awdiv@dividend+1,f,c
  1996  001730  EC2A  F012         	call	___awdiv	;wreg free
  1997  001734  0E12               	movlw	18
  1998  001736  242D               	addwf	?___awdiv,w,c
  1999  001738  6E35               	movwf	___wmul@multiplier,c
  2000  00173A  0E00               	movlw	0
  2001  00173C  202E               	addwfc	?___awdiv+1,w,c
  2002  00173E  6E36               	movwf	___wmul@multiplier+1,c
  2003  001740  0E00               	movlw	0
  2004  001742  6E38               	movwf	___wmul@multiplicand+1,c
  2005  001744  0E03               	movlw	3
  2006  001746  6E37               	movwf	___wmul@multiplicand,c
  2007  001748  EC85  F014         	call	___wmul	;wreg free
  2008  00174C  0E29               	movlw	low __npowers_
  2009  00174E  2435               	addwf	?___wmul,w,c
  2010  001750  6EF6               	movwf	tblptrl,c
  2011  001752  0E10               	movlw	high __npowers_
  2012  001754  2036               	addwfc	?___wmul+1,w,c
  2013  001756  6EF7               	movwf	tblptrh,c
  2014  001758                     	if	0	;There are less than 3 active tblptr bytes
  2015  001758                     	endif
  2016  001758  0009               	tblrd		*+
  2017  00175A  CFF5 F009          	movff	tablat,___ftmul@f1
  2018  00175E  0009               	tblrd		*+
  2019  001760  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2020  001764  000A               	tblrd		*-
  2021  001766  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2022  00176A  ECD8  F010         	call	___ftmul	;wreg free
  2023  00176E  C009  F03E         	movff	?___ftmul,_scale$1108
  2024  001772  C00A  F03F         	movff	?___ftmul+1,_scale$1108+1
  2025  001776  C00B  F040         	movff	?___ftmul+2,_scale$1108+2
  2026                           
  2027                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2028  00177A  C03E  F009         	movff	_scale$1108,___ftmul@f1
  2029  00177E  C03F  F00A         	movff	_scale$1108+1,___ftmul@f1+1
  2030  001782  C040  F00B         	movff	_scale$1108+2,___ftmul@f1+2
  2031  001786  0E00               	movlw	0
  2032  001788  6E38               	movwf	___wmul@multiplicand+1,c
  2033  00178A  0E03               	movlw	3
  2034  00178C  6E37               	movwf	___wmul@multiplicand,c
  2035  00178E  0E00               	movlw	0
  2036  001790  6E2A               	movwf	___awmod@divisor+1,c
  2037  001792  0E0A               	movlw	10
  2038  001794  6E29               	movwf	___awmod@divisor,c
  2039  001796  5041               	movf	scale@scl,w,c
  2040  001798  6E27               	movwf	___awmod@dividend,c
  2041  00179A  6A28               	clrf	___awmod@dividend+1,c
  2042  00179C  BE27               	btfsc	___awmod@dividend,7,c
  2043  00179E  0628               	decf	___awmod@dividend+1,f,c
  2044  0017A0  EC4A  F013         	call	___awmod	;wreg free
  2045  0017A4  C027  F035         	movff	?___awmod,___wmul@multiplier
  2046  0017A8  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2047  0017AC  EC85  F014         	call	___wmul	;wreg free
  2048  0017B0  0E29               	movlw	low __npowers_
  2049  0017B2  2435               	addwf	?___wmul,w,c
  2050  0017B4  6EF6               	movwf	tblptrl,c
  2051  0017B6  0E10               	movlw	high __npowers_
  2052  0017B8  2036               	addwfc	?___wmul+1,w,c
  2053  0017BA  6EF7               	movwf	tblptrh,c
  2054  0017BC                     	if	0	;There are less than 3 active tblptr bytes
  2055  0017BC                     	endif
  2056  0017BC  0009               	tblrd		*+
  2057  0017BE  CFF5 F00C          	movff	tablat,___ftmul@f2
  2058  0017C2  0009               	tblrd		*+
  2059  0017C4  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2060  0017C8  000A               	tblrd		*-
  2061  0017CA  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2062  0017CE  ECD8  F010         	call	___ftmul	;wreg free
  2063  0017D2  D141               	goto	L5
  2064  0017D4  D15A               	goto	l122
  2065  0017D6  D054               	goto	l2026
  2066  0017D8                     l2020:
  2067                           
  2068                           ;doprnt.c: 432: else if(scl > 10)
  2069  0017D8  5041               	movf	scale@scl,w,c
  2070  0017DA  0A80               	xorlw	128
  2071  0017DC  0F75               	addlw	-139
  2072  0017DE  A0D8               	btfss	status,0,c
  2073  0017E0  D04F               	goto	l2026
  2074                           
  2075                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2076  0017E2  0E00               	movlw	0
  2077  0017E4  6E30               	movwf	___awdiv@divisor+1,c
  2078  0017E6  0E0A               	movlw	10
  2079  0017E8  6E2F               	movwf	___awdiv@divisor,c
  2080  0017EA  5041               	movf	scale@scl,w,c
  2081  0017EC  6E2D               	movwf	___awdiv@dividend,c
  2082  0017EE  6A2E               	clrf	___awdiv@dividend+1,c
  2083  0017F0  BE2D               	btfsc	___awdiv@dividend,7,c
  2084  0017F2  062E               	decf	___awdiv@dividend+1,f,c
  2085  0017F4  EC2A  F012         	call	___awdiv	;wreg free
  2086  0017F8  0E09               	movlw	9
  2087  0017FA  242D               	addwf	?___awdiv,w,c
  2088  0017FC  6E35               	movwf	___wmul@multiplier,c
  2089  0017FE  0E00               	movlw	0
  2090  001800  202E               	addwfc	?___awdiv+1,w,c
  2091  001802  6E36               	movwf	___wmul@multiplier+1,c
  2092  001804  0E00               	movlw	0
  2093  001806  6E38               	movwf	___wmul@multiplicand+1,c
  2094  001808  0E03               	movlw	3
  2095  00180A  6E37               	movwf	___wmul@multiplicand,c
  2096  00180C  EC85  F014         	call	___wmul	;wreg free
  2097  001810  0E29               	movlw	low __npowers_
  2098  001812  2435               	addwf	?___wmul,w,c
  2099  001814  6EF6               	movwf	tblptrl,c
  2100  001816  0E10               	movlw	high __npowers_
  2101  001818  2036               	addwfc	?___wmul+1,w,c
  2102  00181A  6EF7               	movwf	tblptrh,c
  2103  00181C                     	if	0	;There are less than 3 active tblptr bytes
  2104  00181C                     	endif
  2105  00181C  0009               	tblrd		*+
  2106  00181E  CFF5 F009          	movff	tablat,___ftmul@f1
  2107  001822  0009               	tblrd		*+
  2108  001824  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2109  001828  000A               	tblrd		*-
  2110  00182A  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2111  00182E  0E00               	movlw	0
  2112  001830  6E38               	movwf	___wmul@multiplicand+1,c
  2113  001832  0E03               	movlw	3
  2114  001834  6E37               	movwf	___wmul@multiplicand,c
  2115  001836  0E00               	movlw	0
  2116  001838  6E2A               	movwf	___awmod@divisor+1,c
  2117  00183A  0E0A               	movlw	10
  2118  00183C  6E29               	movwf	___awmod@divisor,c
  2119  00183E  5041               	movf	scale@scl,w,c
  2120  001840  6E27               	movwf	___awmod@dividend,c
  2121  001842  6A28               	clrf	___awmod@dividend+1,c
  2122  001844  BE27               	btfsc	___awmod@dividend,7,c
  2123  001846  0628               	decf	___awmod@dividend+1,f,c
  2124  001848  EC4A  F013         	call	___awmod	;wreg free
  2125  00184C  C027  F035         	movff	?___awmod,___wmul@multiplier
  2126  001850  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2127  001854  EC85  F014         	call	___wmul	;wreg free
  2128  001858  0E29               	movlw	low __npowers_
  2129  00185A  2435               	addwf	?___wmul,w,c
  2130  00185C  6EF6               	movwf	tblptrl,c
  2131  00185E  0E10               	movlw	high __npowers_
  2132  001860  2036               	addwfc	?___wmul+1,w,c
  2133  001862  6EF7               	movwf	tblptrh,c
  2134  001864                     	if	0	;There are less than 3 active tblptr bytes
  2135  001864                     	endif
  2136  001864  0009               	tblrd		*+
  2137  001866  CFF5 F00C          	movff	tablat,___ftmul@f2
  2138  00186A  0009               	tblrd		*+
  2139  00186C  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2140  001870  000A               	tblrd		*-
  2141  001872  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2142  001876  ECD8  F010         	call	___ftmul	;wreg free
  2143  00187A  D0ED               	goto	L5
  2144  00187C  D106               	goto	l122
  2145  00187E  D000               	goto	l2026
  2146  001880                     l2026:
  2147                           
  2148                           ;doprnt.c: 434: return _npowers_[scl];
  2149  001880  5041               	movf	scale@scl,w,c
  2150  001882  0D03               	mullw	3
  2151  001884  0E29               	movlw	low __npowers_
  2152  001886  24F3               	addwf	prodl,w,c
  2153  001888  6EF6               	movwf	tblptrl,c
  2154  00188A  0E10               	movlw	high __npowers_
  2155  00188C  D0F2               	goto	L4
  2156  00188E  D0FD               	goto	l122
  2157  001890                     l2030:
  2158                           
  2159                           ;doprnt.c: 435: }
  2160                           ;doprnt.c: 436: if(scl>=110)
  2161  001890  5041               	movf	scale@scl,w,c
  2162  001892  0A80               	xorlw	128
  2163  001894  0F12               	addlw	-238
  2164  001896  A0D8               	btfss	status,0,c
  2165  001898  D08D               	goto	l2038
  2166                           
  2167                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2168  00189A  0E00               	movlw	0
  2169  00189C  6E38               	movwf	___wmul@multiplicand+1,c
  2170  00189E  0E03               	movlw	3
  2171  0018A0  6E37               	movwf	___wmul@multiplicand,c
  2172  0018A2  0E00               	movlw	0
  2173  0018A4  6E30               	movwf	___awdiv@divisor+1,c
  2174  0018A6  0E0A               	movlw	10
  2175  0018A8  6E2F               	movwf	___awdiv@divisor,c
  2176  0018AA  0E00               	movlw	0
  2177  0018AC  6E2A               	movwf	___awmod@divisor+1,c
  2178  0018AE  0E64               	movlw	100
  2179  0018B0  6E29               	movwf	___awmod@divisor,c
  2180  0018B2  5041               	movf	scale@scl,w,c
  2181  0018B4  6E27               	movwf	___awmod@dividend,c
  2182  0018B6  6A28               	clrf	___awmod@dividend+1,c
  2183  0018B8  BE27               	btfsc	___awmod@dividend,7,c
  2184  0018BA  0628               	decf	___awmod@dividend+1,f,c
  2185  0018BC  EC4A  F013         	call	___awmod	;wreg free
  2186  0018C0  C027  F02D         	movff	?___awmod,___awdiv@dividend
  2187  0018C4  C028  F02E         	movff	?___awmod+1,___awdiv@dividend+1
  2188  0018C8  EC2A  F012         	call	___awdiv	;wreg free
  2189  0018CC  0E09               	movlw	9
  2190  0018CE  242D               	addwf	?___awdiv,w,c
  2191  0018D0  6E35               	movwf	___wmul@multiplier,c
  2192  0018D2  0E00               	movlw	0
  2193  0018D4  202E               	addwfc	?___awdiv+1,w,c
  2194  0018D6  6E36               	movwf	___wmul@multiplier+1,c
  2195  0018D8  EC85  F014         	call	___wmul	;wreg free
  2196  0018DC  0E50               	movlw	low __powers_
  2197  0018DE  2435               	addwf	?___wmul,w,c
  2198  0018E0  6EF6               	movwf	tblptrl,c
  2199  0018E2  0E10               	movlw	high __powers_
  2200  0018E4  2036               	addwfc	?___wmul+1,w,c
  2201  0018E6  6EF7               	movwf	tblptrh,c
  2202  0018E8                     	if	0	;There are less than 3 active tblptr bytes
  2203  0018E8                     	endif
  2204  0018E8  0009               	tblrd		*+
  2205  0018EA  CFF5 F00C          	movff	tablat,___ftmul@f2
  2206  0018EE  0009               	tblrd		*+
  2207  0018F0  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2208  0018F4  000A               	tblrd		*-
  2209  0018F6  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2210  0018FA  0E00               	movlw	0
  2211  0018FC  6E30               	movwf	___awdiv@divisor+1,c
  2212  0018FE  0E64               	movlw	100
  2213  001900  6E2F               	movwf	___awdiv@divisor,c
  2214  001902  5041               	movf	scale@scl,w,c
  2215  001904  6E2D               	movwf	___awdiv@dividend,c
  2216  001906  6A2E               	clrf	___awdiv@dividend+1,c
  2217  001908  BE2D               	btfsc	___awdiv@dividend,7,c
  2218  00190A  062E               	decf	___awdiv@dividend+1,f,c
  2219  00190C  EC2A  F012         	call	___awdiv	;wreg free
  2220  001910  0E12               	movlw	18
  2221  001912  242D               	addwf	?___awdiv,w,c
  2222  001914  6E35               	movwf	___wmul@multiplier,c
  2223  001916  0E00               	movlw	0
  2224  001918  202E               	addwfc	?___awdiv+1,w,c
  2225  00191A  6E36               	movwf	___wmul@multiplier+1,c
  2226  00191C  0E00               	movlw	0
  2227  00191E  6E38               	movwf	___wmul@multiplicand+1,c
  2228  001920  0E03               	movlw	3
  2229  001922  6E37               	movwf	___wmul@multiplicand,c
  2230  001924  EC85  F014         	call	___wmul	;wreg free
  2231  001928  0E50               	movlw	low __powers_
  2232  00192A  2435               	addwf	?___wmul,w,c
  2233  00192C  6EF6               	movwf	tblptrl,c
  2234  00192E  0E10               	movlw	high __powers_
  2235  001930  2036               	addwfc	?___wmul+1,w,c
  2236  001932  6EF7               	movwf	tblptrh,c
  2237  001934                     	if	0	;There are less than 3 active tblptr bytes
  2238  001934                     	endif
  2239  001934  0009               	tblrd		*+
  2240  001936  CFF5 F009          	movff	tablat,___ftmul@f1
  2241  00193A  0009               	tblrd		*+
  2242  00193C  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2243  001940  000A               	tblrd		*-
  2244  001942  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2245  001946  ECD8  F010         	call	___ftmul	;wreg free
  2246  00194A  C009  F03E         	movff	?___ftmul,_scale$1108
  2247  00194E  C00A  F03F         	movff	?___ftmul+1,_scale$1108+1
  2248  001952  C00B  F040         	movff	?___ftmul+2,_scale$1108+2
  2249                           
  2250                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2251  001956  C03E  F009         	movff	_scale$1108,___ftmul@f1
  2252  00195A  C03F  F00A         	movff	_scale$1108+1,___ftmul@f1+1
  2253  00195E  C040  F00B         	movff	_scale$1108+2,___ftmul@f1+2
  2254  001962  0E00               	movlw	0
  2255  001964  6E38               	movwf	___wmul@multiplicand+1,c
  2256  001966  0E03               	movlw	3
  2257  001968  6E37               	movwf	___wmul@multiplicand,c
  2258  00196A  0E00               	movlw	0
  2259  00196C  6E2A               	movwf	___awmod@divisor+1,c
  2260  00196E  0E0A               	movlw	10
  2261  001970  6E29               	movwf	___awmod@divisor,c
  2262  001972  5041               	movf	scale@scl,w,c
  2263  001974  6E27               	movwf	___awmod@dividend,c
  2264  001976  6A28               	clrf	___awmod@dividend+1,c
  2265  001978  BE27               	btfsc	___awmod@dividend,7,c
  2266  00197A  0628               	decf	___awmod@dividend+1,f,c
  2267  00197C  EC4A  F013         	call	___awmod	;wreg free
  2268  001980  C027  F035         	movff	?___awmod,___wmul@multiplier
  2269  001984  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2270  001988  EC85  F014         	call	___wmul	;wreg free
  2271  00198C  0E50               	movlw	low __powers_
  2272  00198E  2435               	addwf	?___wmul,w,c
  2273  001990  6EF6               	movwf	tblptrl,c
  2274  001992  0E10               	movlw	high __powers_
  2275  001994  2036               	addwfc	?___wmul+1,w,c
  2276  001996  6EF7               	movwf	tblptrh,c
  2277  001998                     	if	0	;There are less than 3 active tblptr bytes
  2278  001998                     	endif
  2279  001998  0009               	tblrd		*+
  2280  00199A  CFF5 F00C          	movff	tablat,___ftmul@f2
  2281  00199E  0009               	tblrd		*+
  2282  0019A0  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2283  0019A4  000A               	tblrd		*-
  2284  0019A6  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2285  0019AA  ECD8  F010         	call	___ftmul	;wreg free
  2286  0019AE  D053               	goto	L5
  2287  0019B0  D06C               	goto	l122
  2288  0019B2  D059               	goto	l2044
  2289  0019B4                     l2038:
  2290                           
  2291                           ;doprnt.c: 438: else if(scl > 10)
  2292  0019B4  5041               	movf	scale@scl,w,c
  2293  0019B6  0A80               	xorlw	128
  2294  0019B8  0F75               	addlw	-139
  2295  0019BA  A0D8               	btfss	status,0,c
  2296  0019BC  D054               	goto	l2044
  2297                           
  2298                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2299  0019BE  0E00               	movlw	0
  2300  0019C0  6E30               	movwf	___awdiv@divisor+1,c
  2301  0019C2  0E0A               	movlw	10
  2302  0019C4  6E2F               	movwf	___awdiv@divisor,c
  2303  0019C6  5041               	movf	scale@scl,w,c
  2304  0019C8  6E2D               	movwf	___awdiv@dividend,c
  2305  0019CA  6A2E               	clrf	___awdiv@dividend+1,c
  2306  0019CC  BE2D               	btfsc	___awdiv@dividend,7,c
  2307  0019CE  062E               	decf	___awdiv@dividend+1,f,c
  2308  0019D0  EC2A  F012         	call	___awdiv	;wreg free
  2309  0019D4  0E09               	movlw	9
  2310  0019D6  242D               	addwf	?___awdiv,w,c
  2311  0019D8  6E35               	movwf	___wmul@multiplier,c
  2312  0019DA  0E00               	movlw	0
  2313  0019DC  202E               	addwfc	?___awdiv+1,w,c
  2314  0019DE  6E36               	movwf	___wmul@multiplier+1,c
  2315  0019E0  0E00               	movlw	0
  2316  0019E2  6E38               	movwf	___wmul@multiplicand+1,c
  2317  0019E4  0E03               	movlw	3
  2318  0019E6  6E37               	movwf	___wmul@multiplicand,c
  2319  0019E8  EC85  F014         	call	___wmul	;wreg free
  2320  0019EC  0E50               	movlw	low __powers_
  2321  0019EE  2435               	addwf	?___wmul,w,c
  2322  0019F0  6EF6               	movwf	tblptrl,c
  2323  0019F2  0E10               	movlw	high __powers_
  2324  0019F4  2036               	addwfc	?___wmul+1,w,c
  2325  0019F6  6EF7               	movwf	tblptrh,c
  2326  0019F8                     	if	0	;There are less than 3 active tblptr bytes
  2327  0019F8                     	endif
  2328  0019F8  0009               	tblrd		*+
  2329  0019FA  CFF5 F009          	movff	tablat,___ftmul@f1
  2330  0019FE  0009               	tblrd		*+
  2331  001A00  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2332  001A04  000A               	tblrd		*-
  2333  001A06  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2334  001A0A  0E00               	movlw	0
  2335  001A0C  6E38               	movwf	___wmul@multiplicand+1,c
  2336  001A0E  0E03               	movlw	3
  2337  001A10  6E37               	movwf	___wmul@multiplicand,c
  2338  001A12  0E00               	movlw	0
  2339  001A14  6E2A               	movwf	___awmod@divisor+1,c
  2340  001A16  0E0A               	movlw	10
  2341  001A18  6E29               	movwf	___awmod@divisor,c
  2342  001A1A  5041               	movf	scale@scl,w,c
  2343  001A1C  6E27               	movwf	___awmod@dividend,c
  2344  001A1E  6A28               	clrf	___awmod@dividend+1,c
  2345  001A20  BE27               	btfsc	___awmod@dividend,7,c
  2346  001A22  0628               	decf	___awmod@dividend+1,f,c
  2347  001A24  EC4A  F013         	call	___awmod	;wreg free
  2348  001A28  C027  F035         	movff	?___awmod,___wmul@multiplier
  2349  001A2C  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2350  001A30  EC85  F014         	call	___wmul	;wreg free
  2351  001A34  0E50               	movlw	low __powers_
  2352  001A36  2435               	addwf	?___wmul,w,c
  2353  001A38  6EF6               	movwf	tblptrl,c
  2354  001A3A  0E10               	movlw	high __powers_
  2355  001A3C  2036               	addwfc	?___wmul+1,w,c
  2356  001A3E  6EF7               	movwf	tblptrh,c
  2357  001A40                     	if	0	;There are less than 3 active tblptr bytes
  2358  001A40                     	endif
  2359  001A40  0009               	tblrd		*+
  2360  001A42  CFF5 F00C          	movff	tablat,___ftmul@f2
  2361  001A46  0009               	tblrd		*+
  2362  001A48  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2363  001A4C  000A               	tblrd		*-
  2364  001A4E  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2365  001A52  ECD8  F010         	call	___ftmul	;wreg free
  2366  001A56                     L5:
  2367  001A56  C009  F03B         	movff	?___ftmul,?_scale
  2368  001A5A  C00A  F03C         	movff	?___ftmul+1,?_scale+1
  2369  001A5E  C00B  F03D         	movff	?___ftmul+2,?_scale+2
  2370  001A62  D013               	goto	l122
  2371  001A64  D000               	goto	l2044
  2372  001A66                     l2044:
  2373                           
  2374                           ;doprnt.c: 440: return _powers_[scl];
  2375  001A66  5041               	movf	scale@scl,w,c
  2376  001A68  0D03               	mullw	3
  2377  001A6A  0E50               	movlw	low __powers_
  2378  001A6C  24F3               	addwf	prodl,w,c
  2379  001A6E  6EF6               	movwf	tblptrl,c
  2380  001A70  0E10               	movlw	high __powers_
  2381  001A72                     L4:
  2382  001A72  20F4               	addwfc	prodh,w,c
  2383  001A74  6EF7               	movwf	tblptrh,c
  2384  001A76                     	if	0	;There are less than 3 active tblptr bytes
  2385  001A76                     	endif
  2386  001A76  0009               	tblrd		*+
  2387  001A78  CFF5 F03B          	movff	tablat,?_scale
  2388  001A7C  0009               	tblrd		*+
  2389  001A7E  CFF5 F03C          	movff	tablat,?_scale+1
  2390  001A82  000A               	tblrd		*-
  2391  001A84  CFF5 F03D          	movff	tablat,?_scale+2
  2392  001A88  D000               	goto	l122
  2393  001A8A                     l122:
  2394  001A8A  0012               	return		;funcret
  2395  001A8C                     __end_of_scale:
  2396                           	opt stack 0
  2397                           tblptru	equ	0xFF8
  2398                           tblptrh	equ	0xFF7
  2399                           tblptrl	equ	0xFF6
  2400                           tablat	equ	0xFF5
  2401                           prodh	equ	0xFF4
  2402                           prodl	equ	0xFF3
  2403                           postinc0	equ	0xFEE
  2404                           wreg	equ	0xFE8
  2405                           postdec1	equ	0xFE5
  2406                           fsr1l	equ	0xFE1
  2407                           postinc2	equ	0xFDE
  2408                           postdec2	equ	0xFDD
  2409                           fsr2h	equ	0xFDA
  2410                           fsr2l	equ	0xFD9
  2411                           status	equ	0xFD8
  2412                           
  2413 ;; *************** function _putch *****************
  2414 ;; Defined at:
  2415 ;;		line 7 in file "E:\XC8\sources\common\putch.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  c               1    wreg     unsigned char 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  c               1    0[COMRAM] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;		None               void
  2422 ;; Registers used:
  2423 ;;		wreg
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;Total ram usage:        0 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_printf
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text4
  2443  0029F6                     __ptext4:
  2444                           	opt stack 0
  2445  0029F6                     _putch:
  2446                           	opt stack 29
  2447                           
  2448                           ;incstack = 0
  2449  0029F6  0012               	return		;funcret
  2450  0029F8                     __end_of_putch:
  2451                           	opt stack 0
  2452                           tblptru	equ	0xFF8
  2453                           tblptrh	equ	0xFF7
  2454                           tblptrl	equ	0xFF6
  2455                           tablat	equ	0xFF5
  2456                           prodh	equ	0xFF4
  2457                           prodl	equ	0xFF3
  2458                           postinc0	equ	0xFEE
  2459                           wreg	equ	0xFE8
  2460                           postdec1	equ	0xFE5
  2461                           fsr1l	equ	0xFE1
  2462                           postinc2	equ	0xFDE
  2463                           postdec2	equ	0xFDD
  2464                           fsr2h	equ	0xFDA
  2465                           fsr2l	equ	0xFD9
  2466                           status	equ	0xFD8
  2467                           
  2468 ;; *************** function _fround *****************
  2469 ;; Defined at:
  2470 ;;		line 409 in file "E:\XC8\sources\common\doprnt.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  prec            1    wreg     unsigned char 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  prec            1   67[COMRAM] unsigned char 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  3   58[COMRAM] unsigned char 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2484 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;Total ram usage:       10 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    2
  2491 ;; This function calls:
  2492 ;;		___awdiv
  2493 ;;		___awmod
  2494 ;;		___ftmul
  2495 ;;		___wmul
  2496 ;; This function is called by:
  2497 ;;		_printf
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text5
  2502  001A8C                     __ptext5:
  2503                           	opt stack 0
  2504  001A8C                     _fround:
  2505                           	opt stack 27
  2506                           
  2507                           ;incstack = 0
  2508                           ;fround@prec stored from wreg
  2509  001A8C  6E44               	movwf	fround@prec,c
  2510                           
  2511                           ;doprnt.c: 413: if(prec>=110)
  2512  001A8E  0E6D               	movlw	109
  2513  001A90  6444               	cpfsgt	fround@prec,c
  2514  001A92  D09B               	goto	l1998
  2515                           
  2516                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2517  001A94  0E00               	movlw	0
  2518  001A96  6E38               	movwf	___wmul@multiplicand+1,c
  2519  001A98  0E03               	movlw	3
  2520  001A9A  6E37               	movwf	___wmul@multiplicand,c
  2521  001A9C  0E00               	movlw	0
  2522  001A9E  6E30               	movwf	___awdiv@divisor+1,c
  2523  001AA0  0E0A               	movlw	10
  2524  001AA2  6E2F               	movwf	___awdiv@divisor,c
  2525  001AA4  0E00               	movlw	0
  2526  001AA6  6E2A               	movwf	___awmod@divisor+1,c
  2527  001AA8  0E64               	movlw	100
  2528  001AAA  6E29               	movwf	___awmod@divisor,c
  2529  001AAC  C044  F027         	movff	fround@prec,___awmod@dividend
  2530  001AB0  6A28               	clrf	___awmod@dividend+1,c
  2531  001AB2  EC4A  F013         	call	___awmod	;wreg free
  2532  001AB6  C027  F02D         	movff	?___awmod,___awdiv@dividend
  2533  001ABA  C028  F02E         	movff	?___awmod+1,___awdiv@dividend+1
  2534  001ABE  EC2A  F012         	call	___awdiv	;wreg free
  2535  001AC2  0E09               	movlw	9
  2536  001AC4  242D               	addwf	?___awdiv,w,c
  2537  001AC6  6E35               	movwf	___wmul@multiplier,c
  2538  001AC8  0E00               	movlw	0
  2539  001ACA  202E               	addwfc	?___awdiv+1,w,c
  2540  001ACC  6E36               	movwf	___wmul@multiplier+1,c
  2541  001ACE  EC85  F014         	call	___wmul	;wreg free
  2542  001AD2  0E29               	movlw	low __npowers_
  2543  001AD4  2435               	addwf	?___wmul,w,c
  2544  001AD6  6EF6               	movwf	tblptrl,c
  2545  001AD8  0E10               	movlw	high __npowers_
  2546  001ADA  2036               	addwfc	?___wmul+1,w,c
  2547  001ADC  6EF7               	movwf	tblptrh,c
  2548  001ADE                     	if	0	;There are less than 3 active tblptr bytes
  2549  001ADE                     	endif
  2550  001ADE  0009               	tblrd		*+
  2551  001AE0  CFF5 F00C          	movff	tablat,___ftmul@f2
  2552  001AE4  0009               	tblrd		*+
  2553  001AE6  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2554  001AEA  000A               	tblrd		*-
  2555  001AEC  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2556  001AF0  0E00               	movlw	0
  2557  001AF2  6E30               	movwf	___awdiv@divisor+1,c
  2558  001AF4  0E64               	movlw	100
  2559  001AF6  6E2F               	movwf	___awdiv@divisor,c
  2560  001AF8  C044  F02D         	movff	fround@prec,___awdiv@dividend
  2561  001AFC  6A2E               	clrf	___awdiv@dividend+1,c
  2562  001AFE  EC2A  F012         	call	___awdiv	;wreg free
  2563  001B02  0E12               	movlw	18
  2564  001B04  242D               	addwf	?___awdiv,w,c
  2565  001B06  6E35               	movwf	___wmul@multiplier,c
  2566  001B08  0E00               	movlw	0
  2567  001B0A  202E               	addwfc	?___awdiv+1,w,c
  2568  001B0C  6E36               	movwf	___wmul@multiplier+1,c
  2569  001B0E  0E00               	movlw	0
  2570  001B10  6E38               	movwf	___wmul@multiplicand+1,c
  2571  001B12  0E03               	movlw	3
  2572  001B14  6E37               	movwf	___wmul@multiplicand,c
  2573  001B16  EC85  F014         	call	___wmul	;wreg free
  2574  001B1A  0E29               	movlw	low __npowers_
  2575  001B1C  2435               	addwf	?___wmul,w,c
  2576  001B1E  6EF6               	movwf	tblptrl,c
  2577  001B20  0E10               	movlw	high __npowers_
  2578  001B22  2036               	addwfc	?___wmul+1,w,c
  2579  001B24  6EF7               	movwf	tblptrh,c
  2580  001B26                     	if	0	;There are less than 3 active tblptr bytes
  2581  001B26                     	endif
  2582  001B26  0009               	tblrd		*+
  2583  001B28  CFF5 F009          	movff	tablat,___ftmul@f1
  2584  001B2C  0009               	tblrd		*+
  2585  001B2E  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2586  001B32  000A               	tblrd		*-
  2587  001B34  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2588  001B38  ECD8  F010         	call	___ftmul	;wreg free
  2589  001B3C  C009  F041         	movff	?___ftmul,_fround$1106
  2590  001B40  C00A  F042         	movff	?___ftmul+1,_fround$1106+1
  2591  001B44  C00B  F043         	movff	?___ftmul+2,_fround$1106+2
  2592                           
  2593                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2594  001B48  0E00               	movlw	0
  2595  001B4A  6E38               	movwf	___wmul@multiplicand+1,c
  2596  001B4C  0E03               	movlw	3
  2597  001B4E  6E37               	movwf	___wmul@multiplicand,c
  2598  001B50  0E00               	movlw	0
  2599  001B52  6E2A               	movwf	___awmod@divisor+1,c
  2600  001B54  0E0A               	movlw	10
  2601  001B56  6E29               	movwf	___awmod@divisor,c
  2602  001B58  C044  F027         	movff	fround@prec,___awmod@dividend
  2603  001B5C  6A28               	clrf	___awmod@dividend+1,c
  2604  001B5E  EC4A  F013         	call	___awmod	;wreg free
  2605  001B62  C027  F035         	movff	?___awmod,___wmul@multiplier
  2606  001B66  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2607  001B6A  EC85  F014         	call	___wmul	;wreg free
  2608  001B6E  0E29               	movlw	low __npowers_
  2609  001B70  2435               	addwf	?___wmul,w,c
  2610  001B72  6EF6               	movwf	tblptrl,c
  2611  001B74  0E10               	movlw	high __npowers_
  2612  001B76  2036               	addwfc	?___wmul+1,w,c
  2613  001B78  6EF7               	movwf	tblptrh,c
  2614  001B7A                     	if	0	;There are less than 3 active tblptr bytes
  2615  001B7A                     	endif
  2616  001B7A  0009               	tblrd		*+
  2617  001B7C  CFF5 F00C          	movff	tablat,___ftmul@f2
  2618  001B80  0009               	tblrd		*+
  2619  001B82  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2620  001B86  000A               	tblrd		*-
  2621  001B88  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2622  001B8C  C041  F009         	movff	_fround$1106,___ftmul@f1
  2623  001B90  C042  F00A         	movff	_fround$1106+1,___ftmul@f1+1
  2624  001B94  C043  F00B         	movff	_fround$1106+2,___ftmul@f1+2
  2625  001B98  ECD8  F010         	call	___ftmul	;wreg free
  2626  001B9C  C009  F03E         	movff	?___ftmul,_fround$1107
  2627  001BA0  C00A  F03F         	movff	?___ftmul+1,_fround$1107+1
  2628  001BA4  C00B  F040         	movff	?___ftmul+2,_fround$1107+2
  2629                           
  2630                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2631  001BA8  C03E  F009         	movff	_fround$1107,___ftmul@f1
  2632  001BAC  C03F  F00A         	movff	_fround$1107+1,___ftmul@f1+1
  2633  001BB0  C040  F00B         	movff	_fround$1107+2,___ftmul@f1+2
  2634  001BB4  0E00               	movlw	0
  2635  001BB6  6E0C               	movwf	___ftmul@f2,c
  2636  001BB8  0E00               	movlw	0
  2637  001BBA  6E0D               	movwf	___ftmul@f2+1,c
  2638  001BBC  0E3F               	movlw	63
  2639  001BBE  6E0E               	movwf	___ftmul@f2+2,c
  2640  001BC0  ECD8  F010         	call	___ftmul	;wreg free
  2641  001BC4  D07D               	goto	L7
  2642  001BC6  D083               	goto	l115
  2643  001BC8  D062               	goto	l2006
  2644  001BCA                     l1998:
  2645                           
  2646                           ;doprnt.c: 415: else if(prec > 10)
  2647  001BCA  0E0A               	movlw	10
  2648  001BCC  6444               	cpfsgt	fround@prec,c
  2649  001BCE  D05F               	goto	l2006
  2650                           
  2651                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2652  001BD0  0E00               	movlw	0
  2653  001BD2  6E38               	movwf	___wmul@multiplicand+1,c
  2654  001BD4  0E03               	movlw	3
  2655  001BD6  6E37               	movwf	___wmul@multiplicand,c
  2656  001BD8  0E00               	movlw	0
  2657  001BDA  6E2A               	movwf	___awmod@divisor+1,c
  2658  001BDC  0E0A               	movlw	10
  2659  001BDE  6E29               	movwf	___awmod@divisor,c
  2660  001BE0  C044  F027         	movff	fround@prec,___awmod@dividend
  2661  001BE4  6A28               	clrf	___awmod@dividend+1,c
  2662  001BE6  EC4A  F013         	call	___awmod	;wreg free
  2663  001BEA  C027  F035         	movff	?___awmod,___wmul@multiplier
  2664  001BEE  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2665  001BF2  EC85  F014         	call	___wmul	;wreg free
  2666  001BF6  0E29               	movlw	low __npowers_
  2667  001BF8  2435               	addwf	?___wmul,w,c
  2668  001BFA  6EF6               	movwf	tblptrl,c
  2669  001BFC  0E10               	movlw	high __npowers_
  2670  001BFE  2036               	addwfc	?___wmul+1,w,c
  2671  001C00  6EF7               	movwf	tblptrh,c
  2672  001C02                     	if	0	;There are less than 3 active tblptr bytes
  2673  001C02                     	endif
  2674  001C02  0009               	tblrd		*+
  2675  001C04  CFF5 F00C          	movff	tablat,___ftmul@f2
  2676  001C08  0009               	tblrd		*+
  2677  001C0A  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2678  001C0E  000A               	tblrd		*-
  2679  001C10  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2680  001C14  0E00               	movlw	0
  2681  001C16  6E30               	movwf	___awdiv@divisor+1,c
  2682  001C18  0E0A               	movlw	10
  2683  001C1A  6E2F               	movwf	___awdiv@divisor,c
  2684  001C1C  C044  F02D         	movff	fround@prec,___awdiv@dividend
  2685  001C20  6A2E               	clrf	___awdiv@dividend+1,c
  2686  001C22  EC2A  F012         	call	___awdiv	;wreg free
  2687  001C26  0E09               	movlw	9
  2688  001C28  242D               	addwf	?___awdiv,w,c
  2689  001C2A  6E35               	movwf	___wmul@multiplier,c
  2690  001C2C  0E00               	movlw	0
  2691  001C2E  202E               	addwfc	?___awdiv+1,w,c
  2692  001C30  6E36               	movwf	___wmul@multiplier+1,c
  2693  001C32  0E00               	movlw	0
  2694  001C34  6E38               	movwf	___wmul@multiplicand+1,c
  2695  001C36  0E03               	movlw	3
  2696  001C38  6E37               	movwf	___wmul@multiplicand,c
  2697  001C3A  EC85  F014         	call	___wmul	;wreg free
  2698  001C3E  0E29               	movlw	low __npowers_
  2699  001C40  2435               	addwf	?___wmul,w,c
  2700  001C42  6EF6               	movwf	tblptrl,c
  2701  001C44  0E10               	movlw	high __npowers_
  2702  001C46  2036               	addwfc	?___wmul+1,w,c
  2703  001C48  6EF7               	movwf	tblptrh,c
  2704  001C4A                     	if	0	;There are less than 3 active tblptr bytes
  2705  001C4A                     	endif
  2706  001C4A  0009               	tblrd		*+
  2707  001C4C  CFF5 F009          	movff	tablat,___ftmul@f1
  2708  001C50  0009               	tblrd		*+
  2709  001C52  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2710  001C56  000A               	tblrd		*-
  2711  001C58  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2712  001C5C  ECD8  F010         	call	___ftmul	;wreg free
  2713  001C60  C009  F041         	movff	?___ftmul,_fround$1106
  2714  001C64  C00A  F042         	movff	?___ftmul+1,_fround$1106+1
  2715  001C68  C00B  F043         	movff	?___ftmul+2,_fround$1106+2
  2716                           
  2717                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2718  001C6C  C041  F009         	movff	_fround$1106,___ftmul@f1
  2719  001C70  C042  F00A         	movff	_fround$1106+1,___ftmul@f1+1
  2720  001C74  C043  F00B         	movff	_fround$1106+2,___ftmul@f1+2
  2721  001C78  0E00               	movlw	0
  2722  001C7A  6E0C               	movwf	___ftmul@f2,c
  2723  001C7C  0E00               	movlw	0
  2724  001C7E  6E0D               	movwf	___ftmul@f2+1,c
  2725  001C80  0E3F               	movlw	63
  2726  001C82  6E0E               	movwf	___ftmul@f2+2,c
  2727  001C84  ECD8  F010         	call	___ftmul	;wreg free
  2728  001C88  D01B               	goto	L7
  2729  001C8A  D021               	goto	l115
  2730  001C8C  D000               	goto	l2006
  2731  001C8E                     l2006:
  2732                           
  2733                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  2734  001C8E  5044               	movf	fround@prec,w,c
  2735  001C90  0D03               	mullw	3
  2736  001C92  0E29               	movlw	low __npowers_
  2737  001C94  24F3               	addwf	prodl,w,c
  2738  001C96  6EF6               	movwf	tblptrl,c
  2739  001C98  0E10               	movlw	high __npowers_
  2740  001C9A  20F4               	addwfc	prodh,w,c
  2741  001C9C  6EF7               	movwf	tblptrh,c
  2742  001C9E                     	if	0	;There are less than 3 active tblptr bytes
  2743  001C9E                     	endif
  2744  001C9E  0009               	tblrd		*+
  2745  001CA0  CFF5 F009          	movff	tablat,___ftmul@f1
  2746  001CA4  0009               	tblrd		*+
  2747  001CA6  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2748  001CAA  000A               	tblrd		*-
  2749  001CAC  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2750  001CB0  0E00               	movlw	0
  2751  001CB2  6E0C               	movwf	___ftmul@f2,c
  2752  001CB4  0E00               	movlw	0
  2753  001CB6  6E0D               	movwf	___ftmul@f2+1,c
  2754  001CB8  0E3F               	movlw	63
  2755  001CBA  6E0E               	movwf	___ftmul@f2+2,c
  2756  001CBC  ECD8  F010         	call	___ftmul	;wreg free
  2757  001CC0                     L7:
  2758  001CC0  C009  F03B         	movff	?___ftmul,?_fround
  2759  001CC4  C00A  F03C         	movff	?___ftmul+1,?_fround+1
  2760  001CC8  C00B  F03D         	movff	?___ftmul+2,?_fround+2
  2761  001CCC  D000               	goto	l115
  2762  001CCE                     l115:
  2763  001CCE  0012               	return		;funcret
  2764  001CD0                     __end_of_fround:
  2765                           	opt stack 0
  2766                           tblptru	equ	0xFF8
  2767                           tblptrh	equ	0xFF7
  2768                           tblptrl	equ	0xFF6
  2769                           tablat	equ	0xFF5
  2770                           prodh	equ	0xFF4
  2771                           prodl	equ	0xFF3
  2772                           postinc0	equ	0xFEE
  2773                           wreg	equ	0xFE8
  2774                           postdec1	equ	0xFE5
  2775                           fsr1l	equ	0xFE1
  2776                           postinc2	equ	0xFDE
  2777                           postdec2	equ	0xFDD
  2778                           fsr2h	equ	0xFDA
  2779                           fsr2l	equ	0xFD9
  2780                           status	equ	0xFD8
  2781                           
  2782 ;; *************** function ___wmul *****************
  2783 ;; Defined at:
  2784 ;;		line 15 in file "E:\XC8\sources\common\Umul16.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  multiplier      2   52[COMRAM] unsigned int 
  2787 ;;  multiplicand    2   54[COMRAM] unsigned int 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  product         2   56[COMRAM] unsigned int 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  2   52[COMRAM] unsigned int 
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0, prodl, prodh
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2802 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;Total ram usage:        6 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_fround
  2809 ;;		_scale
  2810 ;;		_printf
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text6
  2815  00290A                     __ptext6:
  2816                           	opt stack 0
  2817  00290A                     ___wmul:
  2818                           	opt stack 28
  2819                           
  2820                           ;incstack = 0
  2821  00290A  5035               	movf	___wmul@multiplier,w,c
  2822  00290C  0237               	mulwf	___wmul@multiplicand,c
  2823  00290E  CFF3 F039          	movff	prodl,___wmul@product
  2824  002912  CFF4 F03A          	movff	prodh,___wmul@product+1
  2825  002916  5035               	movf	___wmul@multiplier,w,c
  2826  002918  0238               	mulwf	___wmul@multiplicand+1,c
  2827  00291A  50F3               	movf	prodl,w,c
  2828  00291C  263A               	addwf	___wmul@product+1,f,c
  2829  00291E  5036               	movf	___wmul@multiplier+1,w,c
  2830  002920  0237               	mulwf	___wmul@multiplicand,c
  2831  002922  50F3               	movf	prodl,w,c
  2832  002924  263A               	addwf	___wmul@product+1,f,c
  2833  002926  C039  F035         	movff	___wmul@product,?___wmul
  2834  00292A  C03A  F036         	movff	___wmul@product+1,?___wmul+1
  2835  00292E  D000               	goto	l214
  2836  002930                     l214:
  2837  002930  0012               	return		;funcret
  2838  002932                     __end_of___wmul:
  2839                           	opt stack 0
  2840                           tblptru	equ	0xFF8
  2841                           tblptrh	equ	0xFF7
  2842                           tblptrl	equ	0xFF6
  2843                           tablat	equ	0xFF5
  2844                           prodh	equ	0xFF4
  2845                           prodl	equ	0xFF3
  2846                           postinc0	equ	0xFEE
  2847                           wreg	equ	0xFE8
  2848                           postdec1	equ	0xFE5
  2849                           fsr1l	equ	0xFE1
  2850                           postinc2	equ	0xFDE
  2851                           postdec2	equ	0xFDD
  2852                           fsr2h	equ	0xFDA
  2853                           fsr2l	equ	0xFD9
  2854                           status	equ	0xFD8
  2855                           
  2856 ;; *************** function ___ftmul *****************
  2857 ;; Defined at:
  2858 ;;		line 62 in file "E:\XC8\sources\common\ftmul.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  f1              3    8[COMRAM] float 
  2861 ;;  f2              3   11[COMRAM] float 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  2864 ;;  sign            1   22[COMRAM] unsigned char 
  2865 ;;  cntr            1   21[COMRAM] unsigned char 
  2866 ;;  exp             1   17[COMRAM] unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  3    8[COMRAM] float 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2876 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;Total ram usage:       15 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    1
  2883 ;; This function calls:
  2884 ;;		___ftpack
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;;		_fround
  2888 ;;		_scale
  2889 ;;		_printf
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text7
  2894  0021B0                     __ptext7:
  2895                           	opt stack 0
  2896  0021B0                     ___ftmul:
  2897                           	opt stack 27
  2898                           
  2899                           ;incstack = 0
  2900  0021B0  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  2901  0021B4  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2902  0021B6  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2903  0021B8  340A               	rlcf	___ftmul@f1+1,w,c
  2904  0021BA  360F               	rlcf	??___ftmul& (0+255),f,c
  2905  0021BC  E301               	bnc	u1681
  2906  0021BE  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2907  0021C0                     u1681:
  2908  0021C0  500F               	movf	??___ftmul,w,c
  2909  0021C2  6E12               	movwf	___ftmul@exp,c
  2910  0021C4  5012               	movf	___ftmul@exp,w,c
  2911  0021C6  A4D8               	btfss	status,2,c
  2912  0021C8  D002               	goto	l1816
  2913  0021CA  D00E               	goto	l1818
  2914  0021CC  D06C               	goto	l643
  2915  0021CE                     l1816:
  2916  0021CE  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  2917  0021D2  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2918  0021D4  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2919  0021D6  340D               	rlcf	___ftmul@f2+1,w,c
  2920  0021D8  360F               	rlcf	??___ftmul& (0+255),f,c
  2921  0021DA  E301               	bnc	u1701
  2922  0021DC  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2923  0021DE                     u1701:
  2924  0021DE  500F               	movf	??___ftmul,w,c
  2925  0021E0  6E17               	movwf	___ftmul@sign,c
  2926  0021E2  5017               	movf	___ftmul@sign,w,c
  2927  0021E4  A4D8               	btfss	status,2,c
  2928  0021E6  D007               	goto	l1822
  2929  0021E8                     l1818:
  2930  0021E8  0E00               	movlw	0
  2931  0021EA  6E09               	movwf	?___ftmul,c
  2932  0021EC  0E00               	movlw	0
  2933  0021EE  6E0A               	movwf	?___ftmul+1,c
  2934  0021F0  0E00               	movlw	0
  2935  0021F2  6E0B               	movwf	?___ftmul+2,c
  2936  0021F4  D058               	goto	l643
  2937  0021F6                     l1822:
  2938  0021F6  5017               	movf	___ftmul@sign,w,c
  2939  0021F8  0F7B               	addlw	123
  2940  0021FA  2612               	addwf	___ftmul@exp,f,c
  2941  0021FC  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  2942  002200  500E               	movf	___ftmul@f2+2,w,c
  2943  002202  1A17               	xorwf	___ftmul@sign,f,c
  2944  002204  0E80               	movlw	128
  2945  002206  1617               	andwf	___ftmul@sign,f,c
  2946  002208  8E0A               	bsf	___ftmul@f1+1,7,c
  2947  00220A  8E0D               	bsf	___ftmul@f2+1,7,c
  2948  00220C  0EFF               	movlw	255
  2949  00220E  160C               	andwf	___ftmul@f2,f,c
  2950  002210  0EFF               	movlw	255
  2951  002212  160D               	andwf	___ftmul@f2+1,f,c
  2952  002214  0E00               	movlw	0
  2953  002216  160E               	andwf	___ftmul@f2+2,f,c
  2954  002218  0E00               	movlw	0
  2955  00221A  6E13               	movwf	___ftmul@f3_as_product,c
  2956  00221C  0E00               	movlw	0
  2957  00221E  6E14               	movwf	___ftmul@f3_as_product+1,c
  2958  002220  0E00               	movlw	0
  2959  002222  6E15               	movwf	___ftmul@f3_as_product+2,c
  2960  002224  0E07               	movlw	7
  2961  002226  6E16               	movwf	___ftmul@cntr,c
  2962  002228  D000               	goto	l1836
  2963  00222A                     l1836:
  2964  00222A  A009               	btfss	___ftmul@f1,0,c
  2965  00222C  D007               	goto	l1840
  2966  00222E  500C               	movf	___ftmul@f2,w,c
  2967  002230  2613               	addwf	___ftmul@f3_as_product,f,c
  2968  002232  500D               	movf	___ftmul@f2+1,w,c
  2969  002234  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2970  002236  500E               	movf	___ftmul@f2+2,w,c
  2971  002238  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2972  00223A  D000               	goto	l1840
  2973  00223C                     l1840:
  2974  00223C  90D8               	bcf	status,0,c
  2975  00223E  320B               	rrcf	___ftmul@f1+2,f,c
  2976  002240  320A               	rrcf	___ftmul@f1+1,f,c
  2977  002242  3209               	rrcf	___ftmul@f1,f,c
  2978  002244  90D8               	bcf	status,0,c
  2979  002246  360C               	rlcf	___ftmul@f2,f,c
  2980  002248  360D               	rlcf	___ftmul@f2+1,f,c
  2981  00224A  360E               	rlcf	___ftmul@f2+2,f,c
  2982  00224C  2E16               	decfsz	___ftmul@cntr,f,c
  2983  00224E  D7ED               	goto	l1836
  2984  002250  D000               	goto	l1844
  2985  002252                     l1844:
  2986  002252  0E09               	movlw	9
  2987  002254  6E16               	movwf	___ftmul@cntr,c
  2988  002256  D000               	goto	l1846
  2989  002258                     l1846:
  2990  002258  A009               	btfss	___ftmul@f1,0,c
  2991  00225A  D007               	goto	l1850
  2992  00225C  500C               	movf	___ftmul@f2,w,c
  2993  00225E  2613               	addwf	___ftmul@f3_as_product,f,c
  2994  002260  500D               	movf	___ftmul@f2+1,w,c
  2995  002262  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2996  002264  500E               	movf	___ftmul@f2+2,w,c
  2997  002266  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2998  002268  D000               	goto	l1850
  2999  00226A                     l1850:
  3000  00226A  90D8               	bcf	status,0,c
  3001  00226C  320B               	rrcf	___ftmul@f1+2,f,c
  3002  00226E  320A               	rrcf	___ftmul@f1+1,f,c
  3003  002270  3209               	rrcf	___ftmul@f1,f,c
  3004  002272  90D8               	bcf	status,0,c
  3005  002274  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  3006  002276  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  3007  002278  3213               	rrcf	___ftmul@f3_as_product,f,c
  3008  00227A  2E16               	decfsz	___ftmul@cntr,f,c
  3009  00227C  D7ED               	goto	l1846
  3010  00227E  D000               	goto	l1854
  3011  002280                     l1854:
  3012  002280  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3013  002284  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3014  002288  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3015  00228C  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  3016  002290  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  3017  002294  ECC7  F011         	call	___ftpack	;wreg free
  3018  002298  C001  F009         	movff	?___ftpack,?___ftmul
  3019  00229C  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  3020  0022A0  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  3021  0022A4  D000               	goto	l643
  3022  0022A6                     l643:
  3023  0022A6  0012               	return		;funcret
  3024  0022A8                     __end_of___ftmul:
  3025                           	opt stack 0
  3026                           tblptru	equ	0xFF8
  3027                           tblptrh	equ	0xFF7
  3028                           tblptrl	equ	0xFF6
  3029                           tablat	equ	0xFF5
  3030                           prodh	equ	0xFF4
  3031                           prodl	equ	0xFF3
  3032                           postinc0	equ	0xFEE
  3033                           wreg	equ	0xFE8
  3034                           postdec1	equ	0xFE5
  3035                           fsr1l	equ	0xFE1
  3036                           postinc2	equ	0xFDE
  3037                           postdec2	equ	0xFDD
  3038                           fsr2h	equ	0xFDA
  3039                           fsr2l	equ	0xFD9
  3040                           status	equ	0xFD8
  3041                           
  3042 ;; *************** function ___awmod *****************
  3043 ;; Defined at:
  3044 ;;		line 8 in file "E:\XC8\sources\common\awmod.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  dividend        2   38[COMRAM] int 
  3047 ;;  divisor         2   40[COMRAM] int 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  sign            1   43[COMRAM] unsigned char 
  3050 ;;  counter         1   42[COMRAM] unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  2   38[COMRAM] int 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3060 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;Total ram usage:        6 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; This function calls:
  3067 ;;		Nothing
  3068 ;; This function is called by:
  3069 ;;		_main
  3070 ;;		_fround
  3071 ;;		_scale
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text8
  3076  002694                     __ptext8:
  3077                           	opt stack 0
  3078  002694                     ___awmod:
  3079                           	opt stack 28
  3080                           
  3081                           ;incstack = 0
  3082  002694  0E00               	movlw	0
  3083  002696  6E2C               	movwf	___awmod@sign,c
  3084  002698  AE28               	btfss	___awmod@dividend+1,7,c
  3085  00269A  D007               	goto	l1910
  3086  00269C  6C27               	negf	___awmod@dividend,c
  3087  00269E  1E28               	comf	___awmod@dividend+1,f,c
  3088  0026A0  B0D8               	btfsc	status,0,c
  3089  0026A2  2A28               	incf	___awmod@dividend+1,f,c
  3090  0026A4  0E01               	movlw	1
  3091  0026A6  6E2C               	movwf	___awmod@sign,c
  3092  0026A8  D000               	goto	l1910
  3093  0026AA                     l1910:
  3094  0026AA  AE2A               	btfss	___awmod@divisor+1,7,c
  3095  0026AC  D005               	goto	l1914
  3096  0026AE  6C29               	negf	___awmod@divisor,c
  3097  0026B0  1E2A               	comf	___awmod@divisor+1,f,c
  3098  0026B2  B0D8               	btfsc	status,0,c
  3099  0026B4  2A2A               	incf	___awmod@divisor+1,f,c
  3100  0026B6  D000               	goto	l1914
  3101  0026B8                     l1914:
  3102  0026B8  5029               	movf	___awmod@divisor,w,c
  3103  0026BA  102A               	iorwf	___awmod@divisor+1,w,c
  3104  0026BC  B4D8               	btfsc	status,2,c
  3105  0026BE  D01D               	goto	l1930
  3106  0026C0  0E01               	movlw	1
  3107  0026C2  6E2B               	movwf	___awmod@counter,c
  3108  0026C4  D005               	goto	l1920
  3109  0026C6                     l1918:
  3110  0026C6  90D8               	bcf	status,0,c
  3111  0026C8  3629               	rlcf	___awmod@divisor,f,c
  3112  0026CA  362A               	rlcf	___awmod@divisor+1,f,c
  3113  0026CC  2A2B               	incf	___awmod@counter,f,c
  3114  0026CE  D000               	goto	l1920
  3115  0026D0                     l1920:
  3116  0026D0  BE2A               	btfsc	___awmod@divisor+1,7,c
  3117  0026D2  D002               	goto	l1922
  3118  0026D4  D7F8               	goto	l1918
  3119  0026D6  D000               	goto	l1922
  3120  0026D8                     l1922:
  3121  0026D8  5029               	movf	___awmod@divisor,w,c
  3122  0026DA  5C27               	subwf	___awmod@dividend,w,c
  3123  0026DC  502A               	movf	___awmod@divisor+1,w,c
  3124  0026DE  5828               	subwfb	___awmod@dividend+1,w,c
  3125  0026E0  A0D8               	btfss	status,0,c
  3126  0026E2  D005               	goto	l1926
  3127  0026E4  5029               	movf	___awmod@divisor,w,c
  3128  0026E6  5E27               	subwf	___awmod@dividend,f,c
  3129  0026E8  502A               	movf	___awmod@divisor+1,w,c
  3130  0026EA  5A28               	subwfb	___awmod@dividend+1,f,c
  3131  0026EC  D000               	goto	l1926
  3132  0026EE                     l1926:
  3133  0026EE  90D8               	bcf	status,0,c
  3134  0026F0  322A               	rrcf	___awmod@divisor+1,f,c
  3135  0026F2  3229               	rrcf	___awmod@divisor,f,c
  3136  0026F4  2E2B               	decfsz	___awmod@counter,f,c
  3137  0026F6  D7F0               	goto	l1922
  3138  0026F8  D000               	goto	l1930
  3139  0026FA                     l1930:
  3140  0026FA  502C               	movf	___awmod@sign,w,c
  3141  0026FC  B4D8               	btfsc	status,2,c
  3142  0026FE  D005               	goto	l1934
  3143  002700  6C27               	negf	___awmod@dividend,c
  3144  002702  1E28               	comf	___awmod@dividend+1,f,c
  3145  002704  B0D8               	btfsc	status,0,c
  3146  002706  2A28               	incf	___awmod@dividend+1,f,c
  3147  002708  D000               	goto	l1934
  3148  00270A                     l1934:
  3149  00270A  C027  F027         	movff	___awmod@dividend,?___awmod
  3150  00270E  C028  F028         	movff	___awmod@dividend+1,?___awmod+1
  3151  002712  D000               	goto	l420
  3152  002714                     l420:
  3153  002714  0012               	return		;funcret
  3154  002716                     __end_of___awmod:
  3155                           	opt stack 0
  3156                           tblptru	equ	0xFF8
  3157                           tblptrh	equ	0xFF7
  3158                           tblptrl	equ	0xFF6
  3159                           tablat	equ	0xFF5
  3160                           prodh	equ	0xFF4
  3161                           prodl	equ	0xFF3
  3162                           postinc0	equ	0xFEE
  3163                           wreg	equ	0xFE8
  3164                           postdec1	equ	0xFE5
  3165                           fsr1l	equ	0xFE1
  3166                           postinc2	equ	0xFDE
  3167                           postdec2	equ	0xFDD
  3168                           fsr2h	equ	0xFDA
  3169                           fsr2l	equ	0xFD9
  3170                           status	equ	0xFD8
  3171                           
  3172 ;; *************** function ___awdiv *****************
  3173 ;; Defined at:
  3174 ;;		line 8 in file "E:\XC8\sources\common\awdiv.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  dividend        2   44[COMRAM] int 
  3177 ;;  divisor         2   46[COMRAM] int 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  quotient        2   50[COMRAM] int 
  3180 ;;  sign            1   49[COMRAM] unsigned char 
  3181 ;;  counter         1   48[COMRAM] unsigned char 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  2   44[COMRAM] int 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3191 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;Total ram usage:        8 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_main
  3201 ;;		_fround
  3202 ;;		_scale
  3203 ;;		_printf
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text9
  3208  002454                     __ptext9:
  3209                           	opt stack 0
  3210  002454                     ___awdiv:
  3211                           	opt stack 28
  3212                           
  3213                           ;incstack = 0
  3214  002454  0E00               	movlw	0
  3215  002456  6E32               	movwf	___awdiv@sign,c
  3216  002458  AE30               	btfss	___awdiv@divisor+1,7,c
  3217  00245A  D007               	goto	l1866
  3218  00245C  6C2F               	negf	___awdiv@divisor,c
  3219  00245E  1E30               	comf	___awdiv@divisor+1,f,c
  3220  002460  B0D8               	btfsc	status,0,c
  3221  002462  2A30               	incf	___awdiv@divisor+1,f,c
  3222  002464  0E01               	movlw	1
  3223  002466  6E32               	movwf	___awdiv@sign,c
  3224  002468  D000               	goto	l1866
  3225  00246A                     l1866:
  3226  00246A  AE2E               	btfss	___awdiv@dividend+1,7,c
  3227  00246C  D007               	goto	l1872
  3228  00246E  6C2D               	negf	___awdiv@dividend,c
  3229  002470  1E2E               	comf	___awdiv@dividend+1,f,c
  3230  002472  B0D8               	btfsc	status,0,c
  3231  002474  2A2E               	incf	___awdiv@dividend+1,f,c
  3232  002476  0E01               	movlw	1
  3233  002478  1A32               	xorwf	___awdiv@sign,f,c
  3234  00247A  D000               	goto	l1872
  3235  00247C                     l1872:
  3236  00247C  0E00               	movlw	0
  3237  00247E  6E34               	movwf	___awdiv@quotient+1,c
  3238  002480  0E00               	movlw	0
  3239  002482  6E33               	movwf	___awdiv@quotient,c
  3240  002484  502F               	movf	___awdiv@divisor,w,c
  3241  002486  1030               	iorwf	___awdiv@divisor+1,w,c
  3242  002488  B4D8               	btfsc	status,2,c
  3243  00248A  D021               	goto	l1894
  3244  00248C  0E01               	movlw	1
  3245  00248E  6E31               	movwf	___awdiv@counter,c
  3246  002490  D005               	goto	l1880
  3247  002492                     l1878:
  3248  002492  90D8               	bcf	status,0,c
  3249  002494  362F               	rlcf	___awdiv@divisor,f,c
  3250  002496  3630               	rlcf	___awdiv@divisor+1,f,c
  3251  002498  2A31               	incf	___awdiv@counter,f,c
  3252  00249A  D000               	goto	l1880
  3253  00249C                     l1880:
  3254  00249C  BE30               	btfsc	___awdiv@divisor+1,7,c
  3255  00249E  D002               	goto	l1882
  3256  0024A0  D7F8               	goto	l1878
  3257  0024A2  D000               	goto	l1882
  3258  0024A4                     l1882:
  3259  0024A4  90D8               	bcf	status,0,c
  3260  0024A6  3633               	rlcf	___awdiv@quotient,f,c
  3261  0024A8  3634               	rlcf	___awdiv@quotient+1,f,c
  3262  0024AA  502F               	movf	___awdiv@divisor,w,c
  3263  0024AC  5C2D               	subwf	___awdiv@dividend,w,c
  3264  0024AE  5030               	movf	___awdiv@divisor+1,w,c
  3265  0024B0  582E               	subwfb	___awdiv@dividend+1,w,c
  3266  0024B2  A0D8               	btfss	status,0,c
  3267  0024B4  D006               	goto	l1890
  3268  0024B6  502F               	movf	___awdiv@divisor,w,c
  3269  0024B8  5E2D               	subwf	___awdiv@dividend,f,c
  3270  0024BA  5030               	movf	___awdiv@divisor+1,w,c
  3271  0024BC  5A2E               	subwfb	___awdiv@dividend+1,f,c
  3272  0024BE  8033               	bsf	___awdiv@quotient,0,c
  3273  0024C0  D000               	goto	l1890
  3274  0024C2                     l1890:
  3275  0024C2  90D8               	bcf	status,0,c
  3276  0024C4  3230               	rrcf	___awdiv@divisor+1,f,c
  3277  0024C6  322F               	rrcf	___awdiv@divisor,f,c
  3278  0024C8  2E31               	decfsz	___awdiv@counter,f,c
  3279  0024CA  D7EC               	goto	l1882
  3280  0024CC  D000               	goto	l1894
  3281  0024CE                     l1894:
  3282  0024CE  5032               	movf	___awdiv@sign,w,c
  3283  0024D0  B4D8               	btfsc	status,2,c
  3284  0024D2  D005               	goto	l1898
  3285  0024D4  6C33               	negf	___awdiv@quotient,c
  3286  0024D6  1E34               	comf	___awdiv@quotient+1,f,c
  3287  0024D8  B0D8               	btfsc	status,0,c
  3288  0024DA  2A34               	incf	___awdiv@quotient+1,f,c
  3289  0024DC  D000               	goto	l1898
  3290  0024DE                     l1898:
  3291  0024DE  C033  F02D         	movff	___awdiv@quotient,?___awdiv
  3292  0024E2  C034  F02E         	movff	___awdiv@quotient+1,?___awdiv+1
  3293  0024E6  D000               	goto	l407
  3294  0024E8                     l407:
  3295  0024E8  0012               	return		;funcret
  3296  0024EA                     __end_of___awdiv:
  3297                           	opt stack 0
  3298                           tblptru	equ	0xFF8
  3299                           tblptrh	equ	0xFF7
  3300                           tblptrl	equ	0xFF6
  3301                           tablat	equ	0xFF5
  3302                           prodh	equ	0xFF4
  3303                           prodl	equ	0xFF3
  3304                           postinc0	equ	0xFEE
  3305                           wreg	equ	0xFE8
  3306                           postdec1	equ	0xFE5
  3307                           fsr1l	equ	0xFE1
  3308                           postinc2	equ	0xFDE
  3309                           postdec2	equ	0xFDD
  3310                           fsr2h	equ	0xFDA
  3311                           fsr2l	equ	0xFD9
  3312                           status	equ	0xFD8
  3313                           
  3314 ;; *************** function __tdiv_to_l_ *****************
  3315 ;; Defined at:
  3316 ;;		line 60 in file "E:\XC8\sources\common\ftdivl.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  f1              3    0[COMRAM] float 
  3319 ;;  f2              3    3[COMRAM] float 
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  quot            4    9[COMRAM] unsigned long 
  3322 ;;  exp1            1   14[COMRAM] unsigned char 
  3323 ;;  cntr            1   13[COMRAM] unsigned char 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  4    0[COMRAM] unsigned long 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3333 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;Total ram usage:       15 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_printf
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           	psect	text10
  3347  001E94                     __ptext10:
  3348                           	opt stack 0
  3349  001E94                     __tdiv_to_l_:
  3350                           	opt stack 29
  3351                           
  3352                           ;incstack = 0
  3353  001E94  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3354  001E98  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3355  001E9A  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3356  001E9C  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3357  001E9E  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3358  001EA0  E301               	bnc	u2031
  3359  001EA2  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3360  001EA4                     u2031:
  3361  001EA4  5007               	movf	??__tdiv_to_l_,w,c
  3362  001EA6  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3363  001EA8  500F               	movf	__tdiv_to_l_@exp1,w,c
  3364  001EAA  A4D8               	btfss	status,2,c
  3365  001EAC  D002               	goto	l2054
  3366  001EAE  D05D               	goto	l2096
  3367  001EB0  D078               	goto	l619
  3368  001EB2                     l2054:
  3369  001EB2  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3370  001EB6  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3371  001EB8  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3372  001EBA  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3373  001EBC  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3374  001EBE  E301               	bnc	u2051
  3375  001EC0  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3376  001EC2                     u2051:
  3377  001EC2  5007               	movf	??__tdiv_to_l_,w,c
  3378  001EC4  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3379  001EC6  500E               	movf	__tdiv_to_l_@cntr,w,c
  3380  001EC8  A4D8               	btfss	status,2,c
  3381  001ECA  D002               	goto	l2060
  3382  001ECC  D04E               	goto	l2096
  3383  001ECE  D069               	goto	l619
  3384  001ED0                     l2060:
  3385  001ED0  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3386  001ED2  0EFF               	movlw	255
  3387  001ED4  1601               	andwf	__tdiv_to_l_@f1,f,c
  3388  001ED6  0EFF               	movlw	255
  3389  001ED8  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3390  001EDA  0E00               	movlw	0
  3391  001EDC  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3392  001EDE  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3393  001EE0  0EFF               	movlw	255
  3394  001EE2  1604               	andwf	__tdiv_to_l_@f2,f,c
  3395  001EE4  0EFF               	movlw	255
  3396  001EE6  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3397  001EE8  0E00               	movlw	0
  3398  001EEA  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3399  001EEC  0E00               	movlw	0
  3400  001EEE  6E0A               	movwf	__tdiv_to_l_@quot,c
  3401  001EF0  0E00               	movlw	0
  3402  001EF2  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3403  001EF4  0E00               	movlw	0
  3404  001EF6  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3405  001EF8  0E00               	movlw	0
  3406  001EFA  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3407  001EFC  0E7F               	movlw	127
  3408  001EFE  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3409  001F00  500E               	movf	__tdiv_to_l_@cntr,w,c
  3410  001F02  0F98               	addlw	152
  3411  001F04  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3412  001F06  0E18               	movlw	24
  3413  001F08  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3414  001F0A                     l621:
  3415  001F0A  90D8               	bcf	status,0,c
  3416  001F0C  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3417  001F0E  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3418  001F10  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3419  001F12  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3420  001F14  5004               	movf	__tdiv_to_l_@f2,w,c
  3421  001F16  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3422  001F18  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3423  001F1A  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3424  001F1C  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3425  001F1E  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3426  001F20  A0D8               	btfss	status,0,c
  3427  001F22  D007               	goto	l622
  3428  001F24  5004               	movf	__tdiv_to_l_@f2,w,c
  3429  001F26  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3430  001F28  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3431  001F2A  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3432  001F2C  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3433  001F2E  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3434  001F30  800A               	bsf	__tdiv_to_l_@quot,0,c
  3435  001F32                     l622:
  3436  001F32  90D8               	bcf	status,0,c
  3437  001F34  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3438  001F36  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3439  001F38  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3440  001F3A  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3441  001F3C  D7E6               	goto	l621
  3442  001F3E  D000               	goto	l2082
  3443  001F40                     l2082:
  3444  001F40  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3445  001F42  D010               	goto	l2094
  3446  001F44  500F               	movf	__tdiv_to_l_@exp1,w,c
  3447  001F46  0A80               	xorlw	128
  3448  001F48  0F97               	addlw	151
  3449  001F4A  B0D8               	btfsc	status,0,c
  3450  001F4C  D003               	goto	l2090
  3451  001F4E  D00D               	goto	l2096
  3452  001F50  D028               	goto	l619
  3453  001F52  D000               	goto	l2090
  3454  001F54                     l2090:
  3455  001F54  90D8               	bcf	status,0,c
  3456  001F56  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3457  001F58  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3458  001F5A  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3459  001F5C  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3460  001F5E  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3461  001F60  D7F9               	goto	l2090
  3462  001F62  D017               	goto	l628
  3463  001F64                     l2094:
  3464  001F64  0E17               	movlw	23
  3465  001F66  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3466  001F68  D011               	goto	l2102
  3467  001F6A                     l2096:
  3468  001F6A  0E00               	movlw	0
  3469  001F6C  6E01               	movwf	?__tdiv_to_l_,c
  3470  001F6E  0E00               	movlw	0
  3471  001F70  6E02               	movwf	?__tdiv_to_l_+1,c
  3472  001F72  0E00               	movlw	0
  3473  001F74  6E03               	movwf	?__tdiv_to_l_+2,c
  3474  001F76  0E00               	movlw	0
  3475  001F78  6E04               	movwf	?__tdiv_to_l_+3,c
  3476  001F7A  D013               	goto	l619
  3477  001F7C  D007               	goto	l2102
  3478  001F7E                     l2100:
  3479  001F7E  90D8               	bcf	status,0,c
  3480  001F80  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3481  001F82  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3482  001F84  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3483  001F86  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3484  001F88  060F               	decf	__tdiv_to_l_@exp1,f,c
  3485  001F8A  D000               	goto	l2102
  3486  001F8C                     l2102:
  3487  001F8C  500F               	movf	__tdiv_to_l_@exp1,w,c
  3488  001F8E  A4D8               	btfss	status,2,c
  3489  001F90  D7F6               	goto	l2100
  3490  001F92                     l628:
  3491  001F92  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3492  001F96  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3493  001F9A  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3494  001F9E  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3495  001FA2                     l619:
  3496  001FA2  0012               	return		;funcret
  3497  001FA4                     __end_of__tdiv_to_l_:
  3498                           	opt stack 0
  3499                           tblptru	equ	0xFF8
  3500                           tblptrh	equ	0xFF7
  3501                           tblptrl	equ	0xFF6
  3502                           tablat	equ	0xFF5
  3503                           prodh	equ	0xFF4
  3504                           prodl	equ	0xFF3
  3505                           postinc0	equ	0xFEE
  3506                           wreg	equ	0xFE8
  3507                           postdec1	equ	0xFE5
  3508                           fsr1l	equ	0xFE1
  3509                           postinc2	equ	0xFDE
  3510                           postdec2	equ	0xFDD
  3511                           fsr2h	equ	0xFDA
  3512                           fsr2l	equ	0xFD9
  3513                           status	equ	0xFD8
  3514                           
  3515 ;; *************** function __div_to_l_ *****************
  3516 ;; Defined at:
  3517 ;;		line 60 in file "E:\XC8\sources\common\fldivl.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;  f1              3    0[COMRAM] unsigned long 
  3520 ;;  f2              3    3[COMRAM] unsigned long 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  quot            4    6[COMRAM] unsigned long 
  3523 ;;  exp1            1   11[COMRAM] unsigned char 
  3524 ;;  cntr            1   10[COMRAM] unsigned char 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  4    0[COMRAM] unsigned long 
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3534 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;Total ram usage:       12 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; This function calls:
  3541 ;;		Nothing
  3542 ;; This function is called by:
  3543 ;;		_printf
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text11
  3548  001FA4                     __ptext11:
  3549                           	opt stack 0
  3550  001FA4                     __div_to_l_:
  3551                           	opt stack 29
  3552                           
  3553                           ;incstack = 0
  3554  001FA4  3403               	rlcf	__div_to_l_@f1+2,w,c
  3555  001FA6  3404               	rlcf	__div_to_l_@f1+3,w,c
  3556  001FA8  6E0C               	movwf	__div_to_l_@exp1,c
  3557  001FAA  500C               	movf	__div_to_l_@exp1,w,c
  3558  001FAC  A4D8               	btfss	status,2,c
  3559  001FAE  D002               	goto	l2110
  3560  001FB0  D061               	goto	l2156
  3561  001FB2  D07C               	goto	l498
  3562  001FB4                     l2110:
  3563  001FB4  3406               	rlcf	__div_to_l_@f2+2,w,c
  3564  001FB6  3407               	rlcf	__div_to_l_@f2+3,w,c
  3565  001FB8  6E0B               	movwf	__div_to_l_@cntr,c
  3566  001FBA  500B               	movf	__div_to_l_@cntr,w,c
  3567  001FBC  A4D8               	btfss	status,2,c
  3568  001FBE  D002               	goto	l2116
  3569  001FC0  D059               	goto	l2156
  3570  001FC2  D074               	goto	l498
  3571  001FC4                     l2116:
  3572  001FC4  8E03               	bsf	__div_to_l_@f1+2,7,c
  3573  001FC6  0EFF               	movlw	255
  3574  001FC8  1601               	andwf	__div_to_l_@f1,f,c
  3575  001FCA  0EFF               	movlw	255
  3576  001FCC  1602               	andwf	__div_to_l_@f1+1,f,c
  3577  001FCE  0EFF               	movlw	255
  3578  001FD0  1603               	andwf	__div_to_l_@f1+2,f,c
  3579  001FD2  0E00               	movlw	0
  3580  001FD4  1604               	andwf	__div_to_l_@f1+3,f,c
  3581  001FD6  8E06               	bsf	__div_to_l_@f2+2,7,c
  3582  001FD8  0EFF               	movlw	255
  3583  001FDA  1604               	andwf	__div_to_l_@f2,f,c
  3584  001FDC  0EFF               	movlw	255
  3585  001FDE  1605               	andwf	__div_to_l_@f2+1,f,c
  3586  001FE0  0EFF               	movlw	255
  3587  001FE2  1606               	andwf	__div_to_l_@f2+2,f,c
  3588  001FE4  0E00               	movlw	0
  3589  001FE6  1607               	andwf	__div_to_l_@f2+3,f,c
  3590  001FE8  0E00               	movlw	0
  3591  001FEA  6E07               	movwf	__div_to_l_@quot,c
  3592  001FEC  0E00               	movlw	0
  3593  001FEE  6E08               	movwf	__div_to_l_@quot+1,c
  3594  001FF0  0E00               	movlw	0
  3595  001FF2  6E09               	movwf	__div_to_l_@quot+2,c
  3596  001FF4  0E00               	movlw	0
  3597  001FF6  6E0A               	movwf	__div_to_l_@quot+3,c
  3598  001FF8  0E7F               	movlw	127
  3599  001FFA  5E0C               	subwf	__div_to_l_@exp1,f,c
  3600  001FFC  500B               	movf	__div_to_l_@cntr,w,c
  3601  001FFE  0FA0               	addlw	160
  3602  002000  5E0C               	subwf	__div_to_l_@exp1,f,c
  3603  002002  0E20               	movlw	32
  3604  002004  6E0B               	movwf	__div_to_l_@cntr,c
  3605  002006  D000               	goto	l2130
  3606  002008                     l2130:
  3607  002008  90D8               	bcf	status,0,c
  3608  00200A  3607               	rlcf	__div_to_l_@quot,f,c
  3609  00200C  3608               	rlcf	__div_to_l_@quot+1,f,c
  3610  00200E  3609               	rlcf	__div_to_l_@quot+2,f,c
  3611  002010  360A               	rlcf	__div_to_l_@quot+3,f,c
  3612  002012  5004               	movf	__div_to_l_@f2,w,c
  3613  002014  5C01               	subwf	__div_to_l_@f1,w,c
  3614  002016  5005               	movf	__div_to_l_@f2+1,w,c
  3615  002018  5802               	subwfb	__div_to_l_@f1+1,w,c
  3616  00201A  5006               	movf	__div_to_l_@f2+2,w,c
  3617  00201C  5803               	subwfb	__div_to_l_@f1+2,w,c
  3618  00201E  5007               	movf	__div_to_l_@f2+3,w,c
  3619  002020  5804               	subwfb	__div_to_l_@f1+3,w,c
  3620  002022  A0D8               	btfss	status,0,c
  3621  002024  D00A               	goto	l2138
  3622  002026  5004               	movf	__div_to_l_@f2,w,c
  3623  002028  5E01               	subwf	__div_to_l_@f1,f,c
  3624  00202A  5005               	movf	__div_to_l_@f2+1,w,c
  3625  00202C  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3626  00202E  5006               	movf	__div_to_l_@f2+2,w,c
  3627  002030  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3628  002032  5007               	movf	__div_to_l_@f2+3,w,c
  3629  002034  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3630  002036  8007               	bsf	__div_to_l_@quot,0,c
  3631  002038  D000               	goto	l2138
  3632  00203A                     l2138:
  3633  00203A  90D8               	bcf	status,0,c
  3634  00203C  3601               	rlcf	__div_to_l_@f1,f,c
  3635  00203E  3602               	rlcf	__div_to_l_@f1+1,f,c
  3636  002040  3603               	rlcf	__div_to_l_@f1+2,f,c
  3637  002042  3604               	rlcf	__div_to_l_@f1+3,f,c
  3638  002044  2E0B               	decfsz	__div_to_l_@cntr,f,c
  3639  002046  D7E0               	goto	l2130
  3640  002048  D000               	goto	l2142
  3641  00204A                     l2142:
  3642  00204A  AE0C               	btfss	__div_to_l_@exp1,7,c
  3643  00204C  D010               	goto	l2154
  3644  00204E  500C               	movf	__div_to_l_@exp1,w,c
  3645  002050  0A80               	xorlw	128
  3646  002052  0F9F               	addlw	159
  3647  002054  B0D8               	btfsc	status,0,c
  3648  002056  D003               	goto	l2150
  3649  002058  D00D               	goto	l2156
  3650  00205A  D028               	goto	l498
  3651  00205C  D000               	goto	l2150
  3652  00205E                     l2150:
  3653  00205E  90D8               	bcf	status,0,c
  3654  002060  320A               	rrcf	__div_to_l_@quot+3,f,c
  3655  002062  3209               	rrcf	__div_to_l_@quot+2,f,c
  3656  002064  3208               	rrcf	__div_to_l_@quot+1,f,c
  3657  002066  3207               	rrcf	__div_to_l_@quot,f,c
  3658  002068  3E0C               	incfsz	__div_to_l_@exp1,f,c
  3659  00206A  D7F9               	goto	l2150
  3660  00206C  D017               	goto	l507
  3661  00206E                     l2154:
  3662  00206E  0E1F               	movlw	31
  3663  002070  640C               	cpfsgt	__div_to_l_@exp1,c
  3664  002072  D011               	goto	l2162
  3665  002074                     l2156:
  3666  002074  0E00               	movlw	0
  3667  002076  6E01               	movwf	?__div_to_l_,c
  3668  002078  0E00               	movlw	0
  3669  00207A  6E02               	movwf	?__div_to_l_+1,c
  3670  00207C  0E00               	movlw	0
  3671  00207E  6E03               	movwf	?__div_to_l_+2,c
  3672  002080  0E00               	movlw	0
  3673  002082  6E04               	movwf	?__div_to_l_+3,c
  3674  002084  D013               	goto	l498
  3675  002086  D007               	goto	l2162
  3676  002088                     l2160:
  3677  002088  90D8               	bcf	status,0,c
  3678  00208A  3607               	rlcf	__div_to_l_@quot,f,c
  3679  00208C  3608               	rlcf	__div_to_l_@quot+1,f,c
  3680  00208E  3609               	rlcf	__div_to_l_@quot+2,f,c
  3681  002090  360A               	rlcf	__div_to_l_@quot+3,f,c
  3682  002092  060C               	decf	__div_to_l_@exp1,f,c
  3683  002094  D000               	goto	l2162
  3684  002096                     l2162:
  3685  002096  500C               	movf	__div_to_l_@exp1,w,c
  3686  002098  A4D8               	btfss	status,2,c
  3687  00209A  D7F6               	goto	l2160
  3688  00209C                     l507:
  3689  00209C  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3690  0020A0  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3691  0020A4  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3692  0020A8  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3693  0020AC                     l498:
  3694  0020AC  0012               	return		;funcret
  3695  0020AE                     __end_of__div_to_l_:
  3696                           	opt stack 0
  3697                           tblptru	equ	0xFF8
  3698                           tblptrh	equ	0xFF7
  3699                           tblptrl	equ	0xFF6
  3700                           tablat	equ	0xFF5
  3701                           prodh	equ	0xFF4
  3702                           prodl	equ	0xFF3
  3703                           postinc0	equ	0xFEE
  3704                           wreg	equ	0xFE8
  3705                           postdec1	equ	0xFE5
  3706                           fsr1l	equ	0xFE1
  3707                           postinc2	equ	0xFDE
  3708                           postdec2	equ	0xFDD
  3709                           fsr2h	equ	0xFDA
  3710                           fsr2l	equ	0xFD9
  3711                           status	equ	0xFD8
  3712                           
  3713 ;; *************** function ___lltoft *****************
  3714 ;; Defined at:
  3715 ;;		line 35 in file "E:\XC8\sources\common\lltoft.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;  c               4    8[COMRAM] unsigned long 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  exp             1   16[COMRAM] unsigned char 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  3    8[COMRAM] float 
  3722 ;; Registers used:
  3723 ;;		wreg, status,2, status,0, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3729 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;Total ram usage:        9 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    1
  3736 ;; This function calls:
  3737 ;;		___ftpack
  3738 ;; This function is called by:
  3739 ;;		_printf
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text12
  3744  0027F6                     __ptext12:
  3745                           	opt stack 0
  3746  0027F6                     ___lltoft:
  3747                           	opt stack 28
  3748                           
  3749                           ;incstack = 0
  3750  0027F6  0E8E               	movlw	142
  3751  0027F8  6E11               	movwf	___lltoft@exp,c
  3752  0027FA  D007               	goto	l2282
  3753  0027FC                     l2280:
  3754  0027FC  90D8               	bcf	status,0,c
  3755  0027FE  320C               	rrcf	___lltoft@c+3,f,c
  3756  002800  320B               	rrcf	___lltoft@c+2,f,c
  3757  002802  320A               	rrcf	___lltoft@c+1,f,c
  3758  002804  3209               	rrcf	___lltoft@c,f,c
  3759  002806  2A11               	incf	___lltoft@exp,f,c
  3760  002808  D000               	goto	l2282
  3761  00280A                     l2282:
  3762  00280A  0E00               	movlw	0
  3763  00280C  1409               	andwf	___lltoft@c,w,c
  3764  00280E  6E0D               	movwf	??___lltoft& (0+255),c
  3765  002810  0E00               	movlw	0
  3766  002812  140A               	andwf	___lltoft@c+1,w,c
  3767  002814  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  3768  002816  0E00               	movlw	0
  3769  002818  140B               	andwf	___lltoft@c+2,w,c
  3770  00281A  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  3771  00281C  0EFF               	movlw	255
  3772  00281E  140C               	andwf	___lltoft@c+3,w,c
  3773  002820  6E10               	movwf	(??___lltoft+3)& (0+255),c
  3774  002822  500D               	movf	??___lltoft,w,c
  3775  002824  100E               	iorwf	??___lltoft+1,w,c
  3776  002826  100F               	iorwf	??___lltoft+2,w,c
  3777  002828  1010               	iorwf	??___lltoft+3,w,c
  3778  00282A  A4D8               	btfss	status,2,c
  3779  00282C  D7E7               	goto	l2280
  3780  00282E  C009  F001         	movff	___lltoft@c,___ftpack@arg
  3781  002832  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  3782  002836  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  3783  00283A  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  3784  00283E  0E00               	movlw	0
  3785  002840  6E05               	movwf	___ftpack@sign,c
  3786  002842  ECC7  F011         	call	___ftpack	;wreg free
  3787  002846  C001  F009         	movff	?___ftpack,?___lltoft
  3788  00284A  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  3789  00284E  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  3790  002852  D000               	goto	l733
  3791  002854                     l733:
  3792  002854  0012               	return		;funcret
  3793  002856                     __end_of___lltoft:
  3794                           	opt stack 0
  3795                           tblptru	equ	0xFF8
  3796                           tblptrh	equ	0xFF7
  3797                           tblptrl	equ	0xFF6
  3798                           tablat	equ	0xFF5
  3799                           prodh	equ	0xFF4
  3800                           prodl	equ	0xFF3
  3801                           postinc0	equ	0xFEE
  3802                           wreg	equ	0xFE8
  3803                           postdec1	equ	0xFE5
  3804                           fsr1l	equ	0xFE1
  3805                           postinc2	equ	0xFDE
  3806                           postdec2	equ	0xFDD
  3807                           fsr2h	equ	0xFDA
  3808                           fsr2l	equ	0xFD9
  3809                           status	equ	0xFD8
  3810                           
  3811 ;; *************** function ___llmod *****************
  3812 ;; Defined at:
  3813 ;;		line 8 in file "E:\XC8\sources\common\llmod.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  dividend        4    0[COMRAM] unsigned long 
  3816 ;;  divisor         4    4[COMRAM] unsigned long 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  counter         1    8[COMRAM] unsigned char 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  4    0[COMRAM] unsigned long 
  3821 ;; Registers used:
  3822 ;;		wreg, status,2, status,0
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3828 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3831 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3832 ;;Total ram usage:        9 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_printf
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text13
  3842  002716                     __ptext13:
  3843                           	opt stack 0
  3844  002716                     ___llmod:
  3845                           	opt stack 29
  3846                           
  3847                           ;incstack = 0
  3848  002716  5005               	movf	___llmod@divisor,w,c
  3849  002718  1006               	iorwf	___llmod@divisor+1,w,c
  3850  00271A  1007               	iorwf	___llmod@divisor+2,w,c
  3851  00271C  1008               	iorwf	___llmod@divisor+3,w,c
  3852  00271E  B4D8               	btfsc	status,2,c
  3853  002720  D029               	goto	l713
  3854  002722  0E01               	movlw	1
  3855  002724  6E09               	movwf	___llmod@counter,c
  3856  002726  D007               	goto	l2268
  3857  002728                     l2266:
  3858  002728  90D8               	bcf	status,0,c
  3859  00272A  3605               	rlcf	___llmod@divisor,f,c
  3860  00272C  3606               	rlcf	___llmod@divisor+1,f,c
  3861  00272E  3607               	rlcf	___llmod@divisor+2,f,c
  3862  002730  3608               	rlcf	___llmod@divisor+3,f,c
  3863  002732  2A09               	incf	___llmod@counter,f,c
  3864  002734  D000               	goto	l2268
  3865  002736                     l2268:
  3866  002736  BE08               	btfsc	___llmod@divisor+3,7,c
  3867  002738  D002               	goto	l2270
  3868  00273A  D7F6               	goto	l2266
  3869  00273C  D000               	goto	l2270
  3870  00273E                     l2270:
  3871  00273E  5005               	movf	___llmod@divisor,w,c
  3872  002740  5C01               	subwf	___llmod@dividend,w,c
  3873  002742  5006               	movf	___llmod@divisor+1,w,c
  3874  002744  5802               	subwfb	___llmod@dividend+1,w,c
  3875  002746  5007               	movf	___llmod@divisor+2,w,c
  3876  002748  5803               	subwfb	___llmod@dividend+2,w,c
  3877  00274A  5008               	movf	___llmod@divisor+3,w,c
  3878  00274C  5804               	subwfb	___llmod@dividend+3,w,c
  3879  00274E  A0D8               	btfss	status,0,c
  3880  002750  D009               	goto	l2274
  3881  002752  5005               	movf	___llmod@divisor,w,c
  3882  002754  5E01               	subwf	___llmod@dividend,f,c
  3883  002756  5006               	movf	___llmod@divisor+1,w,c
  3884  002758  5A02               	subwfb	___llmod@dividend+1,f,c
  3885  00275A  5007               	movf	___llmod@divisor+2,w,c
  3886  00275C  5A03               	subwfb	___llmod@dividend+2,f,c
  3887  00275E  5008               	movf	___llmod@divisor+3,w,c
  3888  002760  5A04               	subwfb	___llmod@dividend+3,f,c
  3889  002762  D000               	goto	l2274
  3890  002764                     l2274:
  3891  002764  90D8               	bcf	status,0,c
  3892  002766  3208               	rrcf	___llmod@divisor+3,f,c
  3893  002768  3207               	rrcf	___llmod@divisor+2,f,c
  3894  00276A  3206               	rrcf	___llmod@divisor+1,f,c
  3895  00276C  3205               	rrcf	___llmod@divisor,f,c
  3896  00276E  2E09               	decfsz	___llmod@counter,f,c
  3897  002770  D7E6               	goto	l2270
  3898  002772  D000               	goto	l713
  3899  002774                     l713:
  3900  002774  C001  F001         	movff	___llmod@dividend,?___llmod
  3901  002778  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3902  00277C  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3903  002780  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3904  002784  0012               	return		;funcret
  3905  002786                     __end_of___llmod:
  3906                           	opt stack 0
  3907                           tblptru	equ	0xFF8
  3908                           tblptrh	equ	0xFF7
  3909                           tblptrl	equ	0xFF6
  3910                           tablat	equ	0xFF5
  3911                           prodh	equ	0xFF4
  3912                           prodl	equ	0xFF3
  3913                           postinc0	equ	0xFEE
  3914                           wreg	equ	0xFE8
  3915                           postdec1	equ	0xFE5
  3916                           fsr1l	equ	0xFE1
  3917                           postinc2	equ	0xFDE
  3918                           postdec2	equ	0xFDD
  3919                           fsr2h	equ	0xFDA
  3920                           fsr2l	equ	0xFD9
  3921                           status	equ	0xFD8
  3922                           
  3923 ;; *************** function ___lldiv *****************
  3924 ;; Defined at:
  3925 ;;		line 8 in file "E:\XC8\sources\common\lldiv.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  dividend        4    0[COMRAM] unsigned long 
  3928 ;;  divisor         4    4[COMRAM] unsigned long 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  quotient        4    8[COMRAM] unsigned long 
  3931 ;;  counter         1   12[COMRAM] unsigned char 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  4    0[COMRAM] unsigned long 
  3934 ;; Registers used:
  3935 ;;		wreg, status,2, status,0
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3941 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;Total ram usage:       13 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_printf
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text14
  3955  002580                     __ptext14:
  3956                           	opt stack 0
  3957  002580                     ___lldiv:
  3958                           	opt stack 29
  3959                           
  3960                           ;incstack = 0
  3961  002580  0E00               	movlw	0
  3962  002582  6E09               	movwf	___lldiv@quotient,c
  3963  002584  0E00               	movlw	0
  3964  002586  6E0A               	movwf	___lldiv@quotient+1,c
  3965  002588  0E00               	movlw	0
  3966  00258A  6E0B               	movwf	___lldiv@quotient+2,c
  3967  00258C  0E00               	movlw	0
  3968  00258E  6E0C               	movwf	___lldiv@quotient+3,c
  3969  002590  5005               	movf	___lldiv@divisor,w,c
  3970  002592  1006               	iorwf	___lldiv@divisor+1,w,c
  3971  002594  1007               	iorwf	___lldiv@divisor+2,w,c
  3972  002596  1008               	iorwf	___lldiv@divisor+3,w,c
  3973  002598  B4D8               	btfsc	status,2,c
  3974  00259A  D02F               	goto	l703
  3975  00259C  0E01               	movlw	1
  3976  00259E  6E0D               	movwf	___lldiv@counter,c
  3977  0025A0  D007               	goto	l2248
  3978  0025A2                     l2246:
  3979  0025A2  90D8               	bcf	status,0,c
  3980  0025A4  3605               	rlcf	___lldiv@divisor,f,c
  3981  0025A6  3606               	rlcf	___lldiv@divisor+1,f,c
  3982  0025A8  3607               	rlcf	___lldiv@divisor+2,f,c
  3983  0025AA  3608               	rlcf	___lldiv@divisor+3,f,c
  3984  0025AC  2A0D               	incf	___lldiv@counter,f,c
  3985  0025AE  D000               	goto	l2248
  3986  0025B0                     l2248:
  3987  0025B0  BE08               	btfsc	___lldiv@divisor+3,7,c
  3988  0025B2  D002               	goto	l2250
  3989  0025B4  D7F6               	goto	l2246
  3990  0025B6  D000               	goto	l2250
  3991  0025B8                     l2250:
  3992  0025B8  90D8               	bcf	status,0,c
  3993  0025BA  3609               	rlcf	___lldiv@quotient,f,c
  3994  0025BC  360A               	rlcf	___lldiv@quotient+1,f,c
  3995  0025BE  360B               	rlcf	___lldiv@quotient+2,f,c
  3996  0025C0  360C               	rlcf	___lldiv@quotient+3,f,c
  3997  0025C2  5005               	movf	___lldiv@divisor,w,c
  3998  0025C4  5C01               	subwf	___lldiv@dividend,w,c
  3999  0025C6  5006               	movf	___lldiv@divisor+1,w,c
  4000  0025C8  5802               	subwfb	___lldiv@dividend+1,w,c
  4001  0025CA  5007               	movf	___lldiv@divisor+2,w,c
  4002  0025CC  5803               	subwfb	___lldiv@dividend+2,w,c
  4003  0025CE  5008               	movf	___lldiv@divisor+3,w,c
  4004  0025D0  5804               	subwfb	___lldiv@dividend+3,w,c
  4005  0025D2  A0D8               	btfss	status,0,c
  4006  0025D4  D00A               	goto	l2258
  4007  0025D6  5005               	movf	___lldiv@divisor,w,c
  4008  0025D8  5E01               	subwf	___lldiv@dividend,f,c
  4009  0025DA  5006               	movf	___lldiv@divisor+1,w,c
  4010  0025DC  5A02               	subwfb	___lldiv@dividend+1,f,c
  4011  0025DE  5007               	movf	___lldiv@divisor+2,w,c
  4012  0025E0  5A03               	subwfb	___lldiv@dividend+2,f,c
  4013  0025E2  5008               	movf	___lldiv@divisor+3,w,c
  4014  0025E4  5A04               	subwfb	___lldiv@dividend+3,f,c
  4015  0025E6  8009               	bsf	___lldiv@quotient,0,c
  4016  0025E8  D000               	goto	l2258
  4017  0025EA                     l2258:
  4018  0025EA  90D8               	bcf	status,0,c
  4019  0025EC  3208               	rrcf	___lldiv@divisor+3,f,c
  4020  0025EE  3207               	rrcf	___lldiv@divisor+2,f,c
  4021  0025F0  3206               	rrcf	___lldiv@divisor+1,f,c
  4022  0025F2  3205               	rrcf	___lldiv@divisor,f,c
  4023  0025F4  2E0D               	decfsz	___lldiv@counter,f,c
  4024  0025F6  D7E0               	goto	l2250
  4025  0025F8  D000               	goto	l703
  4026  0025FA                     l703:
  4027  0025FA  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4028  0025FE  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4029  002602  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4030  002606  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4031  00260A  0012               	return		;funcret
  4032  00260C                     __end_of___lldiv:
  4033                           	opt stack 0
  4034                           tblptru	equ	0xFF8
  4035                           tblptrh	equ	0xFF7
  4036                           tblptrl	equ	0xFF6
  4037                           tablat	equ	0xFF5
  4038                           prodh	equ	0xFF4
  4039                           prodl	equ	0xFF3
  4040                           postinc0	equ	0xFEE
  4041                           wreg	equ	0xFE8
  4042                           postdec1	equ	0xFE5
  4043                           fsr1l	equ	0xFE1
  4044                           postinc2	equ	0xFDE
  4045                           postdec2	equ	0xFDD
  4046                           fsr2h	equ	0xFDA
  4047                           fsr2l	equ	0xFD9
  4048                           status	equ	0xFD8
  4049                           
  4050 ;; *************** function ___fttol *****************
  4051 ;; Defined at:
  4052 ;;		line 44 in file "E:\XC8\sources\common\fttol.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  f1              3   23[COMRAM] float 
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;  lval            4   33[COMRAM] unsigned long 
  4057 ;;  exp1            1   37[COMRAM] unsigned char 
  4058 ;;  sign1           1   32[COMRAM] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  4   23[COMRAM] long 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;Total ram usage:       15 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_main
  4078 ;;		_printf
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text15
  4083  0022A8                     __ptext15:
  4084                           	opt stack 0
  4085  0022A8                     ___fttol:
  4086                           	opt stack 29
  4087                           
  4088                           ;incstack = 0
  4089  0022A8  C01A  F01C         	movff	___fttol@f1+2,??___fttol
  4090  0022AC  6A1D               	clrf	(??___fttol+1)& (0+255),c
  4091  0022AE  6A1E               	clrf	(??___fttol+2)& (0+255),c
  4092  0022B0  3419               	rlcf	___fttol@f1+1,w,c
  4093  0022B2  361C               	rlcf	??___fttol& (0+255),f,c
  4094  0022B4  E301               	bnc	u2241
  4095  0022B6  801D               	bsf	(??___fttol+1)& (0+255),0,c
  4096  0022B8                     u2241:
  4097  0022B8  501C               	movf	??___fttol,w,c
  4098  0022BA  6E26               	movwf	___fttol@exp1,c
  4099  0022BC  5026               	movf	___fttol@exp1,w,c
  4100  0022BE  A4D8               	btfss	status,2,c
  4101  0022C0  D002               	goto	l2200
  4102  0022C2  D039               	goto	l2224
  4103  0022C4  D063               	goto	l664
  4104  0022C6                     l2200:
  4105  0022C6  0E17               	movlw	23
  4106  0022C8  6E1C               	movwf	??___fttol& (0+255),c
  4107  0022CA  C018  F01D         	movff	___fttol@f1,??___fttol+1
  4108  0022CE  C019  F01E         	movff	___fttol@f1+1,??___fttol+2
  4109  0022D2  C01A  F01F         	movff	___fttol@f1+2,??___fttol+3
  4110  0022D6  281C               	incf	??___fttol,w,c
  4111  0022D8  6E20               	movwf	(??___fttol+4)& (0+255),c
  4112  0022DA  D004               	goto	u2260
  4113  0022DC                     u2265:
  4114  0022DC  90D8               	bcf	status,0,c
  4115  0022DE  321F               	rrcf	??___fttol+3,f,c
  4116  0022E0  321E               	rrcf	??___fttol+2,f,c
  4117  0022E2  321D               	rrcf	??___fttol+1,f,c
  4118  0022E4                     u2260:
  4119  0022E4  2E20               	decfsz	(??___fttol+4)& (0+255),f,c
  4120  0022E6  D7FA               	goto	u2265
  4121  0022E8  501D               	movf	??___fttol+1,w,c
  4122  0022EA  6E21               	movwf	___fttol@sign1,c
  4123  0022EC  8E19               	bsf	___fttol@f1+1,7,c
  4124  0022EE  0EFF               	movlw	255
  4125  0022F0  1618               	andwf	___fttol@f1,f,c
  4126  0022F2  0EFF               	movlw	255
  4127  0022F4  1619               	andwf	___fttol@f1+1,f,c
  4128  0022F6  0E00               	movlw	0
  4129  0022F8  161A               	andwf	___fttol@f1+2,f,c
  4130  0022FA  5018               	movf	___fttol@f1,w,c
  4131  0022FC  6E22               	movwf	___fttol@lval,c
  4132  0022FE  5019               	movf	___fttol@f1+1,w,c
  4133  002300  6E23               	movwf	___fttol@lval+1,c
  4134  002302  501A               	movf	___fttol@f1+2,w,c
  4135  002304  6E24               	movwf	___fttol@lval+2,c
  4136  002306  6A25               	clrf	___fttol@lval+3,c
  4137  002308  0E8E               	movlw	142
  4138  00230A  5E26               	subwf	___fttol@exp1,f,c
  4139  00230C  AE26               	btfss	___fttol@exp1,7,c
  4140  00230E  D010               	goto	l2222
  4141  002310  5026               	movf	___fttol@exp1,w,c
  4142  002312  0A80               	xorlw	128
  4143  002314  0F8F               	addlw	143
  4144  002316  B0D8               	btfsc	status,0,c
  4145  002318  D003               	goto	l2218
  4146  00231A  D00D               	goto	l2224
  4147  00231C  D037               	goto	l664
  4148  00231E  D000               	goto	l2218
  4149  002320                     l2218:
  4150  002320  90D8               	bcf	status,0,c
  4151  002322  3225               	rrcf	___fttol@lval+3,f,c
  4152  002324  3224               	rrcf	___fttol@lval+2,f,c
  4153  002326  3223               	rrcf	___fttol@lval+1,f,c
  4154  002328  3222               	rrcf	___fttol@lval,f,c
  4155  00232A  3E26               	incfsz	___fttol@exp1,f,c
  4156  00232C  D7F9               	goto	l2218
  4157  00232E  D019               	goto	l2232
  4158  002330                     l2222:
  4159  002330  0E17               	movlw	23
  4160  002332  6426               	cpfsgt	___fttol@exp1,c
  4161  002334  D011               	goto	l2230
  4162  002336                     l2224:
  4163  002336  0E00               	movlw	0
  4164  002338  6E18               	movwf	?___fttol,c
  4165  00233A  0E00               	movlw	0
  4166  00233C  6E19               	movwf	?___fttol+1,c
  4167  00233E  0E00               	movlw	0
  4168  002340  6E1A               	movwf	?___fttol+2,c
  4169  002342  0E00               	movlw	0
  4170  002344  6E1B               	movwf	?___fttol+3,c
  4171  002346  D022               	goto	l664
  4172  002348  D007               	goto	l2230
  4173  00234A                     l2228:
  4174  00234A  90D8               	bcf	status,0,c
  4175  00234C  3622               	rlcf	___fttol@lval,f,c
  4176  00234E  3623               	rlcf	___fttol@lval+1,f,c
  4177  002350  3624               	rlcf	___fttol@lval+2,f,c
  4178  002352  3625               	rlcf	___fttol@lval+3,f,c
  4179  002354  0626               	decf	___fttol@exp1,f,c
  4180  002356  D000               	goto	l2230
  4181  002358                     l2230:
  4182  002358  5026               	movf	___fttol@exp1,w,c
  4183  00235A  B4D8               	btfsc	status,2,c
  4184  00235C  D002               	goto	l2232
  4185  00235E  D7F5               	goto	l2228
  4186  002360  D000               	goto	l2232
  4187  002362                     l2232:
  4188  002362  5021               	movf	___fttol@sign1,w,c
  4189  002364  B4D8               	btfsc	status,2,c
  4190  002366  D009               	goto	l2236
  4191  002368  1E25               	comf	___fttol@lval+3,f,c
  4192  00236A  1E24               	comf	___fttol@lval+2,f,c
  4193  00236C  1E23               	comf	___fttol@lval+1,f,c
  4194  00236E  6C22               	negf	___fttol@lval,c
  4195  002370  0E00               	movlw	0
  4196  002372  2223               	addwfc	___fttol@lval+1,f,c
  4197  002374  2224               	addwfc	___fttol@lval+2,f,c
  4198  002376  2225               	addwfc	___fttol@lval+3,f,c
  4199  002378  D000               	goto	l2236
  4200  00237A                     l2236:
  4201  00237A  C022  F018         	movff	___fttol@lval,?___fttol
  4202  00237E  C023  F019         	movff	___fttol@lval+1,?___fttol+1
  4203  002382  C024  F01A         	movff	___fttol@lval+2,?___fttol+2
  4204  002386  C025  F01B         	movff	___fttol@lval+3,?___fttol+3
  4205  00238A  D000               	goto	l664
  4206  00238C                     l664:
  4207  00238C  0012               	return		;funcret
  4208  00238E                     __end_of___fttol:
  4209                           	opt stack 0
  4210                           tblptru	equ	0xFF8
  4211                           tblptrh	equ	0xFF7
  4212                           tblptrl	equ	0xFF6
  4213                           tablat	equ	0xFF5
  4214                           prodh	equ	0xFF4
  4215                           prodl	equ	0xFF3
  4216                           postinc0	equ	0xFEE
  4217                           wreg	equ	0xFE8
  4218                           postdec1	equ	0xFE5
  4219                           fsr1l	equ	0xFE1
  4220                           postinc2	equ	0xFDE
  4221                           postdec2	equ	0xFDD
  4222                           fsr2h	equ	0xFDA
  4223                           fsr2l	equ	0xFD9
  4224                           status	equ	0xFD8
  4225                           
  4226 ;; *************** function ___ftsub *****************
  4227 ;; Defined at:
  4228 ;;		line 20 in file "E:\XC8\sources\common\ftsub.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;  f1              3   80[COMRAM] float 
  4231 ;;  f2              3   83[COMRAM] float 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;		None
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  3   80[COMRAM] float 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4243 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;Total ram usage:        6 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:    2
  4250 ;; This function calls:
  4251 ;;		___ftadd
  4252 ;; This function is called by:
  4253 ;;		_printf
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text16
  4258  002856                     __ptext16:
  4259                           	opt stack 0
  4260  002856                     ___ftsub:
  4261                           	opt stack 27
  4262                           
  4263                           ;incstack = 0
  4264  002856  5054               	movf	___ftsub@f2,w,c
  4265  002858  1055               	iorwf	___ftsub@f2+1,w,c
  4266  00285A  1056               	iorwf	___ftsub@f2+2,w,c
  4267  00285C  B4D8               	btfsc	status,2,c
  4268  00285E  D007               	goto	l2168
  4269  002860  0E00               	movlw	0
  4270  002862  1A54               	xorwf	___ftsub@f2,f,c
  4271  002864  0E00               	movlw	0
  4272  002866  1A55               	xorwf	___ftsub@f2+1,f,c
  4273  002868  0E80               	movlw	128
  4274  00286A  1A56               	xorwf	___ftsub@f2+2,f,c
  4275  00286C  D000               	goto	l2168
  4276  00286E                     l2168:
  4277  00286E  C051  F045         	movff	___ftsub@f1,___ftadd@f1
  4278  002872  C052  F046         	movff	___ftsub@f1+1,___ftadd@f1+1
  4279  002876  C053  F047         	movff	___ftsub@f1+2,___ftadd@f1+2
  4280  00287A  C054  F048         	movff	___ftsub@f2,___ftadd@f2
  4281  00287E  C055  F049         	movff	___ftsub@f2+1,___ftadd@f2+1
  4282  002882  C056  F04A         	movff	___ftsub@f2+2,___ftadd@f2+2
  4283  002886  EC68  F00E         	call	___ftadd	;wreg free
  4284  00288A  C045  F051         	movff	?___ftadd,?___ftsub
  4285  00288E  C046  F052         	movff	?___ftadd+1,?___ftsub+1
  4286  002892  C047  F053         	movff	?___ftadd+2,?___ftsub+2
  4287  002896  D000               	goto	l660
  4288  002898                     l660:
  4289  002898  0012               	return		;funcret
  4290  00289A                     __end_of___ftsub:
  4291                           	opt stack 0
  4292                           tblptru	equ	0xFF8
  4293                           tblptrh	equ	0xFF7
  4294                           tblptrl	equ	0xFF6
  4295                           tablat	equ	0xFF5
  4296                           prodh	equ	0xFF4
  4297                           prodl	equ	0xFF3
  4298                           postinc0	equ	0xFEE
  4299                           wreg	equ	0xFE8
  4300                           postdec1	equ	0xFE5
  4301                           fsr1l	equ	0xFE1
  4302                           postinc2	equ	0xFDE
  4303                           postdec2	equ	0xFDD
  4304                           fsr2h	equ	0xFDA
  4305                           fsr2l	equ	0xFD9
  4306                           status	equ	0xFD8
  4307                           
  4308 ;; *************** function ___ftadd *****************
  4309 ;; Defined at:
  4310 ;;		line 86 in file "E:\XC8\sources\common\ftadd.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  f1              3   68[COMRAM] float 
  4313 ;;  f2              3   71[COMRAM] float 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  exp1            1   79[COMRAM] unsigned char 
  4316 ;;  exp2            1   78[COMRAM] unsigned char 
  4317 ;;  sign            1   77[COMRAM] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  3   68[COMRAM] float 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, status,0, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4327 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;Total ram usage:       12 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    1
  4334 ;; This function calls:
  4335 ;;		___ftpack
  4336 ;; This function is called by:
  4337 ;;		_printf
  4338 ;;		___ftsub
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text17
  4343  001CD0                     __ptext17:
  4344                           	opt stack 0
  4345  001CD0                     ___ftadd:
  4346                           	opt stack 27
  4347                           
  4348                           ;incstack = 0
  4349  001CD0  C047  F04B         	movff	___ftadd@f1+2,??___ftadd
  4350  001CD4  6A4C               	clrf	(??___ftadd+1)& (0+255),c
  4351  001CD6  6A4D               	clrf	(??___ftadd+2)& (0+255),c
  4352  001CD8  3446               	rlcf	___ftadd@f1+1,w,c
  4353  001CDA  364B               	rlcf	??___ftadd& (0+255),f,c
  4354  001CDC  E301               	bnc	u1471
  4355  001CDE  804C               	bsf	(??___ftadd+1)& (0+255),0,c
  4356  001CE0                     u1471:
  4357  001CE0  504B               	movf	??___ftadd,w,c
  4358  001CE2  6E50               	movwf	___ftadd@exp1,c
  4359  001CE4  C04A  F04B         	movff	___ftadd@f2+2,??___ftadd
  4360  001CE8  6A4C               	clrf	(??___ftadd+1)& (0+255),c
  4361  001CEA  6A4D               	clrf	(??___ftadd+2)& (0+255),c
  4362  001CEC  3449               	rlcf	___ftadd@f2+1,w,c
  4363  001CEE  364B               	rlcf	??___ftadd& (0+255),f,c
  4364  001CF0  E301               	bnc	u1481
  4365  001CF2  804C               	bsf	(??___ftadd+1)& (0+255),0,c
  4366  001CF4                     u1481:
  4367  001CF4  504B               	movf	??___ftadd,w,c
  4368  001CF6  6E4F               	movwf	___ftadd@exp2,c
  4369  001CF8  5050               	movf	___ftadd@exp1,w,c
  4370  001CFA  B4D8               	btfsc	status,2,c
  4371  001CFC  D00B               	goto	l579
  4372  001CFE  504F               	movf	___ftadd@exp2,w,c
  4373  001D00  5C50               	subwf	___ftadd@exp1,w,c
  4374  001D02  B0D8               	btfsc	status,0,c
  4375  001D04  D00E               	goto	l1748
  4376  001D06  5050               	movf	___ftadd@exp1,w,c
  4377  001D08  0800               	sublw	0
  4378  001D0A  244F               	addwf	___ftadd@exp2,w,c
  4379  001D0C  6E4B               	movwf	??___ftadd& (0+255),c
  4380  001D0E  0E18               	movlw	24
  4381  001D10  644B               	cpfsgt	??___ftadd,c
  4382  001D12  D007               	goto	l1748
  4383  001D14                     l579:
  4384  001D14  C048  F045         	movff	___ftadd@f2,?___ftadd
  4385  001D18  C049  F046         	movff	___ftadd@f2+1,?___ftadd+1
  4386  001D1C  C04A  F047         	movff	___ftadd@f2+2,?___ftadd+2
  4387  001D20  D0B8               	goto	l580
  4388  001D22                     l1748:
  4389  001D22  504F               	movf	___ftadd@exp2,w,c
  4390  001D24  B4D8               	btfsc	status,2,c
  4391  001D26  D00B               	goto	l583
  4392  001D28  5050               	movf	___ftadd@exp1,w,c
  4393  001D2A  5C4F               	subwf	___ftadd@exp2,w,c
  4394  001D2C  B0D8               	btfsc	status,0,c
  4395  001D2E  D00E               	goto	l1754
  4396  001D30  504F               	movf	___ftadd@exp2,w,c
  4397  001D32  0800               	sublw	0
  4398  001D34  2450               	addwf	___ftadd@exp1,w,c
  4399  001D36  6E4B               	movwf	??___ftadd& (0+255),c
  4400  001D38  0E18               	movlw	24
  4401  001D3A  644B               	cpfsgt	??___ftadd,c
  4402  001D3C  D007               	goto	l1754
  4403  001D3E                     l583:
  4404  001D3E  C045  F045         	movff	___ftadd@f1,?___ftadd
  4405  001D42  C046  F046         	movff	___ftadd@f1+1,?___ftadd+1
  4406  001D46  C047  F047         	movff	___ftadd@f1+2,?___ftadd+2
  4407  001D4A  D0A3               	goto	l580
  4408  001D4C                     l1754:
  4409  001D4C  0E06               	movlw	6
  4410  001D4E  6E4E               	movwf	___ftadd@sign,c
  4411  001D50  AE47               	btfss	___ftadd@f1+2,7,c
  4412  001D52  D002               	goto	l1760
  4413  001D54  8E4E               	bsf	___ftadd@sign,7,c
  4414  001D56  D000               	goto	l1760
  4415  001D58                     l1760:
  4416  001D58  BE4A               	btfsc	___ftadd@f2+2,7,c
  4417  001D5A  8C4E               	bsf	___ftadd@sign,6,c
  4418  001D5C  8E46               	bsf	___ftadd@f1+1,7,c
  4419  001D5E  0EFF               	movlw	255
  4420  001D60  1645               	andwf	___ftadd@f1,f,c
  4421  001D62  0EFF               	movlw	255
  4422  001D64  1646               	andwf	___ftadd@f1+1,f,c
  4423  001D66  0E00               	movlw	0
  4424  001D68  1647               	andwf	___ftadd@f1+2,f,c
  4425  001D6A  8E49               	bsf	___ftadd@f2+1,7,c
  4426  001D6C  0EFF               	movlw	255
  4427  001D6E  1648               	andwf	___ftadd@f2,f,c
  4428  001D70  0EFF               	movlw	255
  4429  001D72  1649               	andwf	___ftadd@f2+1,f,c
  4430  001D74  0E00               	movlw	0
  4431  001D76  164A               	andwf	___ftadd@f2+2,f,c
  4432  001D78  504F               	movf	___ftadd@exp2,w,c
  4433  001D7A  5C50               	subwf	___ftadd@exp1,w,c
  4434  001D7C  B0D8               	btfsc	status,0,c
  4435  001D7E  D01E               	goto	l1780
  4436  001D80                     l1770:
  4437  001D80  90D8               	bcf	status,0,c
  4438  001D82  3648               	rlcf	___ftadd@f2,f,c
  4439  001D84  3649               	rlcf	___ftadd@f2+1,f,c
  4440  001D86  364A               	rlcf	___ftadd@f2+2,f,c
  4441  001D88  064F               	decf	___ftadd@exp2,f,c
  4442  001D8A  5050               	movf	___ftadd@exp1,w,c
  4443  001D8C  184F               	xorwf	___ftadd@exp2,w,c
  4444  001D8E  B4D8               	btfsc	status,2,c
  4445  001D90  D00F               	goto	l1778
  4446  001D92  064E               	decf	___ftadd@sign,f,c
  4447  001D94  C04E  F04B         	movff	___ftadd@sign,??___ftadd
  4448  001D98  0E07               	movlw	7
  4449  001D9A  164B               	andwf	??___ftadd,f,c
  4450  001D9C  B4D8               	btfsc	status,2,c
  4451  001D9E  D008               	goto	l1778
  4452  001DA0  D7EF               	goto	l1770
  4453  001DA2  D006               	goto	l1778
  4454  001DA4                     l1776:
  4455  001DA4  90D8               	bcf	status,0,c
  4456  001DA6  3247               	rrcf	___ftadd@f1+2,f,c
  4457  001DA8  3246               	rrcf	___ftadd@f1+1,f,c
  4458  001DAA  3245               	rrcf	___ftadd@f1,f,c
  4459  001DAC  2A50               	incf	___ftadd@exp1,f,c
  4460  001DAE  D000               	goto	l1778
  4461  001DB0                     l1778:
  4462  001DB0  504F               	movf	___ftadd@exp2,w,c
  4463  001DB2  1850               	xorwf	___ftadd@exp1,w,c
  4464  001DB4  B4D8               	btfsc	status,2,c
  4465  001DB6  D024               	goto	l594
  4466  001DB8  D7F5               	goto	l1776
  4467  001DBA  D022               	goto	l594
  4468  001DBC                     l1780:
  4469  001DBC  5050               	movf	___ftadd@exp1,w,c
  4470  001DBE  5C4F               	subwf	___ftadd@exp2,w,c
  4471  001DC0  B0D8               	btfsc	status,0,c
  4472  001DC2  D01E               	goto	l594
  4473  001DC4                     l1782:
  4474  001DC4  90D8               	bcf	status,0,c
  4475  001DC6  3645               	rlcf	___ftadd@f1,f,c
  4476  001DC8  3646               	rlcf	___ftadd@f1+1,f,c
  4477  001DCA  3647               	rlcf	___ftadd@f1+2,f,c
  4478  001DCC  0650               	decf	___ftadd@exp1,f,c
  4479  001DCE  5050               	movf	___ftadd@exp1,w,c
  4480  001DD0  184F               	xorwf	___ftadd@exp2,w,c
  4481  001DD2  B4D8               	btfsc	status,2,c
  4482  001DD4  D00F               	goto	l1790
  4483  001DD6  064E               	decf	___ftadd@sign,f,c
  4484  001DD8  C04E  F04B         	movff	___ftadd@sign,??___ftadd
  4485  001DDC  0E07               	movlw	7
  4486  001DDE  164B               	andwf	??___ftadd,f,c
  4487  001DE0  B4D8               	btfsc	status,2,c
  4488  001DE2  D008               	goto	l1790
  4489  001DE4  D7EF               	goto	l1782
  4490  001DE6  D006               	goto	l1790
  4491  001DE8                     l1788:
  4492  001DE8  90D8               	bcf	status,0,c
  4493  001DEA  324A               	rrcf	___ftadd@f2+2,f,c
  4494  001DEC  3249               	rrcf	___ftadd@f2+1,f,c
  4495  001DEE  3248               	rrcf	___ftadd@f2,f,c
  4496  001DF0  2A4F               	incf	___ftadd@exp2,f,c
  4497  001DF2  D000               	goto	l1790
  4498  001DF4                     l1790:
  4499  001DF4  504F               	movf	___ftadd@exp2,w,c
  4500  001DF6  1850               	xorwf	___ftadd@exp1,w,c
  4501  001DF8  B4D8               	btfsc	status,2,c
  4502  001DFA  D002               	goto	l594
  4503  001DFC  D7F5               	goto	l1788
  4504  001DFE  D000               	goto	l594
  4505  001E00                     l594:
  4506  001E00  AE4E               	btfss	___ftadd@sign,7,c
  4507  001E02  D00C               	goto	l603
  4508  001E04  0EFF               	movlw	255
  4509  001E06  1A45               	xorwf	___ftadd@f1,f,c
  4510  001E08  0EFF               	movlw	255
  4511  001E0A  1A46               	xorwf	___ftadd@f1+1,f,c
  4512  001E0C  0EFF               	movlw	255
  4513  001E0E  1A47               	xorwf	___ftadd@f1+2,f,c
  4514  001E10  0E01               	movlw	1
  4515  001E12  2645               	addwf	___ftadd@f1,f,c
  4516  001E14  0E00               	movlw	0
  4517  001E16  2246               	addwfc	___ftadd@f1+1,f,c
  4518  001E18  0E00               	movlw	0
  4519  001E1A  2247               	addwfc	___ftadd@f1+2,f,c
  4520  001E1C                     l603:
  4521  001E1C  AC4E               	btfss	___ftadd@sign,6,c
  4522  001E1E  D00D               	goto	l1796
  4523  001E20  0EFF               	movlw	255
  4524  001E22  1A48               	xorwf	___ftadd@f2,f,c
  4525  001E24  0EFF               	movlw	255
  4526  001E26  1A49               	xorwf	___ftadd@f2+1,f,c
  4527  001E28  0EFF               	movlw	255
  4528  001E2A  1A4A               	xorwf	___ftadd@f2+2,f,c
  4529  001E2C  0E01               	movlw	1
  4530  001E2E  2648               	addwf	___ftadd@f2,f,c
  4531  001E30  0E00               	movlw	0
  4532  001E32  2249               	addwfc	___ftadd@f2+1,f,c
  4533  001E34  0E00               	movlw	0
  4534  001E36  224A               	addwfc	___ftadd@f2+2,f,c
  4535  001E38  D000               	goto	l1796
  4536  001E3A                     l1796:
  4537  001E3A  0E00               	movlw	0
  4538  001E3C  6E4E               	movwf	___ftadd@sign,c
  4539  001E3E  5045               	movf	___ftadd@f1,w,c
  4540  001E40  2648               	addwf	___ftadd@f2,f,c
  4541  001E42  5046               	movf	___ftadd@f1+1,w,c
  4542  001E44  2249               	addwfc	___ftadd@f2+1,f,c
  4543  001E46  5047               	movf	___ftadd@f1+2,w,c
  4544  001E48  224A               	addwfc	___ftadd@f2+2,f,c
  4545  001E4A  AE4A               	btfss	___ftadd@f2+2,7,c
  4546  001E4C  D00F               	goto	l1806
  4547  001E4E  0EFF               	movlw	255
  4548  001E50  1A48               	xorwf	___ftadd@f2,f,c
  4549  001E52  0EFF               	movlw	255
  4550  001E54  1A49               	xorwf	___ftadd@f2+1,f,c
  4551  001E56  0EFF               	movlw	255
  4552  001E58  1A4A               	xorwf	___ftadd@f2+2,f,c
  4553  001E5A  0E01               	movlw	1
  4554  001E5C  2648               	addwf	___ftadd@f2,f,c
  4555  001E5E  0E00               	movlw	0
  4556  001E60  2249               	addwfc	___ftadd@f2+1,f,c
  4557  001E62  0E00               	movlw	0
  4558  001E64  224A               	addwfc	___ftadd@f2+2,f,c
  4559  001E66  0E01               	movlw	1
  4560  001E68  6E4E               	movwf	___ftadd@sign,c
  4561  001E6A  D000               	goto	l1806
  4562  001E6C                     l1806:
  4563  001E6C  C048  F001         	movff	___ftadd@f2,___ftpack@arg
  4564  001E70  C049  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4565  001E74  C04A  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4566  001E78  C050  F004         	movff	___ftadd@exp1,___ftpack@exp
  4567  001E7C  C04E  F005         	movff	___ftadd@sign,___ftpack@sign
  4568  001E80  ECC7  F011         	call	___ftpack	;wreg free
  4569  001E84  C001  F045         	movff	?___ftpack,?___ftadd
  4570  001E88  C002  F046         	movff	?___ftpack+1,?___ftadd+1
  4571  001E8C  C003  F047         	movff	?___ftpack+2,?___ftadd+2
  4572  001E90  D000               	goto	l580
  4573  001E92                     l580:
  4574  001E92  0012               	return		;funcret
  4575  001E94                     __end_of___ftadd:
  4576                           	opt stack 0
  4577                           tblptru	equ	0xFF8
  4578                           tblptrh	equ	0xFF7
  4579                           tblptrl	equ	0xFF6
  4580                           tablat	equ	0xFF5
  4581                           prodh	equ	0xFF4
  4582                           prodl	equ	0xFF3
  4583                           postinc0	equ	0xFEE
  4584                           wreg	equ	0xFE8
  4585                           postdec1	equ	0xFE5
  4586                           fsr1l	equ	0xFE1
  4587                           postinc2	equ	0xFDE
  4588                           postdec2	equ	0xFDD
  4589                           fsr2h	equ	0xFDA
  4590                           fsr2l	equ	0xFD9
  4591                           status	equ	0xFD8
  4592                           
  4593 ;; *************** function ___ftneg *****************
  4594 ;; Defined at:
  4595 ;;		line 15 in file "E:\XC8\sources\common\ftneg.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  f1              3    0[COMRAM] float 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;		None
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  3    0[COMRAM] float 
  4602 ;; Registers used:
  4603 ;;		wreg, status,2, status,0
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4609 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;Total ram usage:        3 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_printf
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text18
  4623  002958                     __ptext18:
  4624                           	opt stack 0
  4625  002958                     ___ftneg:
  4626                           	opt stack 29
  4627                           
  4628                           ;incstack = 0
  4629  002958  5001               	movf	___ftneg@f1,w,c
  4630  00295A  1002               	iorwf	___ftneg@f1+1,w,c
  4631  00295C  1003               	iorwf	___ftneg@f1+2,w,c
  4632  00295E  B4D8               	btfsc	status,2,c
  4633  002960  D006               	goto	l653
  4634  002962  0E00               	movlw	0
  4635  002964  1A01               	xorwf	___ftneg@f1,f,c
  4636  002966  0E00               	movlw	0
  4637  002968  1A02               	xorwf	___ftneg@f1+1,f,c
  4638  00296A  0E80               	movlw	128
  4639  00296C  1A03               	xorwf	___ftneg@f1+2,f,c
  4640  00296E                     l653:
  4641  00296E  C001  F001         	movff	___ftneg@f1,?___ftneg
  4642  002972  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4643  002976  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4644  00297A  0012               	return		;funcret
  4645  00297C                     __end_of___ftneg:
  4646                           	opt stack 0
  4647                           tblptru	equ	0xFF8
  4648                           tblptrh	equ	0xFF7
  4649                           tblptrl	equ	0xFF6
  4650                           tablat	equ	0xFF5
  4651                           prodh	equ	0xFF4
  4652                           prodl	equ	0xFF3
  4653                           postinc0	equ	0xFEE
  4654                           wreg	equ	0xFE8
  4655                           postdec1	equ	0xFE5
  4656                           fsr1l	equ	0xFE1
  4657                           postinc2	equ	0xFDE
  4658                           postdec2	equ	0xFDD
  4659                           fsr2h	equ	0xFDA
  4660                           fsr2l	equ	0xFD9
  4661                           status	equ	0xFD8
  4662                           
  4663 ;; *************** function ___ftge *****************
  4664 ;; Defined at:
  4665 ;;		line 4 in file "E:\XC8\sources\common\ftge.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  ff1             3    0[COMRAM] float 
  4668 ;;  ff2             3    3[COMRAM] float 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;		None
  4671 ;; Return value:  Size  Location     Type
  4672 ;;		None               void
  4673 ;; Registers used:
  4674 ;;		wreg, status,2, status,0
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4680 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;Total ram usage:        9 bytes
  4685 ;; Hardware stack levels used:    1
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_printf
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text19
  4694  0024EA                     __ptext19:
  4695                           	opt stack 0
  4696  0024EA                     ___ftge:
  4697                           	opt stack 29
  4698                           
  4699                           ;incstack = 0
  4700  0024EA  AE03               	btfss	___ftge@ff1+2,7,c
  4701  0024EC  D017               	goto	l2176
  4702  0024EE  C001  F007         	movff	___ftge@ff1,??___ftge
  4703  0024F2  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4704  0024F6  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4705  0024FA  1E07               	comf	??___ftge,f,c
  4706  0024FC  1E08               	comf	??___ftge+1,f,c
  4707  0024FE  1E09               	comf	??___ftge+2,f,c
  4708  002500  2A07               	incf	??___ftge,f,c
  4709  002502  0E00               	movlw	0
  4710  002504  2208               	addwfc	??___ftge+1,f,c
  4711  002506  2209               	addwfc	??___ftge+2,f,c
  4712  002508  0E00               	movlw	0
  4713  00250A  2407               	addwf	??___ftge,w,c
  4714  00250C  6E01               	movwf	___ftge@ff1,c
  4715  00250E  0E00               	movlw	0
  4716  002510  2008               	addwfc	??___ftge+1,w,c
  4717  002512  6E02               	movwf	___ftge@ff1+1,c
  4718  002514  0E80               	movlw	128
  4719  002516  2009               	addwfc	??___ftge+2,w,c
  4720  002518  6E03               	movwf	___ftge@ff1+2,c
  4721  00251A  D000               	goto	l2176
  4722  00251C                     l2176:
  4723  00251C  AE06               	btfss	___ftge@ff2+2,7,c
  4724  00251E  D017               	goto	l2180
  4725  002520  C004  F007         	movff	___ftge@ff2,??___ftge
  4726  002524  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4727  002528  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4728  00252C  1E07               	comf	??___ftge,f,c
  4729  00252E  1E08               	comf	??___ftge+1,f,c
  4730  002530  1E09               	comf	??___ftge+2,f,c
  4731  002532  2A07               	incf	??___ftge,f,c
  4732  002534  0E00               	movlw	0
  4733  002536  2208               	addwfc	??___ftge+1,f,c
  4734  002538  2209               	addwfc	??___ftge+2,f,c
  4735  00253A  0E00               	movlw	0
  4736  00253C  2407               	addwf	??___ftge,w,c
  4737  00253E  6E04               	movwf	___ftge@ff2,c
  4738  002540  0E00               	movlw	0
  4739  002542  2008               	addwfc	??___ftge+1,w,c
  4740  002544  6E05               	movwf	___ftge@ff2+1,c
  4741  002546  0E80               	movlw	128
  4742  002548  2009               	addwfc	??___ftge+2,w,c
  4743  00254A  6E06               	movwf	___ftge@ff2+2,c
  4744  00254C  D000               	goto	l2180
  4745  00254E                     l2180:
  4746  00254E  0E00               	movlw	0
  4747  002550  1A01               	xorwf	___ftge@ff1,f,c
  4748  002552  0E00               	movlw	0
  4749  002554  1A02               	xorwf	___ftge@ff1+1,f,c
  4750  002556  0E80               	movlw	128
  4751  002558  1A03               	xorwf	___ftge@ff1+2,f,c
  4752  00255A  0E00               	movlw	0
  4753  00255C  1A04               	xorwf	___ftge@ff2,f,c
  4754  00255E  0E00               	movlw	0
  4755  002560  1A05               	xorwf	___ftge@ff2+1,f,c
  4756  002562  0E80               	movlw	128
  4757  002564  1A06               	xorwf	___ftge@ff2+2,f,c
  4758  002566  5004               	movf	___ftge@ff2,w,c
  4759  002568  5C01               	subwf	___ftge@ff1,w,c
  4760  00256A  5005               	movf	___ftge@ff2+1,w,c
  4761  00256C  5802               	subwfb	___ftge@ff1+1,w,c
  4762  00256E  5006               	movf	___ftge@ff2+2,w,c
  4763  002570  5803               	subwfb	___ftge@ff1+2,w,c
  4764  002572  B0D8               	btfsc	status,0,c
  4765  002574  D002               	goto	l2186
  4766  002576  90D8               	bcf	status,0,c
  4767  002578  D002               	goto	l637
  4768  00257A                     l2186:
  4769  00257A  80D8               	bsf	status,0,c
  4770  00257C  D000               	goto	l637
  4771  00257E                     l637:
  4772  00257E  0012               	return		;funcret
  4773  002580                     __end_of___ftge:
  4774                           	opt stack 0
  4775                           tblptru	equ	0xFF8
  4776                           tblptrh	equ	0xFF7
  4777                           tblptrl	equ	0xFF6
  4778                           tablat	equ	0xFF5
  4779                           prodh	equ	0xFF4
  4780                           prodl	equ	0xFF3
  4781                           postinc0	equ	0xFEE
  4782                           wreg	equ	0xFE8
  4783                           postdec1	equ	0xFE5
  4784                           fsr1l	equ	0xFE1
  4785                           postinc2	equ	0xFDE
  4786                           postdec2	equ	0xFDD
  4787                           fsr2h	equ	0xFDA
  4788                           fsr2l	equ	0xFD9
  4789                           status	equ	0xFD8
  4790                           
  4791 ;; *************** function _init_UART *****************
  4792 ;; Defined at:
  4793 ;;		line 66 in file "Lab5p1_Tomik.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;		None               void
  4800 ;; Registers used:
  4801 ;;		wreg, status,2, cstack
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4811 ;;Total ram usage:        0 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:    1
  4814 ;; This function calls:
  4815 ;;		_OpenUSART
  4816 ;; This function is called by:
  4817 ;;		_main
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text20
  4822  0029C8                     __ptext20:
  4823                           	opt stack 0
  4824  0029C8                     _init_UART:
  4825                           	opt stack 29
  4826                           
  4827                           ;Lab5p1_Tomik.c: 68: OpenUSART (0b01111111 & 0b10111111 &
  4828                           ;Lab5p1_Tomik.c: 69: 0b11111110 & 0b11111101 & 0b11111111 &
  4829                           ;Lab5p1_Tomik.c: 70: 0b11111111, 25);
  4830                           
  4831                           ;incstack = 0
  4832  0029C8  0E00               	movlw	0
  4833  0029CA  6E02               	movwf	OpenUSART@spbrg+1,c
  4834  0029CC  0E19               	movlw	25
  4835  0029CE  6E01               	movwf	OpenUSART@spbrg,c
  4836  0029D0  0E3C               	movlw	60
  4837  0029D2  ECC3  F013         	call	_OpenUSART
  4838                           
  4839                           ;Lab5p1_Tomik.c: 71: OSCCON = 0x60;
  4840  0029D6  0E60               	movlw	96
  4841  0029D8  6ED3               	movwf	4051,c	;volatile
  4842  0029DA  0012               	return		;funcret
  4843  0029DC                     __end_of_init_UART:
  4844                           	opt stack 0
  4845                           tblptru	equ	0xFF8
  4846                           tblptrh	equ	0xFF7
  4847                           tblptrl	equ	0xFF6
  4848                           tablat	equ	0xFF5
  4849                           prodh	equ	0xFF4
  4850                           prodl	equ	0xFF3
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           postdec1	equ	0xFE5
  4854                           fsr1l	equ	0xFE1
  4855                           postinc2	equ	0xFDE
  4856                           postdec2	equ	0xFDD
  4857                           fsr2h	equ	0xFDA
  4858                           fsr2l	equ	0xFD9
  4859                           status	equ	0xFD8
  4860                           
  4861 ;; *************** function _OpenUSART *****************
  4862 ;; Defined at:
  4863 ;;		line 73 in file "E:\XC8\sources\pic18\plib\USART\uopen.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  config          1    wreg     unsigned char 
  4866 ;;  spbrg           2    0[COMRAM] unsigned int 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  config          1    2[COMRAM] unsigned char 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;		None               void
  4871 ;; Registers used:
  4872 ;;		wreg, status,2
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;Total ram usage:        3 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; This function calls:
  4885 ;;		Nothing
  4886 ;; This function is called by:
  4887 ;;		_init_UART
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text21
  4892  002786                     __ptext21:
  4893                           	opt stack 0
  4894  002786                     _OpenUSART:
  4895                           	opt stack 29
  4896                           
  4897                           ;incstack = 0
  4898                           ;OpenUSART@config stored from wreg
  4899  002786  6E03               	movwf	OpenUSART@config,c
  4900  002788  0E00               	movlw	0
  4901  00278A  6EAC               	movwf	4012,c	;volatile
  4902  00278C  0E00               	movlw	0
  4903  00278E  6EAB               	movwf	4011,c	;volatile
  4904  002790  A003               	btfss	OpenUSART@config,0,c
  4905  002792  D002               	goto	l1944
  4906  002794  88AC               	bsf	4012,4,c	;volatile
  4907  002796  D000               	goto	l1944
  4908  002798                     l1944:
  4909  002798  A203               	btfss	OpenUSART@config,1,c
  4910  00279A  D003               	goto	l1948
  4911  00279C  8CAC               	bsf	4012,6,c	;volatile
  4912  00279E  8CAB               	bsf	4011,6,c	;volatile
  4913  0027A0  D000               	goto	l1948
  4914  0027A2                     l1948:
  4915  0027A2  A403               	btfss	OpenUSART@config,2,c
  4916  0027A4  D002               	goto	l1952
  4917  0027A6  8EAC               	bsf	4012,7,c	;volatile
  4918  0027A8  D000               	goto	l1952
  4919  0027AA                     l1952:
  4920  0027AA  A603               	btfss	OpenUSART@config,3,c
  4921  0027AC  D002               	goto	l202
  4922  0027AE  88AB               	bsf	4011,4,c	;volatile
  4923  0027B0  D002               	goto	l1956
  4924  0027B2                     l202:
  4925  0027B2  8AAB               	bsf	4011,5,c	;volatile
  4926  0027B4  D000               	goto	l1956
  4927  0027B6                     l1956:
  4928  0027B6  B803               	btfsc	OpenUSART@config,4,c
  4929  0027B8  84AC               	bsf	4012,2,c	;volatile
  4930  0027BA  989E               	bcf	3998,4,c	;volatile
  4931  0027BC  AA03               	btfss	OpenUSART@config,5,c
  4932  0027BE  D002               	goto	l1964
  4933  0027C0  86AB               	bsf	4011,3,c	;volatile
  4934  0027C2  D000               	goto	l1964
  4935  0027C4                     l1964:
  4936  0027C4  AC03               	btfss	OpenUSART@config,6,c
  4937  0027C6  D002               	goto	l206
  4938  0027C8  8A9D               	bsf	3997,5,c	;volatile
  4939  0027CA  D001               	goto	l207
  4940  0027CC                     l206:
  4941  0027CC  9A9D               	bcf	3997,5,c	;volatile
  4942  0027CE                     l207:
  4943  0027CE  9A9E               	bcf	3998,5,c	;volatile
  4944  0027D0  AE03               	btfss	OpenUSART@config,7,c
  4945  0027D2  D002               	goto	l208
  4946  0027D4  889D               	bsf	3997,4,c	;volatile
  4947  0027D6  D001               	goto	l209
  4948  0027D8                     l208:
  4949  0027D8  989D               	bcf	3997,4,c	;volatile
  4950  0027DA                     l209:
  4951  0027DA  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4952  0027DE  5002               	movf	OpenUSART@spbrg+1,w,c
  4953  0027E0  6EB0               	movwf	4016,c	;volatile
  4954  0027E2  8AAC               	bsf	4012,5,c	;volatile
  4955  0027E4  8EAB               	bsf	4011,7,c	;volatile
  4956  0027E6  9C94               	bcf	3988,6,c	;volatile
  4957  0027E8  8E94               	bsf	3988,7,c	;volatile
  4958  0027EA  B8AC               	btfsc	4012,4,c	;volatile
  4959  0027EC  BEAC               	btfsc	4012,7,c	;volatile
  4960  0027EE  D002               	goto	l211
  4961  0027F0  8C94               	bsf	3988,6,c	;volatile
  4962  0027F2  D000               	goto	l211
  4963  0027F4                     l211:
  4964  0027F4  0012               	return		;funcret
  4965  0027F6                     __end_of_OpenUSART:
  4966                           	opt stack 0
  4967                           tblptru	equ	0xFF8
  4968                           tblptrh	equ	0xFF7
  4969                           tblptrl	equ	0xFF6
  4970                           tablat	equ	0xFF5
  4971                           prodh	equ	0xFF4
  4972                           prodl	equ	0xFF3
  4973                           postinc0	equ	0xFEE
  4974                           wreg	equ	0xFE8
  4975                           postdec1	equ	0xFE5
  4976                           fsr1l	equ	0xFE1
  4977                           postinc2	equ	0xFDE
  4978                           postdec2	equ	0xFDD
  4979                           fsr2h	equ	0xFDA
  4980                           fsr2l	equ	0xFD9
  4981                           status	equ	0xFD8
  4982                           
  4983 ;; *************** function ___awtoft *****************
  4984 ;; Defined at:
  4985 ;;		line 32 in file "E:\XC8\sources\common\awtoft.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;  c               2   52[COMRAM] int 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  sign            1   55[COMRAM] unsigned char 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  3   52[COMRAM] float 
  4992 ;; Registers used:
  4993 ;;		wreg, status,2, status,0, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4999 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5002 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;Total ram usage:        4 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:    1
  5006 ;; This function calls:
  5007 ;;		___ftpack
  5008 ;; This function is called by:
  5009 ;;		_main
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           	psect	text22
  5014  00289A                     __ptext22:
  5015                           	opt stack 0
  5016  00289A                     ___awtoft:
  5017                           	opt stack 29
  5018                           
  5019                           ;incstack = 0
  5020  00289A  0E00               	movlw	0
  5021  00289C  6E38               	movwf	___awtoft@sign,c
  5022  00289E  AE36               	btfss	___awtoft@c+1,7,c
  5023  0028A0  D007               	goto	l2502
  5024  0028A2  6C35               	negf	___awtoft@c,c
  5025  0028A4  1E36               	comf	___awtoft@c+1,f,c
  5026  0028A6  B0D8               	btfsc	status,0,c
  5027  0028A8  2A36               	incf	___awtoft@c+1,f,c
  5028  0028AA  0E01               	movlw	1
  5029  0028AC  6E38               	movwf	___awtoft@sign,c
  5030  0028AE  D000               	goto	l2502
  5031  0028B0                     l2502:
  5032  0028B0  C035  F001         	movff	___awtoft@c,___ftpack@arg
  5033  0028B4  C036  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5034  0028B8  6A03               	clrf	___ftpack@arg+2,c
  5035  0028BA  0E8E               	movlw	142
  5036  0028BC  6E04               	movwf	___ftpack@exp,c
  5037  0028BE  C038  F005         	movff	___awtoft@sign,___ftpack@sign
  5038  0028C2  ECC7  F011         	call	___ftpack	;wreg free
  5039  0028C6  C001  F035         	movff	?___ftpack,?___awtoft
  5040  0028CA  C002  F036         	movff	?___ftpack+1,?___awtoft+1
  5041  0028CE  C003  F037         	movff	?___ftpack+2,?___awtoft+2
  5042  0028D2  D000               	goto	l432
  5043  0028D4                     l432:
  5044  0028D4  0012               	return		;funcret
  5045  0028D6                     __end_of___awtoft:
  5046                           	opt stack 0
  5047                           tblptru	equ	0xFF8
  5048                           tblptrh	equ	0xFF7
  5049                           tblptrl	equ	0xFF6
  5050                           tablat	equ	0xFF5
  5051                           prodh	equ	0xFF4
  5052                           prodl	equ	0xFF3
  5053                           postinc0	equ	0xFEE
  5054                           wreg	equ	0xFE8
  5055                           postdec1	equ	0xFE5
  5056                           fsr1l	equ	0xFE1
  5057                           postinc2	equ	0xFDE
  5058                           postdec2	equ	0xFDD
  5059                           fsr2h	equ	0xFDA
  5060                           fsr2l	equ	0xFD9
  5061                           status	equ	0xFD8
  5062                           
  5063 ;; *************** function ___ftpack *****************
  5064 ;; Defined at:
  5065 ;;		line 62 in file "E:\XC8\sources\common\float.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  arg             3    0[COMRAM] unsigned um
  5068 ;;  exp             1    3[COMRAM] unsigned char 
  5069 ;;  sign            1    4[COMRAM] unsigned char 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  3    0[COMRAM] float 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5081 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;Total ram usage:        8 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		___awtoft
  5091 ;;		___ftadd
  5092 ;;		___ftmul
  5093 ;;		___lltoft
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           	psect	text23
  5098  00238E                     __ptext23:
  5099                           	opt stack 0
  5100  00238E                     ___ftpack:
  5101                           	opt stack 27
  5102                           
  5103                           ;incstack = 0
  5104  00238E  5004               	movf	___ftpack@exp,w,c
  5105  002390  B4D8               	btfsc	status,2,c
  5106  002392  D005               	goto	l1702
  5107  002394  5001               	movf	___ftpack@arg,w,c
  5108  002396  1002               	iorwf	___ftpack@arg+1,w,c
  5109  002398  1003               	iorwf	___ftpack@arg+2,w,c
  5110  00239A  A4D8               	btfss	status,2,c
  5111  00239C  D00E               	goto	l1708
  5112  00239E                     l1702:
  5113  00239E  0E00               	movlw	0
  5114  0023A0  6E01               	movwf	?___ftpack,c
  5115  0023A2  0E00               	movlw	0
  5116  0023A4  6E02               	movwf	?___ftpack+1,c
  5117  0023A6  0E00               	movlw	0
  5118  0023A8  6E03               	movwf	?___ftpack+2,c
  5119  0023AA  D053               	goto	l539
  5120  0023AC  D006               	goto	l1708
  5121  0023AE                     l1706:
  5122  0023AE  2A04               	incf	___ftpack@exp,f,c
  5123  0023B0  90D8               	bcf	status,0,c
  5124  0023B2  3203               	rrcf	___ftpack@arg+2,f,c
  5125  0023B4  3202               	rrcf	___ftpack@arg+1,f,c
  5126  0023B6  3201               	rrcf	___ftpack@arg,f,c
  5127  0023B8  D000               	goto	l1708
  5128  0023BA                     l1708:
  5129  0023BA  0E00               	movlw	0
  5130  0023BC  1401               	andwf	___ftpack@arg,w,c
  5131  0023BE  6E06               	movwf	??___ftpack& (0+255),c
  5132  0023C0  0E00               	movlw	0
  5133  0023C2  1402               	andwf	___ftpack@arg+1,w,c
  5134  0023C4  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5135  0023C6  0EFE               	movlw	254
  5136  0023C8  1403               	andwf	___ftpack@arg+2,w,c
  5137  0023CA  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5138  0023CC  5006               	movf	??___ftpack,w,c
  5139  0023CE  1007               	iorwf	??___ftpack+1,w,c
  5140  0023D0  1008               	iorwf	??___ftpack+2,w,c
  5141  0023D2  B4D8               	btfsc	status,2,c
  5142  0023D4  D00E               	goto	l1714
  5143  0023D6  D7EB               	goto	l1706
  5144  0023D8  D00C               	goto	l1714
  5145  0023DA                     l1710:
  5146  0023DA  2A04               	incf	___ftpack@exp,f,c
  5147  0023DC  0E01               	movlw	1
  5148  0023DE  2601               	addwf	___ftpack@arg,f,c
  5149  0023E0  0E00               	movlw	0
  5150  0023E2  2202               	addwfc	___ftpack@arg+1,f,c
  5151  0023E4  0E00               	movlw	0
  5152  0023E6  2203               	addwfc	___ftpack@arg+2,f,c
  5153  0023E8  90D8               	bcf	status,0,c
  5154  0023EA  3203               	rrcf	___ftpack@arg+2,f,c
  5155  0023EC  3202               	rrcf	___ftpack@arg+1,f,c
  5156  0023EE  3201               	rrcf	___ftpack@arg,f,c
  5157  0023F0  D000               	goto	l1714
  5158  0023F2                     l1714:
  5159  0023F2  0E00               	movlw	0
  5160  0023F4  1401               	andwf	___ftpack@arg,w,c
  5161  0023F6  6E06               	movwf	??___ftpack& (0+255),c
  5162  0023F8  0E00               	movlw	0
  5163  0023FA  1402               	andwf	___ftpack@arg+1,w,c
  5164  0023FC  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5165  0023FE  0EFF               	movlw	255
  5166  002400  1403               	andwf	___ftpack@arg+2,w,c
  5167  002402  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5168  002404  5006               	movf	??___ftpack,w,c
  5169  002406  1007               	iorwf	??___ftpack+1,w,c
  5170  002408  1008               	iorwf	??___ftpack+2,w,c
  5171  00240A  B4D8               	btfsc	status,2,c
  5172  00240C  D008               	goto	l1718
  5173  00240E  D7E5               	goto	l1710
  5174  002410  D006               	goto	l1718
  5175  002412                     l1716:
  5176  002412  0604               	decf	___ftpack@exp,f,c
  5177  002414  90D8               	bcf	status,0,c
  5178  002416  3601               	rlcf	___ftpack@arg,f,c
  5179  002418  3602               	rlcf	___ftpack@arg+1,f,c
  5180  00241A  3603               	rlcf	___ftpack@arg+2,f,c
  5181  00241C  D000               	goto	l1718
  5182  00241E                     l1718:
  5183  00241E  BE02               	btfsc	___ftpack@arg+1,7,c
  5184  002420  D004               	goto	l550
  5185  002422  0E02               	movlw	2
  5186  002424  6004               	cpfslt	___ftpack@exp,c
  5187  002426  D7F5               	goto	l1716
  5188  002428  D000               	goto	l550
  5189  00242A                     l550:
  5190  00242A  B004               	btfsc	___ftpack@exp,0,c
  5191  00242C  D002               	goto	l1724
  5192  00242E  9E02               	bcf	___ftpack@arg+1,7,c
  5193  002430  D000               	goto	l1724
  5194  002432                     l1724:
  5195  002432  90D8               	bcf	status,0,c
  5196  002434  3204               	rrcf	___ftpack@exp,f,c
  5197  002436  5004               	movf	___ftpack@exp,w,c
  5198  002438  1203               	iorwf	___ftpack@arg+2,f,c
  5199  00243A  5005               	movf	___ftpack@sign,w,c
  5200  00243C  B4D8               	btfsc	status,2,c
  5201  00243E  D002               	goto	l1730
  5202  002440  8E03               	bsf	___ftpack@arg+2,7,c
  5203  002442  D000               	goto	l1730
  5204  002444                     l1730:
  5205  002444  C001  F001         	movff	___ftpack@arg,?___ftpack
  5206  002448  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5207  00244C  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5208  002450  D000               	goto	l539
  5209  002452                     l539:
  5210  002452  0012               	return		;funcret
  5211  002454                     __end_of___ftpack:
  5212                           	opt stack 0
  5213                           tblptru	equ	0xFF8
  5214                           tblptrh	equ	0xFF7
  5215                           tblptrl	equ	0xFF6
  5216                           tablat	equ	0xFF5
  5217                           prodh	equ	0xFF4
  5218                           prodl	equ	0xFF3
  5219                           postinc0	equ	0xFEE
  5220                           wreg	equ	0xFE8
  5221                           postdec1	equ	0xFE5
  5222                           fsr1l	equ	0xFE1
  5223                           postinc2	equ	0xFDE
  5224                           postdec2	equ	0xFDD
  5225                           fsr2h	equ	0xFDA
  5226                           fsr2l	equ	0xFD9
  5227                           status	equ	0xFD8
  5228                           
  5229 ;; *************** function _Init_ADC *****************
  5230 ;; Defined at:
  5231 ;;		line 80 in file "Lab5p1_Tomik.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;		None
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;		None
  5236 ;; Return value:  Size  Location     Type
  5237 ;;		None               void
  5238 ;; Registers used:
  5239 ;;		wreg, status,2
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5249 ;;Total ram usage:        0 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; This function calls:
  5252 ;;		Nothing
  5253 ;; This function is called by:
  5254 ;;		_main
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           	psect	text24
  5259  0029DC                     __ptext24:
  5260                           	opt stack 0
  5261  0029DC                     _Init_ADC:
  5262                           	opt stack 30
  5263                           
  5264                           ;Lab5p1_Tomik.c: 82: ADCON0=0x01;
  5265                           
  5266                           ;incstack = 0
  5267  0029DC  0E01               	movlw	1
  5268  0029DE  6EC2               	movwf	4034,c	;volatile
  5269                           
  5270                           ;Lab5p1_Tomik.c: 83: ADCON1=0x1B ;
  5271  0029E0  0E1B               	movlw	27
  5272  0029E2  6EC1               	movwf	4033,c	;volatile
  5273                           
  5274                           ;Lab5p1_Tomik.c: 84: ADCON2=0xA9;
  5275  0029E4  0EA9               	movlw	169
  5276  0029E6  6EC0               	movwf	4032,c	;volatile
  5277  0029E8  0012               	return		;funcret
  5278  0029EA                     __end_of_Init_ADC:
  5279                           	opt stack 0
  5280                           tblptru	equ	0xFF8
  5281                           tblptrh	equ	0xFF7
  5282                           tblptrl	equ	0xFF6
  5283                           tablat	equ	0xFF5
  5284                           prodh	equ	0xFF4
  5285                           prodl	equ	0xFF3
  5286                           postinc0	equ	0xFEE
  5287                           wreg	equ	0xFE8
  5288                           postdec1	equ	0xFE5
  5289                           fsr1l	equ	0xFE1
  5290                           postinc2	equ	0xFDE
  5291                           postdec2	equ	0xFDD
  5292                           fsr2h	equ	0xFDA
  5293                           fsr2l	equ	0xFD9
  5294                           status	equ	0xFD8
  5295                           
  5296 ;; *************** function _Get_Full_ADC *****************
  5297 ;; Defined at:
  5298 ;;		line 87 in file "Lab5p1_Tomik.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;		None
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;  result          2    4[COMRAM] int 
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  2    0[COMRAM] unsigned int 
  5305 ;; Registers used:
  5306 ;;		wreg, status,2, status,0
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5316 ;;Total ram usage:        6 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_main
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text25
  5326  002932                     __ptext25:
  5327                           	opt stack 0
  5328  002932                     _Get_Full_ADC:
  5329                           	opt stack 30
  5330                           
  5331                           ;Lab5p1_Tomik.c: 89: int result;
  5332                           ;Lab5p1_Tomik.c: 90: ADCON0bits.GO=1;
  5333                           
  5334                           ;incstack = 0
  5335  002932  82C2               	bsf	4034,1,c	;volatile
  5336                           
  5337                           ;Lab5p1_Tomik.c: 91: while(ADCON0bits.DONE==1);
  5338  002934  D000               	goto	l74
  5339  002936                     l74:
  5340  002936  B2C2               	btfsc	4034,1,c	;volatile
  5341  002938  D7FE               	goto	l74
  5342                           
  5343                           ;Lab5p1_Tomik.c: 92: result = (ADRESH * 0x100) + ADRESL;
  5344  00293A  50C4               	movf	4036,w,c	;volatile
  5345  00293C  6E04               	movwf	(??_Get_Full_ADC+1)& (0+255),c
  5346  00293E  6A03               	clrf	??_Get_Full_ADC& (0+255),c
  5347  002940  50C3               	movf	4035,w,c	;volatile
  5348  002942  2403               	addwf	??_Get_Full_ADC,w,c
  5349  002944  6E05               	movwf	Get_Full_ADC@result,c
  5350  002946  0E00               	movlw	0
  5351  002948  2004               	addwfc	??_Get_Full_ADC+1,w,c
  5352  00294A  6E06               	movwf	Get_Full_ADC@result+1,c
  5353                           
  5354                           ;Lab5p1_Tomik.c: 94: return result;
  5355  00294C  C005  F001         	movff	Get_Full_ADC@result,?_Get_Full_ADC
  5356  002950  C006  F002         	movff	Get_Full_ADC@result+1,?_Get_Full_ADC+1
  5357  002954  D000               	goto	l77
  5358  002956                     l77:
  5359  002956  0012               	return		;funcret
  5360  002958                     __end_of_Get_Full_ADC:
  5361                           	opt stack 0
  5362                           tblptru	equ	0xFF8
  5363                           tblptrh	equ	0xFF7
  5364                           tblptrl	equ	0xFF6
  5365                           tablat	equ	0xFF5
  5366                           prodh	equ	0xFF4
  5367                           prodl	equ	0xFF3
  5368                           postinc0	equ	0xFEE
  5369                           wreg	equ	0xFE8
  5370                           postdec1	equ	0xFE5
  5371                           fsr1l	equ	0xFE1
  5372                           postinc2	equ	0xFDE
  5373                           postdec2	equ	0xFDD
  5374                           fsr2h	equ	0xFDA
  5375                           fsr2l	equ	0xFD9
  5376                           status	equ	0xFD8
  5377                           
  5378 ;; *************** function _Delay_One_Sec *****************
  5379 ;; Defined at:
  5380 ;;		line 118 in file "Lab5p1_Tomik.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;		None
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  I               2    0[COMRAM] int 
  5385 ;; Return value:  Size  Location     Type
  5386 ;;		None               void
  5387 ;; Registers used:
  5388 ;;		wreg, status,2, status,0
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5397 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5398 ;;Total ram usage:        2 bytes
  5399 ;; Hardware stack levels used:    1
  5400 ;; This function calls:
  5401 ;;		Nothing
  5402 ;; This function is called by:
  5403 ;;		_main
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text26
  5408  00297C                     __ptext26:
  5409                           	opt stack 0
  5410  00297C                     _Delay_One_Sec:
  5411                           	opt stack 30
  5412                           
  5413                           ;Lab5p1_Tomik.c: 120: for(int I=0; I <0xffff; I++);
  5414                           
  5415                           ;incstack = 0
  5416  00297C  0E00               	movlw	0
  5417  00297E  6E02               	movwf	Delay_One_Sec@I+1,c
  5418  002980  0E00               	movlw	0
  5419  002982  6E01               	movwf	Delay_One_Sec@I,c
  5420  002984                     l2486:
  5421  002984  2801               	incf	Delay_One_Sec@I,w,c
  5422  002986  E105               	bnz	l2490
  5423  002988  2802               	incf	Delay_One_Sec@I+1,w,c
  5424  00298A  B4D8               	btfsc	status,2,c
  5425  00298C  D006               	goto	l95
  5426  00298E  D001               	goto	l2490
  5427  002990  D004               	goto	l95
  5428  002992                     l2490:
  5429  002992  4A01               	infsnz	Delay_One_Sec@I,f,c
  5430  002994  2A02               	incf	Delay_One_Sec@I+1,f,c
  5431  002996  D7F6               	goto	l2486
  5432  002998  D7FC               	goto	l2490
  5433  00299A                     l95:
  5434  00299A  0012               	return		;funcret
  5435  00299C                     __end_of_Delay_One_Sec:
  5436                           	opt stack 0
  5437                           tblptru	equ	0xFF8
  5438                           tblptrh	equ	0xFF7
  5439                           tblptrl	equ	0xFF6
  5440                           tablat	equ	0xFF5
  5441                           prodh	equ	0xFF4
  5442                           prodl	equ	0xFF3
  5443                           postinc0	equ	0xFEE
  5444                           wreg	equ	0xFE8
  5445                           postdec1	equ	0xFE5
  5446                           fsr1l	equ	0xFE1
  5447                           postinc2	equ	0xFDE
  5448                           postdec2	equ	0xFDD
  5449                           fsr2h	equ	0xFDA
  5450                           fsr2l	equ	0xFD9
  5451                           status	equ	0xFD8
  5452                           
  5453 ;; *************** function _DO_DISPLAY7_SEG_UPPER *****************
  5454 ;; Defined at:
  5455 ;;		line 97 in file "Lab5p1_Tomik.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;  digit           1    wreg     unsigned char 
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;  digit           1    0[COMRAM] unsigned char 
  5460 ;;  PE              1    2[COMRAM] unsigned char 
  5461 ;;  PC              1    1[COMRAM] unsigned char 
  5462 ;; Return value:  Size  Location     Type
  5463 ;;		None               void
  5464 ;; Registers used:
  5465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5474 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;Total ram usage:        3 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; This function calls:
  5478 ;;		Nothing
  5479 ;; This function is called by:
  5480 ;;		_main
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           	psect	text27
  5485  00260C                     __ptext27:
  5486                           	opt stack 0
  5487  00260C                     _DO_DISPLAY7_SEG_UPPER:
  5488                           	opt stack 30
  5489                           
  5490                           ;incstack = 0
  5491                           ;DO_DISPLAY7_SEG_UPPER@digit stored from wreg
  5492  00260C  6E01               	movwf	DO_DISPLAY7_SEG_UPPER@digit,c
  5493                           
  5494                           ;Lab5p1_Tomik.c: 99: PORTC = array[digit] & 0x3F;
  5495  00260E  5001               	movf	DO_DISPLAY7_SEG_UPPER@digit,w,c
  5496  002610  0D02               	mullw	2
  5497  002612  0E80               	movlw	low _array
  5498  002614  24F3               	addwf	prodl,w,c
  5499  002616  6ED9               	movwf	fsr2l,c
  5500  002618  0E00               	movlw	high _array
  5501  00261A  20F4               	addwfc	prodh,w,c
  5502  00261C  6EDA               	movwf	fsr2h,c
  5503  00261E  50DF               	movf	indf2,w,c
  5504  002620  0B3F               	andlw	63
  5505  002622  6E82               	movwf	3970,c	;volatile
  5506                           
  5507                           ;Lab5p1_Tomik.c: 100: char PC = array[digit] & 0x01;
  5508  002624  5001               	movf	DO_DISPLAY7_SEG_UPPER@digit,w,c
  5509  002626  0D02               	mullw	2
  5510  002628  0E80               	movlw	low _array
  5511  00262A  24F3               	addwf	prodl,w,c
  5512  00262C  6ED9               	movwf	fsr2l,c
  5513  00262E  0E00               	movlw	high _array
  5514  002630  20F4               	addwfc	prodh,w,c
  5515  002632  6EDA               	movwf	fsr2h,c
  5516  002634  50DF               	movf	indf2,w,c
  5517  002636  0B01               	andlw	1
  5518  002638  6E02               	movwf	DO_DISPLAY7_SEG_UPPER@PC,c
  5519                           
  5520                           ;Lab5p1_Tomik.c: 101: char PE = array[digit] & 0x40;
  5521  00263A  5001               	movf	DO_DISPLAY7_SEG_UPPER@digit,w,c
  5522  00263C  0D02               	mullw	2
  5523  00263E  0E80               	movlw	low _array
  5524  002640  24F3               	addwf	prodl,w,c
  5525  002642  6ED9               	movwf	fsr2l,c
  5526  002644  0E00               	movlw	high _array
  5527  002646  20F4               	addwfc	prodh,w,c
  5528  002648  6EDA               	movwf	fsr2h,c
  5529  00264A  50DF               	movf	indf2,w,c
  5530  00264C  0B40               	andlw	64
  5531  00264E  6E03               	movwf	DO_DISPLAY7_SEG_UPPER@PE,c
  5532                           
  5533                           ;Lab5p1_Tomik.c: 102: if (PE == 0 && PC ==0)
  5534  002650  5003               	movf	DO_DISPLAY7_SEG_UPPER@PE,w,c
  5535  002652  A4D8               	btfss	status,2,c
  5536  002654  D005               	goto	l2466
  5537  002656  5002               	movf	DO_DISPLAY7_SEG_UPPER@PC,w,c
  5538  002658  A4D8               	btfss	status,2,c
  5539  00265A  D002               	goto	l2466
  5540                           
  5541                           ;Lab5p1_Tomik.c: 103: PORTE = 0x00;
  5542  00265C  0E00               	movlw	0
  5543  00265E  D017               	goto	L10
  5544  002660                     l2466:
  5545                           
  5546                           ;Lab5p1_Tomik.c: 104: else if (PC == 0 && PE != 0)
  5547  002660  5002               	movf	DO_DISPLAY7_SEG_UPPER@PC,w,c
  5548  002662  A4D8               	btfss	status,2,c
  5549  002664  D005               	goto	l2472
  5550  002666  5003               	movf	DO_DISPLAY7_SEG_UPPER@PE,w,c
  5551  002668  B4D8               	btfsc	status,2,c
  5552  00266A  D002               	goto	l2472
  5553                           
  5554                           ;Lab5p1_Tomik.c: 105: PORTE = 0x01;
  5555  00266C  0E01               	movlw	1
  5556  00266E  D00F               	goto	L10
  5557  002670                     l2472:
  5558                           
  5559                           ;Lab5p1_Tomik.c: 106: else if (PC == 1 && PE == 0)
  5560  002670  0402               	decf	DO_DISPLAY7_SEG_UPPER@PC,w,c
  5561  002672  A4D8               	btfss	status,2,c
  5562  002674  D005               	goto	l2478
  5563  002676  5003               	movf	DO_DISPLAY7_SEG_UPPER@PE,w,c
  5564  002678  A4D8               	btfss	status,2,c
  5565  00267A  D002               	goto	l2478
  5566                           
  5567                           ;Lab5p1_Tomik.c: 107: PORTE = 0x02;
  5568  00267C  0E02               	movlw	2
  5569  00267E  D007               	goto	L10
  5570  002680                     l2478:
  5571                           
  5572                           ;Lab5p1_Tomik.c: 108: else if (PC == 1 && PE != 0)
  5573  002680  0402               	decf	DO_DISPLAY7_SEG_UPPER@PC,w,c
  5574  002682  A4D8               	btfss	status,2,c
  5575  002684  D006               	goto	l87
  5576  002686  5003               	movf	DO_DISPLAY7_SEG_UPPER@PE,w,c
  5577  002688  B4D8               	btfsc	status,2,c
  5578  00268A  D003               	goto	l87
  5579                           
  5580                           ;Lab5p1_Tomik.c: 109: PORTE = 0x03;
  5581  00268C  0E03               	movlw	3
  5582  00268E                     L10:
  5583  00268E  6E84               	movwf	3972,c	;volatile
  5584  002690  D000               	goto	l87
  5585  002692                     l87:
  5586  002692  0012               	return		;funcret
  5587  002694                     __end_of_DO_DISPLAY7_SEG_UPPER:
  5588                           	opt stack 0
  5589                           tblptru	equ	0xFF8
  5590                           tblptrh	equ	0xFF7
  5591                           tblptrl	equ	0xFF6
  5592                           tablat	equ	0xFF5
  5593                           prodh	equ	0xFF4
  5594                           prodl	equ	0xFF3
  5595                           postinc0	equ	0xFEE
  5596                           wreg	equ	0xFE8
  5597                           postdec1	equ	0xFE5
  5598                           fsr1l	equ	0xFE1
  5599                           indf2	equ	0xFDF
  5600                           postinc2	equ	0xFDE
  5601                           postdec2	equ	0xFDD
  5602                           fsr2h	equ	0xFDA
  5603                           fsr2l	equ	0xFD9
  5604                           status	equ	0xFD8
  5605                           
  5606 ;; *************** function _DO_DISPLAY7_SEG_LOWER *****************
  5607 ;; Defined at:
  5608 ;;		line 112 in file "Lab5p1_Tomik.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  digit           1    wreg     unsigned char 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  digit           1    0[COMRAM] unsigned char 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;		None               void
  5615 ;; Registers used:
  5616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;Total ram usage:        1 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; This function calls:
  5629 ;;		Nothing
  5630 ;; This function is called by:
  5631 ;;		_main
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           	psect	text28
  5636  00299C                     __ptext28:
  5637                           	opt stack 0
  5638  00299C                     _DO_DISPLAY7_SEG_LOWER:
  5639                           	opt stack 30
  5640                           
  5641                           ;incstack = 0
  5642                           ;DO_DISPLAY7_SEG_LOWER@digit stored from wreg
  5643  00299C  6E01               	movwf	DO_DISPLAY7_SEG_LOWER@digit,c
  5644                           
  5645                           ;Lab5p1_Tomik.c: 114: PORTD = array[digit];
  5646  00299E  5001               	movf	DO_DISPLAY7_SEG_LOWER@digit,w,c
  5647  0029A0  0D02               	mullw	2
  5648  0029A2  0E80               	movlw	low _array
  5649  0029A4  24F3               	addwf	prodl,w,c
  5650  0029A6  6ED9               	movwf	fsr2l,c
  5651  0029A8  0E00               	movlw	high _array
  5652  0029AA  20F4               	addwfc	prodh,w,c
  5653  0029AC  6EDA               	movwf	fsr2h,c
  5654  0029AE  50DF               	movf	indf2,w,c
  5655  0029B0  6E83               	movwf	3971,c	;volatile
  5656  0029B2  0012               	return		;funcret
  5657  0029B4                     __end_of_DO_DISPLAY7_SEG_LOWER:
  5658                           	opt stack 0
  5659                           tblptru	equ	0xFF8
  5660                           tblptrh	equ	0xFF7
  5661                           tblptrl	equ	0xFF6
  5662                           tablat	equ	0xFF5
  5663                           prodh	equ	0xFF4
  5664                           prodl	equ	0xFF3
  5665                           postinc0	equ	0xFEE
  5666                           wreg	equ	0xFE8
  5667                           postdec1	equ	0xFE5
  5668                           fsr1l	equ	0xFE1
  5669                           indf2	equ	0xFDF
  5670                           postinc2	equ	0xFDE
  5671                           postdec2	equ	0xFDD
  5672                           fsr2h	equ	0xFDA
  5673                           fsr2l	equ	0xFD9
  5674                           status	equ	0xFD8
  5675                           tblptru	equ	0xFF8
  5676                           tblptrh	equ	0xFF7
  5677                           tblptrl	equ	0xFF6
  5678                           tablat	equ	0xFF5
  5679                           prodh	equ	0xFF4
  5680                           prodl	equ	0xFF3
  5681                           postinc0	equ	0xFEE
  5682                           wreg	equ	0xFE8
  5683                           postdec1	equ	0xFE5
  5684                           fsr1l	equ	0xFE1
  5685                           indf2	equ	0xFDF
  5686                           postinc2	equ	0xFDE
  5687                           postdec2	equ	0xFDD
  5688                           fsr2h	equ	0xFDA
  5689                           fsr2l	equ	0xFD9
  5690                           status	equ	0xFD8
  5691                           
  5692                           	psect	rparam
  5693  0000                     tblptru	equ	0xFF8
  5694                           tblptrh	equ	0xFF7
  5695                           tblptrl	equ	0xFF6
  5696                           tablat	equ	0xFF5
  5697                           prodh	equ	0xFF4
  5698                           prodl	equ	0xFF3
  5699                           postinc0	equ	0xFEE
  5700                           wreg	equ	0xFE8
  5701                           postdec1	equ	0xFE5
  5702                           fsr1l	equ	0xFE1
  5703                           indf2	equ	0xFDF
  5704                           postinc2	equ	0xFDE
  5705                           postdec2	equ	0xFDD
  5706                           fsr2h	equ	0xFDA
  5707                           fsr2l	equ	0xFD9
  5708                           status	equ	0xFD8


Data Sizes:
    Strings     13
    Constant    118
    Data        20
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    122     127
    BANK0           128      9      29
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___ftpack
    ___awmod->___fttol
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->_fround
    _init_UART->_OpenUSART
    ___awtoft->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   46304
                                            120 COMRAM     2     2      0
                                              0 BANK0      9     9      0
              _DO_DISPLAY7_SEG_LOWER
              _DO_DISPLAY7_SEG_UPPER
                      _Delay_One_Sec
                       _Get_Full_ADC
                           _Init_ADC
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftmul
                            ___fttol
                          _init_UART
                             _printf
                 _select_ADC_Channel
 ---------------------------------------------------------------------------------
 (1) _select_ADC_Channel                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   36645
                                             86 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    8869
                                             58 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8671
                                             58 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             52 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3703
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1356
                                             38 COMRAM     6     2      4
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1466
                                             44 COMRAM     8     4      4
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1829
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     477
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     374
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     517
                                             23 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3092
                                             80 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    2839
                                             68 COMRAM    12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     454
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1851
                                             52 COMRAM     4     1      3
                            ___awdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1707
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Delay_One_Sec                                        2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY7_SEG_UPPER                                3     3      0     244
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY7_SEG_LOWER                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DO_DISPLAY7_SEG_LOWER
   _DO_DISPLAY7_SEG_UPPER
   _Delay_One_Sec
   _Get_Full_ADC
   _Init_ADC
   ___awdiv
     ___awmod (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftpack
     ___ftmul (ARG)
       ___ftpack
   ___awmod
     ___ftmul (ARG)
       ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
   ___awtoft
     ___awdiv (ARG)
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
   _init_UART
     _OpenUSART
   _printf
     ___awdiv
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___ftpack
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftpack
         ___awmod
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___ftmul (ARG)
               ___ftpack
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftpack
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___ftmul (ARG)
               ___ftpack
           ___awmod
             ___ftmul (ARG)
               ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___ftpack
               ___ftmul (ARG)
                 ___ftpack
             ___awmod (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___ftmul (ARG)
               ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftpack
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___ftpack
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftpack
       ___awmod
         ___ftmul (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftpack
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftpack
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftpack
       ___awmod
         ___ftmul (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul
         ___ftpack
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftpack
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftpack
   _select_ADC_Channel

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      9      1D       5       22.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7A      7F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9C      34        0.0%
DATA                 0      0      9C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Sep 29 21:25:05 2021

                            l74 2936                              l77 2956                              l87 2692  
                            l95 299A                    ___awdiv@sign 0032             ___wmul@multiplicand 0037  
                  ___ftadd@exp1 0050                    ___ftadd@exp2 004F                    ___ftadd@sign 004E  
                           l202 27B2                             l122 1A8A                             l211 27F4  
                           l115 1CCE                             l206 27CC                             l214 2930  
                           l207 27CE                             l208 27D8                             l209 27DA  
                           l420 2714                             l407 24E8                             l167 1506  
                           l432 28D4                             l178 16AA                             l603 1E1C  
                           l507 209C                             l621 1F0A                             l550 242A  
                           l622 1F32                             l703 25FA                             l713 2774  
                           l539 2452                             l619 1FA2                             l643 22A6  
                           l580 1E92                             l660 2898                             l628 1F92  
                           l637 257E                             l653 296E                             l733 2854  
                           l583 1D3E                             l664 238C                             l594 1E00  
                           l498 20AC                             l579 1D14                    ___awmod@sign 002C  
                           prod 000FF3                             wreg 000FE8         ??_DO_DISPLAY7_SEG_LOWER 0001  
       ??_DO_DISPLAY7_SEG_UPPER 0001                    __CFG_LVP$OFF 000000                    __CFG_WDT$OFF 000000  
                          l2100 1F7E                            l2020 17D8                            l2110 1FB4  
                          l2102 1F8C                            l2006 1C8E                            l2030 1890  
                          l2200 22C6                            l2130 2008                            l2026 1880  
                          l2116 1FC4                            l2060 1ED0                            l2044 1A66  
                          l2230 2358                            l2222 2330                            l2150 205E  
                          l2142 204A                            l2054 1EB2                            l2038 19B4  
                          l2310 10A0                            l2224 2336                            l2232 2362  
                          l2160 2088                            l2400 141E                            l2312 10AC  
                          l2218 2320                            l2250 25B8                            l2162 2096  
                          l2154 206E                            l2138 203A                            l2090 1F54  
                          l2082 1F40                            l2306 1090                            l2180 254E  
                          l2236 237A                            l2228 234A                            l2156 2074  
                          l2420 14E2                            l2404 1422                            l2332 1128  
                          l2316 10B4                            l1710 23DA                            l1702 239E  
                          l2502 28B0                            l2246 25A2                            l2270 273E  
                          l2094 1F64                            l2422 14F0                            l2414 14C8  
                          l2318 10D6                            l2176 251C                            l2168 286E  
                          l2248 25B0                            l2280 27FC                            l2096 1F6A  
                          l2432 1526                            l2416 14D4                            l2408 143E  
                          l2360 1244                            l1730 2444                            l1714 23F2  
                          l1706 23AE                            l2186 257A                            l2258 25EA  
                          l2274 2764                            l2266 2728                            l2282 280A  
                          l2442 164C                            l2426 150C                            l2362 1254  
                          l2450 1672                            l1724 2432                            l1716 2412  
                          l1708 23BA                            l2268 2736                            l2444 1658  
                          l2436 1576                            l2372 12CC                            l2364 1284  
                          l2356 121E                            l2348 11BA                            l1718 241E  
                          l1806 1E6C                            l1910 26AA                            l1822 21F6  
                          l2390 13DE                            l2382 133C                            l2366 1294  
                          l2454 168E                            l2518 20CA                            l2472 2670  
                          l1760 1D58                            l1920 26D0                            l1840 223C  
                          l1816 21CE                            l2448 1666                            l2392 13E2  
                          l2384 136A                            l2376 12F0                            l2466 2660  
                          l2490 2992                            l1770 1D80                            l1754 1D4C  
                          l1922 26D8                            l1930 26FA                            l1914 26B8  
                          l1850 226A                            l1818 21E8                            l2378 12FA  
                          l2386 1378                            l1780 1DBC                            l1748 1D22  
                          l1844 2252                            l1836 222A                            l2396 13EE  
                          l2478 2680                            l2486 2984                            l1790 1DF4  
                          l1782 1DC4                            l1934 270A                            l1926 26EE  
                          l1918 26C6                            l1854 2280                            l1846 2258  
                          l1952 27AA                            l1944 2798                            l1776 1DA4  
                          l1880 249C                            l1872 247C                            l1778 1DB0  
                          l1890 24C2                            l1882 24A4                            l1866 246A  
                          l1964 27C4                            l1956 27B6                            l1948 27A2  
                          l1796 1E3A                            l1788 1DE8                            l1878 2492  
                          l1894 24CE                            l1898 24DE                            l1998 1BCA  
                          STR_1 1077                            u2031 1EA4                            u2051 1EC2  
                          u2241 22B8                            u2260 22E4                            u1701 21DE  
                          u1471 1CE0                            u2600 1500                            u2440 1160  
                          u1481 1CF4                            u2265 22DC                            u2445 1156  
                          u1681 21C0                    printf@tmpval 0071                            _main 20AE  
                  ___ftpack@arg 0001                    ___ftpack@exp 0004                            fsr2h 000FDA  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          _volt 007B                            prodh 000FF4                            prodl 000FF3  
                          start 0000                    ___ftmul@cntr 0016                    ___param_bank 000010  
                  ___ftmul@sign 0017            __end_of_Get_Full_ADC 2958                    ___fttol@exp1 0026  
                  ___fttol@lval 0022                           ?_main 0001                 __end_of___awdiv 24EA  
               __end_of___ftadd 1E94                 __end_of___awmod 2716                 __end_of___ftneg 297C  
               __end_of___lldiv 260C                 __end_of___ftmul 22A8                 ___awdiv@divisor 002F  
               __end_of___llmod 2786                 __end_of___ftsub 289A                 __end_of___fttol 238E  
               ___awdiv@counter 0031                           _RCSTA 000FAB                           _SPBRG 000FAF  
                         _PORTC 000F82                           _PORTD 000F83                           _PORTE 000F84  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISD 000F95                           _TRISE 000F96                           _TXSTA 000FAC  
                  ___lltoft@exp 0011                   ___awtoft@sign 0038                 __end_of_dpowers 1029  
                         _array 0080                           _scale 16AC                   ___ftpack@sign 0005  
                         main@L 0098                           main@U 0096                           _putch 29F6  
                  main@num_step 0094                  __CFG_BOREN$OFF 000000                           tablat 000FF5  
                         status 000FD8                 __initialization 28D6                    __end_of_main 21B0  
              __end_of_Init_ADC 29EA                          ??_main 0079                   ___fttol@sign1 0021  
                 __activetblptr 000002            __size_of__tdiv_to_l_ 0110                          _ADCON0 000FC2  
                        _ADCON1 000FC1                          _ADCON2 000FC0                ___llmod@dividend 0001  
                        ?_scale 003B                          _ADRESH 000FC4                          _ADRESL 000FC3  
              ___awdiv@dividend 002D                __end_of___awtoft 28D6                          ?_putch 0001  
              __end_of___ftpack 2454                __end_of___lltoft 2856                          _OSCCON 000FD3  
                        _SPBRGH 000FB0              Get_Full_ADC@result 0005                __end_of__powers_ 1077  
            __size_of_OpenUSART 0070                          ___ftge 24EA       select_ADC_Channel@channel 0001  
                        ___wmul 290A                       ??___awdiv 0031                       ??___ftadd 004B  
                     ??___awmod 002B                       ??___ftneg 0004                       ??___lldiv 0009  
                     ??___ftmul 000F                       ??___llmod 0009                       ??___ftsub 0057  
                     ??___fttol 001C                          _fround 1A8C                ___awdiv@quotient 0033  
               ___awmod@divisor 0029                 ___awmod@counter 002B                          _printf 1086  
         ___ftmul@f3_as_product 0013                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                          putch@c 0001  
                    __accesstop 0080         __end_of__initialization 2900                      ___ftadd@f1 0045  
                    ___ftadd@f2 0048                      ___ftge@ff1 0001                      ___ftge@ff2 0004  
                 ___rparam_used 000001           __size_of_Get_Full_ADC 0026                      ___ftneg@f1 0001  
                    ___awtoft@c 0035                      ___ftmul@f1 0009                      ___ftmul@f2 000C  
                    ___ftsub@f1 0051                      ___ftsub@f2 0054                      ___fttol@f1 0018  
                __pcstackCOMRAM 0001                    __pidataBANK0 29B4                      ___lltoft@c 0009  
                 __end_of_scale 1A8C                   __end_of_putch 29F8                      __div_to_l_ 1FA4  
             __end_of_OpenUSART 27F6                 __div_to_l_@exp1 000C                 __div_to_l_@cntr 000B  
                       ??_scale 003E  __size_of_DO_DISPLAY7_SEG_LOWER 0018                 __div_to_l_@quot 0007  
                  _Get_Full_ADC 2932                         ??_putch 0001   __end_of_DO_DISPLAY7_SEG_LOWER 29B4  
__size_of_DO_DISPLAY7_SEG_UPPER 0088   __end_of_DO_DISPLAY7_SEG_UPPER 2694                       ?_Init_ADC 0001  
                Delay_One_Sec@I 0001              __size_of_init_UART 0014                   __div_to_l_@f1 0001  
                 __div_to_l_@f2 0004     __size_of_select_ADC_Channel 000C                         ?___ftge 0001  
                       ?___wmul 0035          __size_of_Delay_One_Sec 0020                         ?_fround 003B  
                     ?___awtoft 0035                       ?___ftpack 0001                         ?_printf 0057  
                     ?___lltoft 0009                      ??_Init_ADC 0001      DO_DISPLAY7_SEG_LOWER@digit 0001  
             __end_of__npowers_ 1050                         __Hparam 0000                      _scale$1108 003E  
                       __Lparam 0000                 __size_of___ftge 0096                         ___awdiv 2454  
                       ___ftadd 1CD0                         ___awmod 2694                         ___ftneg 2958  
                       ___lldiv 2580                 __size_of___wmul 0028                         ___ftmul 21B0  
                       ___llmod 2716                         ___ftsub 2856                         ___fttol 22A8  
                  __psmallconst 1000                         __pcinit 28D6                      ??___awtoft 0038  
                    ??___ftpack 0006                 __size_of_fround 0244                         __ramtop 1000  
                    ??___lltoft 000D                         __ptext0 20AE                         __ptext1 29EA  
                       __ptext2 1086                         __ptext3 16AC                         __ptext4 29F6  
                       __ptext5 1A8C                         __ptext6 290A                         __ptext7 21B0  
                       __ptext8 2694                         __ptext9 2454                 __size_of_printf 0626  
             __end_of_init_UART 29DC                     ?__div_to_l_ 0001                         _dpowers 1001  
              ___awmod@dividend 0027            end_of_initialization 2900                   _Delay_One_Sec 297C  
                 __Lmediumconst 0000                 ___lldiv@divisor 0005                 ___lldiv@counter 000D  
                     _RCSTAbits 000FAB                         printf@c 0078                         printf@f 0057  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE                  __tdiv_to_l_@f1 0001                  __tdiv_to_l_@f2 0004  
                 ??__tdiv_to_l_ 0007                       _PORTDbits 000F83                       _TRISCbits 000F94  
                ?_Delay_One_Sec 0001      DO_DISPLAY7_SEG_UPPER@digit 0001                       _TXSTAbits 000FAC  
           __size_of__div_to_l_ 010A                     ___ftmul@exp 0012                  __end_of___ftge 2580  
                __end_of___wmul 2932                  __end_of_fround 1CD0                  __end_of_printf 16AC  
           start_initialization 28D6             __end_of__tdiv_to_l_ 1FA4                       _OpenUSART 2786  
               ___llmod@divisor 0005                __CFG_OSC$INTIO67 000000               __size_of_Init_ADC 000E  
               ___llmod@counter 0009                        ??___ftge 0007                        ??___wmul 0039  
                   __pdataBANK0 0080                        ??_fround 003E                        ??_printf 005C  
                    fround@prec 0044               __size_of___awtoft 003C               __size_of___ftpack 00C6  
             __size_of___lltoft 0060                     __pbssCOMRAM 007B                   __pcstackBANK0 0094  
               ??_Delay_One_Sec 0001                      ?_OpenUSART 0001           _DO_DISPLAY7_SEG_LOWER 299C  
         _DO_DISPLAY7_SEG_UPPER 260C      __end_of_select_ADC_Channel 29F6                        ?___awdiv 002D  
                      ?___ftadd 0045                        ?___awmod 0027                        ?___ftneg 0001  
                      ?___lldiv 0001                        ?___ftmul 0009                        ?___llmod 0001  
                      ?___ftsub 0051                       __npowers_ 1029                        ?___fttol 0018  
                   __tdiv_to_l_ 1E94                    ??__div_to_l_ 0007                     __smallconst 1000  
                     _init_UART 29C8                  __size_of_scale 03E0                  __size_of_putch 0002  
                ___wmul@product 0039                        _PIE1bits 000F9D                        _PIR1bits 000F9E  
            __end_of__div_to_l_ 20AE                      _ADCON0bits 000FC2               ___wmul@multiplier 0035  
                    printf@flag 0067                      printf@fval 0075                      printf@prec 0069  
                    ?_init_UART 0001                       copy_data0 28F4          ?_DO_DISPLAY7_SEG_LOWER 0001  
                      _Init_ADC 29DC          ?_DO_DISPLAY7_SEG_UPPER 0001                     ??_OpenUSART 0003  
               OpenUSART@config 0003         DO_DISPLAY7_SEG_UPPER@PC 0002         DO_DISPLAY7_SEG_UPPER@PE 0003  
                      __Hrparam 0000                        __Lrparam 0000                __size_of___awdiv 0096  
              __size_of___ftadd 01C4                __size_of___awmod 0082                __size_of___ftneg 0024  
              __size_of___lldiv 008C                __size_of___ftmul 00F8                __size_of___llmod 0070  
              __size_of___ftsub 0044                __size_of___fttol 00E6                        ___awtoft 289A  
                      ___ftpack 238E                     _fround$1106 0041                     _fround$1107 003E  
                      ___lltoft 27F6                        __ptext10 1E94                        __ptext11 1FA4  
                      __ptext20 29C8                        __ptext12 27F6                        __ptext21 2786  
                      __ptext13 2716                        __ptext22 289A                        __ptext14 2580  
                      __ptext23 238E                        __ptext15 22A8                        __ptext24 29DC  
                      __ptext16 2856                        __ptext25 2932                        __ptext17 1CD0  
                      __ptext26 297C                        __ptext18 2958                        __ptext27 260C  
                      __ptext19 24EA                        __ptext28 299C                        __powers_ 1050  
                 ?_Get_Full_ADC 0001                   __size_of_main 0102                        _num_step 007E  
                     printf@exp 006F                       printf@val 006B                        main@volt 009A  
                OpenUSART@spbrg 0001                     ??_init_UART 0004                  ??_Get_Full_ADC 0003  
                      scale@scl 0041                __tdiv_to_l_@exp1 000F                __tdiv_to_l_@cntr 000E  
              __tdiv_to_l_@quot 000A                ___lldiv@dividend 0001                        printf@ap 0065  
            _select_ADC_Channel 29EA                    ?__tdiv_to_l_ 0001                     _printf$1109 0062  
              ___lldiv@quotient 0009             ?_select_ADC_Channel 0001           __end_of_Delay_One_Sec 299C  
          ??_select_ADC_Channel 0001  
