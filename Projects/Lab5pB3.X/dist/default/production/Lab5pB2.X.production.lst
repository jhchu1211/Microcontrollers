

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Sep 25 16:00:29 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataBANK0
    54  002EA4                     __pidataBANK0:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _array
    58  002EA4  0040               	dw	64
    59  002EA6  0079               	dw	121
    60  002EA8  0024               	dw	36
    61  002EAA  0030               	dw	48
    62  002EAC  0019               	dw	25
    63  002EAE  0012               	dw	18
    64  002EB0  0002               	dw	2
    65  002EB2  0078               	dw	120
    66  002EB4  0000               	dw	0
    67  002EB6  0010               	dw	16
    68                           
    69                           	psect	smallconst
    70  001000                     __psmallconst:
    71                           	opt stack 0
    72  001000  00                 	db	0
    73  001001                     _dpowers:
    74                           	opt stack 0
    75  001001  0001               	dw	1
    76  001003  0000               	dw	0
    77  001005  000A               	dw	10
    78  001007  0000               	dw	0
    79  001009  0064               	dw	100
    80  00100B  0000               	dw	0
    81  00100D  03E8               	dw	1000
    82  00100F  0000               	dw	0
    83  001011  2710               	dw	10000
    84  001013  0000               	dw	0
    85  001015  86A0               	dw	34464
    86  001017  0001               	dw	1
    87  001019  4240               	dw	16960
    88  00101B  000F               	dw	15
    89  00101D  9680               	dw	38528
    90  00101F  0098               	dw	152
    91  001021  E100               	dw	57600
    92  001023  05F5               	dw	1525
    93  001025  CA00               	dw	51712
    94  001027  3B9A               	dw	15258
    95  001029                     __end_of_dpowers:
    96                           	opt stack 0
    97  001029                     __npowers_:
    98                           	opt stack 0
    99  001029  00                 	db	0
   100  00102A  80                 	db	128
   101  00102B  3F                 	db	63
   102  00102C  CD                 	db	205
   103  00102D  CC                 	db	204
   104  00102E  3D                 	db	61
   105  00102F  D7                 	db	215
   106  001030  23                 	db	35
   107  001031  3C                 	db	60
   108  001032  12                 	db	18
   109  001033  83                 	db	131
   110  001034  3A                 	db	58
   111  001035  B7                 	db	183
   112  001036  D1                 	db	209
   113  001037  38                 	db	56
   114  001038  C6                 	db	198
   115  001039  27                 	db	39
   116  00103A  37                 	db	55
   117  00103B  38                 	db	56
   118  00103C  86                 	db	134
   119  00103D  35                 	db	53
   120  00103E  C0                 	db	192
   121  00103F  D6                 	db	214
   122  001040  33                 	db	51
   123  001041  CC                 	db	204
   124  001042  2B                 	db	43
   125  001043  32                 	db	50
   126  001044  70                 	db	112
   127  001045  89                 	db	137
   128  001046  30                 	db	48
   129  001047  E7                 	db	231
   130  001048  DB                 	db	219
   131  001049  2E                 	db	46
   132  00104A  E5                 	db	229
   133  00104B  3C                 	db	60
   134  00104C  1E                 	db	30
   135  00104D  42                 	db	66
   136  00104E  A2                 	db	162
   137  00104F  0D                 	db	13
   138  001050                     __end_of__npowers_:
   139                           	opt stack 0
   140  001050                     __powers_:
   141                           	opt stack 0
   142  001050  00                 	db	0
   143  001051  80                 	db	128
   144  001052  3F                 	db	63
   145  001053  00                 	db	0
   146  001054  20                 	db	32
   147  001055  41                 	db	65
   148  001056  00                 	db	0
   149  001057  C8                 	db	200
   150  001058  42                 	db	66
   151  001059  00                 	db	0
   152  00105A  7A                 	db	122
   153  00105B  44                 	db	68
   154  00105C  40                 	db	64
   155  00105D  1C                 	db	28
   156  00105E  46                 	db	70
   157  00105F  50                 	db	80
   158  001060  C3                 	db	195
   159  001061  47                 	db	71
   160  001062  24                 	db	36
   161  001063  74                 	db	116
   162  001064  49                 	db	73
   163  001065  97                 	db	151
   164  001066  18                 	db	24
   165  001067  4B                 	db	75
   166  001068  BC                 	db	188
   167  001069  BE                 	db	190
   168  00106A  4C                 	db	76
   169  00106B  6B                 	db	107
   170  00106C  6E                 	db	110
   171  00106D  4E                 	db	78
   172  00106E  03                 	db	3
   173  00106F  15                 	db	21
   174  001070  50                 	db	80
   175  001071  79                 	db	121
   176  001072  AD                 	db	173
   177  001073  60                 	db	96
   178  001074  F3                 	db	243
   179  001075  49                 	db	73
   180  001076  71                 	db	113
   181  001077                     __end_of__powers_:
   182                           	opt stack 0
   183  0000                     _ADCON0	set	4034
   184  0000                     _ADCON0bits	set	4034
   185  0000                     _ADCON1	set	4033
   186  0000                     _ADCON2	set	4032
   187  0000                     _ADRESH	set	4036
   188  0000                     _ADRESL	set	4035
   189  0000                     _CCP2CON	set	4026
   190  0000                     _CCPR2L	set	4027
   191  0000                     _OSCCON	set	4051
   192  0000                     _PIE1bits	set	3997
   193  0000                     _PIR1bits	set	3998
   194  0000                     _PORTAbits	set	3968
   195  0000                     _PORTB	set	3969
   196  0000                     _PORTBbits	set	3969
   197  0000                     _PORTC	set	3970
   198  0000                     _PORTD	set	3971
   199  0000                     _PORTDbits	set	3971
   200  0000                     _PORTE	set	3972
   201  0000                     _PORTEbits	set	3972
   202  0000                     _PR2	set	4043
   203  0000                     _RCSTA	set	4011
   204  0000                     _RCSTAbits	set	4011
   205  0000                     _SPBRG	set	4015
   206  0000                     _SPBRGH	set	4016
   207  0000                     _T2CON	set	4042
   208  0000                     _TRISA	set	3986
   209  0000                     _TRISB	set	3987
   210  0000                     _TRISC	set	3988
   211  0000                     _TRISCbits	set	3988
   212  0000                     _TRISD	set	3989
   213  0000                     _TRISE	set	3990
   214  0000                     _TXREG	set	4013
   215  0000                     _TXSTA	set	4012
   216  0000                     _TXSTAbits	set	4012
   217  0000                     _TRMT	set	32097
   218  001077                     STR_1:
   219  001077  52                 	db	82	;'R'
   220  001078  65                 	db	101	;'e'
   221  001079  73                 	db	115	;'s'
   222  00107A  69                 	db	105	;'i'
   223  00107B  73                 	db	115	;'s'
   224  00107C  74                 	db	116	;'t'
   225  00107D  61                 	db	97	;'a'
   226  00107E  6E                 	db	110	;'n'
   227  00107F  63                 	db	99	;'c'
   228  001080  65                 	db	101	;'e'
   229  001081  3A                 	db	58	;':'
   230  001082  20                 	db	32
   231  001083  25                 	db	37
   232  001084  66                 	db	102	;'f'
   233  001085  20                 	db	32
   234  001086  6B                 	db	107	;'k'
   235  001087  4F                 	db	79	;'O'
   236  001088  68                 	db	104	;'h'
   237  001089  6D                 	db	109	;'m'
   238  00108A  0D                 	db	13
   239  00108B  0A                 	db	10
   240  00108C  00                 	db	0
   241                           
   242                           ; #config settings
   243  00108D  00                 	db	0	; dummy byte at the end
   244  0000                     
   245                           	psect	cinit
   246  002D30                     __pcinit:
   247                           	opt stack 0
   248  002D30                     start_initialization:
   249                           	opt stack 0
   250  002D30                     __initialization:
   251                           	opt stack 0
   252                           
   253                           ; Clear objects allocated to BANK0 (8 bytes)
   254  002D30  EE00  F0BC         	lfsr	0,__pbssBANK0
   255  002D34  0E08               	movlw	8
   256  002D36                     clear_0:
   257  002D36  6AEE               	clrf	postinc0,c
   258  002D38  06E8               	decf	wreg,f,c
   259  002D3A  E1FD               	bnz	clear_0
   260                           
   261                           ; Clear objects allocated to COMRAM (10 bytes)
   262  002D3C  EE00  F072         	lfsr	0,__pbssCOMRAM
   263  002D40  0E0A               	movlw	10
   264  002D42                     clear_1:
   265  002D42  6AEE               	clrf	postinc0,c
   266  002D44  06E8               	decf	wreg,f,c
   267  002D46  E1FD               	bnz	clear_1
   268                           
   269                           ; Initialize objects allocated to BANK0 (20 bytes)
   270                           ; load TBLPTR registers with __pidataBANK0
   271  002D48  0EA4               	movlw	low __pidataBANK0
   272  002D4A  6EF6               	movwf	tblptrl,c
   273  002D4C  0E2E               	movlw	high __pidataBANK0
   274  002D4E  6EF7               	movwf	tblptrh,c
   275  002D50  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   276  002D52  6EF8               	movwf	tblptru,c
   277  002D54  EE00  F0A8         	lfsr	0,__pdataBANK0
   278  002D58  EE10 F014          	lfsr	1,20
   279  002D5C                     copy_data0:
   280  002D5C  0009               	tblrd		*+
   281  002D5E  CFF5 FFEE          	movff	tablat,postinc0
   282  002D62  50E5               	movf	postdec1,w,c
   283  002D64  50E1               	movf	fsr1l,w,c
   284  002D66  E1FA               	bnz	copy_data0
   285  002D68                     end_of_initialization:
   286                           	opt stack 0
   287  002D68                     __end_of__initialization:
   288                           	opt stack 0
   289  002D68  0E00               	movlw	low (__Lmediumconst shr (0+16))
   290  002D6A  6EF8               	movwf	tblptru,c
   291  002D6C  0100               	movlb	0
   292  002D6E  EF9F  F00D         	goto	_main	;jump to C main() function
   293                           tblptru	equ	0xFF8
   294                           tblptrh	equ	0xFF7
   295                           tblptrl	equ	0xFF6
   296                           tablat	equ	0xFF5
   297                           postinc0	equ	0xFEE
   298                           wreg	equ	0xFE8
   299                           postdec1	equ	0xFE5
   300                           fsr1l	equ	0xFE1
   301                           
   302                           	psect	bssCOMRAM
   303  000072                     __pbssCOMRAM:
   304                           	opt stack 0
   305  000072                     _F:
   306                           	opt stack 0
   307  000072                     	ds	3
   308  000075                     _Tc:
   309                           	opt stack 0
   310  000075                     	ds	3
   311  000078                     _Vdec:
   312                           	opt stack 0
   313  000078                     	ds	2
   314  00007A                     _tempF:
   315                           	opt stack 0
   316  00007A                     	ds	2
   317                           tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           postdec1	equ	0xFE5
   324                           fsr1l	equ	0xFE1
   325                           
   326                           	psect	bssBANK0
   327  0000BC                     __pbssBANK0:
   328                           	opt stack 0
   329  0000BC                     _resist:
   330                           	opt stack 0
   331  0000BC                     	ds	3
   332  0000BF                     _temp:
   333                           	opt stack 0
   334  0000BF                     	ds	3
   335  0000C2                     _nstep:
   336                           	opt stack 0
   337  0000C2                     	ds	2
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           postdec1	equ	0xFE5
   345                           fsr1l	equ	0xFE1
   346                           
   347                           	psect	dataBANK0
   348  0000A8                     __pdataBANK0:
   349                           	opt stack 0
   350  0000A8                     _array:
   351                           	opt stack 0
   352  0000A8                     	ds	20
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           postdec1	equ	0xFE5
   360                           fsr1l	equ	0xFE1
   361                           
   362                           	psect	cstackBANK0
   363  000080                     __pcstackBANK0:
   364                           	opt stack 0
   365  000080                     _printf$1512:
   366                           	opt stack 0
   367                           
   368                           ; 3 bytes @ 0x0
   369  000080                     	ds	3
   370  000083                     printf@ap:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x3
   374  000083                     	ds	2
   375  000085                     printf@flag:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x5
   379  000085                     	ds	2
   380  000087                     printf@prec:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x7
   384  000087                     	ds	2
   385  000089                     printf@val:
   386                           	opt stack 0
   387                           
   388                           ; 4 bytes @ 0x9
   389  000089                     	ds	4
   390  00008D                     printf@exp:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0xD
   394  00008D                     	ds	2
   395  00008F                     printf@tmpval:
   396                           	opt stack 0
   397                           
   398                           ; 4 bytes @ 0xF
   399  00008F                     	ds	4
   400  000093                     printf@fval:
   401                           	opt stack 0
   402                           
   403                           ; 3 bytes @ 0x13
   404  000093                     	ds	3
   405  000096                     printf@c:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x16
   409  000096                     	ds	1
   410  000097                     main@U:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x17
   414  000097                     	ds	2
   415  000099                     main@L:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x19
   419  000099                     	ds	2
   420  00009B                     main@voltage_mv:
   421                           	opt stack 0
   422                           
   423                           ; 3 bytes @ 0x1B
   424  00009B                     	ds	3
   425  00009E                     main@vL:
   426                           	opt stack 0
   427                           
   428                           ; 3 bytes @ 0x1E
   429  00009E                     	ds	3
   430  0000A1                     main@L_614:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x21
   434  0000A1                     	ds	1
   435  0000A2                     main@U_625:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x22
   439  0000A2                     	ds	1
   440  0000A3                     main@L_626:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x23
   444  0000A3                     	ds	1
   445  0000A4                     main@U_613:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x24
   449  0000A4                     	ds	1
   450  0000A5                     main@rL:
   451                           	opt stack 0
   452                           
   453                           ; 3 bytes @ 0x25
   454  0000A5                     	ds	3
   455                           tblptru	equ	0xFF8
   456                           tblptrh	equ	0xFF7
   457                           tblptrl	equ	0xFF6
   458                           tablat	equ	0xFF5
   459                           postinc0	equ	0xFEE
   460                           wreg	equ	0xFE8
   461                           postdec1	equ	0xFE5
   462                           fsr1l	equ	0xFE1
   463                           
   464                           	psect	cstackCOMRAM
   465  000001                     __pcstackCOMRAM:
   466                           	opt stack 0
   467  000001                     ?_Get_Full_ADC:
   468                           	opt stack 0
   469  000001                     ?___ftpack:
   470                           	opt stack 0
   471  000001                     ?__tdiv_to_l_:
   472                           	opt stack 0
   473  000001                     ?__div_to_l_:
   474                           	opt stack 0
   475  000001                     ?___lldiv:
   476                           	opt stack 0
   477  000001                     ?___llmod:
   478                           	opt stack 0
   479  000001                     putch@c:
   480                           	opt stack 0
   481  000001                     Select_ADC_Channel@channel:
   482                           	opt stack 0
   483  000001                     DO_DISPLAY_7SEG_Upper@digit:
   484                           	opt stack 0
   485  000001                     DO_DISPLAY_7SEG_Lower@digit:
   486                           	opt stack 0
   487  000001                     WAIT_1_SEC@j:
   488                           	opt stack 0
   489  000001                     OpenUSART@spbrg:
   490                           	opt stack 0
   491  000001                     __div_to_l_@f1:
   492                           	opt stack 0
   493  000001                     ___ftpack@arg:
   494                           	opt stack 0
   495  000001                     __tdiv_to_l_@f1:
   496                           	opt stack 0
   497  000001                     ___ftge@ff1:
   498                           	opt stack 0
   499  000001                     ___lldiv@dividend:
   500                           	opt stack 0
   501  000001                     ___llmod@dividend:
   502                           	opt stack 0
   503                           
   504                           ; 4 bytes @ 0x0
   505  000001                     	ds	1
   506  000002                     DO_DISPLAY_7SEG_Upper@PC:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x1
   510  000002                     	ds	1
   511  000003                     ??_Get_Full_ADC:
   512  000003                     DO_DISPLAY_7SEG_Upper@PE:
   513                           	opt stack 0
   514  000003                     OpenUSART@config:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x2
   518  000003                     	ds	1
   519  000004                     ___ftpack@exp:
   520                           	opt stack 0
   521  000004                     __div_to_l_@f2:
   522                           	opt stack 0
   523  000004                     __tdiv_to_l_@f2:
   524                           	opt stack 0
   525  000004                     ___ftge@ff2:
   526                           	opt stack 0
   527                           
   528                           ; 3 bytes @ 0x3
   529  000004                     	ds	1
   530  000005                     ___ftpack@sign:
   531                           	opt stack 0
   532  000005                     Get_Full_ADC@result:
   533                           	opt stack 0
   534  000005                     ___lldiv@divisor:
   535                           	opt stack 0
   536  000005                     ___llmod@divisor:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0x4
   540  000005                     	ds	1
   541  000006                     ??___ftpack:
   542                           
   543                           ; 0 bytes @ 0x5
   544  000006                     	ds	1
   545  000007                     ??__tdiv_to_l_:
   546  000007                     ??___ftge:
   547  000007                     __div_to_l_@quot:
   548                           	opt stack 0
   549                           
   550                           ; 4 bytes @ 0x6
   551  000007                     	ds	2
   552  000009                     ?___lbtoft:
   553                           	opt stack 0
   554  000009                     ?___lltoft:
   555                           	opt stack 0
   556  000009                     ?___lwtoft:
   557                           	opt stack 0
   558  000009                     ___llmod@counter:
   559                           	opt stack 0
   560  000009                     ___lwtoft@c:
   561                           	opt stack 0
   562  000009                     ___lldiv@quotient:
   563                           	opt stack 0
   564  000009                     ___lltoft@c:
   565                           	opt stack 0
   566                           
   567                           ; 4 bytes @ 0x8
   568  000009                     	ds	1
   569  00000A                     __tdiv_to_l_@quot:
   570                           	opt stack 0
   571                           
   572                           ; 4 bytes @ 0x9
   573  00000A                     	ds	1
   574  00000B                     __div_to_l_@cntr:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0xA
   578  00000B                     	ds	1
   579  00000C                     __div_to_l_@exp1:
   580                           	opt stack 0
   581  00000C                     ___lbtoft@c:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0xB
   585  00000C                     	ds	1
   586  00000D                     ??___lltoft:
   587  00000D                     ?___ftneg:
   588                           	opt stack 0
   589  00000D                     ___lldiv@counter:
   590                           	opt stack 0
   591  00000D                     ___ftneg@f1:
   592                           	opt stack 0
   593                           
   594                           ; 3 bytes @ 0xC
   595  00000D                     	ds	1
   596  00000E                     __tdiv_to_l_@cntr:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0xD
   600  00000E                     	ds	1
   601  00000F                     __tdiv_to_l_@exp1:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0xE
   605  00000F                     	ds	1
   606  000010                     ?___ftadd:
   607                           	opt stack 0
   608  000010                     ___ftadd@f1:
   609                           	opt stack 0
   610                           
   611                           ; 3 bytes @ 0xF
   612  000010                     	ds	1
   613  000011                     ___lltoft@exp:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x10
   617  000011                     	ds	2
   618  000013                     ___ftadd@f2:
   619                           	opt stack 0
   620                           
   621                           ; 3 bytes @ 0x12
   622  000013                     	ds	3
   623  000016                     ??___ftadd:
   624                           
   625                           ; 0 bytes @ 0x15
   626  000016                     	ds	3
   627  000019                     ___ftadd@sign:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x18
   631  000019                     	ds	1
   632  00001A                     ___ftadd@exp2:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x19
   636  00001A                     	ds	1
   637  00001B                     ___ftadd@exp1:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x1A
   641  00001B                     	ds	1
   642  00001C                     ?___ftmul:
   643                           	opt stack 0
   644  00001C                     ?___ftsub:
   645                           	opt stack 0
   646  00001C                     ___ftmul@f1:
   647                           	opt stack 0
   648  00001C                     ___ftsub@f1:
   649                           	opt stack 0
   650                           
   651                           ; 3 bytes @ 0x1B
   652  00001C                     	ds	3
   653  00001F                     ___ftmul@f2:
   654                           	opt stack 0
   655  00001F                     ___ftsub@f2:
   656                           	opt stack 0
   657                           
   658                           ; 3 bytes @ 0x1E
   659  00001F                     	ds	3
   660  000022                     ??___ftmul:
   661  000022                     
   662                           ; 0 bytes @ 0x21
   663  000022                     	ds	3
   664  000025                     ___ftmul@exp:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x24
   668  000025                     	ds	1
   669  000026                     ___ftmul@f3_as_product:
   670                           	opt stack 0
   671                           
   672                           ; 3 bytes @ 0x25
   673  000026                     	ds	3
   674  000029                     ___ftmul@cntr:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x28
   678  000029                     	ds	1
   679  00002A                     ___ftmul@sign:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0x29
   683  00002A                     	ds	1
   684  00002B                     ?___ftdiv:
   685                           	opt stack 0
   686  00002B                     ___ftdiv@f1:
   687                           	opt stack 0
   688                           
   689                           ; 3 bytes @ 0x2A
   690  00002B                     	ds	3
   691  00002E                     ___ftdiv@f2:
   692                           	opt stack 0
   693                           
   694                           ; 3 bytes @ 0x2D
   695  00002E                     	ds	3
   696  000031                     ??___ftdiv:
   697                           
   698                           ; 0 bytes @ 0x30
   699  000031                     	ds	3
   700  000034                     ___ftdiv@cntr:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x33
   704  000034                     	ds	1
   705  000035                     ___ftdiv@f3:
   706                           	opt stack 0
   707                           
   708                           ; 3 bytes @ 0x34
   709  000035                     	ds	3
   710  000038                     ___ftdiv@exp:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x37
   714  000038                     	ds	1
   715  000039                     ___ftdiv@sign:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x38
   719  000039                     	ds	1
   720  00003A                     ?___fttol:
   721                           	opt stack 0
   722  00003A                     ___fttol@f1:
   723                           	opt stack 0
   724                           
   725                           ; 3 bytes @ 0x39
   726  00003A                     	ds	4
   727  00003E                     ??___fttol:
   728                           
   729                           ; 0 bytes @ 0x3D
   730  00003E                     	ds	5
   731  000043                     ___fttol@sign1:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x42
   735  000043                     	ds	1
   736  000044                     ___fttol@lval:
   737                           	opt stack 0
   738                           
   739                           ; 4 bytes @ 0x43
   740  000044                     	ds	4
   741  000048                     ___fttol@exp1:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x47
   745  000048                     	ds	1
   746  000049                     ?___awmod:
   747                           	opt stack 0
   748  000049                     ?___awtoft:
   749                           	opt stack 0
   750  000049                     ___awmod@dividend:
   751                           	opt stack 0
   752  000049                     ___awtoft@c:
   753                           	opt stack 0
   754  000049                     DO_DISPLAY_D1@T:
   755                           	opt stack 0
   756                           
   757                           ; 3 bytes @ 0x48
   758  000049                     	ds	2
   759  00004B                     ___awmod@divisor:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x4A
   763  00004B                     	ds	1
   764  00004C                     ___awtoft@sign:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x4B
   768  00004C                     	ds	1
   769  00004D                     ___awmod@counter:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x4C
   773  00004D                     	ds	1
   774  00004E                     ___awmod@sign:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0x4D
   778  00004E                     	ds	1
   779  00004F                     ?___awdiv:
   780                           	opt stack 0
   781  00004F                     ___awdiv@dividend:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x4E
   785  00004F                     	ds	2
   786  000051                     ___awdiv@divisor:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x50
   790  000051                     	ds	2
   791  000053                     ___awdiv@counter:
   792                           	opt stack 0
   793                           
   794                           ; 1 bytes @ 0x52
   795  000053                     	ds	1
   796  000054                     ___awdiv@sign:
   797                           	opt stack 0
   798                           
   799                           ; 1 bytes @ 0x53
   800  000054                     	ds	1
   801  000055                     ___awdiv@quotient:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0x54
   805  000055                     	ds	2
   806  000057                     ?___wmul:
   807                           	opt stack 0
   808  000057                     ___wmul@multiplier:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0x56
   812  000057                     	ds	2
   813  000059                     ___wmul@multiplicand:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0x58
   817  000059                     	ds	2
   818  00005B                     ___wmul@product:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x5A
   822  00005B                     	ds	2
   823  00005D                     ?_fround:
   824                           	opt stack 0
   825  00005D                     ?_scale:
   826                           	opt stack 0
   827                           
   828                           ; 3 bytes @ 0x5C
   829  00005D                     	ds	3
   830  000060                     _fround$1510:
   831                           	opt stack 0
   832  000060                     _scale$1511:
   833                           	opt stack 0
   834                           
   835                           ; 3 bytes @ 0x5F
   836  000060                     	ds	3
   837  000063                     scale@scl:
   838                           	opt stack 0
   839  000063                     _fround$1509:
   840                           	opt stack 0
   841                           
   842                           ; 3 bytes @ 0x62
   843  000063                     	ds	3
   844  000066                     fround@prec:
   845                           	opt stack 0
   846                           
   847                           ; 1 bytes @ 0x65
   848  000066                     	ds	1
   849  000067                     ?_printf:
   850                           	opt stack 0
   851  000067                     printf@f:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x66
   855  000067                     	ds	5
   856  00006C                     ??_printf:
   857                           
   858                           ; 0 bytes @ 0x6B
   859  00006C                     	ds	6
   860  000072                     tblptru	equ	0xFF8
   861                           tblptrh	equ	0xFF7
   862                           tblptrl	equ	0xFF6
   863                           tablat	equ	0xFF5
   864                           postinc0	equ	0xFEE
   865                           wreg	equ	0xFE8
   866                           postdec1	equ	0xFE5
   867                           fsr1l	equ	0xFE1
   868                           
   869                           ; 0 bytes @ 0x71
   870 ;;
   871 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   872 ;;
   873 ;; *************** function _main *****************
   874 ;; Defined at:
   875 ;;		line 128 in file "Lab5pB2.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  L               1   35[BANK0 ] unsigned char 
   880 ;;  U               1   34[BANK0 ] unsigned char 
   881 ;;  U               1   36[BANK0 ] unsigned char 
   882 ;;  L               1   33[BANK0 ] unsigned char 
   883 ;;  rL              3   37[BANK0 ] float 
   884 ;;  vL              3   30[BANK0 ] float 
   885 ;;  voltage_mv      3   27[BANK0 ] float 
   886 ;;  L               2   25[BANK0 ] int 
   887 ;;  U               2   23[BANK0 ] int 
   888 ;; Return value:  Size  Location     Type
   889 ;;		None               void
   890 ;; Registers used:
   891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;Total ram usage:       17 bytes
   902 ;; Hardware stack levels required when called:    4
   903 ;; This function calls:
   904 ;;		_Activate_Buzzer
   905 ;;		_DO_DISPLAY_7SEG_Lower
   906 ;;		_DO_DISPLAY_7SEG_Upper
   907 ;;		_DO_DISPLAY_D1
   908 ;;		_Deactivate_Buzzer
   909 ;;		_Get_Full_ADC
   910 ;;		_Init_ADC
   911 ;;		_SET_D2_OFF
   912 ;;		_SET_D2_YELLOW
   913 ;;		_Select_ADC_Channel
   914 ;;		_WAIT_1_SEC
   915 ;;		___awdiv
   916 ;;		___awmod
   917 ;;		___awtoft
   918 ;;		___ftadd
   919 ;;		___ftdiv
   920 ;;		___ftge
   921 ;;		___ftmul
   922 ;;		___ftneg
   923 ;;		___fttol
   924 ;;		___lbtoft
   925 ;;		___lwtoft
   926 ;;		_init_UART
   927 ;;		_printf
   928 ;; This function is called by:
   929 ;;		Startup code after reset
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text0
   934  001B3E                     __ptext0:
   935                           	opt stack 0
   936  001B3E                     _main:
   937                           	opt stack 27
   938                           
   939                           ;Lab5pB2.c: 130: init_UART();
   940                           
   941                           ;incstack = 0
   942  001B3E  EC5C  F017         	call	_init_UART	;wreg free
   943                           
   944                           ;Lab5pB2.c: 131: Init_ADC();
   945  001B42  EC7C  F017         	call	_Init_ADC	;wreg free
   946                           
   947                           ;Lab5pB2.c: 132: TRISA = 0xFF;
   948  001B46  6892               	setf	3986,c	;volatile
   949                           
   950                           ;Lab5pB2.c: 133: TRISB = 0x00;
   951  001B48  0E00               	movlw	0
   952  001B4A  6E93               	movwf	3987,c	;volatile
   953                           
   954                           ;Lab5pB2.c: 134: TRISC = 0x00;
   955  001B4C  0E00               	movlw	0
   956  001B4E  6E94               	movwf	3988,c	;volatile
   957                           
   958                           ;Lab5pB2.c: 135: TRISD = 0x00;
   959  001B50  0E00               	movlw	0
   960  001B52  6E95               	movwf	3989,c	;volatile
   961                           
   962                           ;Lab5pB2.c: 136: TRISE = 0x00;
   963  001B54  0E00               	movlw	0
   964  001B56  6E96               	movwf	3990,c	;volatile
   965  001B58  D000               	goto	l2761
   966  001B5A                     l2761:
   967                           
   968                           ;Lab5pB2.c: 140: {
   969                           ;Lab5pB2.c: 141: Select_ADC_Channel(2);
   970  001B5A  0E02               	movlw	2
   971  001B5C  EC76  F017         	call	_Select_ADC_Channel
   972                           
   973                           ;Lab5pB2.c: 142: nstep = Get_Full_ADC();
   974  001B60  EC11  F017         	call	_Get_Full_ADC	;wreg free
   975  001B64  C001  F0C2         	movff	?_Get_Full_ADC,_nstep
   976  001B68  C002  F0C3         	movff	?_Get_Full_ADC+1,_nstep+1
   977                           
   978                           ;Lab5pB2.c: 143: float voltage_mv = nstep * 4.0;
   979  001B6C  C0C2  F009         	movff	_nstep,___lwtoft@c
   980  001B70  C0C3  F00A         	movff	_nstep+1,___lwtoft@c+1
   981  001B74  ECEB  F016         	call	___lwtoft	;wreg free
   982  001B78  C009  F01C         	movff	?___lwtoft,___ftmul@f1
   983  001B7C  C00A  F01D         	movff	?___lwtoft+1,___ftmul@f1+1
   984  001B80  C00B  F01E         	movff	?___lwtoft+2,___ftmul@f1+2
   985  001B84  0E00               	movlw	0
   986  001B86  6E1F               	movwf	___ftmul@f2,c
   987  001B88  0E80               	movlw	128
   988  001B8A  6E20               	movwf	___ftmul@f2+1,c
   989  001B8C  0E40               	movlw	64
   990  001B8E  6E21               	movwf	___ftmul@f2+2,c
   991  001B90  EC86  F012         	call	___ftmul	;wreg free
   992  001B94  C01C  F09B         	movff	?___ftmul,main@voltage_mv
   993  001B98  C01D  F09C         	movff	?___ftmul+1,main@voltage_mv+1
   994  001B9C  C01E  F09D         	movff	?___ftmul+2,main@voltage_mv+2
   995                           
   996                           ;Lab5pB2.c: 144: float vL = ((voltage_mv)/(1000.0));
   997  001BA0  C09B  F02B         	movff	main@voltage_mv,___ftdiv@f1
   998  001BA4  C09C  F02C         	movff	main@voltage_mv+1,___ftdiv@f1+1
   999  001BA8  C09D  F02D         	movff	main@voltage_mv+2,___ftdiv@f1+2
  1000  001BAC  0E00               	movlw	0
  1001  001BAE  6E2E               	movwf	___ftdiv@f2,c
  1002  001BB0  0E7A               	movlw	122
  1003  001BB2  6E2F               	movwf	___ftdiv@f2+1,c
  1004  001BB4  0E44               	movlw	68
  1005  001BB6  6E30               	movwf	___ftdiv@f2+2,c
  1006  001BB8  EC75  F013         	call	___ftdiv	;wreg free
  1007  001BBC  C02B  F09E         	movff	?___ftdiv,main@vL
  1008  001BC0  C02C  F09F         	movff	?___ftdiv+1,main@vL+1
  1009  001BC4  C02D  F0A0         	movff	?___ftdiv+2,main@vL+2
  1010                           
  1011                           ;Lab5pB2.c: 145: float rL = 1*vL/(4.096 - vL);
  1012  001BC8  0E00               	movlw	0
  1013  001BCA  6E1F               	movwf	___ftmul@f2,c
  1014  001BCC  0E80               	movlw	128
  1015  001BCE  6E20               	movwf	___ftmul@f2+1,c
  1016  001BD0  0E3F               	movlw	63
  1017  001BD2  6E21               	movwf	___ftmul@f2+2,c
  1018  001BD4  C09E  F01C         	movff	main@vL,___ftmul@f1
  1019  001BD8  C09F  F01D         	movff	main@vL+1,___ftmul@f1+1
  1020  001BDC  C0A0  F01E         	movff	main@vL+2,___ftmul@f1+2
  1021  001BE0  EC86  F012         	call	___ftmul	;wreg free
  1022  001BE4  C01C  F02B         	movff	?___ftmul,___ftdiv@f1
  1023  001BE8  C01D  F02C         	movff	?___ftmul+1,___ftdiv@f1+1
  1024  001BEC  C01E  F02D         	movff	?___ftmul+2,___ftdiv@f1+2
  1025  001BF0  0E12               	movlw	18
  1026  001BF2  6E13               	movwf	___ftadd@f2,c
  1027  001BF4  0E83               	movlw	131
  1028  001BF6  6E14               	movwf	___ftadd@f2+1,c
  1029  001BF8  0E40               	movlw	64
  1030  001BFA  6E15               	movwf	___ftadd@f2+2,c
  1031  001BFC  C09E  F00D         	movff	main@vL,___ftneg@f1
  1032  001C00  C09F  F00E         	movff	main@vL+1,___ftneg@f1+1
  1033  001C04  C0A0  F00F         	movff	main@vL+2,___ftneg@f1+2
  1034  001C08  EC24  F017         	call	___ftneg	;wreg free
  1035  001C0C  C00D  F010         	movff	?___ftneg,___ftadd@f1
  1036  001C10  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  1037  001C14  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  1038  001C18  EC97  F010         	call	___ftadd	;wreg free
  1039  001C1C  C010  F02E         	movff	?___ftadd,___ftdiv@f2
  1040  001C20  C011  F02F         	movff	?___ftadd+1,___ftdiv@f2+1
  1041  001C24  C012  F030         	movff	?___ftadd+2,___ftdiv@f2+2
  1042  001C28  EC75  F013         	call	___ftdiv	;wreg free
  1043  001C2C  C02B  F0A5         	movff	?___ftdiv,main@rL
  1044  001C30  C02C  F0A6         	movff	?___ftdiv+1,main@rL+1
  1045  001C34  C02D  F0A7         	movff	?___ftdiv+2,main@rL+2
  1046                           
  1047                           ;Lab5pB2.c: 146: int U = (int) rL;
  1048  001C38  C0A5  F03A         	movff	main@rL,___fttol@f1
  1049  001C3C  C0A6  F03B         	movff	main@rL+1,___fttol@f1+1
  1050  001C40  C0A7  F03C         	movff	main@rL+2,___fttol@f1+2
  1051  001C44  EC02  F013         	call	___fttol	;wreg free
  1052  001C48  C03A  F097         	movff	?___fttol,main@U
  1053  001C4C  C03B  F098         	movff	?___fttol+1,main@U+1
  1054                           
  1055                           ;Lab5pB2.c: 147: int L = (int) (rL * 10) %10;
  1056  001C50  0E00               	movlw	0
  1057  001C52  6E1F               	movwf	___ftmul@f2,c
  1058  001C54  0E20               	movlw	32
  1059  001C56  6E20               	movwf	___ftmul@f2+1,c
  1060  001C58  0E41               	movlw	65
  1061  001C5A  6E21               	movwf	___ftmul@f2+2,c
  1062  001C5C  C0A5  F01C         	movff	main@rL,___ftmul@f1
  1063  001C60  C0A6  F01D         	movff	main@rL+1,___ftmul@f1+1
  1064  001C64  C0A7  F01E         	movff	main@rL+2,___ftmul@f1+2
  1065  001C68  EC86  F012         	call	___ftmul	;wreg free
  1066  001C6C  C01C  F03A         	movff	?___ftmul,___fttol@f1
  1067  001C70  C01D  F03B         	movff	?___ftmul+1,___fttol@f1+1
  1068  001C74  C01E  F03C         	movff	?___ftmul+2,___fttol@f1+2
  1069  001C78  EC02  F013         	call	___fttol	;wreg free
  1070  001C7C  C03A  F049         	movff	?___fttol,___awmod@dividend
  1071  001C80  C03B  F04A         	movff	?___fttol+1,___awmod@dividend+1
  1072  001C84  0E00               	movlw	0
  1073  001C86  6E4C               	movwf	___awmod@divisor+1,c
  1074  001C88  0E0A               	movlw	10
  1075  001C8A  6E4B               	movwf	___awmod@divisor,c
  1076  001C8C  EC69  F015         	call	___awmod	;wreg free
  1077  001C90  C049  F099         	movff	?___awmod,main@L
  1078  001C94  C04A  F09A         	movff	?___awmod+1,main@L+1
  1079                           
  1080                           ;Lab5pB2.c: 149: if (rL < 0.07)
  1081  001C98  C0A5  F001         	movff	main@rL,___ftge@ff1
  1082  001C9C  C0A6  F002         	movff	main@rL+1,___ftge@ff1+1
  1083  001CA0  C0A7  F003         	movff	main@rL+2,___ftge@ff1+2
  1084  001CA4  0E5C               	movlw	92
  1085  001CA6  6E04               	movwf	___ftge@ff2,c
  1086  001CA8  0E8F               	movlw	143
  1087  001CAA  6E05               	movwf	___ftge@ff2+1,c
  1088  001CAC  0E3D               	movlw	61
  1089  001CAE  6E06               	movwf	___ftge@ff2+2,c
  1090  001CB0  EC94  F014         	call	___ftge	;wreg free
  1091  001CB4  B0D8               	btfsc	status,0,c
  1092  001CB6  D005               	goto	l2781
  1093                           
  1094                           ;Lab5pB2.c: 150: {
  1095                           ;Lab5pB2.c: 151: Activate_Buzzer();
  1096  001CB8  EC66  F017         	call	_Activate_Buzzer	;wreg free
  1097                           
  1098                           ;Lab5pB2.c: 152: SET_D2_YELLOW();
  1099  001CBC  EC85  F017         	call	_SET_D2_YELLOW	;wreg free
  1100                           
  1101                           ;Lab5pB2.c: 153: }
  1102  001CC0  D005               	goto	l2785
  1103  001CC2                     l2781:
  1104                           
  1105                           ;Lab5pB2.c: 154: else
  1106                           ;Lab5pB2.c: 155: {
  1107                           ;Lab5pB2.c: 156: Deactivate_Buzzer();
  1108  001CC2  EC81  F017         	call	_Deactivate_Buzzer	;wreg free
  1109                           
  1110                           ;Lab5pB2.c: 157: SET_D2_OFF();
  1111  001CC6  EC88  F017         	call	_SET_D2_OFF	;wreg free
  1112  001CCA  D000               	goto	l2785
  1113  001CCC                     l2785:
  1114                           
  1115                           ;Lab5pB2.c: 158: }
  1116                           ;Lab5pB2.c: 161: DO_DISPLAY_D1(rL);
  1117  001CCC  C0A5  F049         	movff	main@rL,DO_DISPLAY_D1@T
  1118  001CD0  C0A6  F04A         	movff	main@rL+1,DO_DISPLAY_D1@T+1
  1119  001CD4  C0A7  F04B         	movff	main@rL+2,DO_DISPLAY_D1@T+2
  1120  001CD8  EC4A  F016         	call	_DO_DISPLAY_D1	;wreg free
  1121                           
  1122                           ;Lab5pB2.c: 162: WAIT_1_SEC();
  1123  001CDC  EC36  F017         	call	_WAIT_1_SEC	;wreg free
  1124                           
  1125                           ;Lab5pB2.c: 163: if (rL < 10)
  1126  001CE0  C0A5  F001         	movff	main@rL,___ftge@ff1
  1127  001CE4  C0A6  F002         	movff	main@rL+1,___ftge@ff1+1
  1128  001CE8  C0A7  F003         	movff	main@rL+2,___ftge@ff1+2
  1129  001CEC  0E00               	movlw	0
  1130  001CEE  6E04               	movwf	___ftge@ff2,c
  1131  001CF0  0E20               	movlw	32
  1132  001CF2  6E05               	movwf	___ftge@ff2+1,c
  1133  001CF4  0E41               	movlw	65
  1134  001CF6  6E06               	movwf	___ftge@ff2+2,c
  1135  001CF8  EC94  F014         	call	___ftge	;wreg free
  1136  001CFC  B0D8               	btfsc	status,0,c
  1137  001CFE  D086               	goto	l2803
  1138                           
  1139                           ;Lab5pB2.c: 164: {
  1140                           ;Lab5pB2.c: 165: temp = rL*10;
  1141  001D00  C0A5  F01C         	movff	main@rL,___ftmul@f1
  1142  001D04  C0A6  F01D         	movff	main@rL+1,___ftmul@f1+1
  1143  001D08  C0A7  F01E         	movff	main@rL+2,___ftmul@f1+2
  1144  001D0C  0E00               	movlw	0
  1145  001D0E  6E1F               	movwf	___ftmul@f2,c
  1146  001D10  0E20               	movlw	32
  1147  001D12  6E20               	movwf	___ftmul@f2+1,c
  1148  001D14  0E41               	movlw	65
  1149  001D16  6E21               	movwf	___ftmul@f2+2,c
  1150  001D18  EC86  F012         	call	___ftmul	;wreg free
  1151  001D1C  C01C  F0BF         	movff	?___ftmul,_temp
  1152  001D20  C01D  F0C0         	movff	?___ftmul+1,_temp+1
  1153  001D24  C01E  F0C1         	movff	?___ftmul+2,_temp+2
  1154                           
  1155                           ;Lab5pB2.c: 166: resist = (int) temp;
  1156  001D28  C0BF  F03A         	movff	_temp,___fttol@f1
  1157  001D2C  C0C0  F03B         	movff	_temp+1,___fttol@f1+1
  1158  001D30  C0C1  F03C         	movff	_temp+2,___fttol@f1+2
  1159  001D34  EC02  F013         	call	___fttol	;wreg free
  1160  001D38  C03A  F049         	movff	?___fttol,___awtoft@c
  1161  001D3C  C03B  F04A         	movff	?___fttol+1,___awtoft@c+1
  1162  001D40  ECB9  F016         	call	___awtoft	;wreg free
  1163  001D44  C049  F0BC         	movff	?___awtoft,_resist
  1164  001D48  C04A  F0BD         	movff	?___awtoft+1,_resist+1
  1165  001D4C  C04B  F0BE         	movff	?___awtoft+2,_resist+2
  1166                           
  1167                           ;Lab5pB2.c: 167: char U = (int) rL;
  1168  001D50  C0A5  F03A         	movff	main@rL,___fttol@f1
  1169  001D54  C0A6  F03B         	movff	main@rL+1,___fttol@f1+1
  1170  001D58  C0A7  F03C         	movff	main@rL+2,___fttol@f1+2
  1171  001D5C  EC02  F013         	call	___fttol	;wreg free
  1172  001D60  503A               	movf	?___fttol,w,c
  1173  001D62  0100               	movlb	0	; () banked
  1174  001D64  6FA4               	movwf	main@U_613& (0+255),b
  1175                           
  1176                           ;Lab5pB2.c: 168: char L = (int) ((rL - U) * 10);
  1177  001D66  0E00               	movlw	0
  1178  001D68  6E1F               	movwf	___ftmul@f2,c
  1179  001D6A  0E20               	movlw	32
  1180  001D6C  6E20               	movwf	___ftmul@f2+1,c
  1181  001D6E  0E41               	movlw	65
  1182  001D70  6E21               	movwf	___ftmul@f2+2,c
  1183  001D72  C0A5  F013         	movff	main@rL,___ftadd@f2
  1184  001D76  C0A6  F014         	movff	main@rL+1,___ftadd@f2+1
  1185  001D7A  C0A7  F015         	movff	main@rL+2,___ftadd@f2+2
  1186  001D7E  0100               	movlb	0	; () banked
  1187  001D80  51A4               	movf	main@U_613& (0+255),w,b
  1188  001D82  ECFE  F016         	call	___lbtoft
  1189  001D86  C009  F00D         	movff	?___lbtoft,___ftneg@f1
  1190  001D8A  C00A  F00E         	movff	?___lbtoft+1,___ftneg@f1+1
  1191  001D8E  C00B  F00F         	movff	?___lbtoft+2,___ftneg@f1+2
  1192  001D92  EC24  F017         	call	___ftneg	;wreg free
  1193  001D96  C00D  F010         	movff	?___ftneg,___ftadd@f1
  1194  001D9A  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  1195  001D9E  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  1196  001DA2  EC97  F010         	call	___ftadd	;wreg free
  1197  001DA6  C010  F01C         	movff	?___ftadd,___ftmul@f1
  1198  001DAA  C011  F01D         	movff	?___ftadd+1,___ftmul@f1+1
  1199  001DAE  C012  F01E         	movff	?___ftadd+2,___ftmul@f1+2
  1200  001DB2  EC86  F012         	call	___ftmul	;wreg free
  1201  001DB6  C01C  F03A         	movff	?___ftmul,___fttol@f1
  1202  001DBA  C01D  F03B         	movff	?___ftmul+1,___fttol@f1+1
  1203  001DBE  C01E  F03C         	movff	?___ftmul+2,___fttol@f1+2
  1204  001DC2  EC02  F013         	call	___fttol	;wreg free
  1205  001DC6  503A               	movf	?___fttol,w,c
  1206  001DC8  0100               	movlb	0	; () banked
  1207  001DCA  6FA1               	movwf	main@L_614& (0+255),b
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;Lab5pB2.c: 169: PORTC=array[U];
  1211  001DCC  0100               	movlb	0	; () banked
  1212  001DCE  51A4               	movf	main@U_613& (0+255),w,b
  1213  001DD0  0D02               	mullw	2
  1214  001DD2  0EA8               	movlw	low _array
  1215  001DD4  24F3               	addwf	prodl,w,c
  1216  001DD6  6ED9               	movwf	fsr2l,c
  1217  001DD8  0E00               	movlw	high _array
  1218  001DDA  20F4               	addwfc	prodh,w,c
  1219  001DDC  6EDA               	movwf	fsr2h,c
  1220  001DDE  50DF               	movf	indf2,w,c
  1221  001DE0  6E82               	movwf	3970,c	;volatile
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;Lab5pB2.c: 170: PORTD=array[L];
  1225  001DE2  0100               	movlb	0	; () banked
  1226  001DE4  51A1               	movf	main@L_614& (0+255),w,b
  1227  001DE6  0D02               	mullw	2
  1228  001DE8  0EA8               	movlw	low _array
  1229  001DEA  24F3               	addwf	prodl,w,c
  1230  001DEC  6ED9               	movwf	fsr2l,c
  1231  001DEE  0E00               	movlw	high _array
  1232  001DF0  20F4               	addwfc	prodh,w,c
  1233  001DF2  6EDA               	movwf	fsr2h,c
  1234  001DF4  50DF               	movf	indf2,w,c
  1235  001DF6  6E83               	movwf	3971,c	;volatile
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;Lab5pB2.c: 171: DO_DISPLAY_7SEG_Upper (U);
  1239  001DF8  0100               	movlb	0	; () banked
  1240  001DFA  51A4               	movf	main@U_613& (0+255),w,b
  1241  001DFC  EC25  F015         	call	_DO_DISPLAY_7SEG_Upper
  1242                           
  1243                           ;Lab5pB2.c: 172: DO_DISPLAY_7SEG_Lower (L);
  1244  001E00  0100               	movlb	0	; () banked
  1245  001E02  51A1               	movf	main@L_614& (0+255),w,b
  1246  001E04  EC46  F017         	call	_DO_DISPLAY_7SEG_Lower
  1247                           
  1248                           ;Lab5pB2.c: 173: PORTDbits.RD7 = 0;
  1249  001E08  9E83               	bcf	3971,7,c	;volatile
  1250                           
  1251                           ;Lab5pB2.c: 174: }
  1252  001E0A  D05E               	goto	l2815
  1253  001E0C                     l2803:
  1254                           
  1255                           ;Lab5pB2.c: 175: else
  1256                           ;Lab5pB2.c: 176: {
  1257                           ;Lab5pB2.c: 177: resist = (int) rL;
  1258  001E0C  C0A5  F03A         	movff	main@rL,___fttol@f1
  1259  001E10  C0A6  F03B         	movff	main@rL+1,___fttol@f1+1
  1260  001E14  C0A7  F03C         	movff	main@rL+2,___fttol@f1+2
  1261  001E18  EC02  F013         	call	___fttol	;wreg free
  1262  001E1C  C03A  F049         	movff	?___fttol,___awtoft@c
  1263  001E20  C03B  F04A         	movff	?___fttol+1,___awtoft@c+1
  1264  001E24  ECB9  F016         	call	___awtoft	;wreg free
  1265  001E28  C049  F0BC         	movff	?___awtoft,_resist
  1266  001E2C  C04A  F0BD         	movff	?___awtoft+1,_resist+1
  1267  001E30  C04B  F0BE         	movff	?___awtoft+2,_resist+2
  1268                           
  1269                           ;Lab5pB2.c: 178: char U = (int) resist/10;
  1270  001E34  C0BC  F03A         	movff	_resist,___fttol@f1
  1271  001E38  C0BD  F03B         	movff	_resist+1,___fttol@f1+1
  1272  001E3C  C0BE  F03C         	movff	_resist+2,___fttol@f1+2
  1273  001E40  EC02  F013         	call	___fttol	;wreg free
  1274  001E44  C03A  F04F         	movff	?___fttol,___awdiv@dividend
  1275  001E48  C03B  F050         	movff	?___fttol+1,___awdiv@dividend+1
  1276  001E4C  0E00               	movlw	0
  1277  001E4E  6E52               	movwf	___awdiv@divisor+1,c
  1278  001E50  0E0A               	movlw	10
  1279  001E52  6E51               	movwf	___awdiv@divisor,c
  1280  001E54  EC49  F014         	call	___awdiv	;wreg free
  1281  001E58  504F               	movf	?___awdiv,w,c
  1282  001E5A  0100               	movlb	0	; () banked
  1283  001E5C  6FA2               	movwf	main@U_625& (0+255),b
  1284                           
  1285                           ;Lab5pB2.c: 179: char L = (int) resist % 10;
  1286  001E5E  C0BC  F03A         	movff	_resist,___fttol@f1
  1287  001E62  C0BD  F03B         	movff	_resist+1,___fttol@f1+1
  1288  001E66  C0BE  F03C         	movff	_resist+2,___fttol@f1+2
  1289  001E6A  EC02  F013         	call	___fttol	;wreg free
  1290  001E6E  C03A  F049         	movff	?___fttol,___awmod@dividend
  1291  001E72  C03B  F04A         	movff	?___fttol+1,___awmod@dividend+1
  1292  001E76  0E00               	movlw	0
  1293  001E78  6E4C               	movwf	___awmod@divisor+1,c
  1294  001E7A  0E0A               	movlw	10
  1295  001E7C  6E4B               	movwf	___awmod@divisor,c
  1296  001E7E  EC69  F015         	call	___awmod	;wreg free
  1297  001E82  5049               	movf	?___awmod,w,c
  1298  001E84  0100               	movlb	0	; () banked
  1299  001E86  6FA3               	movwf	main@L_626& (0+255),b
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;Lab5pB2.c: 180: PORTC=array[U];
  1303  001E88  0100               	movlb	0	; () banked
  1304  001E8A  51A2               	movf	main@U_625& (0+255),w,b
  1305  001E8C  0D02               	mullw	2
  1306  001E8E  0EA8               	movlw	low _array
  1307  001E90  24F3               	addwf	prodl,w,c
  1308  001E92  6ED9               	movwf	fsr2l,c
  1309  001E94  0E00               	movlw	high _array
  1310  001E96  20F4               	addwfc	prodh,w,c
  1311  001E98  6EDA               	movwf	fsr2h,c
  1312  001E9A  50DF               	movf	indf2,w,c
  1313  001E9C  6E82               	movwf	3970,c	;volatile
  1314                           
  1315                           ; BSR set to: 0
  1316                           ;Lab5pB2.c: 181: PORTD=array[L];
  1317  001E9E  0100               	movlb	0	; () banked
  1318  001EA0  51A3               	movf	main@L_626& (0+255),w,b
  1319  001EA2  0D02               	mullw	2
  1320  001EA4  0EA8               	movlw	low _array
  1321  001EA6  24F3               	addwf	prodl,w,c
  1322  001EA8  6ED9               	movwf	fsr2l,c
  1323  001EAA  0E00               	movlw	high _array
  1324  001EAC  20F4               	addwfc	prodh,w,c
  1325  001EAE  6EDA               	movwf	fsr2h,c
  1326  001EB0  50DF               	movf	indf2,w,c
  1327  001EB2  6E83               	movwf	3971,c	;volatile
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;Lab5pB2.c: 182: DO_DISPLAY_7SEG_Upper (U);
  1331  001EB4  0100               	movlb	0	; () banked
  1332  001EB6  51A2               	movf	main@U_625& (0+255),w,b
  1333  001EB8  EC25  F015         	call	_DO_DISPLAY_7SEG_Upper
  1334                           
  1335                           ;Lab5pB2.c: 183: DO_DISPLAY_7SEG_Lower (L);
  1336  001EBC  0100               	movlb	0	; () banked
  1337  001EBE  51A3               	movf	main@L_626& (0+255),w,b
  1338  001EC0  EC46  F017         	call	_DO_DISPLAY_7SEG_Lower
  1339                           
  1340                           ;Lab5pB2.c: 184: PORTDbits.RD7 = 1;
  1341  001EC4  8E83               	bsf	3971,7,c	;volatile
  1342  001EC6  D000               	goto	l2815
  1343  001EC8                     l2815:
  1344                           
  1345                           ;Lab5pB2.c: 185: }
  1346                           ;Lab5pB2.c: 189: printf("Resistance: %f kOhm\r\n", rL);
  1347  001EC8  0E77               	movlw	low STR_1
  1348  001ECA  6E67               	movwf	printf@f,c
  1349  001ECC  0E10               	movlw	high STR_1
  1350  001ECE  6E68               	movwf	printf@f+1,c
  1351  001ED0  C0A5  F069         	movff	main@rL,?_printf+2
  1352  001ED4  C0A6  F06A         	movff	main@rL+1,?_printf+3
  1353  001ED8  C0A7  F06B         	movff	main@rL+2,?_printf+4
  1354  001EDC  EC47  F008         	call	_printf	;wreg free
  1355                           
  1356                           ;Lab5pB2.c: 191: WAIT_1_SEC();
  1357  001EE0  EC36  F017         	call	_WAIT_1_SEC	;wreg free
  1358  001EE4  D63A               	goto	l2761
  1359  001EE6  EF00  F000         	goto	start
  1360  001EEA                     __end_of_main:
  1361                           	opt stack 0
  1362                           tblptru	equ	0xFF8
  1363                           tblptrh	equ	0xFF7
  1364                           tblptrl	equ	0xFF6
  1365                           tablat	equ	0xFF5
  1366                           prodh	equ	0xFF4
  1367                           prodl	equ	0xFF3
  1368                           postinc0	equ	0xFEE
  1369                           wreg	equ	0xFE8
  1370                           postdec1	equ	0xFE5
  1371                           fsr1l	equ	0xFE1
  1372                           indf2	equ	0xFDF
  1373                           fsr2h	equ	0xFDA
  1374                           fsr2l	equ	0xFD9
  1375                           status	equ	0xFD8
  1376                           
  1377 ;; *************** function _printf *****************
  1378 ;; Defined at:
  1379 ;;		line 464 in file "E:\XC8\sources\common\doprnt.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  f               2  102[COMRAM] PTR const unsigned char 
  1382 ;;		 -> STR_1(22), 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  tmpval          4   15[BANK0 ] struct .
  1385 ;;  val             4    9[BANK0 ] unsigned long 
  1386 ;;  fval            3   19[BANK0 ] unsigned long 
  1387 ;;  cp              3    0        PTR const unsigned char 
  1388 ;;  exp             2   13[BANK0 ] int 
  1389 ;;  prec            2    7[BANK0 ] int 
  1390 ;;  flag            2    5[BANK0 ] unsigned short 
  1391 ;;  ap              2    3[BANK0 ] PTR void [1]
  1392 ;;		 -> ?_printf(2), 
  1393 ;;  len             2    0        unsigned int 
  1394 ;;  width           2    0        int 
  1395 ;;  c               1   22[BANK0 ] char 
  1396 ;;  d               1    0        unsigned char 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  2  102[COMRAM] int 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1406 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Totals:        11      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;Total ram usage:       34 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:    3
  1413 ;; This function calls:
  1414 ;;		___awdiv
  1415 ;;		___ftadd
  1416 ;;		___ftge
  1417 ;;		___ftmul
  1418 ;;		___ftneg
  1419 ;;		___ftsub
  1420 ;;		___fttol
  1421 ;;		___lldiv
  1422 ;;		___llmod
  1423 ;;		___lltoft
  1424 ;;		___wmul
  1425 ;;		__div_to_l_
  1426 ;;		__tdiv_to_l_
  1427 ;;		_fround
  1428 ;;		_putch
  1429 ;;		_scale
  1430 ;; This function is called by:
  1431 ;;		_main
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text1
  1436  00108E                     __ptext1:
  1437                           	opt stack 0
  1438  00108E                     _printf:
  1439                           	opt stack 27
  1440                           
  1441                           ;doprnt.c: 466: va_list ap;
  1442                           ;doprnt.c: 499: signed char c;
  1443                           ;doprnt.c: 501: int width;
  1444                           ;doprnt.c: 504: int prec;
  1445                           ;doprnt.c: 508: unsigned short flag;
  1446                           ;doprnt.c: 515: char d;
  1447                           ;doprnt.c: 516: double fval;
  1448                           ;doprnt.c: 517: int exp;
  1449                           ;doprnt.c: 523: union {
  1450                           ;doprnt.c: 524: unsigned long vd;
  1451                           ;doprnt.c: 525: double integ;
  1452                           ;doprnt.c: 526: } tmpval;
  1453                           ;doprnt.c: 528: unsigned long val;
  1454                           ;doprnt.c: 529: unsigned len;
  1455                           ;doprnt.c: 530: const char * cp;
  1456                           ;doprnt.c: 533: *ap = __va_start();
  1457                           
  1458                           ;incstack = 0
  1459  00108E  0E69               	movlw	low (?_printf+2)
  1460  001090  0100               	movlb	0	; () banked
  1461  001092  6F83               	movwf	printf@ap& (0+255),b
  1462  001094  0E00               	movlw	high (?_printf+2)
  1463  001096  0100               	movlb	0	; () banked
  1464  001098  6F84               	movwf	(printf@ap+1)& (0+255),b
  1465                           
  1466                           ;doprnt.c: 536: while(c = *f++) {
  1467  00109A  D351               	goto	l2721
  1468  00109C                     l2573:
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;doprnt.c: 538: if(c != '%')
  1472  00109C  0E25               	movlw	37
  1473  00109E  0100               	movlb	0	; () banked
  1474  0010A0  1996               	xorwf	printf@c& (0+255),w,b
  1475  0010A2  B4D8               	btfsc	status,2,c
  1476  0010A4  D005               	goto	l2577
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;doprnt.c: 540: {
  1480                           ;doprnt.c: 541: (putch(c) );
  1481  0010A6  0100               	movlb	0	; () banked
  1482  0010A8  5196               	movf	printf@c& (0+255),w,b
  1483  0010AA  EC6F  F017         	call	_putch
  1484                           
  1485                           ;doprnt.c: 542: continue;
  1486  0010AE  D347               	goto	l2721
  1487  0010B0                     l2577:
  1488                           
  1489                           ;doprnt.c: 543: }
  1490                           ;doprnt.c: 548: flag = 0;
  1491  0010B0  0E00               	movlw	0
  1492  0010B2  0100               	movlb	0	; () banked
  1493  0010B4  6F86               	movwf	(printf@flag+1)& (0+255),b
  1494  0010B6  0E00               	movlw	0
  1495  0010B8  6F85               	movwf	printf@flag& (0+255),b
  1496                           
  1497                           ;doprnt.c: 635: switch(c = *f++) {
  1498  0010BA  D006               	goto	l2583
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;doprnt.c: 638: goto alldone;
  1502                           
  1503                           ;doprnt.c: 637: case 0:
  1504  0010BC  D34F               	goto	l226
  1505  0010BE                     l2579:
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;doprnt.c: 663: flag |= 0x400;
  1509  0010BE  0100               	movlb	0	; () banked
  1510  0010C0  8586               	bsf	(printf@flag+1)& (0+255),2,b
  1511                           
  1512                           ;doprnt.c: 664: break;
  1513  0010C2  D014               	goto	l2585
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;doprnt.c: 813: continue;
  1517                           
  1518                           ;doprnt.c: 802: default:
  1519  0010C4  D33C               	goto	l2721
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;doprnt.c: 822: }
  1523  0010C6  D012               	goto	l2585
  1524  0010C8                     l2583:
  1525                           
  1526                           ; BSR set to: 0
  1527  0010C8  C067  FFF6         	movff	printf@f,tblptrl
  1528  0010CC  C068  FFF7         	movff	printf@f+1,tblptrh
  1529  0010D0  4A67               	infsnz	printf@f,f,c
  1530  0010D2  2A68               	incf	printf@f+1,f,c
  1531  0010D4                     	if	0	;tblptru may be non-zero
  1532  0010D4                     	endif
  1533  0010D4                     	if	0	;tblptru may be non-zero
  1534  0010D4                     	endif
  1535  0010D4  0008               	tblrd		*
  1536  0010D6  CFF5 F096          	movff	tablat,printf@c
  1537  0010DA  0100               	movlb	0	; () banked
  1538  0010DC  5196               	movf	printf@c& (0+255),w,b
  1539                           
  1540                           ; Switch size 1, requested type "space"
  1541                           ; Number of cases is 2, Range of values is 0 to 102
  1542                           ; switch strategies available:
  1543                           ; Name         Instructions Cycles
  1544                           ; simple_byte            7     4 (average)
  1545                           ;	Chosen strategy is simple_byte
  1546  0010DE  0A00               	xorlw	0	; case 0
  1547  0010E0  B4D8               	btfsc	status,2,c
  1548  0010E2  D33C               	goto	l226
  1549  0010E4  0A66               	xorlw	102	; case 102
  1550  0010E6  B4D8               	btfsc	status,2,c
  1551  0010E8  D7EA               	goto	l2579
  1552  0010EA  D329               	goto	l2721
  1553  0010EC                     l2585:
  1554                           
  1555                           ; BSR set to: 0
  1556                           ;doprnt.c: 825: if(flag & (0x700)) {
  1557  0010EC  0E07               	movlw	7
  1558  0010EE  0100               	movlb	0	; () banked
  1559  0010F0  1586               	andwf	(printf@flag+1)& (0+255),w,b
  1560  0010F2  B4D8               	btfsc	status,2,c
  1561  0010F4  D314               	goto	l2717
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;doprnt.c: 829: prec = 6;
  1565  0010F6  0E00               	movlw	0
  1566  0010F8  0100               	movlb	0	; () banked
  1567  0010FA  6F88               	movwf	(printf@prec+1)& (0+255),b
  1568  0010FC  0E06               	movlw	6
  1569  0010FE  6F87               	movwf	printf@prec& (0+255),b
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1573  001100  C083  FFD9         	movff	printf@ap,fsr2l
  1574  001104  C084  FFDA         	movff	printf@ap+1,fsr2h
  1575  001108  CFDE F093          	movff	postinc2,printf@fval
  1576  00110C  CFDE F094          	movff	postinc2,printf@fval+1
  1577  001110  CFDD F095          	movff	postdec2,printf@fval+2
  1578                           
  1579                           ; BSR set to: 0
  1580  001114  0E03               	movlw	3
  1581  001116  0100               	movlb	0	; () banked
  1582  001118  2783               	addwf	printf@ap& (0+255),f,b
  1583  00111A  0E00               	movlw	0
  1584  00111C  2384               	addwfc	(printf@ap+1)& (0+255),f,b
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;doprnt.c: 831: if(fval < 0.0) {
  1588  00111E  0100               	movlb	0	; () banked
  1589  001120  AF95               	btfss	(printf@fval+2)& (0+255),7,b
  1590  001122  D012               	goto	l2599
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;doprnt.c: 832: fval = -fval;
  1594  001124  C093  F00D         	movff	printf@fval,___ftneg@f1
  1595  001128  C094  F00E         	movff	printf@fval+1,___ftneg@f1+1
  1596  00112C  C095  F00F         	movff	printf@fval+2,___ftneg@f1+2
  1597  001130  EC24  F017         	call	___ftneg	;wreg free
  1598  001134  C00D  F093         	movff	?___ftneg,printf@fval
  1599  001138  C00E  F094         	movff	?___ftneg+1,printf@fval+1
  1600  00113C  C00F  F095         	movff	?___ftneg+2,printf@fval+2
  1601                           
  1602                           ;doprnt.c: 833: flag |= 0x03;
  1603  001140  0E03               	movlw	3
  1604  001142  0100               	movlb	0	; () banked
  1605  001144  1385               	iorwf	printf@flag& (0+255),f,b
  1606  001146  D000               	goto	l2599
  1607  001148                     l2599:
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;doprnt.c: 834: }
  1611                           ;doprnt.c: 835: exp = 0;
  1612  001148  0E00               	movlw	0
  1613  00114A  0100               	movlb	0	; () banked
  1614  00114C  6F8E               	movwf	(printf@exp+1)& (0+255),b
  1615  00114E  0E00               	movlw	0
  1616  001150  6F8D               	movwf	printf@exp& (0+255),b
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;doprnt.c: 836: if( fval!=0) {
  1620  001152  0100               	movlb	0	; () banked
  1621  001154  5193               	movf	printf@fval& (0+255),w,b
  1622  001156  0100               	movlb	0	; () banked
  1623  001158  1194               	iorwf	(printf@fval+1)& (0+255),w,b
  1624  00115A  0100               	movlb	0	; () banked
  1625  00115C  1195               	iorwf	(printf@fval+2)& (0+255),w,b
  1626  00115E  B4D8               	btfsc	status,2,c
  1627  001160  D08D               	goto	l2627
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1631  001162  0E82               	movlw	130
  1632  001164  6E6C               	movwf	??_printf& (0+255),c
  1633  001166  0EFF               	movlw	255
  1634  001168  6E6D               	movwf	(??_printf+1)& (0+255),c
  1635  00116A  C093  F06E         	movff	printf@fval,??_printf+2
  1636  00116E  C094  F06F         	movff	printf@fval+1,??_printf+3
  1637  001172  C095  F070         	movff	printf@fval+2,??_printf+4
  1638  001176  C096  F071         	movff	printf@fval+3,??_printf+5
  1639  00117A  0E10               	movlw	16
  1640  00117C  D005               	goto	u2710
  1641  00117E                     u2715:
  1642  00117E  90D8               	bcf	status,0,c
  1643  001180  3271               	rrcf	??_printf+5,f,c
  1644  001182  3270               	rrcf	??_printf+4,f,c
  1645  001184  326F               	rrcf	??_printf+3,f,c
  1646  001186  326E               	rrcf	??_printf+2,f,c
  1647  001188                     u2710:
  1648  001188  2EE8               	decfsz	wreg,f,c
  1649  00118A  D7F9               	goto	u2715
  1650  00118C  506E               	movf	??_printf+2,w,c
  1651  00118E  246C               	addwf	??_printf,w,c
  1652  001190  0100               	movlb	0	; () banked
  1653  001192  6F8D               	movwf	printf@exp& (0+255),b
  1654  001194  0E00               	movlw	0
  1655  001196  206D               	addwfc	??_printf+1,w,c
  1656  001198  0100               	movlb	0	; () banked
  1657  00119A  6F8E               	movwf	(printf@exp+1)& (0+255),b
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;doprnt.c: 838: exp--;
  1661  00119C  0100               	movlb	0	; () banked
  1662  00119E  078D               	decf	printf@exp& (0+255),f,b
  1663  0011A0  A0D8               	btfss	status,0,c
  1664  0011A2  078E               	decf	(printf@exp+1)& (0+255),f,b
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;doprnt.c: 839: exp *= 3;
  1668  0011A4  C08D  F057         	movff	printf@exp,___wmul@multiplier
  1669  0011A8  C08E  F058         	movff	printf@exp+1,___wmul@multiplier+1
  1670  0011AC  0E00               	movlw	0
  1671  0011AE  6E5A               	movwf	___wmul@multiplicand+1,c
  1672  0011B0  0E03               	movlw	3
  1673  0011B2  6E59               	movwf	___wmul@multiplicand,c
  1674  0011B4  ECD7  F016         	call	___wmul	;wreg free
  1675  0011B8  C057  F08D         	movff	?___wmul,printf@exp
  1676  0011BC  C058  F08E         	movff	?___wmul+1,printf@exp+1
  1677                           
  1678                           ;doprnt.c: 840: exp /= 10;
  1679  0011C0  C08D  F04F         	movff	printf@exp,___awdiv@dividend
  1680  0011C4  C08E  F050         	movff	printf@exp+1,___awdiv@dividend+1
  1681  0011C8  0E00               	movlw	0
  1682  0011CA  6E52               	movwf	___awdiv@divisor+1,c
  1683  0011CC  0E0A               	movlw	10
  1684  0011CE  6E51               	movwf	___awdiv@divisor,c
  1685  0011D0  EC49  F014         	call	___awdiv	;wreg free
  1686  0011D4  C04F  F08D         	movff	?___awdiv,printf@exp
  1687  0011D8  C050  F08E         	movff	?___awdiv+1,printf@exp+1
  1688                           
  1689                           ;doprnt.c: 841: if(exp < 0)
  1690  0011DC  0100               	movlb	0	; () banked
  1691  0011DE  AF8E               	btfss	(printf@exp+1)& (0+255),7,b
  1692  0011E0  D005               	goto	l2615
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;doprnt.c: 842: exp--;
  1696  0011E2  0100               	movlb	0	; () banked
  1697  0011E4  078D               	decf	printf@exp& (0+255),f,b
  1698  0011E6  A0D8               	btfss	status,0,c
  1699  0011E8  078E               	decf	(printf@exp+1)& (0+255),f,b
  1700  0011EA  D000               	goto	l2615
  1701  0011EC                     l2615:
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1705  0011EC  0100               	movlb	0	; () banked
  1706  0011EE  518D               	movf	printf@exp& (0+255),w,b
  1707  0011F0  0800               	sublw	0
  1708  0011F2  ECAF  F00B         	call	_scale
  1709  0011F6  C05D  F08F         	movff	?_scale,printf@tmpval
  1710  0011FA  C05E  F090         	movff	?_scale+1,printf@tmpval+1
  1711  0011FE  C05F  F091         	movff	?_scale+2,printf@tmpval+2
  1712                           
  1713                           ;doprnt.c: 847: tmpval.integ *= fval;
  1714  001202  C08F  F01C         	movff	printf@tmpval,___ftmul@f1
  1715  001206  C090  F01D         	movff	printf@tmpval+1,___ftmul@f1+1
  1716  00120A  C091  F01E         	movff	printf@tmpval+2,___ftmul@f1+2
  1717  00120E  C093  F01F         	movff	printf@fval,___ftmul@f2
  1718  001212  C094  F020         	movff	printf@fval+1,___ftmul@f2+1
  1719  001216  C095  F021         	movff	printf@fval+2,___ftmul@f2+2
  1720  00121A  EC86  F012         	call	___ftmul	;wreg free
  1721  00121E  C01C  F08F         	movff	?___ftmul,printf@tmpval
  1722  001222  C01D  F090         	movff	?___ftmul+1,printf@tmpval+1
  1723  001226  C01E  F091         	movff	?___ftmul+2,printf@tmpval+2
  1724                           
  1725                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1726  00122A  C08F  F001         	movff	printf@tmpval,___ftge@ff1
  1727  00122E  C090  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1728  001232  C091  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1729  001236  0E00               	movlw	0
  1730  001238  6E04               	movwf	___ftge@ff2,c
  1731  00123A  0E80               	movlw	128
  1732  00123C  6E05               	movwf	___ftge@ff2+1,c
  1733  00123E  0E3F               	movlw	63
  1734  001240  6E06               	movwf	___ftge@ff2+2,c
  1735  001242  EC94  F014         	call	___ftge	;wreg free
  1736  001246  B0D8               	btfsc	status,0,c
  1737  001248  D005               	goto	l2623
  1738                           
  1739                           ;doprnt.c: 849: exp--;
  1740  00124A  0100               	movlb	0	; () banked
  1741  00124C  078D               	decf	printf@exp& (0+255),f,b
  1742  00124E  A0D8               	btfss	status,0,c
  1743  001250  078E               	decf	(printf@exp+1)& (0+255),f,b
  1744  001252  D014               	goto	l2627
  1745  001254                     l2623:
  1746                           
  1747                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1748  001254  C08F  F001         	movff	printf@tmpval,___ftge@ff1
  1749  001258  C090  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1750  00125C  C091  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1751  001260  0E00               	movlw	0
  1752  001262  6E04               	movwf	___ftge@ff2,c
  1753  001264  0E20               	movlw	32
  1754  001266  6E05               	movwf	___ftge@ff2+1,c
  1755  001268  0E41               	movlw	65
  1756  00126A  6E06               	movwf	___ftge@ff2+2,c
  1757  00126C  EC94  F014         	call	___ftge	;wreg free
  1758  001270  A0D8               	btfss	status,0,c
  1759  001272  D004               	goto	l2627
  1760                           
  1761                           ;doprnt.c: 851: exp++;
  1762  001274  0100               	movlb	0	; () banked
  1763  001276  4B8D               	infsnz	printf@exp& (0+255),f,b
  1764  001278  2B8E               	incf	(printf@exp+1)& (0+255),f,b
  1765                           
  1766                           ; BSR set to: 0
  1767                           
  1768                           ; BSR set to: 0
  1769  00127A  D000               	goto	l2627
  1770  00127C                     l2627:
  1771                           
  1772                           ;doprnt.c: 852: }
  1773                           ;doprnt.c: 1112: if(prec <= 12)
  1774  00127C  0100               	movlb	0	; () banked
  1775  00127E  BF88               	btfsc	(printf@prec+1)& (0+255),7,b
  1776  001280  D008               	goto	l2629
  1777  001282  0100               	movlb	0	; () banked
  1778  001284  5188               	movf	(printf@prec+1)& (0+255),w,b
  1779  001286  E11E               	bnz	l2631
  1780  001288  0E0D               	movlw	13
  1781  00128A  0100               	movlb	0	; () banked
  1782  00128C  5D87               	subwf	printf@prec& (0+255),w,b
  1783  00128E  B0D8               	btfsc	status,0,c
  1784  001290  D019               	goto	l2631
  1785  001292                     l2629:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;doprnt.c: 1113: fval += fround(prec);
  1789  001292  C093  F010         	movff	printf@fval,___ftadd@f1
  1790  001296  C094  F011         	movff	printf@fval+1,___ftadd@f1+1
  1791  00129A  C095  F012         	movff	printf@fval+2,___ftadd@f1+2
  1792  00129E  0100               	movlb	0	; () banked
  1793  0012A0  5187               	movf	printf@prec& (0+255),w,b
  1794  0012A2  EC75  F00F         	call	_fround
  1795  0012A6  C05D  F013         	movff	?_fround,___ftadd@f2
  1796  0012AA  C05E  F014         	movff	?_fround+1,___ftadd@f2+1
  1797  0012AE  C05F  F015         	movff	?_fround+2,___ftadd@f2+2
  1798  0012B2  EC97  F010         	call	___ftadd	;wreg free
  1799  0012B6  C010  F093         	movff	?___ftadd,printf@fval
  1800  0012BA  C011  F094         	movff	?___ftadd+1,printf@fval+1
  1801  0012BE  C012  F095         	movff	?___ftadd+2,printf@fval+2
  1802  0012C2  D000               	goto	l2631
  1803  0012C4                     l2631:
  1804                           
  1805                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1806  0012C4  0100               	movlb	0	; () banked
  1807  0012C6  BF8E               	btfsc	(printf@exp+1)& (0+255),7,b
  1808  0012C8  D008               	goto	l2633
  1809  0012CA  0100               	movlb	0	; () banked
  1810  0012CC  518E               	movf	(printf@exp+1)& (0+255),w,b
  1811  0012CE  E128               	bnz	l2639
  1812  0012D0  0E0A               	movlw	10
  1813  0012D2  0100               	movlb	0	; () banked
  1814  0012D4  5D8D               	subwf	printf@exp& (0+255),w,b
  1815  0012D6  B0D8               	btfsc	status,0,c
  1816  0012D8  D023               	goto	l2639
  1817  0012DA                     l2633:
  1818                           
  1819                           ; BSR set to: 0
  1820  0012DA  0100               	movlb	0	; () banked
  1821  0012DC  5193               	movf	printf@fval& (0+255),w,b
  1822  0012DE  0100               	movlb	0	; () banked
  1823  0012E0  1194               	iorwf	(printf@fval+1)& (0+255),w,b
  1824  0012E2  0100               	movlb	0	; () banked
  1825  0012E4  1195               	iorwf	(printf@fval+2)& (0+255),w,b
  1826  0012E6  B4D8               	btfsc	status,2,c
  1827  0012E8  D077               	goto	l2653
  1828                           
  1829                           ; BSR set to: 0
  1830  0012EA  C093  F03A         	movff	printf@fval,___fttol@f1
  1831  0012EE  C094  F03B         	movff	printf@fval+1,___fttol@f1+1
  1832  0012F2  C095  F03C         	movff	printf@fval+2,___fttol@f1+2
  1833  0012F6  EC02  F013         	call	___fttol	;wreg free
  1834  0012FA  503A               	movf	?___fttol,w,c
  1835  0012FC  103B               	iorwf	?___fttol+1,w,c
  1836  0012FE  103C               	iorwf	?___fttol+2,w,c
  1837  001300  103D               	iorwf	?___fttol+3,w,c
  1838  001302  A4D8               	btfss	status,2,c
  1839  001304  D069               	goto	l2653
  1840  001306  0100               	movlb	0	; () banked
  1841  001308  BF8E               	btfsc	(printf@exp+1)& (0+255),7,b
  1842  00130A  D066               	goto	l2653
  1843  00130C  0100               	movlb	0	; () banked
  1844  00130E  518E               	movf	(printf@exp+1)& (0+255),w,b
  1845  001310  E107               	bnz	l2639
  1846  001312  0E02               	movlw	2
  1847  001314  0100               	movlb	0	; () banked
  1848  001316  5D8D               	subwf	printf@exp& (0+255),w,b
  1849  001318  B0D8               	btfsc	status,0,c
  1850  00131A  D002               	goto	l2639
  1851  00131C  D05D               	goto	l2653
  1852  00131E  D000               	goto	l2639
  1853  001320                     l2639:
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1857  001320  C08F  F001         	movff	printf@tmpval,___ftge@ff1
  1858  001324  C090  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1859  001328  C091  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1860  00132C  0E70               	movlw	112
  1861  00132E  6E04               	movwf	___ftge@ff2,c
  1862  001330  0E89               	movlw	137
  1863  001332  6E05               	movwf	___ftge@ff2+1,c
  1864  001334  0E40               	movlw	64
  1865  001336  6E06               	movwf	___ftge@ff2+2,c
  1866  001338  EC94  F014         	call	___ftge	;wreg free
  1867  00133C  B0D8               	btfsc	status,0,c
  1868  00133E  D003               	goto	l2643
  1869                           
  1870                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1871  001340  0100               	movlb	0	; () banked
  1872  001342  0EF7               	movlw	247
  1873  001344  D002               	goto	L1
  1874  001346                     l2643:
  1875                           
  1876                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1877  001346  0100               	movlb	0	; () banked
  1878  001348  0EF8               	movlw	248
  1879  00134A                     L1:
  1880  00134A  278D               	addwf	printf@exp& (0+255),f,b
  1881  00134C  0EFF               	movlw	255
  1882  00134E  238E               	addwfc	(printf@exp+1)& (0+255),f,b
  1883  001350  D000               	goto	l2645
  1884  001352                     l2645:
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;doprnt.c: 1124: }
  1888                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1889  001352  0100               	movlb	0	; () banked
  1890  001354  518D               	movf	printf@exp& (0+255),w,b
  1891  001356  ECAF  F00B         	call	_scale
  1892  00135A  C05D  F08F         	movff	?_scale,printf@tmpval
  1893  00135E  C05E  F090         	movff	?_scale+1,printf@tmpval+1
  1894  001362  C05F  F091         	movff	?_scale+2,printf@tmpval+2
  1895                           
  1896                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1897  001366  D017               	goto	l2649
  1898  001368  C093  F001         	movff	printf@fval,__div_to_l_@f1
  1899  00136C  C094  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1900  001370  C095  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1901  001374  C08F  F004         	movff	printf@tmpval,__div_to_l_@f2
  1902  001378  C090  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1903  00137C  C091  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1904  001380  EC01  F012         	call	__div_to_l_	;wreg free
  1905  001384  C001  F089         	movff	?__div_to_l_,printf@val
  1906  001388  C002  F08A         	movff	?__div_to_l_+1,printf@val+1
  1907  00138C  C003  F08B         	movff	?__div_to_l_+2,printf@val+2
  1908  001390  C004  F08C         	movff	?__div_to_l_+3,printf@val+3
  1909  001394  D017               	goto	l2651
  1910  001396                     l2649:
  1911  001396  C093  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1912  00139A  C094  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1913  00139E  C095  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1914  0013A2  C08F  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1915  0013A6  C090  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1916  0013AA  C091  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1917  0013AE  EC79  F011         	call	__tdiv_to_l_	;wreg free
  1918  0013B2  C001  F089         	movff	?__tdiv_to_l_,printf@val
  1919  0013B6  C002  F08A         	movff	?__tdiv_to_l_+1,printf@val+1
  1920  0013BA  C003  F08B         	movff	?__tdiv_to_l_+2,printf@val+2
  1921  0013BE  C004  F08C         	movff	?__tdiv_to_l_+3,printf@val+3
  1922  0013C2  D000               	goto	l2651
  1923  0013C4                     l2651:
  1924                           
  1925                           ;doprnt.c: 1129: fval = 0.0;
  1926  0013C4  0E00               	movlw	0
  1927  0013C6  0100               	movlb	0	; () banked
  1928  0013C8  6F93               	movwf	printf@fval& (0+255),b
  1929  0013CA  0E00               	movlw	0
  1930  0013CC  0100               	movlb	0	; () banked
  1931  0013CE  6F94               	movwf	(printf@fval+1)& (0+255),b
  1932  0013D0  0E00               	movlw	0
  1933  0013D2  0100               	movlb	0	; () banked
  1934  0013D4  6F95               	movwf	(printf@fval+2)& (0+255),b
  1935                           
  1936                           ;doprnt.c: 1130: } else {
  1937  0013D6  D034               	goto	l2657
  1938  0013D8                     l2653:
  1939                           
  1940                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1941  0013D8  C093  F03A         	movff	printf@fval,___fttol@f1
  1942  0013DC  C094  F03B         	movff	printf@fval+1,___fttol@f1+1
  1943  0013E0  C095  F03C         	movff	printf@fval+2,___fttol@f1+2
  1944  0013E4  EC02  F013         	call	___fttol	;wreg free
  1945  0013E8  C03A  F089         	movff	?___fttol,printf@val
  1946  0013EC  C03B  F08A         	movff	?___fttol+1,printf@val+1
  1947  0013F0  C03C  F08B         	movff	?___fttol+2,printf@val+2
  1948  0013F4  C03D  F08C         	movff	?___fttol+3,printf@val+3
  1949                           
  1950                           ;doprnt.c: 1132: fval -= (double)val;
  1951  0013F8  C093  F01C         	movff	printf@fval,___ftsub@f1
  1952  0013FC  C094  F01D         	movff	printf@fval+1,___ftsub@f1+1
  1953  001400  C095  F01E         	movff	printf@fval+2,___ftsub@f1+2
  1954  001404  C089  F009         	movff	printf@val,___lltoft@c
  1955  001408  C08A  F00A         	movff	printf@val+1,___lltoft@c+1
  1956  00140C  C08B  F00B         	movff	printf@val+2,___lltoft@c+2
  1957  001410  C08C  F00C         	movff	printf@val+3,___lltoft@c+3
  1958  001414  EC1A  F016         	call	___lltoft	;wreg free
  1959  001418  C009  F01F         	movff	?___lltoft,___ftsub@f2
  1960  00141C  C00A  F020         	movff	?___lltoft+1,___ftsub@f2+1
  1961  001420  C00B  F021         	movff	?___lltoft+2,___ftsub@f2+2
  1962  001424  EC76  F016         	call	___ftsub	;wreg free
  1963  001428  C01C  F093         	movff	?___ftsub,printf@fval
  1964  00142C  C01D  F094         	movff	?___ftsub+1,printf@fval+1
  1965  001430  C01E  F095         	movff	?___ftsub+2,printf@fval+2
  1966                           
  1967                           ;doprnt.c: 1133: exp = 0;
  1968  001434  0E00               	movlw	0
  1969  001436  0100               	movlb	0	; () banked
  1970  001438  6F8E               	movwf	(printf@exp+1)& (0+255),b
  1971  00143A  0E00               	movlw	0
  1972  00143C  6F8D               	movwf	printf@exp& (0+255),b
  1973  00143E  D000               	goto	l2657
  1974  001440                     l2657:
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;doprnt.c: 1134: }
  1978                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1979  001440  0E01               	movlw	1
  1980  001442  0100               	movlb	0	; () banked
  1981  001444  6F96               	movwf	printf@c& (0+255),b
  1982  001446                     l2659:
  1983                           
  1984                           ; BSR set to: 0
  1985  001446  0E0A               	movlw	10
  1986  001448  0100               	movlb	0	; () banked
  1987  00144A  1996               	xorwf	printf@c& (0+255),w,b
  1988  00144C  B4D8               	btfsc	status,2,c
  1989  00144E  D022               	goto	l2671
  1990  001450  D001               	goto	l2663
  1991                           
  1992                           ; BSR set to: 0
  1993  001452  D020               	goto	l2671
  1994  001454                     l2663:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;doprnt.c: 1137: if(val < dpowers[c])
  1998  001454  0100               	movlb	0	; () banked
  1999  001456  5196               	movf	printf@c& (0+255),w,b
  2000  001458  0D04               	mullw	4
  2001  00145A  0E01               	movlw	low _dpowers
  2002  00145C  24F3               	addwf	prodl,w,c
  2003  00145E  6EF6               	movwf	tblptrl,c
  2004  001460  0E10               	movlw	high _dpowers
  2005  001462  20F4               	addwfc	prodh,w,c
  2006  001464  6EF7               	movwf	tblptrh,c
  2007  001466                     	if	0	;There are less than 3 active tblptr bytes
  2008  001466                     	endif
  2009  001466  0009               	tblrd		*+
  2010  001468  50F5               	movf	tablat,w,c
  2011  00146A  0100               	movlb	0	; () banked
  2012  00146C  5D89               	subwf	printf@val& (0+255),w,b
  2013  00146E  0009               	tblrd		*+
  2014  001470  50F5               	movf	tablat,w,c
  2015  001472  0100               	movlb	0	; () banked
  2016  001474  598A               	subwfb	(printf@val+1)& (0+255),w,b
  2017  001476  0009               	tblrd		*+
  2018  001478  50F5               	movf	tablat,w,c
  2019  00147A  0100               	movlb	0	; () banked
  2020  00147C  598B               	subwfb	(printf@val+2)& (0+255),w,b
  2021  00147E  0009               	tblrd		*+
  2022  001480  50F5               	movf	tablat,w,c
  2023  001482  0100               	movlb	0	; () banked
  2024  001484  598C               	subwfb	(printf@val+3)& (0+255),w,b
  2025  001486  A0D8               	btfss	status,0,c
  2026  001488  D005               	goto	l2671
  2027  00148A  D001               	goto	l2667
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;doprnt.c: 1138: break;
  2031  00148C  D003               	goto	l2671
  2032  00148E                     l2667:
  2033                           
  2034                           ; BSR set to: 0
  2035  00148E  0100               	movlb	0	; () banked
  2036  001490  2B96               	incf	printf@c& (0+255),f,b
  2037  001492  D7D9               	goto	l2659
  2038  001494                     l2671:
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;doprnt.c: 1175: {
  2042                           ;doprnt.c: 1188: if(flag & 0x03)
  2043  001494  0E03               	movlw	3
  2044  001496  0100               	movlb	0	; () banked
  2045  001498  1585               	andwf	printf@flag& (0+255),w,b
  2046  00149A  6E6C               	movwf	??_printf& (0+255),c
  2047  00149C  0E00               	movlw	0
  2048  00149E  0100               	movlb	0	; () banked
  2049  0014A0  1586               	andwf	(printf@flag+1)& (0+255),w,b
  2050  0014A2  6E6D               	movwf	(??_printf+1)& (0+255),c
  2051  0014A4  506C               	movf	??_printf,w,c
  2052  0014A6  106D               	iorwf	??_printf+1,w,c
  2053  0014A8  B4D8               	btfsc	status,2,c
  2054  0014AA  D04B               	goto	l2681
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;doprnt.c: 1190: (putch('-') );
  2058  0014AC  0E2D               	movlw	45
  2059  0014AE  EC6F  F017         	call	_putch
  2060                           
  2061                           ;doprnt.c: 1195: }
  2062                           ;doprnt.c: 1196: while(c--) {
  2063  0014B2  D047               	goto	l2681
  2064  0014B4                     l2675:
  2065                           
  2066                           ;doprnt.c: 1200: {
  2067                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2068  0014B4  C089  F001         	movff	printf@val,___lldiv@dividend
  2069  0014B8  C08A  F002         	movff	printf@val+1,___lldiv@dividend+1
  2070  0014BC  C08B  F003         	movff	printf@val+2,___lldiv@dividend+2
  2071  0014C0  C08C  F004         	movff	printf@val+3,___lldiv@dividend+3
  2072  0014C4  0100               	movlb	0	; () banked
  2073  0014C6  5196               	movf	printf@c& (0+255),w,b
  2074  0014C8  0D04               	mullw	4
  2075  0014CA  0E01               	movlw	low _dpowers
  2076  0014CC  24F3               	addwf	prodl,w,c
  2077  0014CE  6EF6               	movwf	tblptrl,c
  2078  0014D0  0E10               	movlw	high _dpowers
  2079  0014D2  20F4               	addwfc	prodh,w,c
  2080  0014D4  6EF7               	movwf	tblptrh,c
  2081  0014D6                     	if	0	;There are less than 3 active tblptr bytes
  2082  0014D6                     	endif
  2083  0014D6  0009               	tblrd		*+
  2084  0014D8  CFF5 F005          	movff	tablat,___lldiv@divisor
  2085  0014DC  0009               	tblrd		*+
  2086  0014DE  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2087  0014E2  0009               	tblrd		*+
  2088  0014E4  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2089  0014E8  000A               	tblrd		*-
  2090  0014EA  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2091  0014EE  ECDF  F014         	call	___lldiv	;wreg free
  2092  0014F2  C001  F08F         	movff	?___lldiv,printf@tmpval
  2093  0014F6  C002  F090         	movff	?___lldiv+1,printf@tmpval+1
  2094  0014FA  C003  F091         	movff	?___lldiv+2,printf@tmpval+2
  2095  0014FE  C004  F092         	movff	?___lldiv+3,printf@tmpval+3
  2096                           
  2097                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2098  001502  C08F  F001         	movff	printf@tmpval,___llmod@dividend
  2099  001506  C090  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  2100  00150A  C091  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  2101  00150E  C092  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  2102  001512  0E0A               	movlw	10
  2103  001514  6E05               	movwf	___llmod@divisor,c
  2104  001516  0E00               	movlw	0
  2105  001518  6E06               	movwf	___llmod@divisor+1,c
  2106  00151A  0E00               	movlw	0
  2107  00151C  6E07               	movwf	___llmod@divisor+2,c
  2108  00151E  0E00               	movlw	0
  2109  001520  6E08               	movwf	___llmod@divisor+3,c
  2110  001522  ECAA  F015         	call	___llmod	;wreg free
  2111  001526  C001  F08F         	movff	?___llmod,printf@tmpval
  2112  00152A  C002  F090         	movff	?___llmod+1,printf@tmpval+1
  2113  00152E  C003  F091         	movff	?___llmod+2,printf@tmpval+2
  2114  001532  C004  F092         	movff	?___llmod+3,printf@tmpval+3
  2115                           
  2116                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  2117  001536  0100               	movlb	0	; () banked
  2118  001538  518F               	movf	printf@tmpval& (0+255),w,b
  2119  00153A  0F30               	addlw	48
  2120  00153C  EC6F  F017         	call	_putch
  2121  001540  D000               	goto	l2681
  2122  001542                     l2681:
  2123  001542  0100               	movlb	0	; () banked
  2124  001544  0796               	decf	printf@c& (0+255),f,b
  2125  001546  0100               	movlb	0	; () banked
  2126  001548  2996               	incf	printf@c& (0+255),w,b
  2127  00154A  B4D8               	btfsc	status,2,c
  2128  00154C  D00A               	goto	l2687
  2129  00154E  D7B2               	goto	l2675
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;doprnt.c: 1204: }
  2133                           ;doprnt.c: 1206: }
  2134                           ;doprnt.c: 1207: while(exp > 0) {
  2135  001550  D008               	goto	l2687
  2136  001552                     l2683:
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;doprnt.c: 1208: (putch('0') );
  2140  001552  0E30               	movlw	48
  2141  001554  EC6F  F017         	call	_putch
  2142                           
  2143                           ;doprnt.c: 1209: exp--;
  2144  001558  0100               	movlb	0	; () banked
  2145  00155A  078D               	decf	printf@exp& (0+255),f,b
  2146  00155C  A0D8               	btfss	status,0,c
  2147  00155E  078E               	decf	(printf@exp+1)& (0+255),f,b
  2148  001560  D000               	goto	l2687
  2149  001562                     l2687:
  2150                           
  2151                           ; BSR set to: 0
  2152  001562  0100               	movlb	0	; () banked
  2153  001564  BF8E               	btfsc	(printf@exp+1)& (0+255),7,b
  2154  001566  D007               	goto	l2689
  2155  001568  0100               	movlb	0	; () banked
  2156  00156A  518E               	movf	(printf@exp+1)& (0+255),w,b
  2157  00156C  E1F2               	bnz	l2683
  2158  00156E  0100               	movlb	0	; () banked
  2159  001570  058D               	decf	printf@exp& (0+255),w,b
  2160  001572  B0D8               	btfsc	status,0,c
  2161  001574  D7EE               	goto	l2683
  2162  001576                     l2689:
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;doprnt.c: 1210: }
  2166                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2167  001576  0100               	movlb	0	; () banked
  2168  001578  BF88               	btfsc	(printf@prec+1)& (0+255),7,b
  2169  00157A  D00C               	goto	l215
  2170  00157C  0100               	movlb	0	; () banked
  2171  00157E  5188               	movf	(printf@prec+1)& (0+255),w,b
  2172  001580  E105               	bnz	u2870
  2173  001582  0E09               	movlw	9
  2174  001584  0100               	movlb	0	; () banked
  2175  001586  5D87               	subwf	printf@prec& (0+255),w,b
  2176  001588  A0D8               	btfss	status,0,c
  2177  00158A  D004               	goto	l215
  2178  00158C                     u2870:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2182  00158C  0E08               	movlw	8
  2183  00158E  0100               	movlb	0	; () banked
  2184  001590  6F96               	movwf	printf@c& (0+255),b
  2185  001592  D003               	goto	l2693
  2186  001594                     l215:
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;doprnt.c: 1213: else
  2190                           ;doprnt.c: 1214: c = prec;
  2191  001594  C087  F096         	movff	printf@prec,printf@c
  2192  001598  D000               	goto	l2693
  2193  00159A                     l2693:
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;doprnt.c: 1215: prec -= c;
  2197  00159A  0100               	movlb	0	; () banked
  2198  00159C  5196               	movf	printf@c& (0+255),w,b
  2199  00159E  0100               	movlb	0	; () banked
  2200  0015A0  5F87               	subwf	printf@prec& (0+255),f,b
  2201  0015A2  0E00               	movlw	0
  2202  0015A4  0100               	movlb	0	; () banked
  2203  0015A6  BF96               	btfsc	printf@c& (0+255),7,b
  2204  0015A8  0EFF               	movlw	255
  2205  0015AA  0100               	movlb	0	; () banked
  2206  0015AC  5B88               	subwfb	(printf@prec+1)& (0+255),f,b
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;doprnt.c: 1219: if(c)
  2210  0015AE  0100               	movlb	0	; () banked
  2211  0015B0  5196               	movf	printf@c& (0+255),w,b
  2212  0015B2  0100               	movlb	0	; () banked
  2213  0015B4  B4D8               	btfsc	status,2,c
  2214  0015B6  D004               	goto	l2699
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;doprnt.c: 1221: (putch('.') );
  2218  0015B8  0E2E               	movlw	46
  2219  0015BA  EC6F  F017         	call	_putch
  2220  0015BE  D000               	goto	l2699
  2221  0015C0                     l2699:
  2222                           
  2223                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2224  0015C0  0100               	movlb	0	; () banked
  2225  0015C2  5196               	movf	printf@c& (0+255),w,b
  2226  0015C4  ECAF  F00B         	call	_scale
  2227  0015C8  C05D  F080         	movff	?_scale,_printf$1512
  2228  0015CC  C05E  F081         	movff	?_scale+1,_printf$1512+1
  2229  0015D0  C05F  F082         	movff	?_scale+2,_printf$1512+2
  2230                           
  2231                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2232  0015D4  C093  F01F         	movff	printf@fval,___ftmul@f2
  2233  0015D8  C094  F020         	movff	printf@fval+1,___ftmul@f2+1
  2234  0015DC  C095  F021         	movff	printf@fval+2,___ftmul@f2+2
  2235  0015E0  C080  F01C         	movff	_printf$1512,___ftmul@f1
  2236  0015E4  C081  F01D         	movff	_printf$1512+1,___ftmul@f1+1
  2237  0015E8  C082  F01E         	movff	_printf$1512+2,___ftmul@f1+2
  2238  0015EC  EC86  F012         	call	___ftmul	;wreg free
  2239  0015F0  C01C  F03A         	movff	?___ftmul,___fttol@f1
  2240  0015F4  C01D  F03B         	movff	?___ftmul+1,___fttol@f1+1
  2241  0015F8  C01E  F03C         	movff	?___ftmul+2,___fttol@f1+2
  2242  0015FC  EC02  F013         	call	___fttol	;wreg free
  2243  001600  C03A  F089         	movff	?___fttol,printf@val
  2244  001604  C03B  F08A         	movff	?___fttol+1,printf@val+1
  2245  001608  C03C  F08B         	movff	?___fttol+2,printf@val+2
  2246  00160C  C03D  F08C         	movff	?___fttol+3,printf@val+3
  2247                           
  2248                           ;doprnt.c: 1228: while(c--) {
  2249  001610  D06E               	goto	l2709
  2250  001612                     l2703:
  2251                           
  2252                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2253  001612  C089  F001         	movff	printf@val,___lldiv@dividend
  2254  001616  C08A  F002         	movff	printf@val+1,___lldiv@dividend+1
  2255  00161A  C08B  F003         	movff	printf@val+2,___lldiv@dividend+2
  2256  00161E  C08C  F004         	movff	printf@val+3,___lldiv@dividend+3
  2257  001622  0100               	movlb	0	; () banked
  2258  001624  5196               	movf	printf@c& (0+255),w,b
  2259  001626  0D04               	mullw	4
  2260  001628  0E01               	movlw	low _dpowers
  2261  00162A  24F3               	addwf	prodl,w,c
  2262  00162C  6EF6               	movwf	tblptrl,c
  2263  00162E  0E10               	movlw	high _dpowers
  2264  001630  20F4               	addwfc	prodh,w,c
  2265  001632  6EF7               	movwf	tblptrh,c
  2266  001634                     	if	0	;There are less than 3 active tblptr bytes
  2267  001634                     	endif
  2268  001634  0009               	tblrd		*+
  2269  001636  CFF5 F005          	movff	tablat,___lldiv@divisor
  2270  00163A  0009               	tblrd		*+
  2271  00163C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2272  001640  0009               	tblrd		*+
  2273  001642  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2274  001646  000A               	tblrd		*-
  2275  001648  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2276  00164C  ECDF  F014         	call	___lldiv	;wreg free
  2277  001650  C001  F08F         	movff	?___lldiv,printf@tmpval
  2278  001654  C002  F090         	movff	?___lldiv+1,printf@tmpval+1
  2279  001658  C003  F091         	movff	?___lldiv+2,printf@tmpval+2
  2280  00165C  C004  F092         	movff	?___lldiv+3,printf@tmpval+3
  2281                           
  2282                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2283  001660  C08F  F001         	movff	printf@tmpval,___llmod@dividend
  2284  001664  C090  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  2285  001668  C091  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  2286  00166C  C092  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  2287  001670  0E0A               	movlw	10
  2288  001672  6E05               	movwf	___llmod@divisor,c
  2289  001674  0E00               	movlw	0
  2290  001676  6E06               	movwf	___llmod@divisor+1,c
  2291  001678  0E00               	movlw	0
  2292  00167A  6E07               	movwf	___llmod@divisor+2,c
  2293  00167C  0E00               	movlw	0
  2294  00167E  6E08               	movwf	___llmod@divisor+3,c
  2295  001680  ECAA  F015         	call	___llmod	;wreg free
  2296  001684  C001  F08F         	movff	?___llmod,printf@tmpval
  2297  001688  C002  F090         	movff	?___llmod+1,printf@tmpval+1
  2298  00168C  C003  F091         	movff	?___llmod+2,printf@tmpval+2
  2299  001690  C004  F092         	movff	?___llmod+3,printf@tmpval+3
  2300                           
  2301                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  2302  001694  0100               	movlb	0	; () banked
  2303  001696  518F               	movf	printf@tmpval& (0+255),w,b
  2304  001698  0F30               	addlw	48
  2305  00169A  EC6F  F017         	call	_putch
  2306                           
  2307                           ;doprnt.c: 1232: val %= dpowers[c];
  2308  00169E  C089  F001         	movff	printf@val,___llmod@dividend
  2309  0016A2  C08A  F002         	movff	printf@val+1,___llmod@dividend+1
  2310  0016A6  C08B  F003         	movff	printf@val+2,___llmod@dividend+2
  2311  0016AA  C08C  F004         	movff	printf@val+3,___llmod@dividend+3
  2312  0016AE  0100               	movlb	0	; () banked
  2313  0016B0  5196               	movf	printf@c& (0+255),w,b
  2314  0016B2  0D04               	mullw	4
  2315  0016B4  0E01               	movlw	low _dpowers
  2316  0016B6  24F3               	addwf	prodl,w,c
  2317  0016B8  6EF6               	movwf	tblptrl,c
  2318  0016BA  0E10               	movlw	high _dpowers
  2319  0016BC  20F4               	addwfc	prodh,w,c
  2320  0016BE  6EF7               	movwf	tblptrh,c
  2321  0016C0                     	if	0	;There are less than 3 active tblptr bytes
  2322  0016C0                     	endif
  2323  0016C0  0009               	tblrd		*+
  2324  0016C2  CFF5 F005          	movff	tablat,___llmod@divisor
  2325  0016C6  0009               	tblrd		*+
  2326  0016C8  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2327  0016CC  0009               	tblrd		*+
  2328  0016CE  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2329  0016D2  000A               	tblrd		*-
  2330  0016D4  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2331  0016D8  ECAA  F015         	call	___llmod	;wreg free
  2332  0016DC  C001  F089         	movff	?___llmod,printf@val
  2333  0016E0  C002  F08A         	movff	?___llmod+1,printf@val+1
  2334  0016E4  C003  F08B         	movff	?___llmod+2,printf@val+2
  2335  0016E8  C004  F08C         	movff	?___llmod+3,printf@val+3
  2336  0016EC  D000               	goto	l2709
  2337  0016EE                     l2709:
  2338  0016EE  0100               	movlb	0	; () banked
  2339  0016F0  0796               	decf	printf@c& (0+255),f,b
  2340  0016F2  0100               	movlb	0	; () banked
  2341  0016F4  2996               	incf	printf@c& (0+255),w,b
  2342  0016F6  B4D8               	btfsc	status,2,c
  2343  0016F8  D00A               	goto	l2715
  2344  0016FA  D78B               	goto	l2703
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;doprnt.c: 1233: }
  2348                           ;doprnt.c: 1235: while(prec) {
  2349  0016FC  D008               	goto	l2715
  2350  0016FE                     l2711:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;doprnt.c: 1236: (putch('0') );
  2354  0016FE  0E30               	movlw	48
  2355  001700  EC6F  F017         	call	_putch
  2356                           
  2357                           ;doprnt.c: 1237: prec--;
  2358  001704  0100               	movlb	0	; () banked
  2359  001706  0787               	decf	printf@prec& (0+255),f,b
  2360  001708  A0D8               	btfss	status,0,c
  2361  00170A  0788               	decf	(printf@prec+1)& (0+255),f,b
  2362  00170C  D000               	goto	l2715
  2363  00170E                     l2715:
  2364                           
  2365                           ; BSR set to: 0
  2366  00170E  0100               	movlb	0	; () banked
  2367  001710  5187               	movf	printf@prec& (0+255),w,b
  2368  001712  0100               	movlb	0	; () banked
  2369  001714  1188               	iorwf	(printf@prec+1)& (0+255),w,b
  2370  001716  B4D8               	btfsc	status,2,c
  2371  001718  D012               	goto	l2721
  2372  00171A  D7F1               	goto	l2711
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;doprnt.c: 1238: }
  2376                           ;doprnt.c: 1245: continue;
  2377  00171C  D010               	goto	l2721
  2378  00171E                     l2717:
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;doprnt.c: 1246: }
  2382                           ;doprnt.c: 1422: {
  2383                           ;doprnt.c: 1438: if(flag & 0x03)
  2384  00171E  0E03               	movlw	3
  2385  001720  0100               	movlb	0	; () banked
  2386  001722  1585               	andwf	printf@flag& (0+255),w,b
  2387  001724  6E6C               	movwf	??_printf& (0+255),c
  2388  001726  0E00               	movlw	0
  2389  001728  0100               	movlb	0	; () banked
  2390  00172A  1586               	andwf	(printf@flag+1)& (0+255),w,b
  2391  00172C  6E6D               	movwf	(??_printf+1)& (0+255),c
  2392  00172E  506C               	movf	??_printf,w,c
  2393  001730  106D               	iorwf	??_printf+1,w,c
  2394  001732  B4D8               	btfsc	status,2,c
  2395  001734  D004               	goto	l2721
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;doprnt.c: 1439: (putch('-') );
  2399  001736  0E2D               	movlw	45
  2400  001738  EC6F  F017         	call	_putch
  2401  00173C  D000               	goto	l2721
  2402  00173E                     l2721:
  2403  00173E  C067  FFF6         	movff	printf@f,tblptrl
  2404  001742  C068  FFF7         	movff	printf@f+1,tblptrh
  2405  001746  4A67               	infsnz	printf@f,f,c
  2406  001748  2A68               	incf	printf@f+1,f,c
  2407  00174A                     	if	0	;tblptru may be non-zero
  2408  00174A                     	endif
  2409  00174A                     	if	0	;tblptru may be non-zero
  2410  00174A                     	endif
  2411  00174A  0008               	tblrd		*
  2412  00174C  CFF5 F096          	movff	tablat,printf@c
  2413  001750  0100               	movlb	0	; () banked
  2414  001752  5196               	movf	printf@c& (0+255),w,b
  2415  001754  B4D8               	btfsc	status,2,c
  2416  001756  D002               	goto	l226
  2417  001758  D4A1               	goto	l2573
  2418                           
  2419                           ; BSR set to: 0
  2420  00175A  D000               	goto	l226
  2421  00175C                     l226:
  2422                           
  2423                           ; BSR set to: 0
  2424  00175C  0012               	return		;funcret
  2425  00175E                     __end_of_printf:
  2426                           	opt stack 0
  2427                           tblptru	equ	0xFF8
  2428                           tblptrh	equ	0xFF7
  2429                           tblptrl	equ	0xFF6
  2430                           tablat	equ	0xFF5
  2431                           prodh	equ	0xFF4
  2432                           prodl	equ	0xFF3
  2433                           postinc0	equ	0xFEE
  2434                           wreg	equ	0xFE8
  2435                           postdec1	equ	0xFE5
  2436                           fsr1l	equ	0xFE1
  2437                           indf2	equ	0xFDF
  2438                           postinc2	equ	0xFDE
  2439                           postdec2	equ	0xFDD
  2440                           fsr2h	equ	0xFDA
  2441                           fsr2l	equ	0xFD9
  2442                           status	equ	0xFD8
  2443                           
  2444 ;; *************** function _scale *****************
  2445 ;; Defined at:
  2446 ;;		line 425 in file "E:\XC8\sources\common\doprnt.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  scl             1    wreg     char 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  scl             1   98[COMRAM] char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  3   92[COMRAM] char 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2460 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;Total ram usage:        7 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    2
  2467 ;; This function calls:
  2468 ;;		___awdiv
  2469 ;;		___awmod
  2470 ;;		___ftmul
  2471 ;;		___wmul
  2472 ;; This function is called by:
  2473 ;;		_printf
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text2
  2478  00175E                     __ptext2:
  2479                           	opt stack 0
  2480  00175E                     _scale:
  2481                           	opt stack 27
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;incstack = 0
  2485                           ;scale@scl stored from wreg
  2486  00175E  6E63               	movwf	scale@scl,c
  2487                           
  2488                           ;doprnt.c: 428: if(scl < 0) {
  2489  001760  AE63               	btfss	scale@scl,7,c
  2490  001762  D0EF               	goto	l2197
  2491                           
  2492                           ;doprnt.c: 429: scl = -scl;
  2493  001764  6C63               	negf	scale@scl,c
  2494                           
  2495                           ;doprnt.c: 430: if(scl>=110)
  2496  001766  5063               	movf	scale@scl,w,c
  2497  001768  0A80               	xorlw	128
  2498  00176A  0F12               	addlw	-238
  2499  00176C  A0D8               	btfss	status,0,c
  2500  00176E  D08D               	goto	l2187
  2501                           
  2502                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2503  001770  0E00               	movlw	0
  2504  001772  6E5A               	movwf	___wmul@multiplicand+1,c
  2505  001774  0E03               	movlw	3
  2506  001776  6E59               	movwf	___wmul@multiplicand,c
  2507  001778  0E00               	movlw	0
  2508  00177A  6E52               	movwf	___awdiv@divisor+1,c
  2509  00177C  0E0A               	movlw	10
  2510  00177E  6E51               	movwf	___awdiv@divisor,c
  2511  001780  0E00               	movlw	0
  2512  001782  6E4C               	movwf	___awmod@divisor+1,c
  2513  001784  0E64               	movlw	100
  2514  001786  6E4B               	movwf	___awmod@divisor,c
  2515  001788  5063               	movf	scale@scl,w,c
  2516  00178A  6E49               	movwf	___awmod@dividend,c
  2517  00178C  6A4A               	clrf	___awmod@dividend+1,c
  2518  00178E  BE49               	btfsc	___awmod@dividend,7,c
  2519  001790  064A               	decf	___awmod@dividend+1,f,c
  2520  001792  EC69  F015         	call	___awmod	;wreg free
  2521  001796  C049  F04F         	movff	?___awmod,___awdiv@dividend
  2522  00179A  C04A  F050         	movff	?___awmod+1,___awdiv@dividend+1
  2523  00179E  EC49  F014         	call	___awdiv	;wreg free
  2524  0017A2  0E09               	movlw	9
  2525  0017A4  244F               	addwf	?___awdiv,w,c
  2526  0017A6  6E57               	movwf	___wmul@multiplier,c
  2527  0017A8  0E00               	movlw	0
  2528  0017AA  2050               	addwfc	?___awdiv+1,w,c
  2529  0017AC  6E58               	movwf	___wmul@multiplier+1,c
  2530  0017AE  ECD7  F016         	call	___wmul	;wreg free
  2531  0017B2  0E29               	movlw	low __npowers_
  2532  0017B4  2457               	addwf	?___wmul,w,c
  2533  0017B6  6EF6               	movwf	tblptrl,c
  2534  0017B8  0E10               	movlw	high __npowers_
  2535  0017BA  2058               	addwfc	?___wmul+1,w,c
  2536  0017BC  6EF7               	movwf	tblptrh,c
  2537  0017BE                     	if	0	;There are less than 3 active tblptr bytes
  2538  0017BE                     	endif
  2539  0017BE  0009               	tblrd		*+
  2540  0017C0  CFF5 F01F          	movff	tablat,___ftmul@f2
  2541  0017C4  0009               	tblrd		*+
  2542  0017C6  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2543  0017CA  000A               	tblrd		*-
  2544  0017CC  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2545  0017D0  0E00               	movlw	0
  2546  0017D2  6E52               	movwf	___awdiv@divisor+1,c
  2547  0017D4  0E64               	movlw	100
  2548  0017D6  6E51               	movwf	___awdiv@divisor,c
  2549  0017D8  5063               	movf	scale@scl,w,c
  2550  0017DA  6E4F               	movwf	___awdiv@dividend,c
  2551  0017DC  6A50               	clrf	___awdiv@dividend+1,c
  2552  0017DE  BE4F               	btfsc	___awdiv@dividend,7,c
  2553  0017E0  0650               	decf	___awdiv@dividend+1,f,c
  2554  0017E2  EC49  F014         	call	___awdiv	;wreg free
  2555  0017E6  0E12               	movlw	18
  2556  0017E8  244F               	addwf	?___awdiv,w,c
  2557  0017EA  6E57               	movwf	___wmul@multiplier,c
  2558  0017EC  0E00               	movlw	0
  2559  0017EE  2050               	addwfc	?___awdiv+1,w,c
  2560  0017F0  6E58               	movwf	___wmul@multiplier+1,c
  2561  0017F2  0E00               	movlw	0
  2562  0017F4  6E5A               	movwf	___wmul@multiplicand+1,c
  2563  0017F6  0E03               	movlw	3
  2564  0017F8  6E59               	movwf	___wmul@multiplicand,c
  2565  0017FA  ECD7  F016         	call	___wmul	;wreg free
  2566  0017FE  0E29               	movlw	low __npowers_
  2567  001800  2457               	addwf	?___wmul,w,c
  2568  001802  6EF6               	movwf	tblptrl,c
  2569  001804  0E10               	movlw	high __npowers_
  2570  001806  2058               	addwfc	?___wmul+1,w,c
  2571  001808  6EF7               	movwf	tblptrh,c
  2572  00180A                     	if	0	;There are less than 3 active tblptr bytes
  2573  00180A                     	endif
  2574  00180A  0009               	tblrd		*+
  2575  00180C  CFF5 F01C          	movff	tablat,___ftmul@f1
  2576  001810  0009               	tblrd		*+
  2577  001812  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2578  001816  000A               	tblrd		*-
  2579  001818  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2580  00181C  EC86  F012         	call	___ftmul	;wreg free
  2581  001820  C01C  F060         	movff	?___ftmul,_scale$1511
  2582  001824  C01D  F061         	movff	?___ftmul+1,_scale$1511+1
  2583  001828  C01E  F062         	movff	?___ftmul+2,_scale$1511+2
  2584                           
  2585                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2586  00182C  C060  F01C         	movff	_scale$1511,___ftmul@f1
  2587  001830  C061  F01D         	movff	_scale$1511+1,___ftmul@f1+1
  2588  001834  C062  F01E         	movff	_scale$1511+2,___ftmul@f1+2
  2589  001838  0E00               	movlw	0
  2590  00183A  6E5A               	movwf	___wmul@multiplicand+1,c
  2591  00183C  0E03               	movlw	3
  2592  00183E  6E59               	movwf	___wmul@multiplicand,c
  2593  001840  0E00               	movlw	0
  2594  001842  6E4C               	movwf	___awmod@divisor+1,c
  2595  001844  0E0A               	movlw	10
  2596  001846  6E4B               	movwf	___awmod@divisor,c
  2597  001848  5063               	movf	scale@scl,w,c
  2598  00184A  6E49               	movwf	___awmod@dividend,c
  2599  00184C  6A4A               	clrf	___awmod@dividend+1,c
  2600  00184E  BE49               	btfsc	___awmod@dividend,7,c
  2601  001850  064A               	decf	___awmod@dividend+1,f,c
  2602  001852  EC69  F015         	call	___awmod	;wreg free
  2603  001856  C049  F057         	movff	?___awmod,___wmul@multiplier
  2604  00185A  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  2605  00185E  ECD7  F016         	call	___wmul	;wreg free
  2606  001862  0E29               	movlw	low __npowers_
  2607  001864  2457               	addwf	?___wmul,w,c
  2608  001866  6EF6               	movwf	tblptrl,c
  2609  001868  0E10               	movlw	high __npowers_
  2610  00186A  2058               	addwfc	?___wmul+1,w,c
  2611  00186C  6EF7               	movwf	tblptrh,c
  2612  00186E                     	if	0	;There are less than 3 active tblptr bytes
  2613  00186E                     	endif
  2614  00186E  0009               	tblrd		*+
  2615  001870  CFF5 F01F          	movff	tablat,___ftmul@f2
  2616  001874  0009               	tblrd		*+
  2617  001876  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2618  00187A  000A               	tblrd		*-
  2619  00187C  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2620  001880  EC86  F012         	call	___ftmul	;wreg free
  2621  001884  D141               	goto	L5
  2622  001886  D15A               	goto	l170
  2623  001888  D054               	goto	l2193
  2624  00188A                     l2187:
  2625                           
  2626                           ;doprnt.c: 432: else if(scl > 10)
  2627  00188A  5063               	movf	scale@scl,w,c
  2628  00188C  0A80               	xorlw	128
  2629  00188E  0F75               	addlw	-139
  2630  001890  A0D8               	btfss	status,0,c
  2631  001892  D04F               	goto	l2193
  2632                           
  2633                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2634  001894  0E00               	movlw	0
  2635  001896  6E52               	movwf	___awdiv@divisor+1,c
  2636  001898  0E0A               	movlw	10
  2637  00189A  6E51               	movwf	___awdiv@divisor,c
  2638  00189C  5063               	movf	scale@scl,w,c
  2639  00189E  6E4F               	movwf	___awdiv@dividend,c
  2640  0018A0  6A50               	clrf	___awdiv@dividend+1,c
  2641  0018A2  BE4F               	btfsc	___awdiv@dividend,7,c
  2642  0018A4  0650               	decf	___awdiv@dividend+1,f,c
  2643  0018A6  EC49  F014         	call	___awdiv	;wreg free
  2644  0018AA  0E09               	movlw	9
  2645  0018AC  244F               	addwf	?___awdiv,w,c
  2646  0018AE  6E57               	movwf	___wmul@multiplier,c
  2647  0018B0  0E00               	movlw	0
  2648  0018B2  2050               	addwfc	?___awdiv+1,w,c
  2649  0018B4  6E58               	movwf	___wmul@multiplier+1,c
  2650  0018B6  0E00               	movlw	0
  2651  0018B8  6E5A               	movwf	___wmul@multiplicand+1,c
  2652  0018BA  0E03               	movlw	3
  2653  0018BC  6E59               	movwf	___wmul@multiplicand,c
  2654  0018BE  ECD7  F016         	call	___wmul	;wreg free
  2655  0018C2  0E29               	movlw	low __npowers_
  2656  0018C4  2457               	addwf	?___wmul,w,c
  2657  0018C6  6EF6               	movwf	tblptrl,c
  2658  0018C8  0E10               	movlw	high __npowers_
  2659  0018CA  2058               	addwfc	?___wmul+1,w,c
  2660  0018CC  6EF7               	movwf	tblptrh,c
  2661  0018CE                     	if	0	;There are less than 3 active tblptr bytes
  2662  0018CE                     	endif
  2663  0018CE  0009               	tblrd		*+
  2664  0018D0  CFF5 F01C          	movff	tablat,___ftmul@f1
  2665  0018D4  0009               	tblrd		*+
  2666  0018D6  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2667  0018DA  000A               	tblrd		*-
  2668  0018DC  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2669  0018E0  0E00               	movlw	0
  2670  0018E2  6E5A               	movwf	___wmul@multiplicand+1,c
  2671  0018E4  0E03               	movlw	3
  2672  0018E6  6E59               	movwf	___wmul@multiplicand,c
  2673  0018E8  0E00               	movlw	0
  2674  0018EA  6E4C               	movwf	___awmod@divisor+1,c
  2675  0018EC  0E0A               	movlw	10
  2676  0018EE  6E4B               	movwf	___awmod@divisor,c
  2677  0018F0  5063               	movf	scale@scl,w,c
  2678  0018F2  6E49               	movwf	___awmod@dividend,c
  2679  0018F4  6A4A               	clrf	___awmod@dividend+1,c
  2680  0018F6  BE49               	btfsc	___awmod@dividend,7,c
  2681  0018F8  064A               	decf	___awmod@dividend+1,f,c
  2682  0018FA  EC69  F015         	call	___awmod	;wreg free
  2683  0018FE  C049  F057         	movff	?___awmod,___wmul@multiplier
  2684  001902  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  2685  001906  ECD7  F016         	call	___wmul	;wreg free
  2686  00190A  0E29               	movlw	low __npowers_
  2687  00190C  2457               	addwf	?___wmul,w,c
  2688  00190E  6EF6               	movwf	tblptrl,c
  2689  001910  0E10               	movlw	high __npowers_
  2690  001912  2058               	addwfc	?___wmul+1,w,c
  2691  001914  6EF7               	movwf	tblptrh,c
  2692  001916                     	if	0	;There are less than 3 active tblptr bytes
  2693  001916                     	endif
  2694  001916  0009               	tblrd		*+
  2695  001918  CFF5 F01F          	movff	tablat,___ftmul@f2
  2696  00191C  0009               	tblrd		*+
  2697  00191E  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2698  001922  000A               	tblrd		*-
  2699  001924  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2700  001928  EC86  F012         	call	___ftmul	;wreg free
  2701  00192C  D0ED               	goto	L5
  2702  00192E  D106               	goto	l170
  2703  001930  D000               	goto	l2193
  2704  001932                     l2193:
  2705                           
  2706                           ;doprnt.c: 434: return _npowers_[scl];
  2707  001932  5063               	movf	scale@scl,w,c
  2708  001934  0D03               	mullw	3
  2709  001936  0E29               	movlw	low __npowers_
  2710  001938  24F3               	addwf	prodl,w,c
  2711  00193A  6EF6               	movwf	tblptrl,c
  2712  00193C  0E10               	movlw	high __npowers_
  2713  00193E  D0F2               	goto	L4
  2714  001940  D0FD               	goto	l170
  2715  001942                     l2197:
  2716                           
  2717                           ;doprnt.c: 435: }
  2718                           ;doprnt.c: 436: if(scl>=110)
  2719  001942  5063               	movf	scale@scl,w,c
  2720  001944  0A80               	xorlw	128
  2721  001946  0F12               	addlw	-238
  2722  001948  A0D8               	btfss	status,0,c
  2723  00194A  D08D               	goto	l2205
  2724                           
  2725                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2726  00194C  0E00               	movlw	0
  2727  00194E  6E5A               	movwf	___wmul@multiplicand+1,c
  2728  001950  0E03               	movlw	3
  2729  001952  6E59               	movwf	___wmul@multiplicand,c
  2730  001954  0E00               	movlw	0
  2731  001956  6E52               	movwf	___awdiv@divisor+1,c
  2732  001958  0E0A               	movlw	10
  2733  00195A  6E51               	movwf	___awdiv@divisor,c
  2734  00195C  0E00               	movlw	0
  2735  00195E  6E4C               	movwf	___awmod@divisor+1,c
  2736  001960  0E64               	movlw	100
  2737  001962  6E4B               	movwf	___awmod@divisor,c
  2738  001964  5063               	movf	scale@scl,w,c
  2739  001966  6E49               	movwf	___awmod@dividend,c
  2740  001968  6A4A               	clrf	___awmod@dividend+1,c
  2741  00196A  BE49               	btfsc	___awmod@dividend,7,c
  2742  00196C  064A               	decf	___awmod@dividend+1,f,c
  2743  00196E  EC69  F015         	call	___awmod	;wreg free
  2744  001972  C049  F04F         	movff	?___awmod,___awdiv@dividend
  2745  001976  C04A  F050         	movff	?___awmod+1,___awdiv@dividend+1
  2746  00197A  EC49  F014         	call	___awdiv	;wreg free
  2747  00197E  0E09               	movlw	9
  2748  001980  244F               	addwf	?___awdiv,w,c
  2749  001982  6E57               	movwf	___wmul@multiplier,c
  2750  001984  0E00               	movlw	0
  2751  001986  2050               	addwfc	?___awdiv+1,w,c
  2752  001988  6E58               	movwf	___wmul@multiplier+1,c
  2753  00198A  ECD7  F016         	call	___wmul	;wreg free
  2754  00198E  0E50               	movlw	low __powers_
  2755  001990  2457               	addwf	?___wmul,w,c
  2756  001992  6EF6               	movwf	tblptrl,c
  2757  001994  0E10               	movlw	high __powers_
  2758  001996  2058               	addwfc	?___wmul+1,w,c
  2759  001998  6EF7               	movwf	tblptrh,c
  2760  00199A                     	if	0	;There are less than 3 active tblptr bytes
  2761  00199A                     	endif
  2762  00199A  0009               	tblrd		*+
  2763  00199C  CFF5 F01F          	movff	tablat,___ftmul@f2
  2764  0019A0  0009               	tblrd		*+
  2765  0019A2  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2766  0019A6  000A               	tblrd		*-
  2767  0019A8  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2768  0019AC  0E00               	movlw	0
  2769  0019AE  6E52               	movwf	___awdiv@divisor+1,c
  2770  0019B0  0E64               	movlw	100
  2771  0019B2  6E51               	movwf	___awdiv@divisor,c
  2772  0019B4  5063               	movf	scale@scl,w,c
  2773  0019B6  6E4F               	movwf	___awdiv@dividend,c
  2774  0019B8  6A50               	clrf	___awdiv@dividend+1,c
  2775  0019BA  BE4F               	btfsc	___awdiv@dividend,7,c
  2776  0019BC  0650               	decf	___awdiv@dividend+1,f,c
  2777  0019BE  EC49  F014         	call	___awdiv	;wreg free
  2778  0019C2  0E12               	movlw	18
  2779  0019C4  244F               	addwf	?___awdiv,w,c
  2780  0019C6  6E57               	movwf	___wmul@multiplier,c
  2781  0019C8  0E00               	movlw	0
  2782  0019CA  2050               	addwfc	?___awdiv+1,w,c
  2783  0019CC  6E58               	movwf	___wmul@multiplier+1,c
  2784  0019CE  0E00               	movlw	0
  2785  0019D0  6E5A               	movwf	___wmul@multiplicand+1,c
  2786  0019D2  0E03               	movlw	3
  2787  0019D4  6E59               	movwf	___wmul@multiplicand,c
  2788  0019D6  ECD7  F016         	call	___wmul	;wreg free
  2789  0019DA  0E50               	movlw	low __powers_
  2790  0019DC  2457               	addwf	?___wmul,w,c
  2791  0019DE  6EF6               	movwf	tblptrl,c
  2792  0019E0  0E10               	movlw	high __powers_
  2793  0019E2  2058               	addwfc	?___wmul+1,w,c
  2794  0019E4  6EF7               	movwf	tblptrh,c
  2795  0019E6                     	if	0	;There are less than 3 active tblptr bytes
  2796  0019E6                     	endif
  2797  0019E6  0009               	tblrd		*+
  2798  0019E8  CFF5 F01C          	movff	tablat,___ftmul@f1
  2799  0019EC  0009               	tblrd		*+
  2800  0019EE  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2801  0019F2  000A               	tblrd		*-
  2802  0019F4  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2803  0019F8  EC86  F012         	call	___ftmul	;wreg free
  2804  0019FC  C01C  F060         	movff	?___ftmul,_scale$1511
  2805  001A00  C01D  F061         	movff	?___ftmul+1,_scale$1511+1
  2806  001A04  C01E  F062         	movff	?___ftmul+2,_scale$1511+2
  2807                           
  2808                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2809  001A08  C060  F01C         	movff	_scale$1511,___ftmul@f1
  2810  001A0C  C061  F01D         	movff	_scale$1511+1,___ftmul@f1+1
  2811  001A10  C062  F01E         	movff	_scale$1511+2,___ftmul@f1+2
  2812  001A14  0E00               	movlw	0
  2813  001A16  6E5A               	movwf	___wmul@multiplicand+1,c
  2814  001A18  0E03               	movlw	3
  2815  001A1A  6E59               	movwf	___wmul@multiplicand,c
  2816  001A1C  0E00               	movlw	0
  2817  001A1E  6E4C               	movwf	___awmod@divisor+1,c
  2818  001A20  0E0A               	movlw	10
  2819  001A22  6E4B               	movwf	___awmod@divisor,c
  2820  001A24  5063               	movf	scale@scl,w,c
  2821  001A26  6E49               	movwf	___awmod@dividend,c
  2822  001A28  6A4A               	clrf	___awmod@dividend+1,c
  2823  001A2A  BE49               	btfsc	___awmod@dividend,7,c
  2824  001A2C  064A               	decf	___awmod@dividend+1,f,c
  2825  001A2E  EC69  F015         	call	___awmod	;wreg free
  2826  001A32  C049  F057         	movff	?___awmod,___wmul@multiplier
  2827  001A36  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  2828  001A3A  ECD7  F016         	call	___wmul	;wreg free
  2829  001A3E  0E50               	movlw	low __powers_
  2830  001A40  2457               	addwf	?___wmul,w,c
  2831  001A42  6EF6               	movwf	tblptrl,c
  2832  001A44  0E10               	movlw	high __powers_
  2833  001A46  2058               	addwfc	?___wmul+1,w,c
  2834  001A48  6EF7               	movwf	tblptrh,c
  2835  001A4A                     	if	0	;There are less than 3 active tblptr bytes
  2836  001A4A                     	endif
  2837  001A4A  0009               	tblrd		*+
  2838  001A4C  CFF5 F01F          	movff	tablat,___ftmul@f2
  2839  001A50  0009               	tblrd		*+
  2840  001A52  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2841  001A56  000A               	tblrd		*-
  2842  001A58  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2843  001A5C  EC86  F012         	call	___ftmul	;wreg free
  2844  001A60  D053               	goto	L5
  2845  001A62  D06C               	goto	l170
  2846  001A64  D059               	goto	l2211
  2847  001A66                     l2205:
  2848                           
  2849                           ;doprnt.c: 438: else if(scl > 10)
  2850  001A66  5063               	movf	scale@scl,w,c
  2851  001A68  0A80               	xorlw	128
  2852  001A6A  0F75               	addlw	-139
  2853  001A6C  A0D8               	btfss	status,0,c
  2854  001A6E  D054               	goto	l2211
  2855                           
  2856                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2857  001A70  0E00               	movlw	0
  2858  001A72  6E52               	movwf	___awdiv@divisor+1,c
  2859  001A74  0E0A               	movlw	10
  2860  001A76  6E51               	movwf	___awdiv@divisor,c
  2861  001A78  5063               	movf	scale@scl,w,c
  2862  001A7A  6E4F               	movwf	___awdiv@dividend,c
  2863  001A7C  6A50               	clrf	___awdiv@dividend+1,c
  2864  001A7E  BE4F               	btfsc	___awdiv@dividend,7,c
  2865  001A80  0650               	decf	___awdiv@dividend+1,f,c
  2866  001A82  EC49  F014         	call	___awdiv	;wreg free
  2867  001A86  0E09               	movlw	9
  2868  001A88  244F               	addwf	?___awdiv,w,c
  2869  001A8A  6E57               	movwf	___wmul@multiplier,c
  2870  001A8C  0E00               	movlw	0
  2871  001A8E  2050               	addwfc	?___awdiv+1,w,c
  2872  001A90  6E58               	movwf	___wmul@multiplier+1,c
  2873  001A92  0E00               	movlw	0
  2874  001A94  6E5A               	movwf	___wmul@multiplicand+1,c
  2875  001A96  0E03               	movlw	3
  2876  001A98  6E59               	movwf	___wmul@multiplicand,c
  2877  001A9A  ECD7  F016         	call	___wmul	;wreg free
  2878  001A9E  0E50               	movlw	low __powers_
  2879  001AA0  2457               	addwf	?___wmul,w,c
  2880  001AA2  6EF6               	movwf	tblptrl,c
  2881  001AA4  0E10               	movlw	high __powers_
  2882  001AA6  2058               	addwfc	?___wmul+1,w,c
  2883  001AA8  6EF7               	movwf	tblptrh,c
  2884  001AAA                     	if	0	;There are less than 3 active tblptr bytes
  2885  001AAA                     	endif
  2886  001AAA  0009               	tblrd		*+
  2887  001AAC  CFF5 F01C          	movff	tablat,___ftmul@f1
  2888  001AB0  0009               	tblrd		*+
  2889  001AB2  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2890  001AB6  000A               	tblrd		*-
  2891  001AB8  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2892  001ABC  0E00               	movlw	0
  2893  001ABE  6E5A               	movwf	___wmul@multiplicand+1,c
  2894  001AC0  0E03               	movlw	3
  2895  001AC2  6E59               	movwf	___wmul@multiplicand,c
  2896  001AC4  0E00               	movlw	0
  2897  001AC6  6E4C               	movwf	___awmod@divisor+1,c
  2898  001AC8  0E0A               	movlw	10
  2899  001ACA  6E4B               	movwf	___awmod@divisor,c
  2900  001ACC  5063               	movf	scale@scl,w,c
  2901  001ACE  6E49               	movwf	___awmod@dividend,c
  2902  001AD0  6A4A               	clrf	___awmod@dividend+1,c
  2903  001AD2  BE49               	btfsc	___awmod@dividend,7,c
  2904  001AD4  064A               	decf	___awmod@dividend+1,f,c
  2905  001AD6  EC69  F015         	call	___awmod	;wreg free
  2906  001ADA  C049  F057         	movff	?___awmod,___wmul@multiplier
  2907  001ADE  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  2908  001AE2  ECD7  F016         	call	___wmul	;wreg free
  2909  001AE6  0E50               	movlw	low __powers_
  2910  001AE8  2457               	addwf	?___wmul,w,c
  2911  001AEA  6EF6               	movwf	tblptrl,c
  2912  001AEC  0E10               	movlw	high __powers_
  2913  001AEE  2058               	addwfc	?___wmul+1,w,c
  2914  001AF0  6EF7               	movwf	tblptrh,c
  2915  001AF2                     	if	0	;There are less than 3 active tblptr bytes
  2916  001AF2                     	endif
  2917  001AF2  0009               	tblrd		*+
  2918  001AF4  CFF5 F01F          	movff	tablat,___ftmul@f2
  2919  001AF8  0009               	tblrd		*+
  2920  001AFA  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2921  001AFE  000A               	tblrd		*-
  2922  001B00  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2923  001B04  EC86  F012         	call	___ftmul	;wreg free
  2924  001B08                     L5:
  2925  001B08  C01C  F05D         	movff	?___ftmul,?_scale
  2926  001B0C  C01D  F05E         	movff	?___ftmul+1,?_scale+1
  2927  001B10  C01E  F05F         	movff	?___ftmul+2,?_scale+2
  2928  001B14  D013               	goto	l170
  2929  001B16  D000               	goto	l2211
  2930  001B18                     l2211:
  2931                           
  2932                           ;doprnt.c: 440: return _powers_[scl];
  2933  001B18  5063               	movf	scale@scl,w,c
  2934  001B1A  0D03               	mullw	3
  2935  001B1C  0E50               	movlw	low __powers_
  2936  001B1E  24F3               	addwf	prodl,w,c
  2937  001B20  6EF6               	movwf	tblptrl,c
  2938  001B22  0E10               	movlw	high __powers_
  2939  001B24                     L4:
  2940  001B24  20F4               	addwfc	prodh,w,c
  2941  001B26  6EF7               	movwf	tblptrh,c
  2942  001B28                     	if	0	;There are less than 3 active tblptr bytes
  2943  001B28                     	endif
  2944  001B28  0009               	tblrd		*+
  2945  001B2A  CFF5 F05D          	movff	tablat,?_scale
  2946  001B2E  0009               	tblrd		*+
  2947  001B30  CFF5 F05E          	movff	tablat,?_scale+1
  2948  001B34  000A               	tblrd		*-
  2949  001B36  CFF5 F05F          	movff	tablat,?_scale+2
  2950  001B3A  D000               	goto	l170
  2951  001B3C                     l170:
  2952  001B3C  0012               	return		;funcret
  2953  001B3E                     __end_of_scale:
  2954                           	opt stack 0
  2955                           tblptru	equ	0xFF8
  2956                           tblptrh	equ	0xFF7
  2957                           tblptrl	equ	0xFF6
  2958                           tablat	equ	0xFF5
  2959                           prodh	equ	0xFF4
  2960                           prodl	equ	0xFF3
  2961                           postinc0	equ	0xFEE
  2962                           wreg	equ	0xFE8
  2963                           postdec1	equ	0xFE5
  2964                           fsr1l	equ	0xFE1
  2965                           indf2	equ	0xFDF
  2966                           postinc2	equ	0xFDE
  2967                           postdec2	equ	0xFDD
  2968                           fsr2h	equ	0xFDA
  2969                           fsr2l	equ	0xFD9
  2970                           status	equ	0xFD8
  2971                           
  2972 ;; *************** function _putch *****************
  2973 ;; Defined at:
  2974 ;;		line 30 in file "Lab5pB2.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  c               1    wreg     unsigned char 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  c               1    0[COMRAM] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;		None               void
  2981 ;; Registers used:
  2982 ;;		wreg
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;Total ram usage:        1 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_printf
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text3
  3002  002EDE                     __ptext3:
  3003                           	opt stack 0
  3004  002EDE                     _putch:
  3005                           	opt stack 29
  3006                           
  3007                           ;incstack = 0
  3008                           ;putch@c stored from wreg
  3009  002EDE  6E01               	movwf	putch@c,c
  3010                           
  3011                           ;Lab5pB2.c: 32: while(!TRMT);
  3012  002EE0  D000               	goto	l80
  3013  002EE2                     l80:
  3014  002EE2  A2AC               	btfss	4012,1,c	;volatile
  3015  002EE4  D7FE               	goto	l80
  3016                           
  3017                           ;Lab5pB2.c: 33: TXREG = c;
  3018  002EE6  C001  FFAD         	movff	putch@c,4013	;volatile
  3019  002EEA  0012               	return		;funcret
  3020  002EEC                     __end_of_putch:
  3021                           	opt stack 0
  3022                           tblptru	equ	0xFF8
  3023                           tblptrh	equ	0xFF7
  3024                           tblptrl	equ	0xFF6
  3025                           tablat	equ	0xFF5
  3026                           prodh	equ	0xFF4
  3027                           prodl	equ	0xFF3
  3028                           postinc0	equ	0xFEE
  3029                           wreg	equ	0xFE8
  3030                           postdec1	equ	0xFE5
  3031                           fsr1l	equ	0xFE1
  3032                           indf2	equ	0xFDF
  3033                           postinc2	equ	0xFDE
  3034                           postdec2	equ	0xFDD
  3035                           fsr2h	equ	0xFDA
  3036                           fsr2l	equ	0xFD9
  3037                           status	equ	0xFD8
  3038                           
  3039 ;; *************** function _fround *****************
  3040 ;; Defined at:
  3041 ;;		line 409 in file "E:\XC8\sources\common\doprnt.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  prec            1    wreg     unsigned char 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  prec            1  101[COMRAM] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  3   92[COMRAM] unsigned char 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3055 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;Total ram usage:       10 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    2
  3062 ;; This function calls:
  3063 ;;		___awdiv
  3064 ;;		___awmod
  3065 ;;		___ftmul
  3066 ;;		___wmul
  3067 ;; This function is called by:
  3068 ;;		_printf
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text4
  3073  001EEA                     __ptext4:
  3074                           	opt stack 0
  3075  001EEA                     _fround:
  3076                           	opt stack 27
  3077                           
  3078                           ;incstack = 0
  3079                           ;fround@prec stored from wreg
  3080  001EEA  6E66               	movwf	fround@prec,c
  3081                           
  3082                           ;doprnt.c: 413: if(prec>=110)
  3083  001EEC  0E6D               	movlw	109
  3084  001EEE  6466               	cpfsgt	fround@prec,c
  3085  001EF0  D09B               	goto	l2165
  3086                           
  3087                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3088  001EF2  0E00               	movlw	0
  3089  001EF4  6E5A               	movwf	___wmul@multiplicand+1,c
  3090  001EF6  0E03               	movlw	3
  3091  001EF8  6E59               	movwf	___wmul@multiplicand,c
  3092  001EFA  0E00               	movlw	0
  3093  001EFC  6E52               	movwf	___awdiv@divisor+1,c
  3094  001EFE  0E0A               	movlw	10
  3095  001F00  6E51               	movwf	___awdiv@divisor,c
  3096  001F02  0E00               	movlw	0
  3097  001F04  6E4C               	movwf	___awmod@divisor+1,c
  3098  001F06  0E64               	movlw	100
  3099  001F08  6E4B               	movwf	___awmod@divisor,c
  3100  001F0A  C066  F049         	movff	fround@prec,___awmod@dividend
  3101  001F0E  6A4A               	clrf	___awmod@dividend+1,c
  3102  001F10  EC69  F015         	call	___awmod	;wreg free
  3103  001F14  C049  F04F         	movff	?___awmod,___awdiv@dividend
  3104  001F18  C04A  F050         	movff	?___awmod+1,___awdiv@dividend+1
  3105  001F1C  EC49  F014         	call	___awdiv	;wreg free
  3106  001F20  0E09               	movlw	9
  3107  001F22  244F               	addwf	?___awdiv,w,c
  3108  001F24  6E57               	movwf	___wmul@multiplier,c
  3109  001F26  0E00               	movlw	0
  3110  001F28  2050               	addwfc	?___awdiv+1,w,c
  3111  001F2A  6E58               	movwf	___wmul@multiplier+1,c
  3112  001F2C  ECD7  F016         	call	___wmul	;wreg free
  3113  001F30  0E29               	movlw	low __npowers_
  3114  001F32  2457               	addwf	?___wmul,w,c
  3115  001F34  6EF6               	movwf	tblptrl,c
  3116  001F36  0E10               	movlw	high __npowers_
  3117  001F38  2058               	addwfc	?___wmul+1,w,c
  3118  001F3A  6EF7               	movwf	tblptrh,c
  3119  001F3C                     	if	0	;There are less than 3 active tblptr bytes
  3120  001F3C                     	endif
  3121  001F3C  0009               	tblrd		*+
  3122  001F3E  CFF5 F01F          	movff	tablat,___ftmul@f2
  3123  001F42  0009               	tblrd		*+
  3124  001F44  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3125  001F48  000A               	tblrd		*-
  3126  001F4A  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3127  001F4E  0E00               	movlw	0
  3128  001F50  6E52               	movwf	___awdiv@divisor+1,c
  3129  001F52  0E64               	movlw	100
  3130  001F54  6E51               	movwf	___awdiv@divisor,c
  3131  001F56  C066  F04F         	movff	fround@prec,___awdiv@dividend
  3132  001F5A  6A50               	clrf	___awdiv@dividend+1,c
  3133  001F5C  EC49  F014         	call	___awdiv	;wreg free
  3134  001F60  0E12               	movlw	18
  3135  001F62  244F               	addwf	?___awdiv,w,c
  3136  001F64  6E57               	movwf	___wmul@multiplier,c
  3137  001F66  0E00               	movlw	0
  3138  001F68  2050               	addwfc	?___awdiv+1,w,c
  3139  001F6A  6E58               	movwf	___wmul@multiplier+1,c
  3140  001F6C  0E00               	movlw	0
  3141  001F6E  6E5A               	movwf	___wmul@multiplicand+1,c
  3142  001F70  0E03               	movlw	3
  3143  001F72  6E59               	movwf	___wmul@multiplicand,c
  3144  001F74  ECD7  F016         	call	___wmul	;wreg free
  3145  001F78  0E29               	movlw	low __npowers_
  3146  001F7A  2457               	addwf	?___wmul,w,c
  3147  001F7C  6EF6               	movwf	tblptrl,c
  3148  001F7E  0E10               	movlw	high __npowers_
  3149  001F80  2058               	addwfc	?___wmul+1,w,c
  3150  001F82  6EF7               	movwf	tblptrh,c
  3151  001F84                     	if	0	;There are less than 3 active tblptr bytes
  3152  001F84                     	endif
  3153  001F84  0009               	tblrd		*+
  3154  001F86  CFF5 F01C          	movff	tablat,___ftmul@f1
  3155  001F8A  0009               	tblrd		*+
  3156  001F8C  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3157  001F90  000A               	tblrd		*-
  3158  001F92  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3159  001F96  EC86  F012         	call	___ftmul	;wreg free
  3160  001F9A  C01C  F063         	movff	?___ftmul,_fround$1509
  3161  001F9E  C01D  F064         	movff	?___ftmul+1,_fround$1509+1
  3162  001FA2  C01E  F065         	movff	?___ftmul+2,_fround$1509+2
  3163                           
  3164                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3165  001FA6  0E00               	movlw	0
  3166  001FA8  6E5A               	movwf	___wmul@multiplicand+1,c
  3167  001FAA  0E03               	movlw	3
  3168  001FAC  6E59               	movwf	___wmul@multiplicand,c
  3169  001FAE  0E00               	movlw	0
  3170  001FB0  6E4C               	movwf	___awmod@divisor+1,c
  3171  001FB2  0E0A               	movlw	10
  3172  001FB4  6E4B               	movwf	___awmod@divisor,c
  3173  001FB6  C066  F049         	movff	fround@prec,___awmod@dividend
  3174  001FBA  6A4A               	clrf	___awmod@dividend+1,c
  3175  001FBC  EC69  F015         	call	___awmod	;wreg free
  3176  001FC0  C049  F057         	movff	?___awmod,___wmul@multiplier
  3177  001FC4  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  3178  001FC8  ECD7  F016         	call	___wmul	;wreg free
  3179  001FCC  0E29               	movlw	low __npowers_
  3180  001FCE  2457               	addwf	?___wmul,w,c
  3181  001FD0  6EF6               	movwf	tblptrl,c
  3182  001FD2  0E10               	movlw	high __npowers_
  3183  001FD4  2058               	addwfc	?___wmul+1,w,c
  3184  001FD6  6EF7               	movwf	tblptrh,c
  3185  001FD8                     	if	0	;There are less than 3 active tblptr bytes
  3186  001FD8                     	endif
  3187  001FD8  0009               	tblrd		*+
  3188  001FDA  CFF5 F01F          	movff	tablat,___ftmul@f2
  3189  001FDE  0009               	tblrd		*+
  3190  001FE0  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3191  001FE4  000A               	tblrd		*-
  3192  001FE6  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3193  001FEA  C063  F01C         	movff	_fround$1509,___ftmul@f1
  3194  001FEE  C064  F01D         	movff	_fround$1509+1,___ftmul@f1+1
  3195  001FF2  C065  F01E         	movff	_fround$1509+2,___ftmul@f1+2
  3196  001FF6  EC86  F012         	call	___ftmul	;wreg free
  3197  001FFA  C01C  F060         	movff	?___ftmul,_fround$1510
  3198  001FFE  C01D  F061         	movff	?___ftmul+1,_fround$1510+1
  3199  002002  C01E  F062         	movff	?___ftmul+2,_fround$1510+2
  3200                           
  3201                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3202  002006  C060  F01C         	movff	_fround$1510,___ftmul@f1
  3203  00200A  C061  F01D         	movff	_fround$1510+1,___ftmul@f1+1
  3204  00200E  C062  F01E         	movff	_fround$1510+2,___ftmul@f1+2
  3205  002012  0E00               	movlw	0
  3206  002014  6E1F               	movwf	___ftmul@f2,c
  3207  002016  0E00               	movlw	0
  3208  002018  6E20               	movwf	___ftmul@f2+1,c
  3209  00201A  0E3F               	movlw	63
  3210  00201C  6E21               	movwf	___ftmul@f2+2,c
  3211  00201E  EC86  F012         	call	___ftmul	;wreg free
  3212  002022  D07D               	goto	L7
  3213  002024  D083               	goto	l163
  3214  002026  D062               	goto	l2173
  3215  002028                     l2165:
  3216                           
  3217                           ;doprnt.c: 415: else if(prec > 10)
  3218  002028  0E0A               	movlw	10
  3219  00202A  6466               	cpfsgt	fround@prec,c
  3220  00202C  D05F               	goto	l2173
  3221                           
  3222                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3223  00202E  0E00               	movlw	0
  3224  002030  6E5A               	movwf	___wmul@multiplicand+1,c
  3225  002032  0E03               	movlw	3
  3226  002034  6E59               	movwf	___wmul@multiplicand,c
  3227  002036  0E00               	movlw	0
  3228  002038  6E4C               	movwf	___awmod@divisor+1,c
  3229  00203A  0E0A               	movlw	10
  3230  00203C  6E4B               	movwf	___awmod@divisor,c
  3231  00203E  C066  F049         	movff	fround@prec,___awmod@dividend
  3232  002042  6A4A               	clrf	___awmod@dividend+1,c
  3233  002044  EC69  F015         	call	___awmod	;wreg free
  3234  002048  C049  F057         	movff	?___awmod,___wmul@multiplier
  3235  00204C  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  3236  002050  ECD7  F016         	call	___wmul	;wreg free
  3237  002054  0E29               	movlw	low __npowers_
  3238  002056  2457               	addwf	?___wmul,w,c
  3239  002058  6EF6               	movwf	tblptrl,c
  3240  00205A  0E10               	movlw	high __npowers_
  3241  00205C  2058               	addwfc	?___wmul+1,w,c
  3242  00205E  6EF7               	movwf	tblptrh,c
  3243  002060                     	if	0	;There are less than 3 active tblptr bytes
  3244  002060                     	endif
  3245  002060  0009               	tblrd		*+
  3246  002062  CFF5 F01F          	movff	tablat,___ftmul@f2
  3247  002066  0009               	tblrd		*+
  3248  002068  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3249  00206C  000A               	tblrd		*-
  3250  00206E  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3251  002072  0E00               	movlw	0
  3252  002074  6E52               	movwf	___awdiv@divisor+1,c
  3253  002076  0E0A               	movlw	10
  3254  002078  6E51               	movwf	___awdiv@divisor,c
  3255  00207A  C066  F04F         	movff	fround@prec,___awdiv@dividend
  3256  00207E  6A50               	clrf	___awdiv@dividend+1,c
  3257  002080  EC49  F014         	call	___awdiv	;wreg free
  3258  002084  0E09               	movlw	9
  3259  002086  244F               	addwf	?___awdiv,w,c
  3260  002088  6E57               	movwf	___wmul@multiplier,c
  3261  00208A  0E00               	movlw	0
  3262  00208C  2050               	addwfc	?___awdiv+1,w,c
  3263  00208E  6E58               	movwf	___wmul@multiplier+1,c
  3264  002090  0E00               	movlw	0
  3265  002092  6E5A               	movwf	___wmul@multiplicand+1,c
  3266  002094  0E03               	movlw	3
  3267  002096  6E59               	movwf	___wmul@multiplicand,c
  3268  002098  ECD7  F016         	call	___wmul	;wreg free
  3269  00209C  0E29               	movlw	low __npowers_
  3270  00209E  2457               	addwf	?___wmul,w,c
  3271  0020A0  6EF6               	movwf	tblptrl,c
  3272  0020A2  0E10               	movlw	high __npowers_
  3273  0020A4  2058               	addwfc	?___wmul+1,w,c
  3274  0020A6  6EF7               	movwf	tblptrh,c
  3275  0020A8                     	if	0	;There are less than 3 active tblptr bytes
  3276  0020A8                     	endif
  3277  0020A8  0009               	tblrd		*+
  3278  0020AA  CFF5 F01C          	movff	tablat,___ftmul@f1
  3279  0020AE  0009               	tblrd		*+
  3280  0020B0  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3281  0020B4  000A               	tblrd		*-
  3282  0020B6  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3283  0020BA  EC86  F012         	call	___ftmul	;wreg free
  3284  0020BE  C01C  F063         	movff	?___ftmul,_fround$1509
  3285  0020C2  C01D  F064         	movff	?___ftmul+1,_fround$1509+1
  3286  0020C6  C01E  F065         	movff	?___ftmul+2,_fround$1509+2
  3287                           
  3288                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3289  0020CA  C063  F01C         	movff	_fround$1509,___ftmul@f1
  3290  0020CE  C064  F01D         	movff	_fround$1509+1,___ftmul@f1+1
  3291  0020D2  C065  F01E         	movff	_fround$1509+2,___ftmul@f1+2
  3292  0020D6  0E00               	movlw	0
  3293  0020D8  6E1F               	movwf	___ftmul@f2,c
  3294  0020DA  0E00               	movlw	0
  3295  0020DC  6E20               	movwf	___ftmul@f2+1,c
  3296  0020DE  0E3F               	movlw	63
  3297  0020E0  6E21               	movwf	___ftmul@f2+2,c
  3298  0020E2  EC86  F012         	call	___ftmul	;wreg free
  3299  0020E6  D01B               	goto	L7
  3300  0020E8  D021               	goto	l163
  3301  0020EA  D000               	goto	l2173
  3302  0020EC                     l2173:
  3303                           
  3304                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3305  0020EC  5066               	movf	fround@prec,w,c
  3306  0020EE  0D03               	mullw	3
  3307  0020F0  0E29               	movlw	low __npowers_
  3308  0020F2  24F3               	addwf	prodl,w,c
  3309  0020F4  6EF6               	movwf	tblptrl,c
  3310  0020F6  0E10               	movlw	high __npowers_
  3311  0020F8  20F4               	addwfc	prodh,w,c
  3312  0020FA  6EF7               	movwf	tblptrh,c
  3313  0020FC                     	if	0	;There are less than 3 active tblptr bytes
  3314  0020FC                     	endif
  3315  0020FC  0009               	tblrd		*+
  3316  0020FE  CFF5 F01C          	movff	tablat,___ftmul@f1
  3317  002102  0009               	tblrd		*+
  3318  002104  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3319  002108  000A               	tblrd		*-
  3320  00210A  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3321  00210E  0E00               	movlw	0
  3322  002110  6E1F               	movwf	___ftmul@f2,c
  3323  002112  0E00               	movlw	0
  3324  002114  6E20               	movwf	___ftmul@f2+1,c
  3325  002116  0E3F               	movlw	63
  3326  002118  6E21               	movwf	___ftmul@f2+2,c
  3327  00211A  EC86  F012         	call	___ftmul	;wreg free
  3328  00211E                     L7:
  3329  00211E  C01C  F05D         	movff	?___ftmul,?_fround
  3330  002122  C01D  F05E         	movff	?___ftmul+1,?_fround+1
  3331  002126  C01E  F05F         	movff	?___ftmul+2,?_fround+2
  3332  00212A  D000               	goto	l163
  3333  00212C                     l163:
  3334  00212C  0012               	return		;funcret
  3335  00212E                     __end_of_fround:
  3336                           	opt stack 0
  3337                           tblptru	equ	0xFF8
  3338                           tblptrh	equ	0xFF7
  3339                           tblptrl	equ	0xFF6
  3340                           tablat	equ	0xFF5
  3341                           prodh	equ	0xFF4
  3342                           prodl	equ	0xFF3
  3343                           postinc0	equ	0xFEE
  3344                           wreg	equ	0xFE8
  3345                           postdec1	equ	0xFE5
  3346                           fsr1l	equ	0xFE1
  3347                           indf2	equ	0xFDF
  3348                           postinc2	equ	0xFDE
  3349                           postdec2	equ	0xFDD
  3350                           fsr2h	equ	0xFDA
  3351                           fsr2l	equ	0xFD9
  3352                           status	equ	0xFD8
  3353                           
  3354 ;; *************** function ___wmul *****************
  3355 ;; Defined at:
  3356 ;;		line 15 in file "E:\XC8\sources\common\Umul16.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  multiplier      2   86[COMRAM] unsigned int 
  3359 ;;  multiplicand    2   88[COMRAM] unsigned int 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  product         2   90[COMRAM] unsigned int 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  2   86[COMRAM] unsigned int 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0, prodl, prodh
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;Total ram usage:        6 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; This function calls:
  3378 ;;		Nothing
  3379 ;; This function is called by:
  3380 ;;		_fround
  3381 ;;		_scale
  3382 ;;		_printf
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text5
  3387  002DAE                     __ptext5:
  3388                           	opt stack 0
  3389  002DAE                     ___wmul:
  3390                           	opt stack 28
  3391                           
  3392                           ;incstack = 0
  3393  002DAE  5057               	movf	___wmul@multiplier,w,c
  3394  002DB0  0259               	mulwf	___wmul@multiplicand,c
  3395  002DB2  CFF3 F05B          	movff	prodl,___wmul@product
  3396  002DB6  CFF4 F05C          	movff	prodh,___wmul@product+1
  3397  002DBA  5057               	movf	___wmul@multiplier,w,c
  3398  002DBC  025A               	mulwf	___wmul@multiplicand+1,c
  3399  002DBE  50F3               	movf	prodl,w,c
  3400  002DC0  265C               	addwf	___wmul@product+1,f,c
  3401  002DC2  5058               	movf	___wmul@multiplier+1,w,c
  3402  002DC4  0259               	mulwf	___wmul@multiplicand,c
  3403  002DC6  50F3               	movf	prodl,w,c
  3404  002DC8  265C               	addwf	___wmul@product+1,f,c
  3405  002DCA  C05B  F057         	movff	___wmul@product,?___wmul
  3406  002DCE  C05C  F058         	movff	___wmul@product+1,?___wmul+1
  3407  002DD2  D000               	goto	l262
  3408  002DD4                     l262:
  3409  002DD4  0012               	return		;funcret
  3410  002DD6                     __end_of___wmul:
  3411                           	opt stack 0
  3412                           tblptru	equ	0xFF8
  3413                           tblptrh	equ	0xFF7
  3414                           tblptrl	equ	0xFF6
  3415                           tablat	equ	0xFF5
  3416                           prodh	equ	0xFF4
  3417                           prodl	equ	0xFF3
  3418                           postinc0	equ	0xFEE
  3419                           wreg	equ	0xFE8
  3420                           postdec1	equ	0xFE5
  3421                           fsr1l	equ	0xFE1
  3422                           indf2	equ	0xFDF
  3423                           postinc2	equ	0xFDE
  3424                           postdec2	equ	0xFDD
  3425                           fsr2h	equ	0xFDA
  3426                           fsr2l	equ	0xFD9
  3427                           status	equ	0xFD8
  3428                           
  3429 ;; *************** function ___ftmul *****************
  3430 ;; Defined at:
  3431 ;;		line 62 in file "E:\XC8\sources\common\ftmul.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  f1              3   27[COMRAM] float 
  3434 ;;  f2              3   30[COMRAM] float 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  3437 ;;  sign            1   41[COMRAM] unsigned char 
  3438 ;;  cntr            1   40[COMRAM] unsigned char 
  3439 ;;  exp             1   36[COMRAM] unsigned char 
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  3   27[COMRAM] float 
  3442 ;; Registers used:
  3443 ;;		wreg, status,2, status,0, cstack
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3449 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;Total ram usage:       15 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:    1
  3456 ;; This function calls:
  3457 ;;		___ftpack
  3458 ;; This function is called by:
  3459 ;;		_main
  3460 ;;		_fround
  3461 ;;		_scale
  3462 ;;		_printf
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text6
  3467  00250C                     __ptext6:
  3468                           	opt stack 0
  3469  00250C                     ___ftmul:
  3470                           	opt stack 27
  3471                           
  3472                           ;incstack = 0
  3473  00250C  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  3474  002510  6A23               	clrf	(??___ftmul+1)& (0+255),c
  3475  002512  6A24               	clrf	(??___ftmul+2)& (0+255),c
  3476  002514  341D               	rlcf	___ftmul@f1+1,w,c
  3477  002516  3622               	rlcf	??___ftmul& (0+255),f,c
  3478  002518  E301               	bnc	u1781
  3479  00251A  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  3480  00251C                     u1781:
  3481  00251C  5022               	movf	??___ftmul,w,c
  3482  00251E  6E25               	movwf	___ftmul@exp,c
  3483  002520  5025               	movf	___ftmul@exp,w,c
  3484  002522  A4D8               	btfss	status,2,c
  3485  002524  D002               	goto	l1979
  3486  002526  D00E               	goto	l1981
  3487  002528  D06C               	goto	l691
  3488  00252A                     l1979:
  3489  00252A  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  3490  00252E  6A23               	clrf	(??___ftmul+1)& (0+255),c
  3491  002530  6A24               	clrf	(??___ftmul+2)& (0+255),c
  3492  002532  3420               	rlcf	___ftmul@f2+1,w,c
  3493  002534  3622               	rlcf	??___ftmul& (0+255),f,c
  3494  002536  E301               	bnc	u1801
  3495  002538  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  3496  00253A                     u1801:
  3497  00253A  5022               	movf	??___ftmul,w,c
  3498  00253C  6E2A               	movwf	___ftmul@sign,c
  3499  00253E  502A               	movf	___ftmul@sign,w,c
  3500  002540  A4D8               	btfss	status,2,c
  3501  002542  D007               	goto	l1985
  3502  002544                     l1981:
  3503  002544  0E00               	movlw	0
  3504  002546  6E1C               	movwf	?___ftmul,c
  3505  002548  0E00               	movlw	0
  3506  00254A  6E1D               	movwf	?___ftmul+1,c
  3507  00254C  0E00               	movlw	0
  3508  00254E  6E1E               	movwf	?___ftmul+2,c
  3509  002550  D058               	goto	l691
  3510  002552                     l1985:
  3511  002552  502A               	movf	___ftmul@sign,w,c
  3512  002554  0F7B               	addlw	123
  3513  002556  2625               	addwf	___ftmul@exp,f,c
  3514  002558  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  3515  00255C  5021               	movf	___ftmul@f2+2,w,c
  3516  00255E  1A2A               	xorwf	___ftmul@sign,f,c
  3517  002560  0E80               	movlw	128
  3518  002562  162A               	andwf	___ftmul@sign,f,c
  3519  002564  8E1D               	bsf	___ftmul@f1+1,7,c
  3520  002566  8E20               	bsf	___ftmul@f2+1,7,c
  3521  002568  0EFF               	movlw	255
  3522  00256A  161F               	andwf	___ftmul@f2,f,c
  3523  00256C  0EFF               	movlw	255
  3524  00256E  1620               	andwf	___ftmul@f2+1,f,c
  3525  002570  0E00               	movlw	0
  3526  002572  1621               	andwf	___ftmul@f2+2,f,c
  3527  002574  0E00               	movlw	0
  3528  002576  6E26               	movwf	___ftmul@f3_as_product,c
  3529  002578  0E00               	movlw	0
  3530  00257A  6E27               	movwf	___ftmul@f3_as_product+1,c
  3531  00257C  0E00               	movlw	0
  3532  00257E  6E28               	movwf	___ftmul@f3_as_product+2,c
  3533  002580  0E07               	movlw	7
  3534  002582  6E29               	movwf	___ftmul@cntr,c
  3535  002584  D000               	goto	l1999
  3536  002586                     l1999:
  3537  002586  A01C               	btfss	___ftmul@f1,0,c
  3538  002588  D007               	goto	l2003
  3539  00258A  501F               	movf	___ftmul@f2,w,c
  3540  00258C  2626               	addwf	___ftmul@f3_as_product,f,c
  3541  00258E  5020               	movf	___ftmul@f2+1,w,c
  3542  002590  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3543  002592  5021               	movf	___ftmul@f2+2,w,c
  3544  002594  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3545  002596  D000               	goto	l2003
  3546  002598                     l2003:
  3547  002598  90D8               	bcf	status,0,c
  3548  00259A  321E               	rrcf	___ftmul@f1+2,f,c
  3549  00259C  321D               	rrcf	___ftmul@f1+1,f,c
  3550  00259E  321C               	rrcf	___ftmul@f1,f,c
  3551  0025A0  90D8               	bcf	status,0,c
  3552  0025A2  361F               	rlcf	___ftmul@f2,f,c
  3553  0025A4  3620               	rlcf	___ftmul@f2+1,f,c
  3554  0025A6  3621               	rlcf	___ftmul@f2+2,f,c
  3555  0025A8  2E29               	decfsz	___ftmul@cntr,f,c
  3556  0025AA  D7ED               	goto	l1999
  3557  0025AC  D000               	goto	l2007
  3558  0025AE                     l2007:
  3559  0025AE  0E09               	movlw	9
  3560  0025B0  6E29               	movwf	___ftmul@cntr,c
  3561  0025B2  D000               	goto	l2009
  3562  0025B4                     l2009:
  3563  0025B4  A01C               	btfss	___ftmul@f1,0,c
  3564  0025B6  D007               	goto	l2013
  3565  0025B8  501F               	movf	___ftmul@f2,w,c
  3566  0025BA  2626               	addwf	___ftmul@f3_as_product,f,c
  3567  0025BC  5020               	movf	___ftmul@f2+1,w,c
  3568  0025BE  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3569  0025C0  5021               	movf	___ftmul@f2+2,w,c
  3570  0025C2  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3571  0025C4  D000               	goto	l2013
  3572  0025C6                     l2013:
  3573  0025C6  90D8               	bcf	status,0,c
  3574  0025C8  321E               	rrcf	___ftmul@f1+2,f,c
  3575  0025CA  321D               	rrcf	___ftmul@f1+1,f,c
  3576  0025CC  321C               	rrcf	___ftmul@f1,f,c
  3577  0025CE  90D8               	bcf	status,0,c
  3578  0025D0  3228               	rrcf	___ftmul@f3_as_product+2,f,c
  3579  0025D2  3227               	rrcf	___ftmul@f3_as_product+1,f,c
  3580  0025D4  3226               	rrcf	___ftmul@f3_as_product,f,c
  3581  0025D6  2E29               	decfsz	___ftmul@cntr,f,c
  3582  0025D8  D7ED               	goto	l2009
  3583  0025DA  D000               	goto	l2017
  3584  0025DC                     l2017:
  3585  0025DC  C026  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3586  0025E0  C027  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3587  0025E4  C028  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3588  0025E8  C025  F004         	movff	___ftmul@exp,___ftpack@exp
  3589  0025EC  C02A  F005         	movff	___ftmul@sign,___ftpack@sign
  3590  0025F0  ECE6  F013         	call	___ftpack	;wreg free
  3591  0025F4  C001  F01C         	movff	?___ftpack,?___ftmul
  3592  0025F8  C002  F01D         	movff	?___ftpack+1,?___ftmul+1
  3593  0025FC  C003  F01E         	movff	?___ftpack+2,?___ftmul+2
  3594  002600  D000               	goto	l691
  3595  002602                     l691:
  3596  002602  0012               	return		;funcret
  3597  002604                     __end_of___ftmul:
  3598                           	opt stack 0
  3599                           tblptru	equ	0xFF8
  3600                           tblptrh	equ	0xFF7
  3601                           tblptrl	equ	0xFF6
  3602                           tablat	equ	0xFF5
  3603                           prodh	equ	0xFF4
  3604                           prodl	equ	0xFF3
  3605                           postinc0	equ	0xFEE
  3606                           wreg	equ	0xFE8
  3607                           postdec1	equ	0xFE5
  3608                           fsr1l	equ	0xFE1
  3609                           indf2	equ	0xFDF
  3610                           postinc2	equ	0xFDE
  3611                           postdec2	equ	0xFDD
  3612                           fsr2h	equ	0xFDA
  3613                           fsr2l	equ	0xFD9
  3614                           status	equ	0xFD8
  3615                           
  3616 ;; *************** function ___awmod *****************
  3617 ;; Defined at:
  3618 ;;		line 8 in file "E:\XC8\sources\common\awmod.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  dividend        2   72[COMRAM] int 
  3621 ;;  divisor         2   74[COMRAM] int 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  sign            1   77[COMRAM] unsigned char 
  3624 ;;  counter         1   76[COMRAM] unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  2   72[COMRAM] int 
  3627 ;; Registers used:
  3628 ;;		wreg, status,2, status,0
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;Total ram usage:        6 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_main
  3644 ;;		_fround
  3645 ;;		_scale
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text7
  3650  002AD2                     __ptext7:
  3651                           	opt stack 0
  3652  002AD2                     ___awmod:
  3653                           	opt stack 28
  3654                           
  3655                           ;incstack = 0
  3656  002AD2  0E00               	movlw	0
  3657  002AD4  6E4E               	movwf	___awmod@sign,c
  3658  002AD6  AE4A               	btfss	___awmod@dividend+1,7,c
  3659  002AD8  D007               	goto	l2073
  3660  002ADA  6C49               	negf	___awmod@dividend,c
  3661  002ADC  1E4A               	comf	___awmod@dividend+1,f,c
  3662  002ADE  B0D8               	btfsc	status,0,c
  3663  002AE0  2A4A               	incf	___awmod@dividend+1,f,c
  3664  002AE2  0E01               	movlw	1
  3665  002AE4  6E4E               	movwf	___awmod@sign,c
  3666  002AE6  D000               	goto	l2073
  3667  002AE8                     l2073:
  3668  002AE8  AE4C               	btfss	___awmod@divisor+1,7,c
  3669  002AEA  D005               	goto	l2077
  3670  002AEC  6C4B               	negf	___awmod@divisor,c
  3671  002AEE  1E4C               	comf	___awmod@divisor+1,f,c
  3672  002AF0  B0D8               	btfsc	status,0,c
  3673  002AF2  2A4C               	incf	___awmod@divisor+1,f,c
  3674  002AF4  D000               	goto	l2077
  3675  002AF6                     l2077:
  3676  002AF6  504B               	movf	___awmod@divisor,w,c
  3677  002AF8  104C               	iorwf	___awmod@divisor+1,w,c
  3678  002AFA  B4D8               	btfsc	status,2,c
  3679  002AFC  D01D               	goto	l2093
  3680  002AFE  0E01               	movlw	1
  3681  002B00  6E4D               	movwf	___awmod@counter,c
  3682  002B02  D005               	goto	l2083
  3683  002B04                     l2081:
  3684  002B04  90D8               	bcf	status,0,c
  3685  002B06  364B               	rlcf	___awmod@divisor,f,c
  3686  002B08  364C               	rlcf	___awmod@divisor+1,f,c
  3687  002B0A  2A4D               	incf	___awmod@counter,f,c
  3688  002B0C  D000               	goto	l2083
  3689  002B0E                     l2083:
  3690  002B0E  BE4C               	btfsc	___awmod@divisor+1,7,c
  3691  002B10  D002               	goto	l2085
  3692  002B12  D7F8               	goto	l2081
  3693  002B14  D000               	goto	l2085
  3694  002B16                     l2085:
  3695  002B16  504B               	movf	___awmod@divisor,w,c
  3696  002B18  5C49               	subwf	___awmod@dividend,w,c
  3697  002B1A  504C               	movf	___awmod@divisor+1,w,c
  3698  002B1C  584A               	subwfb	___awmod@dividend+1,w,c
  3699  002B1E  A0D8               	btfss	status,0,c
  3700  002B20  D005               	goto	l2089
  3701  002B22  504B               	movf	___awmod@divisor,w,c
  3702  002B24  5E49               	subwf	___awmod@dividend,f,c
  3703  002B26  504C               	movf	___awmod@divisor+1,w,c
  3704  002B28  5A4A               	subwfb	___awmod@dividend+1,f,c
  3705  002B2A  D000               	goto	l2089
  3706  002B2C                     l2089:
  3707  002B2C  90D8               	bcf	status,0,c
  3708  002B2E  324C               	rrcf	___awmod@divisor+1,f,c
  3709  002B30  324B               	rrcf	___awmod@divisor,f,c
  3710  002B32  2E4D               	decfsz	___awmod@counter,f,c
  3711  002B34  D7F0               	goto	l2085
  3712  002B36  D000               	goto	l2093
  3713  002B38                     l2093:
  3714  002B38  504E               	movf	___awmod@sign,w,c
  3715  002B3A  B4D8               	btfsc	status,2,c
  3716  002B3C  D005               	goto	l2097
  3717  002B3E  6C49               	negf	___awmod@dividend,c
  3718  002B40  1E4A               	comf	___awmod@dividend+1,f,c
  3719  002B42  B0D8               	btfsc	status,0,c
  3720  002B44  2A4A               	incf	___awmod@dividend+1,f,c
  3721  002B46  D000               	goto	l2097
  3722  002B48                     l2097:
  3723  002B48  C049  F049         	movff	___awmod@dividend,?___awmod
  3724  002B4C  C04A  F04A         	movff	___awmod@dividend+1,?___awmod+1
  3725  002B50  D000               	goto	l468
  3726  002B52                     l468:
  3727  002B52  0012               	return		;funcret
  3728  002B54                     __end_of___awmod:
  3729                           	opt stack 0
  3730                           tblptru	equ	0xFF8
  3731                           tblptrh	equ	0xFF7
  3732                           tblptrl	equ	0xFF6
  3733                           tablat	equ	0xFF5
  3734                           prodh	equ	0xFF4
  3735                           prodl	equ	0xFF3
  3736                           postinc0	equ	0xFEE
  3737                           wreg	equ	0xFE8
  3738                           postdec1	equ	0xFE5
  3739                           fsr1l	equ	0xFE1
  3740                           indf2	equ	0xFDF
  3741                           postinc2	equ	0xFDE
  3742                           postdec2	equ	0xFDD
  3743                           fsr2h	equ	0xFDA
  3744                           fsr2l	equ	0xFD9
  3745                           status	equ	0xFD8
  3746                           
  3747 ;; *************** function ___awdiv *****************
  3748 ;; Defined at:
  3749 ;;		line 8 in file "E:\XC8\sources\common\awdiv.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  dividend        2   78[COMRAM] int 
  3752 ;;  divisor         2   80[COMRAM] int 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  quotient        2   84[COMRAM] int 
  3755 ;;  sign            1   83[COMRAM] unsigned char 
  3756 ;;  counter         1   82[COMRAM] unsigned char 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  2   78[COMRAM] int 
  3759 ;; Registers used:
  3760 ;;		wreg, status,2, status,0
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;Total ram usage:        8 bytes
  3771 ;; Hardware stack levels used:    1
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_main
  3776 ;;		_fround
  3777 ;;		_scale
  3778 ;;		_printf
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text8
  3783  002892                     __ptext8:
  3784                           	opt stack 0
  3785  002892                     ___awdiv:
  3786                           	opt stack 28
  3787                           
  3788                           ;incstack = 0
  3789  002892  0E00               	movlw	0
  3790  002894  6E54               	movwf	___awdiv@sign,c
  3791  002896  AE52               	btfss	___awdiv@divisor+1,7,c
  3792  002898  D007               	goto	l2029
  3793  00289A  6C51               	negf	___awdiv@divisor,c
  3794  00289C  1E52               	comf	___awdiv@divisor+1,f,c
  3795  00289E  B0D8               	btfsc	status,0,c
  3796  0028A0  2A52               	incf	___awdiv@divisor+1,f,c
  3797  0028A2  0E01               	movlw	1
  3798  0028A4  6E54               	movwf	___awdiv@sign,c
  3799  0028A6  D000               	goto	l2029
  3800  0028A8                     l2029:
  3801  0028A8  AE50               	btfss	___awdiv@dividend+1,7,c
  3802  0028AA  D007               	goto	l2035
  3803  0028AC  6C4F               	negf	___awdiv@dividend,c
  3804  0028AE  1E50               	comf	___awdiv@dividend+1,f,c
  3805  0028B0  B0D8               	btfsc	status,0,c
  3806  0028B2  2A50               	incf	___awdiv@dividend+1,f,c
  3807  0028B4  0E01               	movlw	1
  3808  0028B6  1A54               	xorwf	___awdiv@sign,f,c
  3809  0028B8  D000               	goto	l2035
  3810  0028BA                     l2035:
  3811  0028BA  0E00               	movlw	0
  3812  0028BC  6E56               	movwf	___awdiv@quotient+1,c
  3813  0028BE  0E00               	movlw	0
  3814  0028C0  6E55               	movwf	___awdiv@quotient,c
  3815  0028C2  5051               	movf	___awdiv@divisor,w,c
  3816  0028C4  1052               	iorwf	___awdiv@divisor+1,w,c
  3817  0028C6  B4D8               	btfsc	status,2,c
  3818  0028C8  D021               	goto	l2057
  3819  0028CA  0E01               	movlw	1
  3820  0028CC  6E53               	movwf	___awdiv@counter,c
  3821  0028CE  D005               	goto	l2043
  3822  0028D0                     l2041:
  3823  0028D0  90D8               	bcf	status,0,c
  3824  0028D2  3651               	rlcf	___awdiv@divisor,f,c
  3825  0028D4  3652               	rlcf	___awdiv@divisor+1,f,c
  3826  0028D6  2A53               	incf	___awdiv@counter,f,c
  3827  0028D8  D000               	goto	l2043
  3828  0028DA                     l2043:
  3829  0028DA  BE52               	btfsc	___awdiv@divisor+1,7,c
  3830  0028DC  D002               	goto	l2045
  3831  0028DE  D7F8               	goto	l2041
  3832  0028E0  D000               	goto	l2045
  3833  0028E2                     l2045:
  3834  0028E2  90D8               	bcf	status,0,c
  3835  0028E4  3655               	rlcf	___awdiv@quotient,f,c
  3836  0028E6  3656               	rlcf	___awdiv@quotient+1,f,c
  3837  0028E8  5051               	movf	___awdiv@divisor,w,c
  3838  0028EA  5C4F               	subwf	___awdiv@dividend,w,c
  3839  0028EC  5052               	movf	___awdiv@divisor+1,w,c
  3840  0028EE  5850               	subwfb	___awdiv@dividend+1,w,c
  3841  0028F0  A0D8               	btfss	status,0,c
  3842  0028F2  D006               	goto	l2053
  3843  0028F4  5051               	movf	___awdiv@divisor,w,c
  3844  0028F6  5E4F               	subwf	___awdiv@dividend,f,c
  3845  0028F8  5052               	movf	___awdiv@divisor+1,w,c
  3846  0028FA  5A50               	subwfb	___awdiv@dividend+1,f,c
  3847  0028FC  8055               	bsf	___awdiv@quotient,0,c
  3848  0028FE  D000               	goto	l2053
  3849  002900                     l2053:
  3850  002900  90D8               	bcf	status,0,c
  3851  002902  3252               	rrcf	___awdiv@divisor+1,f,c
  3852  002904  3251               	rrcf	___awdiv@divisor,f,c
  3853  002906  2E53               	decfsz	___awdiv@counter,f,c
  3854  002908  D7EC               	goto	l2045
  3855  00290A  D000               	goto	l2057
  3856  00290C                     l2057:
  3857  00290C  5054               	movf	___awdiv@sign,w,c
  3858  00290E  B4D8               	btfsc	status,2,c
  3859  002910  D005               	goto	l2061
  3860  002912  6C55               	negf	___awdiv@quotient,c
  3861  002914  1E56               	comf	___awdiv@quotient+1,f,c
  3862  002916  B0D8               	btfsc	status,0,c
  3863  002918  2A56               	incf	___awdiv@quotient+1,f,c
  3864  00291A  D000               	goto	l2061
  3865  00291C                     l2061:
  3866  00291C  C055  F04F         	movff	___awdiv@quotient,?___awdiv
  3867  002920  C056  F050         	movff	___awdiv@quotient+1,?___awdiv+1
  3868  002924  D000               	goto	l455
  3869  002926                     l455:
  3870  002926  0012               	return		;funcret
  3871  002928                     __end_of___awdiv:
  3872                           	opt stack 0
  3873                           tblptru	equ	0xFF8
  3874                           tblptrh	equ	0xFF7
  3875                           tblptrl	equ	0xFF6
  3876                           tablat	equ	0xFF5
  3877                           prodh	equ	0xFF4
  3878                           prodl	equ	0xFF3
  3879                           postinc0	equ	0xFEE
  3880                           wreg	equ	0xFE8
  3881                           postdec1	equ	0xFE5
  3882                           fsr1l	equ	0xFE1
  3883                           indf2	equ	0xFDF
  3884                           postinc2	equ	0xFDE
  3885                           postdec2	equ	0xFDD
  3886                           fsr2h	equ	0xFDA
  3887                           fsr2l	equ	0xFD9
  3888                           status	equ	0xFD8
  3889                           
  3890 ;; *************** function __tdiv_to_l_ *****************
  3891 ;; Defined at:
  3892 ;;		line 60 in file "E:\XC8\sources\common\ftdivl.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  f1              3    0[COMRAM] float 
  3895 ;;  f2              3    3[COMRAM] float 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  quot            4    9[COMRAM] unsigned long 
  3898 ;;  exp1            1   14[COMRAM] unsigned char 
  3899 ;;  cntr            1   13[COMRAM] unsigned char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  4    0[COMRAM] unsigned long 
  3902 ;; Registers used:
  3903 ;;		wreg, status,2, status,0
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3909 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;Total ram usage:       15 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; This function calls:
  3916 ;;		Nothing
  3917 ;; This function is called by:
  3918 ;;		_printf
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text9
  3923  0022F2                     __ptext9:
  3924                           	opt stack 0
  3925  0022F2                     __tdiv_to_l_:
  3926                           	opt stack 29
  3927                           
  3928                           ;incstack = 0
  3929  0022F2  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3930  0022F6  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3931  0022F8  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3932  0022FA  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3933  0022FC  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3934  0022FE  E301               	bnc	u2141
  3935  002300  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3936  002302                     u2141:
  3937  002302  5007               	movf	??__tdiv_to_l_,w,c
  3938  002304  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3939  002306  500F               	movf	__tdiv_to_l_@exp1,w,c
  3940  002308  A4D8               	btfss	status,2,c
  3941  00230A  D002               	goto	l2221
  3942  00230C  D05D               	goto	l2263
  3943  00230E  D078               	goto	l667
  3944  002310                     l2221:
  3945  002310  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3946  002314  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3947  002316  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3948  002318  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3949  00231A  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3950  00231C  E301               	bnc	u2161
  3951  00231E  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3952  002320                     u2161:
  3953  002320  5007               	movf	??__tdiv_to_l_,w,c
  3954  002322  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3955  002324  500E               	movf	__tdiv_to_l_@cntr,w,c
  3956  002326  A4D8               	btfss	status,2,c
  3957  002328  D002               	goto	l2227
  3958  00232A  D04E               	goto	l2263
  3959  00232C  D069               	goto	l667
  3960  00232E                     l2227:
  3961  00232E  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3962  002330  0EFF               	movlw	255
  3963  002332  1601               	andwf	__tdiv_to_l_@f1,f,c
  3964  002334  0EFF               	movlw	255
  3965  002336  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3966  002338  0E00               	movlw	0
  3967  00233A  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3968  00233C  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3969  00233E  0EFF               	movlw	255
  3970  002340  1604               	andwf	__tdiv_to_l_@f2,f,c
  3971  002342  0EFF               	movlw	255
  3972  002344  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3973  002346  0E00               	movlw	0
  3974  002348  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3975  00234A  0E00               	movlw	0
  3976  00234C  6E0A               	movwf	__tdiv_to_l_@quot,c
  3977  00234E  0E00               	movlw	0
  3978  002350  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3979  002352  0E00               	movlw	0
  3980  002354  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3981  002356  0E00               	movlw	0
  3982  002358  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3983  00235A  0E7F               	movlw	127
  3984  00235C  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3985  00235E  500E               	movf	__tdiv_to_l_@cntr,w,c
  3986  002360  0F98               	addlw	152
  3987  002362  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3988  002364  0E18               	movlw	24
  3989  002366  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3990  002368                     l669:
  3991  002368  90D8               	bcf	status,0,c
  3992  00236A  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3993  00236C  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3994  00236E  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3995  002370  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3996  002372  5004               	movf	__tdiv_to_l_@f2,w,c
  3997  002374  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3998  002376  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3999  002378  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  4000  00237A  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4001  00237C  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  4002  00237E  A0D8               	btfss	status,0,c
  4003  002380  D007               	goto	l670
  4004  002382  5004               	movf	__tdiv_to_l_@f2,w,c
  4005  002384  5E01               	subwf	__tdiv_to_l_@f1,f,c
  4006  002386  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4007  002388  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  4008  00238A  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4009  00238C  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  4010  00238E  800A               	bsf	__tdiv_to_l_@quot,0,c
  4011  002390                     l670:
  4012  002390  90D8               	bcf	status,0,c
  4013  002392  3601               	rlcf	__tdiv_to_l_@f1,f,c
  4014  002394  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  4015  002396  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  4016  002398  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  4017  00239A  D7E6               	goto	l669
  4018  00239C  D000               	goto	l2249
  4019  00239E                     l2249:
  4020  00239E  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  4021  0023A0  D010               	goto	l2261
  4022  0023A2  500F               	movf	__tdiv_to_l_@exp1,w,c
  4023  0023A4  0A80               	xorlw	128
  4024  0023A6  0F97               	addlw	151
  4025  0023A8  B0D8               	btfsc	status,0,c
  4026  0023AA  D003               	goto	l2257
  4027  0023AC  D00D               	goto	l2263
  4028  0023AE  D028               	goto	l667
  4029  0023B0  D000               	goto	l2257
  4030  0023B2                     l2257:
  4031  0023B2  90D8               	bcf	status,0,c
  4032  0023B4  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  4033  0023B6  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  4034  0023B8  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  4035  0023BA  320A               	rrcf	__tdiv_to_l_@quot,f,c
  4036  0023BC  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  4037  0023BE  D7F9               	goto	l2257
  4038  0023C0  D017               	goto	l676
  4039  0023C2                     l2261:
  4040  0023C2  0E17               	movlw	23
  4041  0023C4  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  4042  0023C6  D011               	goto	l2269
  4043  0023C8                     l2263:
  4044  0023C8  0E00               	movlw	0
  4045  0023CA  6E01               	movwf	?__tdiv_to_l_,c
  4046  0023CC  0E00               	movlw	0
  4047  0023CE  6E02               	movwf	?__tdiv_to_l_+1,c
  4048  0023D0  0E00               	movlw	0
  4049  0023D2  6E03               	movwf	?__tdiv_to_l_+2,c
  4050  0023D4  0E00               	movlw	0
  4051  0023D6  6E04               	movwf	?__tdiv_to_l_+3,c
  4052  0023D8  D013               	goto	l667
  4053  0023DA  D007               	goto	l2269
  4054  0023DC                     l2267:
  4055  0023DC  90D8               	bcf	status,0,c
  4056  0023DE  360A               	rlcf	__tdiv_to_l_@quot,f,c
  4057  0023E0  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  4058  0023E2  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  4059  0023E4  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  4060  0023E6  060F               	decf	__tdiv_to_l_@exp1,f,c
  4061  0023E8  D000               	goto	l2269
  4062  0023EA                     l2269:
  4063  0023EA  500F               	movf	__tdiv_to_l_@exp1,w,c
  4064  0023EC  A4D8               	btfss	status,2,c
  4065  0023EE  D7F6               	goto	l2267
  4066  0023F0                     l676:
  4067  0023F0  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4068  0023F4  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4069  0023F8  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4070  0023FC  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4071  002400                     l667:
  4072  002400  0012               	return		;funcret
  4073  002402                     __end_of__tdiv_to_l_:
  4074                           	opt stack 0
  4075                           tblptru	equ	0xFF8
  4076                           tblptrh	equ	0xFF7
  4077                           tblptrl	equ	0xFF6
  4078                           tablat	equ	0xFF5
  4079                           prodh	equ	0xFF4
  4080                           prodl	equ	0xFF3
  4081                           postinc0	equ	0xFEE
  4082                           wreg	equ	0xFE8
  4083                           postdec1	equ	0xFE5
  4084                           fsr1l	equ	0xFE1
  4085                           indf2	equ	0xFDF
  4086                           postinc2	equ	0xFDE
  4087                           postdec2	equ	0xFDD
  4088                           fsr2h	equ	0xFDA
  4089                           fsr2l	equ	0xFD9
  4090                           status	equ	0xFD8
  4091                           
  4092 ;; *************** function __div_to_l_ *****************
  4093 ;; Defined at:
  4094 ;;		line 60 in file "E:\XC8\sources\common\fldivl.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;  f1              3    0[COMRAM] unsigned long 
  4097 ;;  f2              3    3[COMRAM] unsigned long 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  quot            4    6[COMRAM] unsigned long 
  4100 ;;  exp1            1   11[COMRAM] unsigned char 
  4101 ;;  cntr            1   10[COMRAM] unsigned char 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  4    0[COMRAM] unsigned long 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4111 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;Total ram usage:       12 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; This function calls:
  4118 ;;		Nothing
  4119 ;; This function is called by:
  4120 ;;		_printf
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text10
  4125  002402                     __ptext10:
  4126                           	opt stack 0
  4127  002402                     __div_to_l_:
  4128                           	opt stack 29
  4129                           
  4130                           ;incstack = 0
  4131  002402  3403               	rlcf	__div_to_l_@f1+2,w,c
  4132  002404  3404               	rlcf	__div_to_l_@f1+3,w,c
  4133  002406  6E0C               	movwf	__div_to_l_@exp1,c
  4134  002408  500C               	movf	__div_to_l_@exp1,w,c
  4135  00240A  A4D8               	btfss	status,2,c
  4136  00240C  D002               	goto	l2277
  4137  00240E  D061               	goto	l2323
  4138  002410  D07C               	goto	l546
  4139  002412                     l2277:
  4140  002412  3406               	rlcf	__div_to_l_@f2+2,w,c
  4141  002414  3407               	rlcf	__div_to_l_@f2+3,w,c
  4142  002416  6E0B               	movwf	__div_to_l_@cntr,c
  4143  002418  500B               	movf	__div_to_l_@cntr,w,c
  4144  00241A  A4D8               	btfss	status,2,c
  4145  00241C  D002               	goto	l2283
  4146  00241E  D059               	goto	l2323
  4147  002420  D074               	goto	l546
  4148  002422                     l2283:
  4149  002422  8E03               	bsf	__div_to_l_@f1+2,7,c
  4150  002424  0EFF               	movlw	255
  4151  002426  1601               	andwf	__div_to_l_@f1,f,c
  4152  002428  0EFF               	movlw	255
  4153  00242A  1602               	andwf	__div_to_l_@f1+1,f,c
  4154  00242C  0EFF               	movlw	255
  4155  00242E  1603               	andwf	__div_to_l_@f1+2,f,c
  4156  002430  0E00               	movlw	0
  4157  002432  1604               	andwf	__div_to_l_@f1+3,f,c
  4158  002434  8E06               	bsf	__div_to_l_@f2+2,7,c
  4159  002436  0EFF               	movlw	255
  4160  002438  1604               	andwf	__div_to_l_@f2,f,c
  4161  00243A  0EFF               	movlw	255
  4162  00243C  1605               	andwf	__div_to_l_@f2+1,f,c
  4163  00243E  0EFF               	movlw	255
  4164  002440  1606               	andwf	__div_to_l_@f2+2,f,c
  4165  002442  0E00               	movlw	0
  4166  002444  1607               	andwf	__div_to_l_@f2+3,f,c
  4167  002446  0E00               	movlw	0
  4168  002448  6E07               	movwf	__div_to_l_@quot,c
  4169  00244A  0E00               	movlw	0
  4170  00244C  6E08               	movwf	__div_to_l_@quot+1,c
  4171  00244E  0E00               	movlw	0
  4172  002450  6E09               	movwf	__div_to_l_@quot+2,c
  4173  002452  0E00               	movlw	0
  4174  002454  6E0A               	movwf	__div_to_l_@quot+3,c
  4175  002456  0E7F               	movlw	127
  4176  002458  5E0C               	subwf	__div_to_l_@exp1,f,c
  4177  00245A  500B               	movf	__div_to_l_@cntr,w,c
  4178  00245C  0FA0               	addlw	160
  4179  00245E  5E0C               	subwf	__div_to_l_@exp1,f,c
  4180  002460  0E20               	movlw	32
  4181  002462  6E0B               	movwf	__div_to_l_@cntr,c
  4182  002464  D000               	goto	l2297
  4183  002466                     l2297:
  4184  002466  90D8               	bcf	status,0,c
  4185  002468  3607               	rlcf	__div_to_l_@quot,f,c
  4186  00246A  3608               	rlcf	__div_to_l_@quot+1,f,c
  4187  00246C  3609               	rlcf	__div_to_l_@quot+2,f,c
  4188  00246E  360A               	rlcf	__div_to_l_@quot+3,f,c
  4189  002470  5004               	movf	__div_to_l_@f2,w,c
  4190  002472  5C01               	subwf	__div_to_l_@f1,w,c
  4191  002474  5005               	movf	__div_to_l_@f2+1,w,c
  4192  002476  5802               	subwfb	__div_to_l_@f1+1,w,c
  4193  002478  5006               	movf	__div_to_l_@f2+2,w,c
  4194  00247A  5803               	subwfb	__div_to_l_@f1+2,w,c
  4195  00247C  5007               	movf	__div_to_l_@f2+3,w,c
  4196  00247E  5804               	subwfb	__div_to_l_@f1+3,w,c
  4197  002480  A0D8               	btfss	status,0,c
  4198  002482  D00A               	goto	l2305
  4199  002484  5004               	movf	__div_to_l_@f2,w,c
  4200  002486  5E01               	subwf	__div_to_l_@f1,f,c
  4201  002488  5005               	movf	__div_to_l_@f2+1,w,c
  4202  00248A  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4203  00248C  5006               	movf	__div_to_l_@f2+2,w,c
  4204  00248E  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4205  002490  5007               	movf	__div_to_l_@f2+3,w,c
  4206  002492  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4207  002494  8007               	bsf	__div_to_l_@quot,0,c
  4208  002496  D000               	goto	l2305
  4209  002498                     l2305:
  4210  002498  90D8               	bcf	status,0,c
  4211  00249A  3601               	rlcf	__div_to_l_@f1,f,c
  4212  00249C  3602               	rlcf	__div_to_l_@f1+1,f,c
  4213  00249E  3603               	rlcf	__div_to_l_@f1+2,f,c
  4214  0024A0  3604               	rlcf	__div_to_l_@f1+3,f,c
  4215  0024A2  2E0B               	decfsz	__div_to_l_@cntr,f,c
  4216  0024A4  D7E0               	goto	l2297
  4217  0024A6  D000               	goto	l2309
  4218  0024A8                     l2309:
  4219  0024A8  AE0C               	btfss	__div_to_l_@exp1,7,c
  4220  0024AA  D010               	goto	l2321
  4221  0024AC  500C               	movf	__div_to_l_@exp1,w,c
  4222  0024AE  0A80               	xorlw	128
  4223  0024B0  0F9F               	addlw	159
  4224  0024B2  B0D8               	btfsc	status,0,c
  4225  0024B4  D003               	goto	l2317
  4226  0024B6  D00D               	goto	l2323
  4227  0024B8  D028               	goto	l546
  4228  0024BA  D000               	goto	l2317
  4229  0024BC                     l2317:
  4230  0024BC  90D8               	bcf	status,0,c
  4231  0024BE  320A               	rrcf	__div_to_l_@quot+3,f,c
  4232  0024C0  3209               	rrcf	__div_to_l_@quot+2,f,c
  4233  0024C2  3208               	rrcf	__div_to_l_@quot+1,f,c
  4234  0024C4  3207               	rrcf	__div_to_l_@quot,f,c
  4235  0024C6  3E0C               	incfsz	__div_to_l_@exp1,f,c
  4236  0024C8  D7F9               	goto	l2317
  4237  0024CA  D017               	goto	l555
  4238  0024CC                     l2321:
  4239  0024CC  0E1F               	movlw	31
  4240  0024CE  640C               	cpfsgt	__div_to_l_@exp1,c
  4241  0024D0  D011               	goto	l2329
  4242  0024D2                     l2323:
  4243  0024D2  0E00               	movlw	0
  4244  0024D4  6E01               	movwf	?__div_to_l_,c
  4245  0024D6  0E00               	movlw	0
  4246  0024D8  6E02               	movwf	?__div_to_l_+1,c
  4247  0024DA  0E00               	movlw	0
  4248  0024DC  6E03               	movwf	?__div_to_l_+2,c
  4249  0024DE  0E00               	movlw	0
  4250  0024E0  6E04               	movwf	?__div_to_l_+3,c
  4251  0024E2  D013               	goto	l546
  4252  0024E4  D007               	goto	l2329
  4253  0024E6                     l2327:
  4254  0024E6  90D8               	bcf	status,0,c
  4255  0024E8  3607               	rlcf	__div_to_l_@quot,f,c
  4256  0024EA  3608               	rlcf	__div_to_l_@quot+1,f,c
  4257  0024EC  3609               	rlcf	__div_to_l_@quot+2,f,c
  4258  0024EE  360A               	rlcf	__div_to_l_@quot+3,f,c
  4259  0024F0  060C               	decf	__div_to_l_@exp1,f,c
  4260  0024F2  D000               	goto	l2329
  4261  0024F4                     l2329:
  4262  0024F4  500C               	movf	__div_to_l_@exp1,w,c
  4263  0024F6  A4D8               	btfss	status,2,c
  4264  0024F8  D7F6               	goto	l2327
  4265  0024FA                     l555:
  4266  0024FA  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4267  0024FE  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4268  002502  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4269  002506  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4270  00250A                     l546:
  4271  00250A  0012               	return		;funcret
  4272  00250C                     __end_of__div_to_l_:
  4273                           	opt stack 0
  4274                           tblptru	equ	0xFF8
  4275                           tblptrh	equ	0xFF7
  4276                           tblptrl	equ	0xFF6
  4277                           tablat	equ	0xFF5
  4278                           prodh	equ	0xFF4
  4279                           prodl	equ	0xFF3
  4280                           postinc0	equ	0xFEE
  4281                           wreg	equ	0xFE8
  4282                           postdec1	equ	0xFE5
  4283                           fsr1l	equ	0xFE1
  4284                           indf2	equ	0xFDF
  4285                           postinc2	equ	0xFDE
  4286                           postdec2	equ	0xFDD
  4287                           fsr2h	equ	0xFDA
  4288                           fsr2l	equ	0xFD9
  4289                           status	equ	0xFD8
  4290                           
  4291 ;; *************** function ___lltoft *****************
  4292 ;; Defined at:
  4293 ;;		line 35 in file "E:\XC8\sources\common\lltoft.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  c               4    8[COMRAM] unsigned long 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  exp             1   16[COMRAM] unsigned char 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  3    8[COMRAM] float 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0, cstack
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4307 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;Total ram usage:        9 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    1
  4314 ;; This function calls:
  4315 ;;		___ftpack
  4316 ;; This function is called by:
  4317 ;;		_printf
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text11
  4322  002C34                     __ptext11:
  4323                           	opt stack 0
  4324  002C34                     ___lltoft:
  4325                           	opt stack 28
  4326                           
  4327                           ;incstack = 0
  4328  002C34  0E8E               	movlw	142
  4329  002C36  6E11               	movwf	___lltoft@exp,c
  4330  002C38  D007               	goto	l2495
  4331  002C3A                     l2493:
  4332  002C3A  90D8               	bcf	status,0,c
  4333  002C3C  320C               	rrcf	___lltoft@c+3,f,c
  4334  002C3E  320B               	rrcf	___lltoft@c+2,f,c
  4335  002C40  320A               	rrcf	___lltoft@c+1,f,c
  4336  002C42  3209               	rrcf	___lltoft@c,f,c
  4337  002C44  2A11               	incf	___lltoft@exp,f,c
  4338  002C46  D000               	goto	l2495
  4339  002C48                     l2495:
  4340  002C48  0E00               	movlw	0
  4341  002C4A  1409               	andwf	___lltoft@c,w,c
  4342  002C4C  6E0D               	movwf	??___lltoft& (0+255),c
  4343  002C4E  0E00               	movlw	0
  4344  002C50  140A               	andwf	___lltoft@c+1,w,c
  4345  002C52  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4346  002C54  0E00               	movlw	0
  4347  002C56  140B               	andwf	___lltoft@c+2,w,c
  4348  002C58  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4349  002C5A  0EFF               	movlw	255
  4350  002C5C  140C               	andwf	___lltoft@c+3,w,c
  4351  002C5E  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4352  002C60  500D               	movf	??___lltoft,w,c
  4353  002C62  100E               	iorwf	??___lltoft+1,w,c
  4354  002C64  100F               	iorwf	??___lltoft+2,w,c
  4355  002C66  1010               	iorwf	??___lltoft+3,w,c
  4356  002C68  A4D8               	btfss	status,2,c
  4357  002C6A  D7E7               	goto	l2493
  4358  002C6C  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4359  002C70  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4360  002C74  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4361  002C78  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4362  002C7C  0E00               	movlw	0
  4363  002C7E  6E05               	movwf	___ftpack@sign,c
  4364  002C80  ECE6  F013         	call	___ftpack	;wreg free
  4365  002C84  C001  F009         	movff	?___ftpack,?___lltoft
  4366  002C88  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4367  002C8C  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4368  002C90  D000               	goto	l781
  4369  002C92                     l781:
  4370  002C92  0012               	return		;funcret
  4371  002C94                     __end_of___lltoft:
  4372                           	opt stack 0
  4373                           tblptru	equ	0xFF8
  4374                           tblptrh	equ	0xFF7
  4375                           tblptrl	equ	0xFF6
  4376                           tablat	equ	0xFF5
  4377                           prodh	equ	0xFF4
  4378                           prodl	equ	0xFF3
  4379                           postinc0	equ	0xFEE
  4380                           wreg	equ	0xFE8
  4381                           postdec1	equ	0xFE5
  4382                           fsr1l	equ	0xFE1
  4383                           indf2	equ	0xFDF
  4384                           postinc2	equ	0xFDE
  4385                           postdec2	equ	0xFDD
  4386                           fsr2h	equ	0xFDA
  4387                           fsr2l	equ	0xFD9
  4388                           status	equ	0xFD8
  4389                           
  4390 ;; *************** function ___llmod *****************
  4391 ;; Defined at:
  4392 ;;		line 8 in file "E:\XC8\sources\common\llmod.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  dividend        4    0[COMRAM] unsigned long 
  4395 ;;  divisor         4    4[COMRAM] unsigned long 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  counter         1    8[COMRAM] unsigned char 
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  4    0[COMRAM] unsigned long 
  4400 ;; Registers used:
  4401 ;;		wreg, status,2, status,0
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4407 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;Total ram usage:        9 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_printf
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text12
  4421  002B54                     __ptext12:
  4422                           	opt stack 0
  4423  002B54                     ___llmod:
  4424                           	opt stack 29
  4425                           
  4426                           ;incstack = 0
  4427  002B54  5005               	movf	___llmod@divisor,w,c
  4428  002B56  1006               	iorwf	___llmod@divisor+1,w,c
  4429  002B58  1007               	iorwf	___llmod@divisor+2,w,c
  4430  002B5A  1008               	iorwf	___llmod@divisor+3,w,c
  4431  002B5C  B4D8               	btfsc	status,2,c
  4432  002B5E  D029               	goto	l761
  4433  002B60  0E01               	movlw	1
  4434  002B62  6E09               	movwf	___llmod@counter,c
  4435  002B64  D007               	goto	l2481
  4436  002B66                     l2479:
  4437  002B66  90D8               	bcf	status,0,c
  4438  002B68  3605               	rlcf	___llmod@divisor,f,c
  4439  002B6A  3606               	rlcf	___llmod@divisor+1,f,c
  4440  002B6C  3607               	rlcf	___llmod@divisor+2,f,c
  4441  002B6E  3608               	rlcf	___llmod@divisor+3,f,c
  4442  002B70  2A09               	incf	___llmod@counter,f,c
  4443  002B72  D000               	goto	l2481
  4444  002B74                     l2481:
  4445  002B74  BE08               	btfsc	___llmod@divisor+3,7,c
  4446  002B76  D002               	goto	l2483
  4447  002B78  D7F6               	goto	l2479
  4448  002B7A  D000               	goto	l2483
  4449  002B7C                     l2483:
  4450  002B7C  5005               	movf	___llmod@divisor,w,c
  4451  002B7E  5C01               	subwf	___llmod@dividend,w,c
  4452  002B80  5006               	movf	___llmod@divisor+1,w,c
  4453  002B82  5802               	subwfb	___llmod@dividend+1,w,c
  4454  002B84  5007               	movf	___llmod@divisor+2,w,c
  4455  002B86  5803               	subwfb	___llmod@dividend+2,w,c
  4456  002B88  5008               	movf	___llmod@divisor+3,w,c
  4457  002B8A  5804               	subwfb	___llmod@dividend+3,w,c
  4458  002B8C  A0D8               	btfss	status,0,c
  4459  002B8E  D009               	goto	l2487
  4460  002B90  5005               	movf	___llmod@divisor,w,c
  4461  002B92  5E01               	subwf	___llmod@dividend,f,c
  4462  002B94  5006               	movf	___llmod@divisor+1,w,c
  4463  002B96  5A02               	subwfb	___llmod@dividend+1,f,c
  4464  002B98  5007               	movf	___llmod@divisor+2,w,c
  4465  002B9A  5A03               	subwfb	___llmod@dividend+2,f,c
  4466  002B9C  5008               	movf	___llmod@divisor+3,w,c
  4467  002B9E  5A04               	subwfb	___llmod@dividend+3,f,c
  4468  002BA0  D000               	goto	l2487
  4469  002BA2                     l2487:
  4470  002BA2  90D8               	bcf	status,0,c
  4471  002BA4  3208               	rrcf	___llmod@divisor+3,f,c
  4472  002BA6  3207               	rrcf	___llmod@divisor+2,f,c
  4473  002BA8  3206               	rrcf	___llmod@divisor+1,f,c
  4474  002BAA  3205               	rrcf	___llmod@divisor,f,c
  4475  002BAC  2E09               	decfsz	___llmod@counter,f,c
  4476  002BAE  D7E6               	goto	l2483
  4477  002BB0  D000               	goto	l761
  4478  002BB2                     l761:
  4479  002BB2  C001  F001         	movff	___llmod@dividend,?___llmod
  4480  002BB6  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4481  002BBA  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4482  002BBE  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4483  002BC2  0012               	return		;funcret
  4484  002BC4                     __end_of___llmod:
  4485                           	opt stack 0
  4486                           tblptru	equ	0xFF8
  4487                           tblptrh	equ	0xFF7
  4488                           tblptrl	equ	0xFF6
  4489                           tablat	equ	0xFF5
  4490                           prodh	equ	0xFF4
  4491                           prodl	equ	0xFF3
  4492                           postinc0	equ	0xFEE
  4493                           wreg	equ	0xFE8
  4494                           postdec1	equ	0xFE5
  4495                           fsr1l	equ	0xFE1
  4496                           indf2	equ	0xFDF
  4497                           postinc2	equ	0xFDE
  4498                           postdec2	equ	0xFDD
  4499                           fsr2h	equ	0xFDA
  4500                           fsr2l	equ	0xFD9
  4501                           status	equ	0xFD8
  4502                           
  4503 ;; *************** function ___lldiv *****************
  4504 ;; Defined at:
  4505 ;;		line 8 in file "E:\XC8\sources\common\lldiv.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  dividend        4    0[COMRAM] unsigned long 
  4508 ;;  divisor         4    4[COMRAM] unsigned long 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  quotient        4    8[COMRAM] unsigned long 
  4511 ;;  counter         1   12[COMRAM] unsigned char 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  4    0[COMRAM] unsigned long 
  4514 ;; Registers used:
  4515 ;;		wreg, status,2, status,0
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4521 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4522 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;Total ram usage:       13 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_printf
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text13
  4535  0029BE                     __ptext13:
  4536                           	opt stack 0
  4537  0029BE                     ___lldiv:
  4538                           	opt stack 29
  4539                           
  4540                           ;incstack = 0
  4541  0029BE  0E00               	movlw	0
  4542  0029C0  6E09               	movwf	___lldiv@quotient,c
  4543  0029C2  0E00               	movlw	0
  4544  0029C4  6E0A               	movwf	___lldiv@quotient+1,c
  4545  0029C6  0E00               	movlw	0
  4546  0029C8  6E0B               	movwf	___lldiv@quotient+2,c
  4547  0029CA  0E00               	movlw	0
  4548  0029CC  6E0C               	movwf	___lldiv@quotient+3,c
  4549  0029CE  5005               	movf	___lldiv@divisor,w,c
  4550  0029D0  1006               	iorwf	___lldiv@divisor+1,w,c
  4551  0029D2  1007               	iorwf	___lldiv@divisor+2,w,c
  4552  0029D4  1008               	iorwf	___lldiv@divisor+3,w,c
  4553  0029D6  B4D8               	btfsc	status,2,c
  4554  0029D8  D02F               	goto	l751
  4555  0029DA  0E01               	movlw	1
  4556  0029DC  6E0D               	movwf	___lldiv@counter,c
  4557  0029DE  D007               	goto	l2461
  4558  0029E0                     l2459:
  4559  0029E0  90D8               	bcf	status,0,c
  4560  0029E2  3605               	rlcf	___lldiv@divisor,f,c
  4561  0029E4  3606               	rlcf	___lldiv@divisor+1,f,c
  4562  0029E6  3607               	rlcf	___lldiv@divisor+2,f,c
  4563  0029E8  3608               	rlcf	___lldiv@divisor+3,f,c
  4564  0029EA  2A0D               	incf	___lldiv@counter,f,c
  4565  0029EC  D000               	goto	l2461
  4566  0029EE                     l2461:
  4567  0029EE  BE08               	btfsc	___lldiv@divisor+3,7,c
  4568  0029F0  D002               	goto	l2463
  4569  0029F2  D7F6               	goto	l2459
  4570  0029F4  D000               	goto	l2463
  4571  0029F6                     l2463:
  4572  0029F6  90D8               	bcf	status,0,c
  4573  0029F8  3609               	rlcf	___lldiv@quotient,f,c
  4574  0029FA  360A               	rlcf	___lldiv@quotient+1,f,c
  4575  0029FC  360B               	rlcf	___lldiv@quotient+2,f,c
  4576  0029FE  360C               	rlcf	___lldiv@quotient+3,f,c
  4577  002A00  5005               	movf	___lldiv@divisor,w,c
  4578  002A02  5C01               	subwf	___lldiv@dividend,w,c
  4579  002A04  5006               	movf	___lldiv@divisor+1,w,c
  4580  002A06  5802               	subwfb	___lldiv@dividend+1,w,c
  4581  002A08  5007               	movf	___lldiv@divisor+2,w,c
  4582  002A0A  5803               	subwfb	___lldiv@dividend+2,w,c
  4583  002A0C  5008               	movf	___lldiv@divisor+3,w,c
  4584  002A0E  5804               	subwfb	___lldiv@dividend+3,w,c
  4585  002A10  A0D8               	btfss	status,0,c
  4586  002A12  D00A               	goto	l2471
  4587  002A14  5005               	movf	___lldiv@divisor,w,c
  4588  002A16  5E01               	subwf	___lldiv@dividend,f,c
  4589  002A18  5006               	movf	___lldiv@divisor+1,w,c
  4590  002A1A  5A02               	subwfb	___lldiv@dividend+1,f,c
  4591  002A1C  5007               	movf	___lldiv@divisor+2,w,c
  4592  002A1E  5A03               	subwfb	___lldiv@dividend+2,f,c
  4593  002A20  5008               	movf	___lldiv@divisor+3,w,c
  4594  002A22  5A04               	subwfb	___lldiv@dividend+3,f,c
  4595  002A24  8009               	bsf	___lldiv@quotient,0,c
  4596  002A26  D000               	goto	l2471
  4597  002A28                     l2471:
  4598  002A28  90D8               	bcf	status,0,c
  4599  002A2A  3208               	rrcf	___lldiv@divisor+3,f,c
  4600  002A2C  3207               	rrcf	___lldiv@divisor+2,f,c
  4601  002A2E  3206               	rrcf	___lldiv@divisor+1,f,c
  4602  002A30  3205               	rrcf	___lldiv@divisor,f,c
  4603  002A32  2E0D               	decfsz	___lldiv@counter,f,c
  4604  002A34  D7E0               	goto	l2463
  4605  002A36  D000               	goto	l751
  4606  002A38                     l751:
  4607  002A38  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4608  002A3C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4609  002A40  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4610  002A44  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4611  002A48  0012               	return		;funcret
  4612  002A4A                     __end_of___lldiv:
  4613                           	opt stack 0
  4614                           tblptru	equ	0xFF8
  4615                           tblptrh	equ	0xFF7
  4616                           tblptrl	equ	0xFF6
  4617                           tablat	equ	0xFF5
  4618                           prodh	equ	0xFF4
  4619                           prodl	equ	0xFF3
  4620                           postinc0	equ	0xFEE
  4621                           wreg	equ	0xFE8
  4622                           postdec1	equ	0xFE5
  4623                           fsr1l	equ	0xFE1
  4624                           indf2	equ	0xFDF
  4625                           postinc2	equ	0xFDE
  4626                           postdec2	equ	0xFDD
  4627                           fsr2h	equ	0xFDA
  4628                           fsr2l	equ	0xFD9
  4629                           status	equ	0xFD8
  4630                           
  4631 ;; *************** function ___ftsub *****************
  4632 ;; Defined at:
  4633 ;;		line 20 in file "E:\XC8\sources\common\ftsub.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  f1              3   27[COMRAM] float 
  4636 ;;  f2              3   30[COMRAM] float 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;		None
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  3   27[COMRAM] float 
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0, cstack
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4648 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4652 ;;Total ram usage:        6 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    2
  4655 ;; This function calls:
  4656 ;;		___ftadd
  4657 ;; This function is called by:
  4658 ;;		_printf
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text14
  4663  002CEC                     __ptext14:
  4664                           	opt stack 0
  4665  002CEC                     ___ftsub:
  4666                           	opt stack 27
  4667                           
  4668                           ;incstack = 0
  4669  002CEC  501F               	movf	___ftsub@f2,w,c
  4670  002CEE  1020               	iorwf	___ftsub@f2+1,w,c
  4671  002CF0  1021               	iorwf	___ftsub@f2+2,w,c
  4672  002CF2  B4D8               	btfsc	status,2,c
  4673  002CF4  D007               	goto	l2381
  4674  002CF6  0E00               	movlw	0
  4675  002CF8  1A1F               	xorwf	___ftsub@f2,f,c
  4676  002CFA  0E00               	movlw	0
  4677  002CFC  1A20               	xorwf	___ftsub@f2+1,f,c
  4678  002CFE  0E80               	movlw	128
  4679  002D00  1A21               	xorwf	___ftsub@f2+2,f,c
  4680  002D02  D000               	goto	l2381
  4681  002D04                     l2381:
  4682  002D04  C01C  F010         	movff	___ftsub@f1,___ftadd@f1
  4683  002D08  C01D  F011         	movff	___ftsub@f1+1,___ftadd@f1+1
  4684  002D0C  C01E  F012         	movff	___ftsub@f1+2,___ftadd@f1+2
  4685  002D10  C01F  F013         	movff	___ftsub@f2,___ftadd@f2
  4686  002D14  C020  F014         	movff	___ftsub@f2+1,___ftadd@f2+1
  4687  002D18  C021  F015         	movff	___ftsub@f2+2,___ftadd@f2+2
  4688  002D1C  EC97  F010         	call	___ftadd	;wreg free
  4689  002D20  C010  F01C         	movff	?___ftadd,?___ftsub
  4690  002D24  C011  F01D         	movff	?___ftadd+1,?___ftsub+1
  4691  002D28  C012  F01E         	movff	?___ftadd+2,?___ftsub+2
  4692  002D2C  D000               	goto	l708
  4693  002D2E                     l708:
  4694  002D2E  0012               	return		;funcret
  4695  002D30                     __end_of___ftsub:
  4696                           	opt stack 0
  4697                           tblptru	equ	0xFF8
  4698                           tblptrh	equ	0xFF7
  4699                           tblptrl	equ	0xFF6
  4700                           tablat	equ	0xFF5
  4701                           prodh	equ	0xFF4
  4702                           prodl	equ	0xFF3
  4703                           postinc0	equ	0xFEE
  4704                           wreg	equ	0xFE8
  4705                           postdec1	equ	0xFE5
  4706                           fsr1l	equ	0xFE1
  4707                           indf2	equ	0xFDF
  4708                           postinc2	equ	0xFDE
  4709                           postdec2	equ	0xFDD
  4710                           fsr2h	equ	0xFDA
  4711                           fsr2l	equ	0xFD9
  4712                           status	equ	0xFD8
  4713                           
  4714 ;; *************** function ___ftadd *****************
  4715 ;; Defined at:
  4716 ;;		line 86 in file "E:\XC8\sources\common\ftadd.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;  f1              3   15[COMRAM] float 
  4719 ;;  f2              3   18[COMRAM] float 
  4720 ;; Auto vars:     Size  Location     Type
  4721 ;;  exp1            1   26[COMRAM] unsigned char 
  4722 ;;  exp2            1   25[COMRAM] unsigned char 
  4723 ;;  sign            1   24[COMRAM] unsigned char 
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  3   15[COMRAM] float 
  4726 ;; Registers used:
  4727 ;;		wreg, status,2, status,0, cstack
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4733 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4734 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4735 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4736 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;Total ram usage:       12 bytes
  4738 ;; Hardware stack levels used:    1
  4739 ;; Hardware stack levels required when called:    1
  4740 ;; This function calls:
  4741 ;;		___ftpack
  4742 ;; This function is called by:
  4743 ;;		_main
  4744 ;;		_printf
  4745 ;;		___ftsub
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           	psect	text15
  4750  00212E                     __ptext15:
  4751                           	opt stack 0
  4752  00212E                     ___ftadd:
  4753                           	opt stack 27
  4754                           
  4755                           ;incstack = 0
  4756  00212E  C012  F016         	movff	___ftadd@f1+2,??___ftadd
  4757  002132  6A17               	clrf	(??___ftadd+1)& (0+255),c
  4758  002134  6A18               	clrf	(??___ftadd+2)& (0+255),c
  4759  002136  3411               	rlcf	___ftadd@f1+1,w,c
  4760  002138  3616               	rlcf	??___ftadd& (0+255),f,c
  4761  00213A  E301               	bnc	u1571
  4762  00213C  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  4763  00213E                     u1571:
  4764  00213E  5016               	movf	??___ftadd,w,c
  4765  002140  6E1B               	movwf	___ftadd@exp1,c
  4766  002142  C015  F016         	movff	___ftadd@f2+2,??___ftadd
  4767  002146  6A17               	clrf	(??___ftadd+1)& (0+255),c
  4768  002148  6A18               	clrf	(??___ftadd+2)& (0+255),c
  4769  00214A  3414               	rlcf	___ftadd@f2+1,w,c
  4770  00214C  3616               	rlcf	??___ftadd& (0+255),f,c
  4771  00214E  E301               	bnc	u1581
  4772  002150  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  4773  002152                     u1581:
  4774  002152  5016               	movf	??___ftadd,w,c
  4775  002154  6E1A               	movwf	___ftadd@exp2,c
  4776  002156  501B               	movf	___ftadd@exp1,w,c
  4777  002158  B4D8               	btfsc	status,2,c
  4778  00215A  D00B               	goto	l627
  4779  00215C  501A               	movf	___ftadd@exp2,w,c
  4780  00215E  5C1B               	subwf	___ftadd@exp1,w,c
  4781  002160  B0D8               	btfsc	status,0,c
  4782  002162  D00E               	goto	l1911
  4783  002164  501B               	movf	___ftadd@exp1,w,c
  4784  002166  0800               	sublw	0
  4785  002168  241A               	addwf	___ftadd@exp2,w,c
  4786  00216A  6E16               	movwf	??___ftadd& (0+255),c
  4787  00216C  0E18               	movlw	24
  4788  00216E  6416               	cpfsgt	??___ftadd,c
  4789  002170  D007               	goto	l1911
  4790  002172                     l627:
  4791  002172  C013  F010         	movff	___ftadd@f2,?___ftadd
  4792  002176  C014  F011         	movff	___ftadd@f2+1,?___ftadd+1
  4793  00217A  C015  F012         	movff	___ftadd@f2+2,?___ftadd+2
  4794  00217E  D0B8               	goto	l628
  4795  002180                     l1911:
  4796  002180  501A               	movf	___ftadd@exp2,w,c
  4797  002182  B4D8               	btfsc	status,2,c
  4798  002184  D00B               	goto	l631
  4799  002186  501B               	movf	___ftadd@exp1,w,c
  4800  002188  5C1A               	subwf	___ftadd@exp2,w,c
  4801  00218A  B0D8               	btfsc	status,0,c
  4802  00218C  D00E               	goto	l1917
  4803  00218E  501A               	movf	___ftadd@exp2,w,c
  4804  002190  0800               	sublw	0
  4805  002192  241B               	addwf	___ftadd@exp1,w,c
  4806  002194  6E16               	movwf	??___ftadd& (0+255),c
  4807  002196  0E18               	movlw	24
  4808  002198  6416               	cpfsgt	??___ftadd,c
  4809  00219A  D007               	goto	l1917
  4810  00219C                     l631:
  4811  00219C  C010  F010         	movff	___ftadd@f1,?___ftadd
  4812  0021A0  C011  F011         	movff	___ftadd@f1+1,?___ftadd+1
  4813  0021A4  C012  F012         	movff	___ftadd@f1+2,?___ftadd+2
  4814  0021A8  D0A3               	goto	l628
  4815  0021AA                     l1917:
  4816  0021AA  0E06               	movlw	6
  4817  0021AC  6E19               	movwf	___ftadd@sign,c
  4818  0021AE  AE12               	btfss	___ftadd@f1+2,7,c
  4819  0021B0  D002               	goto	l1923
  4820  0021B2  8E19               	bsf	___ftadd@sign,7,c
  4821  0021B4  D000               	goto	l1923
  4822  0021B6                     l1923:
  4823  0021B6  BE15               	btfsc	___ftadd@f2+2,7,c
  4824  0021B8  8C19               	bsf	___ftadd@sign,6,c
  4825  0021BA  8E11               	bsf	___ftadd@f1+1,7,c
  4826  0021BC  0EFF               	movlw	255
  4827  0021BE  1610               	andwf	___ftadd@f1,f,c
  4828  0021C0  0EFF               	movlw	255
  4829  0021C2  1611               	andwf	___ftadd@f1+1,f,c
  4830  0021C4  0E00               	movlw	0
  4831  0021C6  1612               	andwf	___ftadd@f1+2,f,c
  4832  0021C8  8E14               	bsf	___ftadd@f2+1,7,c
  4833  0021CA  0EFF               	movlw	255
  4834  0021CC  1613               	andwf	___ftadd@f2,f,c
  4835  0021CE  0EFF               	movlw	255
  4836  0021D0  1614               	andwf	___ftadd@f2+1,f,c
  4837  0021D2  0E00               	movlw	0
  4838  0021D4  1615               	andwf	___ftadd@f2+2,f,c
  4839  0021D6  501A               	movf	___ftadd@exp2,w,c
  4840  0021D8  5C1B               	subwf	___ftadd@exp1,w,c
  4841  0021DA  B0D8               	btfsc	status,0,c
  4842  0021DC  D01E               	goto	l1943
  4843  0021DE                     l1933:
  4844  0021DE  90D8               	bcf	status,0,c
  4845  0021E0  3613               	rlcf	___ftadd@f2,f,c
  4846  0021E2  3614               	rlcf	___ftadd@f2+1,f,c
  4847  0021E4  3615               	rlcf	___ftadd@f2+2,f,c
  4848  0021E6  061A               	decf	___ftadd@exp2,f,c
  4849  0021E8  501B               	movf	___ftadd@exp1,w,c
  4850  0021EA  181A               	xorwf	___ftadd@exp2,w,c
  4851  0021EC  B4D8               	btfsc	status,2,c
  4852  0021EE  D00F               	goto	l1941
  4853  0021F0  0619               	decf	___ftadd@sign,f,c
  4854  0021F2  C019  F016         	movff	___ftadd@sign,??___ftadd
  4855  0021F6  0E07               	movlw	7
  4856  0021F8  1616               	andwf	??___ftadd,f,c
  4857  0021FA  B4D8               	btfsc	status,2,c
  4858  0021FC  D008               	goto	l1941
  4859  0021FE  D7EF               	goto	l1933
  4860  002200  D006               	goto	l1941
  4861  002202                     l1939:
  4862  002202  90D8               	bcf	status,0,c
  4863  002204  3212               	rrcf	___ftadd@f1+2,f,c
  4864  002206  3211               	rrcf	___ftadd@f1+1,f,c
  4865  002208  3210               	rrcf	___ftadd@f1,f,c
  4866  00220A  2A1B               	incf	___ftadd@exp1,f,c
  4867  00220C  D000               	goto	l1941
  4868  00220E                     l1941:
  4869  00220E  501A               	movf	___ftadd@exp2,w,c
  4870  002210  181B               	xorwf	___ftadd@exp1,w,c
  4871  002212  B4D8               	btfsc	status,2,c
  4872  002214  D024               	goto	l642
  4873  002216  D7F5               	goto	l1939
  4874  002218  D022               	goto	l642
  4875  00221A                     l1943:
  4876  00221A  501B               	movf	___ftadd@exp1,w,c
  4877  00221C  5C1A               	subwf	___ftadd@exp2,w,c
  4878  00221E  B0D8               	btfsc	status,0,c
  4879  002220  D01E               	goto	l642
  4880  002222                     l1945:
  4881  002222  90D8               	bcf	status,0,c
  4882  002224  3610               	rlcf	___ftadd@f1,f,c
  4883  002226  3611               	rlcf	___ftadd@f1+1,f,c
  4884  002228  3612               	rlcf	___ftadd@f1+2,f,c
  4885  00222A  061B               	decf	___ftadd@exp1,f,c
  4886  00222C  501B               	movf	___ftadd@exp1,w,c
  4887  00222E  181A               	xorwf	___ftadd@exp2,w,c
  4888  002230  B4D8               	btfsc	status,2,c
  4889  002232  D00F               	goto	l1953
  4890  002234  0619               	decf	___ftadd@sign,f,c
  4891  002236  C019  F016         	movff	___ftadd@sign,??___ftadd
  4892  00223A  0E07               	movlw	7
  4893  00223C  1616               	andwf	??___ftadd,f,c
  4894  00223E  B4D8               	btfsc	status,2,c
  4895  002240  D008               	goto	l1953
  4896  002242  D7EF               	goto	l1945
  4897  002244  D006               	goto	l1953
  4898  002246                     l1951:
  4899  002246  90D8               	bcf	status,0,c
  4900  002248  3215               	rrcf	___ftadd@f2+2,f,c
  4901  00224A  3214               	rrcf	___ftadd@f2+1,f,c
  4902  00224C  3213               	rrcf	___ftadd@f2,f,c
  4903  00224E  2A1A               	incf	___ftadd@exp2,f,c
  4904  002250  D000               	goto	l1953
  4905  002252                     l1953:
  4906  002252  501A               	movf	___ftadd@exp2,w,c
  4907  002254  181B               	xorwf	___ftadd@exp1,w,c
  4908  002256  B4D8               	btfsc	status,2,c
  4909  002258  D002               	goto	l642
  4910  00225A  D7F5               	goto	l1951
  4911  00225C  D000               	goto	l642
  4912  00225E                     l642:
  4913  00225E  AE19               	btfss	___ftadd@sign,7,c
  4914  002260  D00C               	goto	l651
  4915  002262  0EFF               	movlw	255
  4916  002264  1A10               	xorwf	___ftadd@f1,f,c
  4917  002266  0EFF               	movlw	255
  4918  002268  1A11               	xorwf	___ftadd@f1+1,f,c
  4919  00226A  0EFF               	movlw	255
  4920  00226C  1A12               	xorwf	___ftadd@f1+2,f,c
  4921  00226E  0E01               	movlw	1
  4922  002270  2610               	addwf	___ftadd@f1,f,c
  4923  002272  0E00               	movlw	0
  4924  002274  2211               	addwfc	___ftadd@f1+1,f,c
  4925  002276  0E00               	movlw	0
  4926  002278  2212               	addwfc	___ftadd@f1+2,f,c
  4927  00227A                     l651:
  4928  00227A  AC19               	btfss	___ftadd@sign,6,c
  4929  00227C  D00D               	goto	l1959
  4930  00227E  0EFF               	movlw	255
  4931  002280  1A13               	xorwf	___ftadd@f2,f,c
  4932  002282  0EFF               	movlw	255
  4933  002284  1A14               	xorwf	___ftadd@f2+1,f,c
  4934  002286  0EFF               	movlw	255
  4935  002288  1A15               	xorwf	___ftadd@f2+2,f,c
  4936  00228A  0E01               	movlw	1
  4937  00228C  2613               	addwf	___ftadd@f2,f,c
  4938  00228E  0E00               	movlw	0
  4939  002290  2214               	addwfc	___ftadd@f2+1,f,c
  4940  002292  0E00               	movlw	0
  4941  002294  2215               	addwfc	___ftadd@f2+2,f,c
  4942  002296  D000               	goto	l1959
  4943  002298                     l1959:
  4944  002298  0E00               	movlw	0
  4945  00229A  6E19               	movwf	___ftadd@sign,c
  4946  00229C  5010               	movf	___ftadd@f1,w,c
  4947  00229E  2613               	addwf	___ftadd@f2,f,c
  4948  0022A0  5011               	movf	___ftadd@f1+1,w,c
  4949  0022A2  2214               	addwfc	___ftadd@f2+1,f,c
  4950  0022A4  5012               	movf	___ftadd@f1+2,w,c
  4951  0022A6  2215               	addwfc	___ftadd@f2+2,f,c
  4952  0022A8  AE15               	btfss	___ftadd@f2+2,7,c
  4953  0022AA  D00F               	goto	l1969
  4954  0022AC  0EFF               	movlw	255
  4955  0022AE  1A13               	xorwf	___ftadd@f2,f,c
  4956  0022B0  0EFF               	movlw	255
  4957  0022B2  1A14               	xorwf	___ftadd@f2+1,f,c
  4958  0022B4  0EFF               	movlw	255
  4959  0022B6  1A15               	xorwf	___ftadd@f2+2,f,c
  4960  0022B8  0E01               	movlw	1
  4961  0022BA  2613               	addwf	___ftadd@f2,f,c
  4962  0022BC  0E00               	movlw	0
  4963  0022BE  2214               	addwfc	___ftadd@f2+1,f,c
  4964  0022C0  0E00               	movlw	0
  4965  0022C2  2215               	addwfc	___ftadd@f2+2,f,c
  4966  0022C4  0E01               	movlw	1
  4967  0022C6  6E19               	movwf	___ftadd@sign,c
  4968  0022C8  D000               	goto	l1969
  4969  0022CA                     l1969:
  4970  0022CA  C013  F001         	movff	___ftadd@f2,___ftpack@arg
  4971  0022CE  C014  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4972  0022D2  C015  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4973  0022D6  C01B  F004         	movff	___ftadd@exp1,___ftpack@exp
  4974  0022DA  C019  F005         	movff	___ftadd@sign,___ftpack@sign
  4975  0022DE  ECE6  F013         	call	___ftpack	;wreg free
  4976  0022E2  C001  F010         	movff	?___ftpack,?___ftadd
  4977  0022E6  C002  F011         	movff	?___ftpack+1,?___ftadd+1
  4978  0022EA  C003  F012         	movff	?___ftpack+2,?___ftadd+2
  4979  0022EE  D000               	goto	l628
  4980  0022F0                     l628:
  4981  0022F0  0012               	return		;funcret
  4982  0022F2                     __end_of___ftadd:
  4983                           	opt stack 0
  4984                           tblptru	equ	0xFF8
  4985                           tblptrh	equ	0xFF7
  4986                           tblptrl	equ	0xFF6
  4987                           tablat	equ	0xFF5
  4988                           prodh	equ	0xFF4
  4989                           prodl	equ	0xFF3
  4990                           postinc0	equ	0xFEE
  4991                           wreg	equ	0xFE8
  4992                           postdec1	equ	0xFE5
  4993                           fsr1l	equ	0xFE1
  4994                           indf2	equ	0xFDF
  4995                           postinc2	equ	0xFDE
  4996                           postdec2	equ	0xFDD
  4997                           fsr2h	equ	0xFDA
  4998                           fsr2l	equ	0xFD9
  4999                           status	equ	0xFD8
  5000                           
  5001 ;; *************** function ___ftneg *****************
  5002 ;; Defined at:
  5003 ;;		line 15 in file "E:\XC8\sources\common\ftneg.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  f1              3   12[COMRAM] float 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;		None
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  3   12[COMRAM] float 
  5010 ;; Registers used:
  5011 ;;		wreg, status,2, status,0
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5017 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5020 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5021 ;;Total ram usage:        3 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_main
  5027 ;;		_printf
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           	psect	text16
  5032  002E48                     __ptext16:
  5033                           	opt stack 0
  5034  002E48                     ___ftneg:
  5035                           	opt stack 29
  5036                           
  5037                           ;incstack = 0
  5038  002E48  500D               	movf	___ftneg@f1,w,c
  5039  002E4A  100E               	iorwf	___ftneg@f1+1,w,c
  5040  002E4C  100F               	iorwf	___ftneg@f1+2,w,c
  5041  002E4E  B4D8               	btfsc	status,2,c
  5042  002E50  D006               	goto	l701
  5043  002E52  0E00               	movlw	0
  5044  002E54  1A0D               	xorwf	___ftneg@f1,f,c
  5045  002E56  0E00               	movlw	0
  5046  002E58  1A0E               	xorwf	___ftneg@f1+1,f,c
  5047  002E5A  0E80               	movlw	128
  5048  002E5C  1A0F               	xorwf	___ftneg@f1+2,f,c
  5049  002E5E                     l701:
  5050  002E5E  C00D  F00D         	movff	___ftneg@f1,?___ftneg
  5051  002E62  C00E  F00E         	movff	___ftneg@f1+1,?___ftneg+1
  5052  002E66  C00F  F00F         	movff	___ftneg@f1+2,?___ftneg+2
  5053  002E6A  0012               	return		;funcret
  5054  002E6C                     __end_of___ftneg:
  5055                           	opt stack 0
  5056                           tblptru	equ	0xFF8
  5057                           tblptrh	equ	0xFF7
  5058                           tblptrl	equ	0xFF6
  5059                           tablat	equ	0xFF5
  5060                           prodh	equ	0xFF4
  5061                           prodl	equ	0xFF3
  5062                           postinc0	equ	0xFEE
  5063                           wreg	equ	0xFE8
  5064                           postdec1	equ	0xFE5
  5065                           fsr1l	equ	0xFE1
  5066                           indf2	equ	0xFDF
  5067                           postinc2	equ	0xFDE
  5068                           postdec2	equ	0xFDD
  5069                           fsr2h	equ	0xFDA
  5070                           fsr2l	equ	0xFD9
  5071                           status	equ	0xFD8
  5072                           
  5073 ;; *************** function _init_UART *****************
  5074 ;; Defined at:
  5075 ;;		line 53 in file "Lab5pB2.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;		None
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;		None
  5080 ;; Return value:  Size  Location     Type
  5081 ;;		None               void
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;Total ram usage:        0 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    1
  5096 ;; This function calls:
  5097 ;;		_OpenUSART
  5098 ;; This function is called by:
  5099 ;;		_main
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text17
  5104  002EB8                     __ptext17:
  5105                           	opt stack 0
  5106  002EB8                     _init_UART:
  5107                           	opt stack 29
  5108                           
  5109                           ;Lab5pB2.c: 55: OpenUSART (0b01111111 & 0b10111111 &
  5110                           ;Lab5pB2.c: 56: 0b11111110 & 0b11111101 & 0b11111111 &
  5111                           ;Lab5pB2.c: 57: 0b11111111, 25);
  5112                           
  5113                           ;incstack = 0
  5114  002EB8  0E00               	movlw	0
  5115  002EBA  6E02               	movwf	OpenUSART@spbrg+1,c
  5116  002EBC  0E19               	movlw	25
  5117  002EBE  6E01               	movwf	OpenUSART@spbrg,c
  5118  002EC0  0E3C               	movlw	60
  5119  002EC2  ECE2  F015         	call	_OpenUSART
  5120                           
  5121                           ;Lab5pB2.c: 58: OSCCON = 0x60;
  5122  002EC6  0E60               	movlw	96
  5123  002EC8  6ED3               	movwf	4051,c	;volatile
  5124  002ECA  0012               	return		;funcret
  5125  002ECC                     __end_of_init_UART:
  5126                           	opt stack 0
  5127                           tblptru	equ	0xFF8
  5128                           tblptrh	equ	0xFF7
  5129                           tblptrl	equ	0xFF6
  5130                           tablat	equ	0xFF5
  5131                           prodh	equ	0xFF4
  5132                           prodl	equ	0xFF3
  5133                           postinc0	equ	0xFEE
  5134                           wreg	equ	0xFE8
  5135                           postdec1	equ	0xFE5
  5136                           fsr1l	equ	0xFE1
  5137                           indf2	equ	0xFDF
  5138                           postinc2	equ	0xFDE
  5139                           postdec2	equ	0xFDD
  5140                           fsr2h	equ	0xFDA
  5141                           fsr2l	equ	0xFD9
  5142                           status	equ	0xFD8
  5143                           
  5144 ;; *************** function _OpenUSART *****************
  5145 ;; Defined at:
  5146 ;;		line 73 in file "E:\XC8\sources\pic18\plib\USART\uopen.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  config          1    wreg     unsigned char 
  5149 ;;  spbrg           2    0[COMRAM] unsigned int 
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;  config          1    2[COMRAM] unsigned char 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;		None               void
  5154 ;; Registers used:
  5155 ;;		wreg, status,2
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;Total ram usage:        3 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_init_UART
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text18
  5175  002BC4                     __ptext18:
  5176                           	opt stack 0
  5177  002BC4                     _OpenUSART:
  5178                           	opt stack 29
  5179                           
  5180                           ;incstack = 0
  5181                           ;OpenUSART@config stored from wreg
  5182  002BC4  6E03               	movwf	OpenUSART@config,c
  5183  002BC6  0E00               	movlw	0
  5184  002BC8  6EAC               	movwf	4012,c	;volatile
  5185  002BCA  0E00               	movlw	0
  5186  002BCC  6EAB               	movwf	4011,c	;volatile
  5187  002BCE  A003               	btfss	OpenUSART@config,0,c
  5188  002BD0  D002               	goto	l2111
  5189  002BD2  88AC               	bsf	4012,4,c	;volatile
  5190  002BD4  D000               	goto	l2111
  5191  002BD6                     l2111:
  5192  002BD6  A203               	btfss	OpenUSART@config,1,c
  5193  002BD8  D003               	goto	l2115
  5194  002BDA  8CAC               	bsf	4012,6,c	;volatile
  5195  002BDC  8CAB               	bsf	4011,6,c	;volatile
  5196  002BDE  D000               	goto	l2115
  5197  002BE0                     l2115:
  5198  002BE0  A403               	btfss	OpenUSART@config,2,c
  5199  002BE2  D002               	goto	l2119
  5200  002BE4  8EAC               	bsf	4012,7,c	;volatile
  5201  002BE6  D000               	goto	l2119
  5202  002BE8                     l2119:
  5203  002BE8  A603               	btfss	OpenUSART@config,3,c
  5204  002BEA  D002               	goto	l250
  5205  002BEC  88AB               	bsf	4011,4,c	;volatile
  5206  002BEE  D002               	goto	l2123
  5207  002BF0                     l250:
  5208  002BF0  8AAB               	bsf	4011,5,c	;volatile
  5209  002BF2  D000               	goto	l2123
  5210  002BF4                     l2123:
  5211  002BF4  B803               	btfsc	OpenUSART@config,4,c
  5212  002BF6  84AC               	bsf	4012,2,c	;volatile
  5213  002BF8  989E               	bcf	3998,4,c	;volatile
  5214  002BFA  AA03               	btfss	OpenUSART@config,5,c
  5215  002BFC  D002               	goto	l2131
  5216  002BFE  86AB               	bsf	4011,3,c	;volatile
  5217  002C00  D000               	goto	l2131
  5218  002C02                     l2131:
  5219  002C02  AC03               	btfss	OpenUSART@config,6,c
  5220  002C04  D002               	goto	l254
  5221  002C06  8A9D               	bsf	3997,5,c	;volatile
  5222  002C08  D001               	goto	l255
  5223  002C0A                     l254:
  5224  002C0A  9A9D               	bcf	3997,5,c	;volatile
  5225  002C0C                     l255:
  5226  002C0C  9A9E               	bcf	3998,5,c	;volatile
  5227  002C0E  AE03               	btfss	OpenUSART@config,7,c
  5228  002C10  D002               	goto	l256
  5229  002C12  889D               	bsf	3997,4,c	;volatile
  5230  002C14  D001               	goto	l257
  5231  002C16                     l256:
  5232  002C16  989D               	bcf	3997,4,c	;volatile
  5233  002C18                     l257:
  5234  002C18  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5235  002C1C  5002               	movf	OpenUSART@spbrg+1,w,c
  5236  002C1E  6EB0               	movwf	4016,c	;volatile
  5237  002C20  8AAC               	bsf	4012,5,c	;volatile
  5238  002C22  8EAB               	bsf	4011,7,c	;volatile
  5239  002C24  9C94               	bcf	3988,6,c	;volatile
  5240  002C26  8E94               	bsf	3988,7,c	;volatile
  5241  002C28  B8AC               	btfsc	4012,4,c	;volatile
  5242  002C2A  BEAC               	btfsc	4012,7,c	;volatile
  5243  002C2C  D002               	goto	l259
  5244  002C2E  8C94               	bsf	3988,6,c	;volatile
  5245  002C30  D000               	goto	l259
  5246  002C32                     l259:
  5247  002C32  0012               	return		;funcret
  5248  002C34                     __end_of_OpenUSART:
  5249                           	opt stack 0
  5250                           tblptru	equ	0xFF8
  5251                           tblptrh	equ	0xFF7
  5252                           tblptrl	equ	0xFF6
  5253                           tablat	equ	0xFF5
  5254                           prodh	equ	0xFF4
  5255                           prodl	equ	0xFF3
  5256                           postinc0	equ	0xFEE
  5257                           wreg	equ	0xFE8
  5258                           postdec1	equ	0xFE5
  5259                           fsr1l	equ	0xFE1
  5260                           indf2	equ	0xFDF
  5261                           postinc2	equ	0xFDE
  5262                           postdec2	equ	0xFDD
  5263                           fsr2h	equ	0xFDA
  5264                           fsr2l	equ	0xFD9
  5265                           status	equ	0xFD8
  5266                           
  5267 ;; *************** function ___lwtoft *****************
  5268 ;; Defined at:
  5269 ;;		line 28 in file "E:\XC8\sources\common\lwtoft.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  c               2    8[COMRAM] unsigned int 
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;		None
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  3    8[COMRAM] float 
  5276 ;; Registers used:
  5277 ;;		wreg, status,2, status,0, cstack
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5283 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5287 ;;Total ram usage:        3 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    1
  5290 ;; This function calls:
  5291 ;;		___ftpack
  5292 ;; This function is called by:
  5293 ;;		_main
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           	psect	text19
  5298  002DD6                     __ptext19:
  5299                           	opt stack 0
  5300  002DD6                     ___lwtoft:
  5301                           	opt stack 29
  5302                           
  5303                           ;incstack = 0
  5304  002DD6  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  5305  002DDA  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  5306  002DDE  6A03               	clrf	___ftpack@arg+2,c
  5307  002DE0  0E8E               	movlw	142
  5308  002DE2  6E04               	movwf	___ftpack@exp,c
  5309  002DE4  0E00               	movlw	0
  5310  002DE6  6E05               	movwf	___ftpack@sign,c
  5311  002DE8  ECE6  F013         	call	___ftpack	;wreg free
  5312  002DEC  C001  F009         	movff	?___ftpack,?___lwtoft
  5313  002DF0  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  5314  002DF4  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  5315  002DF8  D000               	goto	l841
  5316  002DFA                     l841:
  5317  002DFA  0012               	return		;funcret
  5318  002DFC                     __end_of___lwtoft:
  5319                           	opt stack 0
  5320                           tblptru	equ	0xFF8
  5321                           tblptrh	equ	0xFF7
  5322                           tblptrl	equ	0xFF6
  5323                           tablat	equ	0xFF5
  5324                           prodh	equ	0xFF4
  5325                           prodl	equ	0xFF3
  5326                           postinc0	equ	0xFEE
  5327                           wreg	equ	0xFE8
  5328                           postdec1	equ	0xFE5
  5329                           fsr1l	equ	0xFE1
  5330                           indf2	equ	0xFDF
  5331                           postinc2	equ	0xFDE
  5332                           postdec2	equ	0xFDD
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function ___lbtoft *****************
  5338 ;; Defined at:
  5339 ;;		line 27 in file "E:\XC8\sources\common\lbtoft.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  c               1    wreg     unsigned char 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  c               1   11[COMRAM] unsigned char 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  3    8[COMRAM] float 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5353 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;Total ram usage:        4 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    1
  5360 ;; This function calls:
  5361 ;;		___ftpack
  5362 ;; This function is called by:
  5363 ;;		_main
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text20
  5368  002DFC                     __ptext20:
  5369                           	opt stack 0
  5370  002DFC                     ___lbtoft:
  5371                           	opt stack 29
  5372                           
  5373                           ;incstack = 0
  5374                           ;___lbtoft@c stored from wreg
  5375  002DFC  6E0C               	movwf	___lbtoft@c,c
  5376  002DFE  500C               	movf	___lbtoft@c,w,c
  5377  002E00  6E01               	movwf	___ftpack@arg,c
  5378  002E02  6A02               	clrf	___ftpack@arg+1,c
  5379  002E04  6A03               	clrf	___ftpack@arg+2,c
  5380  002E06  0E8E               	movlw	142
  5381  002E08  6E04               	movwf	___ftpack@exp,c
  5382  002E0A  0E00               	movlw	0
  5383  002E0C  6E05               	movwf	___ftpack@sign,c
  5384  002E0E  ECE6  F013         	call	___ftpack	;wreg free
  5385  002E12  C001  F009         	movff	?___ftpack,?___lbtoft
  5386  002E16  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  5387  002E1A  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  5388  002E1E  D000               	goto	l748
  5389  002E20                     l748:
  5390  002E20  0012               	return		;funcret
  5391  002E22                     __end_of___lbtoft:
  5392                           	opt stack 0
  5393                           tblptru	equ	0xFF8
  5394                           tblptrh	equ	0xFF7
  5395                           tblptrl	equ	0xFF6
  5396                           tablat	equ	0xFF5
  5397                           prodh	equ	0xFF4
  5398                           prodl	equ	0xFF3
  5399                           postinc0	equ	0xFEE
  5400                           wreg	equ	0xFE8
  5401                           postdec1	equ	0xFE5
  5402                           fsr1l	equ	0xFE1
  5403                           indf2	equ	0xFDF
  5404                           postinc2	equ	0xFDE
  5405                           postdec2	equ	0xFDD
  5406                           fsr2h	equ	0xFDA
  5407                           fsr2l	equ	0xFD9
  5408                           status	equ	0xFD8
  5409                           
  5410 ;; *************** function ___awtoft *****************
  5411 ;; Defined at:
  5412 ;;		line 32 in file "E:\XC8\sources\common\awtoft.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  c               2   72[COMRAM] int 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  sign            1   75[COMRAM] unsigned char 
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  3   72[COMRAM] float 
  5419 ;; Registers used:
  5420 ;;		wreg, status,2, status,0, cstack
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5426 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5429 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5430 ;;Total ram usage:        4 bytes
  5431 ;; Hardware stack levels used:    1
  5432 ;; Hardware stack levels required when called:    1
  5433 ;; This function calls:
  5434 ;;		___ftpack
  5435 ;; This function is called by:
  5436 ;;		_main
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text21
  5441  002D72                     __ptext21:
  5442                           	opt stack 0
  5443  002D72                     ___awtoft:
  5444                           	opt stack 29
  5445                           
  5446                           ;incstack = 0
  5447  002D72  0E00               	movlw	0
  5448  002D74  6E4C               	movwf	___awtoft@sign,c
  5449  002D76  AE4A               	btfss	___awtoft@c+1,7,c
  5450  002D78  D007               	goto	l2731
  5451  002D7A  6C49               	negf	___awtoft@c,c
  5452  002D7C  1E4A               	comf	___awtoft@c+1,f,c
  5453  002D7E  B0D8               	btfsc	status,0,c
  5454  002D80  2A4A               	incf	___awtoft@c+1,f,c
  5455  002D82  0E01               	movlw	1
  5456  002D84  6E4C               	movwf	___awtoft@sign,c
  5457  002D86  D000               	goto	l2731
  5458  002D88                     l2731:
  5459  002D88  C049  F001         	movff	___awtoft@c,___ftpack@arg
  5460  002D8C  C04A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5461  002D90  6A03               	clrf	___ftpack@arg+2,c
  5462  002D92  0E8E               	movlw	142
  5463  002D94  6E04               	movwf	___ftpack@exp,c
  5464  002D96  C04C  F005         	movff	___awtoft@sign,___ftpack@sign
  5465  002D9A  ECE6  F013         	call	___ftpack	;wreg free
  5466  002D9E  C001  F049         	movff	?___ftpack,?___awtoft
  5467  002DA2  C002  F04A         	movff	?___ftpack+1,?___awtoft+1
  5468  002DA6  C003  F04B         	movff	?___ftpack+2,?___awtoft+2
  5469  002DAA  D000               	goto	l480
  5470  002DAC                     l480:
  5471  002DAC  0012               	return		;funcret
  5472  002DAE                     __end_of___awtoft:
  5473                           	opt stack 0
  5474                           tblptru	equ	0xFF8
  5475                           tblptrh	equ	0xFF7
  5476                           tblptrl	equ	0xFF6
  5477                           tablat	equ	0xFF5
  5478                           prodh	equ	0xFF4
  5479                           prodl	equ	0xFF3
  5480                           postinc0	equ	0xFEE
  5481                           wreg	equ	0xFE8
  5482                           postdec1	equ	0xFE5
  5483                           fsr1l	equ	0xFE1
  5484                           indf2	equ	0xFDF
  5485                           postinc2	equ	0xFDE
  5486                           postdec2	equ	0xFDD
  5487                           fsr2h	equ	0xFDA
  5488                           fsr2l	equ	0xFD9
  5489                           status	equ	0xFD8
  5490                           
  5491 ;; *************** function _WAIT_1_SEC *****************
  5492 ;; Defined at:
  5493 ;;		line 25 in file "Lab5pB2.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;		None
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  j               2    0[COMRAM] int 
  5498 ;; Return value:  Size  Location     Type
  5499 ;;		None               void
  5500 ;; Registers used:
  5501 ;;		wreg, status,2, status,0
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;Total ram usage:        2 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_main
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text22
  5521  002E6C                     __ptext22:
  5522                           	opt stack 0
  5523  002E6C                     _WAIT_1_SEC:
  5524                           	opt stack 30
  5525                           
  5526                           ;Lab5pB2.c: 27: for (int j=0; j<0xffff; j++);
  5527                           
  5528                           ;incstack = 0
  5529  002E6C  0E00               	movlw	0
  5530  002E6E  6E02               	movwf	WAIT_1_SEC@j+1,c
  5531  002E70  0E00               	movlw	0
  5532  002E72  6E01               	movwf	WAIT_1_SEC@j,c
  5533  002E74                     l2503:
  5534  002E74  2801               	incf	WAIT_1_SEC@j,w,c
  5535  002E76  E105               	bnz	l2507
  5536  002E78  2802               	incf	WAIT_1_SEC@j+1,w,c
  5537  002E7A  B4D8               	btfsc	status,2,c
  5538  002E7C  D006               	goto	l77
  5539  002E7E  D001               	goto	l2507
  5540  002E80  D004               	goto	l77
  5541  002E82                     l2507:
  5542  002E82  4A01               	infsnz	WAIT_1_SEC@j,f,c
  5543  002E84  2A02               	incf	WAIT_1_SEC@j+1,f,c
  5544  002E86  D7F6               	goto	l2503
  5545  002E88  D7FC               	goto	l2507
  5546  002E8A                     l77:
  5547  002E8A  0012               	return		;funcret
  5548  002E8C                     __end_of_WAIT_1_SEC:
  5549                           	opt stack 0
  5550                           tblptru	equ	0xFF8
  5551                           tblptrh	equ	0xFF7
  5552                           tblptrl	equ	0xFF6
  5553                           tablat	equ	0xFF5
  5554                           prodh	equ	0xFF4
  5555                           prodl	equ	0xFF3
  5556                           postinc0	equ	0xFEE
  5557                           wreg	equ	0xFE8
  5558                           postdec1	equ	0xFE5
  5559                           fsr1l	equ	0xFE1
  5560                           indf2	equ	0xFDF
  5561                           postinc2	equ	0xFDE
  5562                           postdec2	equ	0xFDD
  5563                           fsr2h	equ	0xFDA
  5564                           fsr2l	equ	0xFD9
  5565                           status	equ	0xFD8
  5566                           
  5567 ;; *************** function _Select_ADC_Channel *****************
  5568 ;; Defined at:
  5569 ;;		line 61 in file "Lab5pB2.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  channel         1    wreg     unsigned char 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  channel         1    0[COMRAM] unsigned char 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;		None               void
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0, prodl, prodh
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;Total ram usage:        1 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; This function calls:
  5590 ;;		Nothing
  5591 ;; This function is called by:
  5592 ;;		_main
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text23
  5597  002EEC                     __ptext23:
  5598                           	opt stack 0
  5599  002EEC                     _Select_ADC_Channel:
  5600                           	opt stack 30
  5601                           
  5602                           ;incstack = 0
  5603                           ;Select_ADC_Channel@channel stored from wreg
  5604  002EEC  6E01               	movwf	Select_ADC_Channel@channel,c
  5605                           
  5606                           ;Lab5pB2.c: 63: ADCON0 = (channel*4) + 1;
  5607  002EEE  5001               	movf	Select_ADC_Channel@channel,w,c
  5608  002EF0  0D04               	mullw	4
  5609  002EF2  28F3               	incf	prodl,w,c
  5610  002EF4  6EC2               	movwf	4034,c	;volatile
  5611  002EF6  0012               	return		;funcret
  5612  002EF8                     __end_of_Select_ADC_Channel:
  5613                           	opt stack 0
  5614                           tblptru	equ	0xFF8
  5615                           tblptrh	equ	0xFF7
  5616                           tblptrl	equ	0xFF6
  5617                           tablat	equ	0xFF5
  5618                           prodh	equ	0xFF4
  5619                           prodl	equ	0xFF3
  5620                           postinc0	equ	0xFEE
  5621                           wreg	equ	0xFE8
  5622                           postdec1	equ	0xFE5
  5623                           fsr1l	equ	0xFE1
  5624                           indf2	equ	0xFDF
  5625                           postinc2	equ	0xFDE
  5626                           postdec2	equ	0xFDD
  5627                           fsr2h	equ	0xFDA
  5628                           fsr2l	equ	0xFD9
  5629                           status	equ	0xFD8
  5630                           
  5631 ;; *************** function _SET_D2_YELLOW *****************
  5632 ;; Defined at:
  5633 ;;		line 80 in file "Lab5pB2.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;		None
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;		None
  5638 ;; Return value:  Size  Location     Type
  5639 ;;		None               void
  5640 ;; Registers used:
  5641 ;;		None
  5642 ;; Tracked objects:
  5643 ;;		On entry : 0/0
  5644 ;;		On exit  : 0/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5651 ;;Total ram usage:        0 bytes
  5652 ;; Hardware stack levels used:    1
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_main
  5657 ;;		_DO_DISPLAY_D2
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           	psect	text24
  5662  002F0A                     __ptext24:
  5663                           	opt stack 0
  5664  002F0A                     _SET_D2_YELLOW:
  5665                           	opt stack 30
  5666                           
  5667                           ;Lab5pB2.c: 82: PORTAbits.RA3 = 1;
  5668                           
  5669                           ;incstack = 0
  5670  002F0A  8680               	bsf	3968,3,c	;volatile
  5671                           
  5672                           ;Lab5pB2.c: 83: PORTEbits.RE2 = 1;
  5673  002F0C  8484               	bsf	3972,2,c	;volatile
  5674  002F0E  0012               	return		;funcret
  5675  002F10                     __end_of_SET_D2_YELLOW:
  5676                           	opt stack 0
  5677                           tblptru	equ	0xFF8
  5678                           tblptrh	equ	0xFF7
  5679                           tblptrl	equ	0xFF6
  5680                           tablat	equ	0xFF5
  5681                           prodh	equ	0xFF4
  5682                           prodl	equ	0xFF3
  5683                           postinc0	equ	0xFEE
  5684                           wreg	equ	0xFE8
  5685                           postdec1	equ	0xFE5
  5686                           fsr1l	equ	0xFE1
  5687                           indf2	equ	0xFDF
  5688                           postinc2	equ	0xFDE
  5689                           postdec2	equ	0xFDD
  5690                           fsr2h	equ	0xFDA
  5691                           fsr2l	equ	0xFD9
  5692                           status	equ	0xFD8
  5693                           
  5694 ;; *************** function _SET_D2_OFF *****************
  5695 ;; Defined at:
  5696 ;;		line 87 in file "Lab5pB2.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;		None
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;		None               void
  5703 ;; Registers used:
  5704 ;;		None
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;Total ram usage:        0 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; This function calls:
  5717 ;;		Nothing
  5718 ;; This function is called by:
  5719 ;;		_main
  5720 ;;		_DO_DISPLAY_D2
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text25
  5725  002F10                     __ptext25:
  5726                           	opt stack 0
  5727  002F10                     _SET_D2_OFF:
  5728                           	opt stack 30
  5729                           
  5730                           ;Lab5pB2.c: 89: PORTAbits.RA3 = 0;
  5731                           
  5732                           ;incstack = 0
  5733  002F10  9680               	bcf	3968,3,c	;volatile
  5734                           
  5735                           ;Lab5pB2.c: 90: PORTEbits.RE2 = 0;
  5736  002F12  9484               	bcf	3972,2,c	;volatile
  5737  002F14  0012               	return		;funcret
  5738  002F16                     __end_of_SET_D2_OFF:
  5739                           	opt stack 0
  5740                           tblptru	equ	0xFF8
  5741                           tblptrh	equ	0xFF7
  5742                           tblptrl	equ	0xFF6
  5743                           tablat	equ	0xFF5
  5744                           prodh	equ	0xFF4
  5745                           prodl	equ	0xFF3
  5746                           postinc0	equ	0xFEE
  5747                           wreg	equ	0xFE8
  5748                           postdec1	equ	0xFE5
  5749                           fsr1l	equ	0xFE1
  5750                           indf2	equ	0xFDF
  5751                           postinc2	equ	0xFDE
  5752                           postdec2	equ	0xFDD
  5753                           fsr2h	equ	0xFDA
  5754                           fsr2l	equ	0xFD9
  5755                           status	equ	0xFD8
  5756                           
  5757 ;; *************** function _Init_ADC *****************
  5758 ;; Defined at:
  5759 ;;		line 46 in file "Lab5pB2.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;		None
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;		None
  5764 ;; Return value:  Size  Location     Type
  5765 ;;		None               void
  5766 ;; Registers used:
  5767 ;;		wreg, status,2
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5777 ;;Total ram usage:        0 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; This function calls:
  5780 ;;		Nothing
  5781 ;; This function is called by:
  5782 ;;		_main
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text26
  5787  002EF8                     __ptext26:
  5788                           	opt stack 0
  5789  002EF8                     _Init_ADC:
  5790                           	opt stack 30
  5791                           
  5792                           ;Lab5pB2.c: 48: ADCON1 = 0x1A;
  5793                           
  5794                           ;incstack = 0
  5795  002EF8  0E1A               	movlw	26
  5796  002EFA  6EC1               	movwf	4033,c	;volatile
  5797                           
  5798                           ;Lab5pB2.c: 49: ADCON2 = 0xA9;
  5799  002EFC  0EA9               	movlw	169
  5800  002EFE  6EC0               	movwf	4032,c	;volatile
  5801  002F00  0012               	return		;funcret
  5802  002F02                     __end_of_Init_ADC:
  5803                           	opt stack 0
  5804                           tblptru	equ	0xFF8
  5805                           tblptrh	equ	0xFF7
  5806                           tblptrl	equ	0xFF6
  5807                           tablat	equ	0xFF5
  5808                           prodh	equ	0xFF4
  5809                           prodl	equ	0xFF3
  5810                           postinc0	equ	0xFEE
  5811                           wreg	equ	0xFE8
  5812                           postdec1	equ	0xFE5
  5813                           fsr1l	equ	0xFE1
  5814                           indf2	equ	0xFDF
  5815                           postinc2	equ	0xFDE
  5816                           postdec2	equ	0xFDD
  5817                           fsr2h	equ	0xFDA
  5818                           fsr2l	equ	0xFD9
  5819                           status	equ	0xFD8
  5820                           
  5821 ;; *************** function _Get_Full_ADC *****************
  5822 ;; Defined at:
  5823 ;;		line 36 in file "Lab5pB2.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;		None
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;  result          2    4[COMRAM] int 
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  2    0[COMRAM] unsigned int 
  5830 ;; Registers used:
  5831 ;;		wreg, status,2, status,0
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;Total ram usage:        6 bytes
  5842 ;; Hardware stack levels used:    1
  5843 ;; This function calls:
  5844 ;;		Nothing
  5845 ;; This function is called by:
  5846 ;;		_main
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text27
  5851  002E22                     __ptext27:
  5852                           	opt stack 0
  5853  002E22                     _Get_Full_ADC:
  5854                           	opt stack 30
  5855                           
  5856                           ;Lab5pB2.c: 38: int result;
  5857                           ;Lab5pB2.c: 39: ADCON0bits.GO = 1;
  5858                           
  5859                           ;incstack = 0
  5860  002E22  82C2               	bsf	4034,1,c	;volatile
  5861                           
  5862                           ;Lab5pB2.c: 40: while(ADCON0bits.DONE==1);
  5863  002E24  D000               	goto	l86
  5864  002E26                     l86:
  5865  002E26  B2C2               	btfsc	4034,1,c	;volatile
  5866  002E28  D7FE               	goto	l86
  5867                           
  5868                           ;Lab5pB2.c: 41: result = (ADRESH * 0x100) + ADRESL;
  5869  002E2A  50C4               	movf	4036,w,c	;volatile
  5870  002E2C  6E04               	movwf	(??_Get_Full_ADC+1)& (0+255),c
  5871  002E2E  6A03               	clrf	??_Get_Full_ADC& (0+255),c
  5872  002E30  50C3               	movf	4035,w,c	;volatile
  5873  002E32  2403               	addwf	??_Get_Full_ADC,w,c
  5874  002E34  6E05               	movwf	Get_Full_ADC@result,c
  5875  002E36  0E00               	movlw	0
  5876  002E38  2004               	addwfc	??_Get_Full_ADC+1,w,c
  5877  002E3A  6E06               	movwf	Get_Full_ADC@result+1,c
  5878                           
  5879                           ;Lab5pB2.c: 43: return result;
  5880  002E3C  C005  F001         	movff	Get_Full_ADC@result,?_Get_Full_ADC
  5881  002E40  C006  F002         	movff	Get_Full_ADC@result+1,?_Get_Full_ADC+1
  5882  002E44  D000               	goto	l89
  5883  002E46                     l89:
  5884  002E46  0012               	return		;funcret
  5885  002E48                     __end_of_Get_Full_ADC:
  5886                           	opt stack 0
  5887                           tblptru	equ	0xFF8
  5888                           tblptrh	equ	0xFF7
  5889                           tblptrl	equ	0xFF6
  5890                           tablat	equ	0xFF5
  5891                           prodh	equ	0xFF4
  5892                           prodl	equ	0xFF3
  5893                           postinc0	equ	0xFEE
  5894                           wreg	equ	0xFE8
  5895                           postdec1	equ	0xFE5
  5896                           fsr1l	equ	0xFE1
  5897                           indf2	equ	0xFDF
  5898                           postinc2	equ	0xFDE
  5899                           postdec2	equ	0xFDD
  5900                           fsr2h	equ	0xFDA
  5901                           fsr2l	equ	0xFD9
  5902                           status	equ	0xFD8
  5903                           
  5904 ;; *************** function _Deactivate_Buzzer *****************
  5905 ;; Defined at:
  5906 ;;		line 74 in file "Lab5pB2.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;		None
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;		None
  5911 ;; Return value:  Size  Location     Type
  5912 ;;		None               void
  5913 ;; Registers used:
  5914 ;;		wreg, status,2
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;Total ram usage:        0 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; This function calls:
  5927 ;;		Nothing
  5928 ;; This function is called by:
  5929 ;;		_main
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           
  5933                           	psect	text28
  5934  002F02                     __ptext28:
  5935                           	opt stack 0
  5936  002F02                     _Deactivate_Buzzer:
  5937                           	opt stack 30
  5938                           
  5939                           ;Lab5pB2.c: 76: CCP2CON = 0x0;
  5940                           
  5941                           ;incstack = 0
  5942  002F02  0E00               	movlw	0
  5943  002F04  6EBA               	movwf	4026,c	;volatile
  5944                           
  5945                           ;Lab5pB2.c: 77: PORTBbits.RB3 = 0;
  5946  002F06  9681               	bcf	3969,3,c	;volatile
  5947  002F08  0012               	return		;funcret
  5948  002F0A                     __end_of_Deactivate_Buzzer:
  5949                           	opt stack 0
  5950                           tblptru	equ	0xFF8
  5951                           tblptrh	equ	0xFF7
  5952                           tblptrl	equ	0xFF6
  5953                           tablat	equ	0xFF5
  5954                           prodh	equ	0xFF4
  5955                           prodl	equ	0xFF3
  5956                           postinc0	equ	0xFEE
  5957                           wreg	equ	0xFE8
  5958                           postdec1	equ	0xFE5
  5959                           fsr1l	equ	0xFE1
  5960                           indf2	equ	0xFDF
  5961                           postinc2	equ	0xFDE
  5962                           postdec2	equ	0xFDD
  5963                           fsr2h	equ	0xFDA
  5964                           fsr2l	equ	0xFD9
  5965                           status	equ	0xFD8
  5966                           
  5967 ;; *************** function _DO_DISPLAY_D1 *****************
  5968 ;; Defined at:
  5969 ;;		line 115 in file "Lab5pB2.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  T               3   72[COMRAM] float 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;		None
  5974 ;; Return value:  Size  Location     Type
  5975 ;;		None               void
  5976 ;; Registers used:
  5977 ;;		wreg, status,2, status,0, cstack
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5983 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;Total ram usage:        3 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; Hardware stack levels required when called:    2
  5990 ;; This function calls:
  5991 ;;		___ftdiv
  5992 ;;		___ftge
  5993 ;;		___fttol
  5994 ;; This function is called by:
  5995 ;;		_main
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text29
  6000  002C94                     __ptext29:
  6001                           	opt stack 0
  6002  002C94                     _DO_DISPLAY_D1:
  6003                           	opt stack 28
  6004                           
  6005                           ;Lab5pB2.c: 117: if (T > 70) PORTB = 0xFF;
  6006                           
  6007                           ;incstack = 0
  6008  002C94  0E00               	movlw	0
  6009  002C96  6E01               	movwf	___ftge@ff1,c
  6010  002C98  0E8C               	movlw	140
  6011  002C9A  6E02               	movwf	___ftge@ff1+1,c
  6012  002C9C  0E42               	movlw	66
  6013  002C9E  6E03               	movwf	___ftge@ff1+2,c
  6014  002CA0  C049  F004         	movff	DO_DISPLAY_D1@T,___ftge@ff2
  6015  002CA4  C04A  F005         	movff	DO_DISPLAY_D1@T+1,___ftge@ff2+1
  6016  002CA8  C04B  F006         	movff	DO_DISPLAY_D1@T+2,___ftge@ff2+2
  6017  002CAC  EC94  F014         	call	___ftge	;wreg free
  6018  002CB0  B0D8               	btfsc	status,0,c
  6019  002CB2  D002               	goto	l2569
  6020  002CB4  6881               	setf	3969,c	;volatile
  6021  002CB6  D019               	goto	l128
  6022  002CB8                     l2569:
  6023                           
  6024                           ;Lab5pB2.c: 118: else
  6025                           ;Lab5pB2.c: 119: PORTB = T/10;
  6026  002CB8  0E00               	movlw	0
  6027  002CBA  6E2E               	movwf	___ftdiv@f2,c
  6028  002CBC  0E20               	movlw	32
  6029  002CBE  6E2F               	movwf	___ftdiv@f2+1,c
  6030  002CC0  0E41               	movlw	65
  6031  002CC2  6E30               	movwf	___ftdiv@f2+2,c
  6032  002CC4  C049  F02B         	movff	DO_DISPLAY_D1@T,___ftdiv@f1
  6033  002CC8  C04A  F02C         	movff	DO_DISPLAY_D1@T+1,___ftdiv@f1+1
  6034  002CCC  C04B  F02D         	movff	DO_DISPLAY_D1@T+2,___ftdiv@f1+2
  6035  002CD0  EC75  F013         	call	___ftdiv	;wreg free
  6036  002CD4  C02B  F03A         	movff	?___ftdiv,___fttol@f1
  6037  002CD8  C02C  F03B         	movff	?___ftdiv+1,___fttol@f1+1
  6038  002CDC  C02D  F03C         	movff	?___ftdiv+2,___fttol@f1+2
  6039  002CE0  EC02  F013         	call	___fttol	;wreg free
  6040  002CE4  503A               	movf	?___fttol,w,c
  6041  002CE6  6E81               	movwf	3969,c	;volatile
  6042  002CE8  D000               	goto	l128
  6043  002CEA                     l128:
  6044  002CEA  0012               	return		;funcret
  6045  002CEC                     __end_of_DO_DISPLAY_D1:
  6046                           	opt stack 0
  6047                           tblptru	equ	0xFF8
  6048                           tblptrh	equ	0xFF7
  6049                           tblptrl	equ	0xFF6
  6050                           tablat	equ	0xFF5
  6051                           prodh	equ	0xFF4
  6052                           prodl	equ	0xFF3
  6053                           postinc0	equ	0xFEE
  6054                           wreg	equ	0xFE8
  6055                           postdec1	equ	0xFE5
  6056                           fsr1l	equ	0xFE1
  6057                           indf2	equ	0xFDF
  6058                           postinc2	equ	0xFDE
  6059                           postdec2	equ	0xFDD
  6060                           fsr2h	equ	0xFDA
  6061                           fsr2l	equ	0xFD9
  6062                           status	equ	0xFD8
  6063                           
  6064 ;; *************** function ___fttol *****************
  6065 ;; Defined at:
  6066 ;;		line 44 in file "E:\XC8\sources\common\fttol.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  f1              3   57[COMRAM] float 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  lval            4   67[COMRAM] unsigned long 
  6071 ;;  exp1            1   71[COMRAM] unsigned char 
  6072 ;;  sign1           1   66[COMRAM] unsigned char 
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  4   57[COMRAM] long 
  6075 ;; Registers used:
  6076 ;;		wreg, status,2, status,0
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6082 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;Total ram usage:       15 bytes
  6087 ;; Hardware stack levels used:    1
  6088 ;; This function calls:
  6089 ;;		Nothing
  6090 ;; This function is called by:
  6091 ;;		_DO_DISPLAY_D1
  6092 ;;		_main
  6093 ;;		_printf
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text30
  6098  002604                     __ptext30:
  6099                           	opt stack 0
  6100  002604                     ___fttol:
  6101                           	opt stack 29
  6102                           
  6103                           ;incstack = 0
  6104  002604  C03C  F03E         	movff	___fttol@f1+2,??___fttol
  6105  002608  6A3F               	clrf	(??___fttol+1)& (0+255),c
  6106  00260A  6A40               	clrf	(??___fttol+2)& (0+255),c
  6107  00260C  343B               	rlcf	___fttol@f1+1,w,c
  6108  00260E  363E               	rlcf	??___fttol& (0+255),f,c
  6109  002610  E301               	bnc	u2401
  6110  002612  803F               	bsf	(??___fttol+1)& (0+255),0,c
  6111  002614                     u2401:
  6112  002614  503E               	movf	??___fttol,w,c
  6113  002616  6E48               	movwf	___fttol@exp1,c
  6114  002618  5048               	movf	___fttol@exp1,w,c
  6115  00261A  A4D8               	btfss	status,2,c
  6116  00261C  D002               	goto	l2413
  6117  00261E  D039               	goto	l2437
  6118  002620  D063               	goto	l712
  6119  002622                     l2413:
  6120  002622  0E17               	movlw	23
  6121  002624  6E3E               	movwf	??___fttol& (0+255),c
  6122  002626  C03A  F03F         	movff	___fttol@f1,??___fttol+1
  6123  00262A  C03B  F040         	movff	___fttol@f1+1,??___fttol+2
  6124  00262E  C03C  F041         	movff	___fttol@f1+2,??___fttol+3
  6125  002632  283E               	incf	??___fttol,w,c
  6126  002634  6E42               	movwf	(??___fttol+4)& (0+255),c
  6127  002636  D004               	goto	u2420
  6128  002638                     u2425:
  6129  002638  90D8               	bcf	status,0,c
  6130  00263A  3241               	rrcf	??___fttol+3,f,c
  6131  00263C  3240               	rrcf	??___fttol+2,f,c
  6132  00263E  323F               	rrcf	??___fttol+1,f,c
  6133  002640                     u2420:
  6134  002640  2E42               	decfsz	(??___fttol+4)& (0+255),f,c
  6135  002642  D7FA               	goto	u2425
  6136  002644  503F               	movf	??___fttol+1,w,c
  6137  002646  6E43               	movwf	___fttol@sign1,c
  6138  002648  8E3B               	bsf	___fttol@f1+1,7,c
  6139  00264A  0EFF               	movlw	255
  6140  00264C  163A               	andwf	___fttol@f1,f,c
  6141  00264E  0EFF               	movlw	255
  6142  002650  163B               	andwf	___fttol@f1+1,f,c
  6143  002652  0E00               	movlw	0
  6144  002654  163C               	andwf	___fttol@f1+2,f,c
  6145  002656  503A               	movf	___fttol@f1,w,c
  6146  002658  6E44               	movwf	___fttol@lval,c
  6147  00265A  503B               	movf	___fttol@f1+1,w,c
  6148  00265C  6E45               	movwf	___fttol@lval+1,c
  6149  00265E  503C               	movf	___fttol@f1+2,w,c
  6150  002660  6E46               	movwf	___fttol@lval+2,c
  6151  002662  6A47               	clrf	___fttol@lval+3,c
  6152  002664  0E8E               	movlw	142
  6153  002666  5E48               	subwf	___fttol@exp1,f,c
  6154  002668  AE48               	btfss	___fttol@exp1,7,c
  6155  00266A  D010               	goto	l2435
  6156  00266C  5048               	movf	___fttol@exp1,w,c
  6157  00266E  0A80               	xorlw	128
  6158  002670  0F8F               	addlw	143
  6159  002672  B0D8               	btfsc	status,0,c
  6160  002674  D003               	goto	l2431
  6161  002676  D00D               	goto	l2437
  6162  002678  D037               	goto	l712
  6163  00267A  D000               	goto	l2431
  6164  00267C                     l2431:
  6165  00267C  90D8               	bcf	status,0,c
  6166  00267E  3247               	rrcf	___fttol@lval+3,f,c
  6167  002680  3246               	rrcf	___fttol@lval+2,f,c
  6168  002682  3245               	rrcf	___fttol@lval+1,f,c
  6169  002684  3244               	rrcf	___fttol@lval,f,c
  6170  002686  3E48               	incfsz	___fttol@exp1,f,c
  6171  002688  D7F9               	goto	l2431
  6172  00268A  D019               	goto	l2445
  6173  00268C                     l2435:
  6174  00268C  0E17               	movlw	23
  6175  00268E  6448               	cpfsgt	___fttol@exp1,c
  6176  002690  D011               	goto	l2443
  6177  002692                     l2437:
  6178  002692  0E00               	movlw	0
  6179  002694  6E3A               	movwf	?___fttol,c
  6180  002696  0E00               	movlw	0
  6181  002698  6E3B               	movwf	?___fttol+1,c
  6182  00269A  0E00               	movlw	0
  6183  00269C  6E3C               	movwf	?___fttol+2,c
  6184  00269E  0E00               	movlw	0
  6185  0026A0  6E3D               	movwf	?___fttol+3,c
  6186  0026A2  D022               	goto	l712
  6187  0026A4  D007               	goto	l2443
  6188  0026A6                     l2441:
  6189  0026A6  90D8               	bcf	status,0,c
  6190  0026A8  3644               	rlcf	___fttol@lval,f,c
  6191  0026AA  3645               	rlcf	___fttol@lval+1,f,c
  6192  0026AC  3646               	rlcf	___fttol@lval+2,f,c
  6193  0026AE  3647               	rlcf	___fttol@lval+3,f,c
  6194  0026B0  0648               	decf	___fttol@exp1,f,c
  6195  0026B2  D000               	goto	l2443
  6196  0026B4                     l2443:
  6197  0026B4  5048               	movf	___fttol@exp1,w,c
  6198  0026B6  B4D8               	btfsc	status,2,c
  6199  0026B8  D002               	goto	l2445
  6200  0026BA  D7F5               	goto	l2441
  6201  0026BC  D000               	goto	l2445
  6202  0026BE                     l2445:
  6203  0026BE  5043               	movf	___fttol@sign1,w,c
  6204  0026C0  B4D8               	btfsc	status,2,c
  6205  0026C2  D009               	goto	l2449
  6206  0026C4  1E47               	comf	___fttol@lval+3,f,c
  6207  0026C6  1E46               	comf	___fttol@lval+2,f,c
  6208  0026C8  1E45               	comf	___fttol@lval+1,f,c
  6209  0026CA  6C44               	negf	___fttol@lval,c
  6210  0026CC  0E00               	movlw	0
  6211  0026CE  2245               	addwfc	___fttol@lval+1,f,c
  6212  0026D0  2246               	addwfc	___fttol@lval+2,f,c
  6213  0026D2  2247               	addwfc	___fttol@lval+3,f,c
  6214  0026D4  D000               	goto	l2449
  6215  0026D6                     l2449:
  6216  0026D6  C044  F03A         	movff	___fttol@lval,?___fttol
  6217  0026DA  C045  F03B         	movff	___fttol@lval+1,?___fttol+1
  6218  0026DE  C046  F03C         	movff	___fttol@lval+2,?___fttol+2
  6219  0026E2  C047  F03D         	movff	___fttol@lval+3,?___fttol+3
  6220  0026E6  D000               	goto	l712
  6221  0026E8                     l712:
  6222  0026E8  0012               	return		;funcret
  6223  0026EA                     __end_of___fttol:
  6224                           	opt stack 0
  6225                           tblptru	equ	0xFF8
  6226                           tblptrh	equ	0xFF7
  6227                           tblptrl	equ	0xFF6
  6228                           tablat	equ	0xFF5
  6229                           prodh	equ	0xFF4
  6230                           prodl	equ	0xFF3
  6231                           postinc0	equ	0xFEE
  6232                           wreg	equ	0xFE8
  6233                           postdec1	equ	0xFE5
  6234                           fsr1l	equ	0xFE1
  6235                           indf2	equ	0xFDF
  6236                           postinc2	equ	0xFDE
  6237                           postdec2	equ	0xFDD
  6238                           fsr2h	equ	0xFDA
  6239                           fsr2l	equ	0xFD9
  6240                           status	equ	0xFD8
  6241                           
  6242 ;; *************** function ___ftge *****************
  6243 ;; Defined at:
  6244 ;;		line 4 in file "E:\XC8\sources\common\ftge.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  ff1             3    0[COMRAM] float 
  6247 ;;  ff2             3    3[COMRAM] float 
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;		None
  6250 ;; Return value:  Size  Location     Type
  6251 ;;		None               void
  6252 ;; Registers used:
  6253 ;;		wreg, status,2, status,0
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6259 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;Total ram usage:        9 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_DO_DISPLAY_D1
  6269 ;;		_main
  6270 ;;		_printf
  6271 ;;		_DO_DISPLAY_D2
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text31
  6276  002928                     __ptext31:
  6277                           	opt stack 0
  6278  002928                     ___ftge:
  6279                           	opt stack 29
  6280                           
  6281                           ;incstack = 0
  6282  002928  AE03               	btfss	___ftge@ff1+2,7,c
  6283  00292A  D017               	goto	l2389
  6284  00292C  C001  F007         	movff	___ftge@ff1,??___ftge
  6285  002930  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  6286  002934  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  6287  002938  1E07               	comf	??___ftge,f,c
  6288  00293A  1E08               	comf	??___ftge+1,f,c
  6289  00293C  1E09               	comf	??___ftge+2,f,c
  6290  00293E  2A07               	incf	??___ftge,f,c
  6291  002940  0E00               	movlw	0
  6292  002942  2208               	addwfc	??___ftge+1,f,c
  6293  002944  2209               	addwfc	??___ftge+2,f,c
  6294  002946  0E00               	movlw	0
  6295  002948  2407               	addwf	??___ftge,w,c
  6296  00294A  6E01               	movwf	___ftge@ff1,c
  6297  00294C  0E00               	movlw	0
  6298  00294E  2008               	addwfc	??___ftge+1,w,c
  6299  002950  6E02               	movwf	___ftge@ff1+1,c
  6300  002952  0E80               	movlw	128
  6301  002954  2009               	addwfc	??___ftge+2,w,c
  6302  002956  6E03               	movwf	___ftge@ff1+2,c
  6303  002958  D000               	goto	l2389
  6304  00295A                     l2389:
  6305  00295A  AE06               	btfss	___ftge@ff2+2,7,c
  6306  00295C  D017               	goto	l2393
  6307  00295E  C004  F007         	movff	___ftge@ff2,??___ftge
  6308  002962  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  6309  002966  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  6310  00296A  1E07               	comf	??___ftge,f,c
  6311  00296C  1E08               	comf	??___ftge+1,f,c
  6312  00296E  1E09               	comf	??___ftge+2,f,c
  6313  002970  2A07               	incf	??___ftge,f,c
  6314  002972  0E00               	movlw	0
  6315  002974  2208               	addwfc	??___ftge+1,f,c
  6316  002976  2209               	addwfc	??___ftge+2,f,c
  6317  002978  0E00               	movlw	0
  6318  00297A  2407               	addwf	??___ftge,w,c
  6319  00297C  6E04               	movwf	___ftge@ff2,c
  6320  00297E  0E00               	movlw	0
  6321  002980  2008               	addwfc	??___ftge+1,w,c
  6322  002982  6E05               	movwf	___ftge@ff2+1,c
  6323  002984  0E80               	movlw	128
  6324  002986  2009               	addwfc	??___ftge+2,w,c
  6325  002988  6E06               	movwf	___ftge@ff2+2,c
  6326  00298A  D000               	goto	l2393
  6327  00298C                     l2393:
  6328  00298C  0E00               	movlw	0
  6329  00298E  1A01               	xorwf	___ftge@ff1,f,c
  6330  002990  0E00               	movlw	0
  6331  002992  1A02               	xorwf	___ftge@ff1+1,f,c
  6332  002994  0E80               	movlw	128
  6333  002996  1A03               	xorwf	___ftge@ff1+2,f,c
  6334  002998  0E00               	movlw	0
  6335  00299A  1A04               	xorwf	___ftge@ff2,f,c
  6336  00299C  0E00               	movlw	0
  6337  00299E  1A05               	xorwf	___ftge@ff2+1,f,c
  6338  0029A0  0E80               	movlw	128
  6339  0029A2  1A06               	xorwf	___ftge@ff2+2,f,c
  6340  0029A4  5004               	movf	___ftge@ff2,w,c
  6341  0029A6  5C01               	subwf	___ftge@ff1,w,c
  6342  0029A8  5005               	movf	___ftge@ff2+1,w,c
  6343  0029AA  5802               	subwfb	___ftge@ff1+1,w,c
  6344  0029AC  5006               	movf	___ftge@ff2+2,w,c
  6345  0029AE  5803               	subwfb	___ftge@ff1+2,w,c
  6346  0029B0  B0D8               	btfsc	status,0,c
  6347  0029B2  D002               	goto	l2399
  6348  0029B4  90D8               	bcf	status,0,c
  6349  0029B6  D002               	goto	l685
  6350  0029B8                     l2399:
  6351  0029B8  80D8               	bsf	status,0,c
  6352  0029BA  D000               	goto	l685
  6353  0029BC                     l685:
  6354  0029BC  0012               	return		;funcret
  6355  0029BE                     __end_of___ftge:
  6356                           	opt stack 0
  6357                           tblptru	equ	0xFF8
  6358                           tblptrh	equ	0xFF7
  6359                           tblptrl	equ	0xFF6
  6360                           tablat	equ	0xFF5
  6361                           prodh	equ	0xFF4
  6362                           prodl	equ	0xFF3
  6363                           postinc0	equ	0xFEE
  6364                           wreg	equ	0xFE8
  6365                           postdec1	equ	0xFE5
  6366                           fsr1l	equ	0xFE1
  6367                           indf2	equ	0xFDF
  6368                           postinc2	equ	0xFDE
  6369                           postdec2	equ	0xFDD
  6370                           fsr2h	equ	0xFDA
  6371                           fsr2l	equ	0xFD9
  6372                           status	equ	0xFD8
  6373                           
  6374 ;; *************** function ___ftdiv *****************
  6375 ;; Defined at:
  6376 ;;		line 54 in file "E:\XC8\sources\common\ftdiv.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  f1              3   42[COMRAM] float 
  6379 ;;  f2              3   45[COMRAM] float 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  f3              3   52[COMRAM] float 
  6382 ;;  sign            1   56[COMRAM] unsigned char 
  6383 ;;  exp             1   55[COMRAM] unsigned char 
  6384 ;;  cntr            1   51[COMRAM] unsigned char 
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  3   42[COMRAM] float 
  6387 ;; Registers used:
  6388 ;;		wreg, status,2, status,0, cstack
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6394 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6395 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6396 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6397 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6398 ;;Total ram usage:       15 bytes
  6399 ;; Hardware stack levels used:    1
  6400 ;; Hardware stack levels required when called:    1
  6401 ;; This function calls:
  6402 ;;		___ftpack
  6403 ;; This function is called by:
  6404 ;;		_DO_DISPLAY_D1
  6405 ;;		_main
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           	psect	text32
  6410  0026EA                     __ptext32:
  6411                           	opt stack 0
  6412  0026EA                     ___ftdiv:
  6413                           	opt stack 29
  6414                           
  6415                           ;incstack = 0
  6416  0026EA  C02D  F031         	movff	___ftdiv@f1+2,??___ftdiv
  6417  0026EE  6A32               	clrf	(??___ftdiv+1)& (0+255),c
  6418  0026F0  6A33               	clrf	(??___ftdiv+2)& (0+255),c
  6419  0026F2  342C               	rlcf	___ftdiv@f1+1,w,c
  6420  0026F4  3631               	rlcf	??___ftdiv& (0+255),f,c
  6421  0026F6  E301               	bnc	u2301
  6422  0026F8  8032               	bsf	(??___ftdiv+1)& (0+255),0,c
  6423  0026FA                     u2301:
  6424  0026FA  5031               	movf	??___ftdiv,w,c
  6425  0026FC  6E38               	movwf	___ftdiv@exp,c
  6426  0026FE  5038               	movf	___ftdiv@exp,w,c
  6427  002700  A4D8               	btfss	status,2,c
  6428  002702  D002               	goto	l2337
  6429  002704  D00E               	goto	l2339
  6430  002706  D061               	goto	l659
  6431  002708                     l2337:
  6432  002708  C030  F031         	movff	___ftdiv@f2+2,??___ftdiv
  6433  00270C  6A32               	clrf	(??___ftdiv+1)& (0+255),c
  6434  00270E  6A33               	clrf	(??___ftdiv+2)& (0+255),c
  6435  002710  342F               	rlcf	___ftdiv@f2+1,w,c
  6436  002712  3631               	rlcf	??___ftdiv& (0+255),f,c
  6437  002714  E301               	bnc	u2321
  6438  002716  8032               	bsf	(??___ftdiv+1)& (0+255),0,c
  6439  002718                     u2321:
  6440  002718  5031               	movf	??___ftdiv,w,c
  6441  00271A  6E39               	movwf	___ftdiv@sign,c
  6442  00271C  5039               	movf	___ftdiv@sign,w,c
  6443  00271E  A4D8               	btfss	status,2,c
  6444  002720  D007               	goto	l2343
  6445  002722                     l2339:
  6446  002722  0E00               	movlw	0
  6447  002724  6E2B               	movwf	?___ftdiv,c
  6448  002726  0E00               	movlw	0
  6449  002728  6E2C               	movwf	?___ftdiv+1,c
  6450  00272A  0E00               	movlw	0
  6451  00272C  6E2D               	movwf	?___ftdiv+2,c
  6452  00272E  D04D               	goto	l659
  6453  002730                     l2343:
  6454  002730  0E00               	movlw	0
  6455  002732  6E35               	movwf	___ftdiv@f3,c
  6456  002734  0E00               	movlw	0
  6457  002736  6E36               	movwf	___ftdiv@f3+1,c
  6458  002738  0E00               	movlw	0
  6459  00273A  6E37               	movwf	___ftdiv@f3+2,c
  6460  00273C  5039               	movf	___ftdiv@sign,w,c
  6461  00273E  0F89               	addlw	137
  6462  002740  5E38               	subwf	___ftdiv@exp,f,c
  6463  002742  C02D  F039         	movff	___ftdiv@f1+2,___ftdiv@sign
  6464  002746  5030               	movf	___ftdiv@f2+2,w,c
  6465  002748  1A39               	xorwf	___ftdiv@sign,f,c
  6466  00274A  0E80               	movlw	128
  6467  00274C  1639               	andwf	___ftdiv@sign,f,c
  6468  00274E  8E2C               	bsf	___ftdiv@f1+1,7,c
  6469  002750  0EFF               	movlw	255
  6470  002752  162B               	andwf	___ftdiv@f1,f,c
  6471  002754  0EFF               	movlw	255
  6472  002756  162C               	andwf	___ftdiv@f1+1,f,c
  6473  002758  0E00               	movlw	0
  6474  00275A  162D               	andwf	___ftdiv@f1+2,f,c
  6475  00275C  8E2F               	bsf	___ftdiv@f2+1,7,c
  6476  00275E  0EFF               	movlw	255
  6477  002760  162E               	andwf	___ftdiv@f2,f,c
  6478  002762  0EFF               	movlw	255
  6479  002764  162F               	andwf	___ftdiv@f2+1,f,c
  6480  002766  0E00               	movlw	0
  6481  002768  1630               	andwf	___ftdiv@f2+2,f,c
  6482  00276A  0E18               	movlw	24
  6483  00276C  6E34               	movwf	___ftdiv@cntr,c
  6484  00276E  D000               	goto	l2363
  6485  002770                     l2363:
  6486  002770  90D8               	bcf	status,0,c
  6487  002772  3635               	rlcf	___ftdiv@f3,f,c
  6488  002774  3636               	rlcf	___ftdiv@f3+1,f,c
  6489  002776  3637               	rlcf	___ftdiv@f3+2,f,c
  6490  002778  502E               	movf	___ftdiv@f2,w,c
  6491  00277A  5C2B               	subwf	___ftdiv@f1,w,c
  6492  00277C  502F               	movf	___ftdiv@f2+1,w,c
  6493  00277E  582C               	subwfb	___ftdiv@f1+1,w,c
  6494  002780  5030               	movf	___ftdiv@f2+2,w,c
  6495  002782  582D               	subwfb	___ftdiv@f1+2,w,c
  6496  002784  A0D8               	btfss	status,0,c
  6497  002786  D007               	goto	l662
  6498  002788  502E               	movf	___ftdiv@f2,w,c
  6499  00278A  5E2B               	subwf	___ftdiv@f1,f,c
  6500  00278C  502F               	movf	___ftdiv@f2+1,w,c
  6501  00278E  5A2C               	subwfb	___ftdiv@f1+1,f,c
  6502  002790  5030               	movf	___ftdiv@f2+2,w,c
  6503  002792  5A2D               	subwfb	___ftdiv@f1+2,f,c
  6504  002794  8035               	bsf	___ftdiv@f3,0,c
  6505  002796                     l662:
  6506  002796  90D8               	bcf	status,0,c
  6507  002798  362B               	rlcf	___ftdiv@f1,f,c
  6508  00279A  362C               	rlcf	___ftdiv@f1+1,f,c
  6509  00279C  362D               	rlcf	___ftdiv@f1+2,f,c
  6510  00279E  2E34               	decfsz	___ftdiv@cntr,f,c
  6511  0027A0  D7E7               	goto	l2363
  6512  0027A2  D000               	goto	l2373
  6513  0027A4                     l2373:
  6514  0027A4  C035  F001         	movff	___ftdiv@f3,___ftpack@arg
  6515  0027A8  C036  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  6516  0027AC  C037  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  6517  0027B0  C038  F004         	movff	___ftdiv@exp,___ftpack@exp
  6518  0027B4  C039  F005         	movff	___ftdiv@sign,___ftpack@sign
  6519  0027B8  ECE6  F013         	call	___ftpack	;wreg free
  6520  0027BC  C001  F02B         	movff	?___ftpack,?___ftdiv
  6521  0027C0  C002  F02C         	movff	?___ftpack+1,?___ftdiv+1
  6522  0027C4  C003  F02D         	movff	?___ftpack+2,?___ftdiv+2
  6523  0027C8  D000               	goto	l659
  6524  0027CA                     l659:
  6525  0027CA  0012               	return		;funcret
  6526  0027CC                     __end_of___ftdiv:
  6527                           	opt stack 0
  6528                           tblptru	equ	0xFF8
  6529                           tblptrh	equ	0xFF7
  6530                           tblptrl	equ	0xFF6
  6531                           tablat	equ	0xFF5
  6532                           prodh	equ	0xFF4
  6533                           prodl	equ	0xFF3
  6534                           postinc0	equ	0xFEE
  6535                           wreg	equ	0xFE8
  6536                           postdec1	equ	0xFE5
  6537                           fsr1l	equ	0xFE1
  6538                           indf2	equ	0xFDF
  6539                           postinc2	equ	0xFDE
  6540                           postdec2	equ	0xFDD
  6541                           fsr2h	equ	0xFDA
  6542                           fsr2l	equ	0xFD9
  6543                           status	equ	0xFD8
  6544                           
  6545 ;; *************** function ___ftpack *****************
  6546 ;; Defined at:
  6547 ;;		line 62 in file "E:\XC8\sources\common\float.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  arg             3    0[COMRAM] unsigned um
  6550 ;;  exp             1    3[COMRAM] unsigned char 
  6551 ;;  sign            1    4[COMRAM] unsigned char 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;		None
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  3    0[COMRAM] float 
  6556 ;; Registers used:
  6557 ;;		wreg, status,2, status,0
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6563 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6565 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6566 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6567 ;;Total ram usage:        8 bytes
  6568 ;; Hardware stack levels used:    1
  6569 ;; This function calls:
  6570 ;;		Nothing
  6571 ;; This function is called by:
  6572 ;;		___awtoft
  6573 ;;		___ftadd
  6574 ;;		___ftdiv
  6575 ;;		___ftmul
  6576 ;;		___lbtoft
  6577 ;;		___lltoft
  6578 ;;		___lwtoft
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           	psect	text33
  6583  0027CC                     __ptext33:
  6584                           	opt stack 0
  6585  0027CC                     ___ftpack:
  6586                           	opt stack 27
  6587                           
  6588                           ;incstack = 0
  6589  0027CC  5004               	movf	___ftpack@exp,w,c
  6590  0027CE  B4D8               	btfsc	status,2,c
  6591  0027D0  D005               	goto	l1865
  6592  0027D2  5001               	movf	___ftpack@arg,w,c
  6593  0027D4  1002               	iorwf	___ftpack@arg+1,w,c
  6594  0027D6  1003               	iorwf	___ftpack@arg+2,w,c
  6595  0027D8  A4D8               	btfss	status,2,c
  6596  0027DA  D00E               	goto	l1871
  6597  0027DC                     l1865:
  6598  0027DC  0E00               	movlw	0
  6599  0027DE  6E01               	movwf	?___ftpack,c
  6600  0027E0  0E00               	movlw	0
  6601  0027E2  6E02               	movwf	?___ftpack+1,c
  6602  0027E4  0E00               	movlw	0
  6603  0027E6  6E03               	movwf	?___ftpack+2,c
  6604  0027E8  D053               	goto	l587
  6605  0027EA  D006               	goto	l1871
  6606  0027EC                     l1869:
  6607  0027EC  2A04               	incf	___ftpack@exp,f,c
  6608  0027EE  90D8               	bcf	status,0,c
  6609  0027F0  3203               	rrcf	___ftpack@arg+2,f,c
  6610  0027F2  3202               	rrcf	___ftpack@arg+1,f,c
  6611  0027F4  3201               	rrcf	___ftpack@arg,f,c
  6612  0027F6  D000               	goto	l1871
  6613  0027F8                     l1871:
  6614  0027F8  0E00               	movlw	0
  6615  0027FA  1401               	andwf	___ftpack@arg,w,c
  6616  0027FC  6E06               	movwf	??___ftpack& (0+255),c
  6617  0027FE  0E00               	movlw	0
  6618  002800  1402               	andwf	___ftpack@arg+1,w,c
  6619  002802  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6620  002804  0EFE               	movlw	254
  6621  002806  1403               	andwf	___ftpack@arg+2,w,c
  6622  002808  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6623  00280A  5006               	movf	??___ftpack,w,c
  6624  00280C  1007               	iorwf	??___ftpack+1,w,c
  6625  00280E  1008               	iorwf	??___ftpack+2,w,c
  6626  002810  B4D8               	btfsc	status,2,c
  6627  002812  D00E               	goto	l1877
  6628  002814  D7EB               	goto	l1869
  6629  002816  D00C               	goto	l1877
  6630  002818                     l1873:
  6631  002818  2A04               	incf	___ftpack@exp,f,c
  6632  00281A  0E01               	movlw	1
  6633  00281C  2601               	addwf	___ftpack@arg,f,c
  6634  00281E  0E00               	movlw	0
  6635  002820  2202               	addwfc	___ftpack@arg+1,f,c
  6636  002822  0E00               	movlw	0
  6637  002824  2203               	addwfc	___ftpack@arg+2,f,c
  6638  002826  90D8               	bcf	status,0,c
  6639  002828  3203               	rrcf	___ftpack@arg+2,f,c
  6640  00282A  3202               	rrcf	___ftpack@arg+1,f,c
  6641  00282C  3201               	rrcf	___ftpack@arg,f,c
  6642  00282E  D000               	goto	l1877
  6643  002830                     l1877:
  6644  002830  0E00               	movlw	0
  6645  002832  1401               	andwf	___ftpack@arg,w,c
  6646  002834  6E06               	movwf	??___ftpack& (0+255),c
  6647  002836  0E00               	movlw	0
  6648  002838  1402               	andwf	___ftpack@arg+1,w,c
  6649  00283A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6650  00283C  0EFF               	movlw	255
  6651  00283E  1403               	andwf	___ftpack@arg+2,w,c
  6652  002840  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6653  002842  5006               	movf	??___ftpack,w,c
  6654  002844  1007               	iorwf	??___ftpack+1,w,c
  6655  002846  1008               	iorwf	??___ftpack+2,w,c
  6656  002848  B4D8               	btfsc	status,2,c
  6657  00284A  D008               	goto	l1881
  6658  00284C  D7E5               	goto	l1873
  6659  00284E  D006               	goto	l1881
  6660  002850                     l1879:
  6661  002850  0604               	decf	___ftpack@exp,f,c
  6662  002852  90D8               	bcf	status,0,c
  6663  002854  3601               	rlcf	___ftpack@arg,f,c
  6664  002856  3602               	rlcf	___ftpack@arg+1,f,c
  6665  002858  3603               	rlcf	___ftpack@arg+2,f,c
  6666  00285A  D000               	goto	l1881
  6667  00285C                     l1881:
  6668  00285C  BE02               	btfsc	___ftpack@arg+1,7,c
  6669  00285E  D004               	goto	l598
  6670  002860  0E02               	movlw	2
  6671  002862  6004               	cpfslt	___ftpack@exp,c
  6672  002864  D7F5               	goto	l1879
  6673  002866  D000               	goto	l598
  6674  002868                     l598:
  6675  002868  B004               	btfsc	___ftpack@exp,0,c
  6676  00286A  D002               	goto	l1887
  6677  00286C  9E02               	bcf	___ftpack@arg+1,7,c
  6678  00286E  D000               	goto	l1887
  6679  002870                     l1887:
  6680  002870  90D8               	bcf	status,0,c
  6681  002872  3204               	rrcf	___ftpack@exp,f,c
  6682  002874  5004               	movf	___ftpack@exp,w,c
  6683  002876  1203               	iorwf	___ftpack@arg+2,f,c
  6684  002878  5005               	movf	___ftpack@sign,w,c
  6685  00287A  B4D8               	btfsc	status,2,c
  6686  00287C  D002               	goto	l1893
  6687  00287E  8E03               	bsf	___ftpack@arg+2,7,c
  6688  002880  D000               	goto	l1893
  6689  002882                     l1893:
  6690  002882  C001  F001         	movff	___ftpack@arg,?___ftpack
  6691  002886  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6692  00288A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6693  00288E  D000               	goto	l587
  6694  002890                     l587:
  6695  002890  0012               	return		;funcret
  6696  002892                     __end_of___ftpack:
  6697                           	opt stack 0
  6698                           tblptru	equ	0xFF8
  6699                           tblptrh	equ	0xFF7
  6700                           tblptrl	equ	0xFF6
  6701                           tablat	equ	0xFF5
  6702                           prodh	equ	0xFF4
  6703                           prodl	equ	0xFF3
  6704                           postinc0	equ	0xFEE
  6705                           wreg	equ	0xFE8
  6706                           postdec1	equ	0xFE5
  6707                           fsr1l	equ	0xFE1
  6708                           indf2	equ	0xFDF
  6709                           postinc2	equ	0xFDE
  6710                           postdec2	equ	0xFDD
  6711                           fsr2h	equ	0xFDA
  6712                           fsr2l	equ	0xFD9
  6713                           status	equ	0xFD8
  6714                           
  6715 ;; *************** function _DO_DISPLAY_7SEG_Upper *****************
  6716 ;; Defined at:
  6717 ;;		line 94 in file "Lab5pB2.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  digit           1    wreg     unsigned char 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;  digit           1    0[COMRAM] unsigned char 
  6722 ;;  PE              1    2[COMRAM] unsigned char 
  6723 ;;  PC              1    1[COMRAM] unsigned char 
  6724 ;; Return value:  Size  Location     Type
  6725 ;;		None               void
  6726 ;; Registers used:
  6727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6734 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6736 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6737 ;;Total ram usage:        3 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_main
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text34
  6747  002A4A                     __ptext34:
  6748                           	opt stack 0
  6749  002A4A                     _DO_DISPLAY_7SEG_Upper:
  6750                           	opt stack 30
  6751                           
  6752                           ;incstack = 0
  6753                           ;DO_DISPLAY_7SEG_Upper@digit stored from wreg
  6754  002A4A  6E01               	movwf	DO_DISPLAY_7SEG_Upper@digit,c
  6755                           
  6756                           ;Lab5pB2.c: 96: PORTC = array[digit] & 0x3F;
  6757  002A4C  5001               	movf	DO_DISPLAY_7SEG_Upper@digit,w,c
  6758  002A4E  0D02               	mullw	2
  6759  002A50  0EA8               	movlw	low _array
  6760  002A52  24F3               	addwf	prodl,w,c
  6761  002A54  6ED9               	movwf	fsr2l,c
  6762  002A56  0E00               	movlw	high _array
  6763  002A58  20F4               	addwfc	prodh,w,c
  6764  002A5A  6EDA               	movwf	fsr2h,c
  6765  002A5C  50DF               	movf	indf2,w,c
  6766  002A5E  0B3F               	andlw	63
  6767  002A60  6E82               	movwf	3970,c	;volatile
  6768                           
  6769                           ;Lab5pB2.c: 97: char PC = array[digit] & 0x01;
  6770  002A62  5001               	movf	DO_DISPLAY_7SEG_Upper@digit,w,c
  6771  002A64  0D02               	mullw	2
  6772  002A66  0EA8               	movlw	low _array
  6773  002A68  24F3               	addwf	prodl,w,c
  6774  002A6A  6ED9               	movwf	fsr2l,c
  6775  002A6C  0E00               	movlw	high _array
  6776  002A6E  20F4               	addwfc	prodh,w,c
  6777  002A70  6EDA               	movwf	fsr2h,c
  6778  002A72  50DF               	movf	indf2,w,c
  6779  002A74  0B01               	andlw	1
  6780  002A76  6E02               	movwf	DO_DISPLAY_7SEG_Upper@PC,c
  6781                           
  6782                           ;Lab5pB2.c: 98: char PE = array[digit] & 0x40;
  6783  002A78  5001               	movf	DO_DISPLAY_7SEG_Upper@digit,w,c
  6784  002A7A  0D02               	mullw	2
  6785  002A7C  0EA8               	movlw	low _array
  6786  002A7E  24F3               	addwf	prodl,w,c
  6787  002A80  6ED9               	movwf	fsr2l,c
  6788  002A82  0E00               	movlw	high _array
  6789  002A84  20F4               	addwfc	prodh,w,c
  6790  002A86  6EDA               	movwf	fsr2h,c
  6791  002A88  50DF               	movf	indf2,w,c
  6792  002A8A  0B40               	andlw	64
  6793  002A8C  6E03               	movwf	DO_DISPLAY_7SEG_Upper@PE,c
  6794                           
  6795                           ;Lab5pB2.c: 99: if (PE == 0 && PC ==0)
  6796  002A8E  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  6797  002A90  A4D8               	btfss	status,2,c
  6798  002A92  D005               	goto	l2545
  6799  002A94  5002               	movf	DO_DISPLAY_7SEG_Upper@PC,w,c
  6800  002A96  A4D8               	btfss	status,2,c
  6801  002A98  D002               	goto	l2545
  6802                           
  6803                           ;Lab5pB2.c: 100: PORTE = 0x00;
  6804  002A9A  0E00               	movlw	0
  6805  002A9C  D017               	goto	L10
  6806  002A9E                     l2545:
  6807                           
  6808                           ;Lab5pB2.c: 101: else if (PC == 0 && PE != 0)
  6809  002A9E  5002               	movf	DO_DISPLAY_7SEG_Upper@PC,w,c
  6810  002AA0  A4D8               	btfss	status,2,c
  6811  002AA2  D005               	goto	l2551
  6812  002AA4  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  6813  002AA6  B4D8               	btfsc	status,2,c
  6814  002AA8  D002               	goto	l2551
  6815                           
  6816                           ;Lab5pB2.c: 102: PORTE = 0x01;
  6817  002AAA  0E01               	movlw	1
  6818  002AAC  D00F               	goto	L10
  6819  002AAE                     l2551:
  6820                           
  6821                           ;Lab5pB2.c: 103: else if (PC == 1 && PE == 0)
  6822  002AAE  0402               	decf	DO_DISPLAY_7SEG_Upper@PC,w,c
  6823  002AB0  A4D8               	btfss	status,2,c
  6824  002AB2  D005               	goto	l2557
  6825  002AB4  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  6826  002AB6  A4D8               	btfss	status,2,c
  6827  002AB8  D002               	goto	l2557
  6828                           
  6829                           ;Lab5pB2.c: 104: PORTE = 0x02;
  6830  002ABA  0E02               	movlw	2
  6831  002ABC  D007               	goto	L10
  6832  002ABE                     l2557:
  6833                           
  6834                           ;Lab5pB2.c: 105: else if (PC == 1 && PE != 0)
  6835  002ABE  0402               	decf	DO_DISPLAY_7SEG_Upper@PC,w,c
  6836  002AC0  A4D8               	btfss	status,2,c
  6837  002AC2  D006               	goto	l120
  6838  002AC4  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  6839  002AC6  B4D8               	btfsc	status,2,c
  6840  002AC8  D003               	goto	l120
  6841                           
  6842                           ;Lab5pB2.c: 106: PORTE = 0x03;
  6843  002ACA  0E03               	movlw	3
  6844  002ACC                     L10:
  6845  002ACC  6E84               	movwf	3972,c	;volatile
  6846  002ACE  D000               	goto	l120
  6847  002AD0                     l120:
  6848  002AD0  0012               	return		;funcret
  6849  002AD2                     __end_of_DO_DISPLAY_7SEG_Upper:
  6850                           	opt stack 0
  6851                           tblptru	equ	0xFF8
  6852                           tblptrh	equ	0xFF7
  6853                           tblptrl	equ	0xFF6
  6854                           tablat	equ	0xFF5
  6855                           prodh	equ	0xFF4
  6856                           prodl	equ	0xFF3
  6857                           postinc0	equ	0xFEE
  6858                           wreg	equ	0xFE8
  6859                           postdec1	equ	0xFE5
  6860                           fsr1l	equ	0xFE1
  6861                           indf2	equ	0xFDF
  6862                           postinc2	equ	0xFDE
  6863                           postdec2	equ	0xFDD
  6864                           fsr2h	equ	0xFDA
  6865                           fsr2l	equ	0xFD9
  6866                           status	equ	0xFD8
  6867                           
  6868 ;; *************** function _DO_DISPLAY_7SEG_Lower *****************
  6869 ;; Defined at:
  6870 ;;		line 110 in file "Lab5pB2.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  digit           1    wreg     unsigned char 
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;  digit           1    0[COMRAM] unsigned char 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;		None               void
  6877 ;; Registers used:
  6878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6887 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;Total ram usage:        1 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; This function calls:
  6891 ;;		Nothing
  6892 ;; This function is called by:
  6893 ;;		_main
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           	psect	text35
  6898  002E8C                     __ptext35:
  6899                           	opt stack 0
  6900  002E8C                     _DO_DISPLAY_7SEG_Lower:
  6901                           	opt stack 30
  6902                           
  6903                           ;incstack = 0
  6904                           ;DO_DISPLAY_7SEG_Lower@digit stored from wreg
  6905  002E8C  6E01               	movwf	DO_DISPLAY_7SEG_Lower@digit,c
  6906                           
  6907                           ;Lab5pB2.c: 112: PORTD = array[digit];
  6908  002E8E  5001               	movf	DO_DISPLAY_7SEG_Lower@digit,w,c
  6909  002E90  0D02               	mullw	2
  6910  002E92  0EA8               	movlw	low _array
  6911  002E94  24F3               	addwf	prodl,w,c
  6912  002E96  6ED9               	movwf	fsr2l,c
  6913  002E98  0E00               	movlw	high _array
  6914  002E9A  20F4               	addwfc	prodh,w,c
  6915  002E9C  6EDA               	movwf	fsr2h,c
  6916  002E9E  50DF               	movf	indf2,w,c
  6917  002EA0  6E83               	movwf	3971,c	;volatile
  6918  002EA2  0012               	return		;funcret
  6919  002EA4                     __end_of_DO_DISPLAY_7SEG_Lower:
  6920                           	opt stack 0
  6921                           tblptru	equ	0xFF8
  6922                           tblptrh	equ	0xFF7
  6923                           tblptrl	equ	0xFF6
  6924                           tablat	equ	0xFF5
  6925                           prodh	equ	0xFF4
  6926                           prodl	equ	0xFF3
  6927                           postinc0	equ	0xFEE
  6928                           wreg	equ	0xFE8
  6929                           postdec1	equ	0xFE5
  6930                           fsr1l	equ	0xFE1
  6931                           indf2	equ	0xFDF
  6932                           postinc2	equ	0xFDE
  6933                           postdec2	equ	0xFDD
  6934                           fsr2h	equ	0xFDA
  6935                           fsr2l	equ	0xFD9
  6936                           status	equ	0xFD8
  6937                           
  6938 ;; *************** function _Activate_Buzzer *****************
  6939 ;; Defined at:
  6940 ;;		line 66 in file "Lab5pB2.c"
  6941 ;; Parameters:    Size  Location     Type
  6942 ;;		None
  6943 ;; Auto vars:     Size  Location     Type
  6944 ;;		None
  6945 ;; Return value:  Size  Location     Type
  6946 ;;		None               void
  6947 ;; Registers used:
  6948 ;;		wreg, status,2
  6949 ;; Tracked objects:
  6950 ;;		On entry : 0/0
  6951 ;;		On exit  : 0/0
  6952 ;;		Unchanged: 0/0
  6953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6958 ;;Total ram usage:        0 bytes
  6959 ;; Hardware stack levels used:    1
  6960 ;; This function calls:
  6961 ;;		Nothing
  6962 ;; This function is called by:
  6963 ;;		_main
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	text36
  6968  002ECC                     __ptext36:
  6969                           	opt stack 0
  6970  002ECC                     _Activate_Buzzer:
  6971                           	opt stack 30
  6972                           
  6973                           ;Lab5pB2.c: 68: PR2 = 0b11111001 ;
  6974                           
  6975                           ;incstack = 0
  6976  002ECC  0EF9               	movlw	249
  6977  002ECE  6ECB               	movwf	4043,c	;volatile
  6978                           
  6979                           ;Lab5pB2.c: 69: T2CON = 0b00000101 ;
  6980  002ED0  0E05               	movlw	5
  6981  002ED2  6ECA               	movwf	4042,c	;volatile
  6982                           
  6983                           ;Lab5pB2.c: 70: CCPR2L = 0b01001010 ;
  6984  002ED4  0E4A               	movlw	74
  6985  002ED6  6EBB               	movwf	4027,c	;volatile
  6986                           
  6987                           ;Lab5pB2.c: 71: CCP2CON = 0b00111100 ;
  6988  002ED8  0E3C               	movlw	60
  6989  002EDA  6EBA               	movwf	4026,c	;volatile
  6990  002EDC  0012               	return		;funcret
  6991  002EDE                     __end_of_Activate_Buzzer:
  6992                           	opt stack 0
  6993                           tblptru	equ	0xFF8
  6994                           tblptrh	equ	0xFF7
  6995                           tblptrl	equ	0xFF6
  6996                           tablat	equ	0xFF5
  6997                           prodh	equ	0xFF4
  6998                           prodl	equ	0xFF3
  6999                           postinc0	equ	0xFEE
  7000                           wreg	equ	0xFE8
  7001                           postdec1	equ	0xFE5
  7002                           fsr1l	equ	0xFE1
  7003                           indf2	equ	0xFDF
  7004                           postinc2	equ	0xFDE
  7005                           postdec2	equ	0xFDD
  7006                           fsr2h	equ	0xFDA
  7007                           fsr2l	equ	0xFD9
  7008                           status	equ	0xFD8
  7009                           tblptru	equ	0xFF8
  7010                           tblptrh	equ	0xFF7
  7011                           tblptrl	equ	0xFF6
  7012                           tablat	equ	0xFF5
  7013                           prodh	equ	0xFF4
  7014                           prodl	equ	0xFF3
  7015                           postinc0	equ	0xFEE
  7016                           wreg	equ	0xFE8
  7017                           postdec1	equ	0xFE5
  7018                           fsr1l	equ	0xFE1
  7019                           indf2	equ	0xFDF
  7020                           postinc2	equ	0xFDE
  7021                           postdec2	equ	0xFDD
  7022                           fsr2h	equ	0xFDA
  7023                           fsr2l	equ	0xFD9
  7024                           status	equ	0xFD8
  7025                           
  7026                           	psect	rparam
  7027  0000                     tblptru	equ	0xFF8
  7028                           tblptrh	equ	0xFF7
  7029                           tblptrl	equ	0xFF6
  7030                           tablat	equ	0xFF5
  7031                           prodh	equ	0xFF4
  7032                           prodl	equ	0xFF3
  7033                           postinc0	equ	0xFEE
  7034                           wreg	equ	0xFE8
  7035                           postdec1	equ	0xFE5
  7036                           fsr1l	equ	0xFE1
  7037                           indf2	equ	0xFDF
  7038                           postinc2	equ	0xFDE
  7039                           postdec2	equ	0xFDD
  7040                           fsr2h	equ	0xFDA
  7041                           fsr2l	equ	0xFD9
  7042                           status	equ	0xFD8


Data Sizes:
    Strings     22
    Constant    118
    Data        20
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    113     123
    BANK0           128     40      68
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_fround
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___awmod->___fttol
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___ftadd
    ___ftadd->___ftneg
    ___ftneg->___lbtoft
    _init_UART->_OpenUSART
    ___lwtoft->___ftpack
    ___lbtoft->___ftpack
    ___awtoft->___fttol
    _DO_DISPLAY_D1->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   66244
                                             23 BANK0     17    17      0
                    _Activate_Buzzer
              _DO_DISPLAY_7SEG_Lower
              _DO_DISPLAY_7SEG_Upper
                      _DO_DISPLAY_D1
                  _Deactivate_Buzzer
                       _Get_Full_ADC
                           _Init_ADC
                         _SET_D2_OFF
                      _SET_D2_YELLOW
                 _Select_ADC_Channel
                         _WAIT_1_SEC
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft
                           ___lwtoft
                          _init_UART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   40178
                                            102 COMRAM    11     6      5
                                              0 BANK0     23    23      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    9516
                                             92 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    9318
                                             92 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             86 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4244
                                             27 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1462
                                             72 COMRAM     6     2      4
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1466
                                             78 COMRAM     8     4      4
                            ___awmod (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1946
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     477
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     374
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3421
                                             27 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3168
                                             15 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     204
                                             12 COMRAM     3     0      3
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    1899
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    1846
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2021
                                             72 COMRAM     4     1      3
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _WAIT_1_SEC                                           2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SET_D2_YELLOW                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D2_OFF                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_D1                                        3     0      3    4365
                                             72 COMRAM     3     0      3
                            ___ftdiv
                             ___ftge
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     888
                                             57 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     878
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2502
                                             42 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1824
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_7SEG_Upper                                3     3      0     244
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_7SEG_Lower                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Activate_Buzzer
   _DO_DISPLAY_7SEG_Lower
   _DO_DISPLAY_7SEG_Upper
   _DO_DISPLAY_D1
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
   _Deactivate_Buzzer
   _Get_Full_ADC
   _Init_ADC
   _SET_D2_OFF
   _SET_D2_YELLOW
   _Select_ADC_Channel
   _WAIT_1_SEC
   ___awdiv
     ___awmod (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
   ___awmod
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
   ___awtoft
     ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
   ___ftadd
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftdiv
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftneg
     ___lbtoft (ARG)
       ___ftpack
   ___fttol
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___lbtoft
     ___ftpack
   ___lwtoft
     ___ftpack
   _init_UART
     _OpenUSART
   _printf
     ___awdiv
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
     ___ftadd
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftge
     ___ftmul
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg
       ___lbtoft (ARG)
         ___ftpack
     ___ftsub
       ___ftadd
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___awmod
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftmul (ARG)
                   ___ftadd (ARG)
                     ___ftneg (ARG)
                       ___lbtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___awmod
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftmul
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftmul (ARG)
                   ___ftadd (ARG)
                     ___ftneg (ARG)
                       ___lbtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     28      44       5       53.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     71      7B       1       96.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BF      34        0.0%
DATA                 0      0      BF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Sep 25 16:00:29 2021

                             _F 0072                              l80 2EE2                              l77 2E8A  
                            l86 2E26                              l89 2E46                              _Tc 0075  
                  ___awdiv@sign 0054             ___wmul@multiplicand 0059                    ___ftadd@exp1 001B  
                  ___ftadd@exp2 001A                    ___ftadd@sign 0019                             l120 2AD0  
                           l215 1594                             l128 2CEA                             l250 2BF0  
                           l170 1B3C                             l226 175C                             l163 212C  
                           l254 2C0A                             l262 2DD4                             l255 2C0C  
                           l256 2C16                             l257 2C18                             l259 2C32  
                           l701 2E5E                             l631 219C                             l455 2926  
                           l712 26E8                             l480 2DAC                             l642 225E  
                           l546 250A                             l651 227A                             l627 2172  
                           l555 24FA                             l628 22F0                             l708 2D2E  
                           l468 2B52                             l662 2796                             l670 2390  
                           l751 2A38                             l841 2DFA                             l761 2BB2  
                           l587 2890                             l659 27CA                             l667 2400  
                           l691 2602                             l748 2E20                             l676 23F0  
                           l685 29BC                             l781 2C92                             l669 2368  
                           l598 2868                             _PR2 000FCB               _Deactivate_Buzzer 2F02  
                  ___awmod@sign 004E                             prod 000FF3                             wreg 000FE8  
            ?_Deactivate_Buzzer 0001                    __CFG_LVP$OFF 000000                  ?_DO_DISPLAY_D1 0049  
                  ___ftdiv@cntr 0034                    ___ftdiv@sign 0039                    __CFG_WDT$OFF 000000  
                          l2003 2598                            l2013 25C6                            l2111 2BD6  
                          l2007 25AE                            l2041 28D0                            l2017 25DC  
                          l2009 25B4                            l2131 2C02                            l2123 2BF4  
                          l2115 2BE0                            l2043 28DA                            l2035 28BA  
                          l2211 1B18                            l2221 2310                            l2061 291C  
                          l2053 2900                            l2045 28E2                            l2029 28A8  
                          l2205 1A66                            l2119 2BE8                            l2321 24CC  
                          l2305 2498                            l2057 290C                            l2081 2B04  
                          l2073 2AE8                            l2323 24D2                            l2227 232E  
                          l2083 2B0E                            l2413 2622                            l2317 24BC  
                          l2309 24A8                            l2261 23C2                            l2085 2B16  
                          l2093 2B38                            l2077 2AF6                            l2173 20EC  
                          l2165 2028                            l2343 2730                            l2431 267C  
                          l2503 2E74                            l2327 24E6                            l2263 23C8  
                          l2337 2708                            l2441 26A6                            l2329 24F4  
                          l2257 23B2                            l2249 239E                            l2097 2B48  
                          l2089 2B2C                            l2193 1932                            l2363 2770  
                          l2339 2722                            l2443 26B4                            l2435 268C  
                          l2507 2E82                            l2283 2422                            l2267 23DC  
                          l2187 188A                            l2373 27A4                            l2437 2692  
                          l2445 26BE                            l2381 2D04                            l2461 29EE  
                          l2277 2412                            l2269 23EA                            l2197 1942  
                          l2551 2AAE                            l1911 2180                            l2471 2A28  
                          l2463 29F6                            l2711 16FE                            l2703 1612  
                          l2631 12C4                            l2623 1254                            l2615 11EC  
                          l2545 2A9E                            l2393 298C                            l2449 26D6  
                          l2481 2B74                            l2297 2466                            l2633 12DA  
                          l2721 173E                            l2731 2D88                            l1923 21B6  
                          l2459 29E0                            l2483 2B7C                            l2715 170E  
                          l2651 13C4                            l2643 1346                            l2627 127C  
                          l2803 1E0C                            l2557 2ABE                            l2389 295A  
                          l1941 220E                            l1933 21DE                            l1917 21AA  
                          l2493 2C3A                            l2709 16EE                            l2645 1352  
                          l2653 13D8                            l2629 1292                            l2717 171E  
                          l2573 109C                            l1871 27F8                            l2399 29B8  
                          l1951 2246                            l1943 221A                            l2487 2BA2  
                          l2479 2B66                            l2495 2C48                            l2671 1494  
                          l2663 1454                            l2639 1320                            l2583 10C8  
                          l2815 1EC8                            l1881 285C                            l1873 2818  
                          l1865 27DC                            l2569 2CB8                            l1953 2252  
                          l1945 2222                            l2681 1542                            l2657 1440  
                          l2649 1396                            l2585 10EC                            l2577 10B0  
                          l2761 1B5A                            l1939 2202                            l2683 1552  
                          l2675 14B4                            l2667 148E                            l2659 1446  
                          l2579 10BE                            l1893 2882                            l1877 2830  
                          l1869 27EC                            l1981 2544                            l2693 159A  
                          l2781 1CC2                            l1887 2870                            l1879 2850  
                          l1959 2298                            l2687 1562                            l2599 1148  
                          l1969 22CA                            l1985 2552                            l2689 1576  
                          l2785 1CCC                            l1979 252A                            l2699 15C0  
                          l1999 2586                            STR_1 1077                            u2301 26FA  
                          u2141 2302                            u2321 2718                            u2401 2614  
                          u2161 2320                            u2420 2640                            u2425 2638  
                          u1801 253A                            u1571 213E                            u1581 2152  
                          u2710 1188                            u2715 117E                    printf@tmpval 008F  
                          u1781 251C                            u2870 158C                            _TRMT 007D61  
                          _Vdec 0078             ??_Deactivate_Buzzer 0001                            _main 1B3E  
                  ___ftpack@arg 0001                    ___ftpack@exp 0004                            _temp 00BF  
                          fsr2h 000FDA                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                            prodh 000FF4                            prodl 000FF3  
                          start 0000                    ___ftmul@cntr 0029                    ___param_bank 000010  
                  ___ftmul@sign 002A            __end_of_Get_Full_ADC 2E48                    ___fttol@exp1 0048  
                  ___fttol@lval 0044                     ?_WAIT_1_SEC 0001       __end_of_Deactivate_Buzzer 2F0A  
                   ?_SET_D2_OFF 0001                           ?_main 0001                 __end_of___awdiv 2928  
               __end_of___ftadd 22F2                 __end_of___awmod 2B54                 __end_of___ftdiv 27CC  
               __end_of___ftneg 2E6C                 __end_of___lldiv 2A4A                 __end_of___ftmul 2604  
               ___awdiv@divisor 0051                 __end_of___llmod 2BC4                 __end_of___ftsub 2D30  
               __end_of___fttol 26EA                           _T2CON 000FCA                 ___awdiv@counter 0053  
                         _RCSTA 000FAB                           _SPBRG 000FAF                           _PORTB 000F81  
                         _PORTC 000F82                           _PORTD 000F83                           _PORTE 000F84  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISD 000F95                           _TRISE 000F96                           _TXREG 000FAD  
                         _TXSTA 000FAC                    ___lltoft@exp 0011                   ___awtoft@sign 004C  
               __end_of_dpowers 1029                           _array 00A8                           _scale 175E  
                         _tempF 007A                   ___ftpack@sign 0005                           _nstep 00C2  
                         main@L 0099                           main@U 0097                           _putch 2EDE  
                __CFG_BOREN$OFF 000000                           tablat 000FF5                           status 000FD8  
        ?_DO_DISPLAY_7SEG_Lower 0001          ?_DO_DISPLAY_7SEG_Upper 0001                 __initialization 2D30  
                  __end_of_main 1EEA                __end_of_Init_ADC 2F02                          ??_main 0072  
                 ___fttol@sign1 0043                   __activetblptr 000002           __end_of_SET_D2_YELLOW 2F10  
          __size_of__tdiv_to_l_ 0110                 ??_DO_DISPLAY_D1 004C                          _ADCON0 000FC2  
                        _ADCON1 000FC1                          _ADCON2 000FC0                ___llmod@dividend 0001  
                        ?_scale 005D                          _ADRESH 000FC4                          _ADRESL 000FC3  
                        _CCPR2L 000FBB                ___awdiv@dividend 004F                __end_of___awtoft 2DAE  
                        ?_putch 0001                __end_of___ftpack 2892                __end_of___lbtoft 2E22  
              __end_of___lltoft 2C94                __end_of___lwtoft 2DFC                          _OSCCON 000FD3  
                        _SPBRGH 000FB0             __size_of_WAIT_1_SEC 0020              Get_Full_ADC@result 0005  
           __size_of_SET_D2_OFF 0006                __end_of__powers_ 1077              __size_of_OpenUSART 0070  
                        ___ftge 2928        __size_of_Activate_Buzzer 0012                          ___wmul 2DAE  
                     ??___awdiv 0053                       ??___ftadd 0016                       ??___awmod 004D  
                     ??___ftdiv 0031                       ??___ftneg 0010                       ??___lldiv 0009  
                     ??___ftmul 0022                       ??___llmod 0009                       ??___ftsub 0022  
                     ??___fttol 003E                          _fround 1EEA                          clear_0 2D36  
                        clear_1 2D42                ___awdiv@quotient 0055                 ___awmod@divisor 004B  
                        _resist 00BC      __size_of_Deactivate_Buzzer 0008                 ___awmod@counter 004D  
                        _printf 108E                          main@rL 00A5                          main@vL 009E  
         ___ftmul@f3_as_product 0026                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                          putch@c 0001  
                    __accesstop 0080         __end_of__initialization 2D68                      ___ftadd@f1 0010  
                    ___ftadd@f2 0013                      ___ftge@ff1 0001                      ___ftge@ff2 0004  
                 ___rparam_used 000001                      ___ftdiv@f1 002B                      ___ftdiv@f2 002E  
                    ___ftdiv@f3 0035           __size_of_Get_Full_ADC 0026                      ___ftneg@f1 000D  
                    ___awtoft@c 0049                      ___lbtoft@c 000C                      ___ftmul@f1 001C  
                    ___ftmul@f2 001F                      ___ftsub@f1 001C                      ___ftsub@f2 001F  
                    ___fttol@f1 003A                  __pcstackCOMRAM 0001                    __pidataBANK0 2EA4  
                    ___lltoft@c 0009                   __end_of_scale 1B3E                   __end_of_putch 2EEC  
                    ___lwtoft@c 0009                      __div_to_l_ 2402               __end_of_OpenUSART 2C34  
               __div_to_l_@exp1 000C                 __div_to_l_@cntr 000B                         ??_scale 0060  
               __div_to_l_@quot 0007                    _Get_Full_ADC 2E22                         ??_putch 0001  
                    __pbssBANK0 00BC                       ?_Init_ADC 0001              __size_of_init_UART 0014  
    __end_of_Select_ADC_Channel 2EF8                   __div_to_l_@f1 0001                   __div_to_l_@f2 0004  
            __CFG_CCP2MX$PORTBE 000000                         ?___ftge 0001                         ?___wmul 0057  
                       _CCP2CON 000FBA                         ?_fround 005D                    ??_WAIT_1_SEC 0001  
                     ?___awtoft 0049                       ?___ftpack 0001                       ?___lbtoft 0009  
                       ?_printf 0067                    ??_SET_D2_OFF 0001       Select_ADC_Channel@channel 0001  
                     ?___lltoft 0009                       ?___lwtoft 0009               ??_Activate_Buzzer 0001  
                   WAIT_1_SEC@j 0001                      ??_Init_ADC 0001         ??_DO_DISPLAY_7SEG_Lower 0001  
       ??_DO_DISPLAY_7SEG_Upper 0001              __end_of_WAIT_1_SEC 2E8C              __end_of_SET_D2_OFF 2F16  
             __end_of__npowers_ 1050                         __Hparam 0000                      _scale$1511 0060  
                       __Lparam 0000                 __size_of___ftge 0096                         ___awdiv 2892  
                       ___ftadd 212E                         ___awmod 2AD2                         ___ftdiv 26EA  
                       ___ftneg 2E48                         ___lldiv 29BE                 __size_of___wmul 0028  
                       ___ftmul 250C                         ___llmod 2B54                         ___ftsub 2CEC  
                       ___fttol 2604                    __psmallconst 1000                         __pcinit 2D30  
                    ??___awtoft 004C                      ??___ftpack 0006                      ??___lbtoft 000C  
               __size_of_fround 0244                         __ramtop 1000                      ??___lltoft 000D  
                       __ptext0 1B3E                         __ptext1 108E                         __ptext2 175E  
                       __ptext3 2EDE                         __ptext4 1EEA                         __ptext5 2DAE  
                       __ptext6 250C                         __ptext7 2AD2                         __ptext8 2892  
                       __ptext9 22F2                 __size_of_printf 06D0               __end_of_init_UART 2ECC  
                    ??___lwtoft 000C                     ?__div_to_l_ 0001                         _dpowers 1001  
              ___awmod@dividend 0049            end_of_initialization 2D68                  DO_DISPLAY_D1@T 0049  
                 __Lmediumconst 0000                 ___lldiv@divisor 0005                 ___lldiv@counter 000D  
                     _RCSTAbits 000FAB                         printf@c 0096                         printf@f 0067  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE                  __tdiv_to_l_@f1 0001                  __tdiv_to_l_@f2 0004  
                 ??__tdiv_to_l_ 0007                       _PORTAbits 000F80                       _PORTBbits 000F81  
                     _PORTDbits 000F83                       _PORTEbits 000F84                       _TRISCbits 000F94  
                main@voltage_mv 009B           __end_of_DO_DISPLAY_D1 2CEC                     ___ftdiv@exp 0038  
                     _TXSTAbits 000FAC          __size_of_SET_D2_YELLOW 0006             __size_of__div_to_l_ 010A  
                   ___ftmul@exp 0025                  __end_of___ftge 29BE                  __end_of___wmul 2DD6  
                __end_of_fround 212E                  __end_of_printf 175E             start_initialization 2D30  
       DO_DISPLAY_7SEG_Upper@PC 0002         DO_DISPLAY_7SEG_Upper@PE 0003      DO_DISPLAY_7SEG_Lower@digit 0001  
           __end_of__tdiv_to_l_ 2402                       _OpenUSART 2BC4                 ___llmod@divisor 0005  
              __CFG_OSC$INTIO67 000000               __size_of_Init_ADC 000A                 ___llmod@counter 0009  
               _Activate_Buzzer 2ECC                        ??___ftge 0007                        ??___wmul 005B  
                   __pdataBANK0 00A8              _Select_ADC_Channel 2EEC                        ??_fround 0060  
                      ??_printf 006C                      fround@prec 0066               __size_of___awtoft 003C  
             __size_of___ftpack 00C6               __size_of___lbtoft 0026                   _SET_D2_YELLOW 2F0A  
           ?_Select_ADC_Channel 0001               __size_of___lltoft 0060                     __pbssCOMRAM 0072  
             __size_of___lwtoft 0026                   __pcstackBANK0 0080                      ?_OpenUSART 0001  
__size_of_DO_DISPLAY_7SEG_Lower 0018   __end_of_DO_DISPLAY_7SEG_Lower 2EA4  __size_of_DO_DISPLAY_7SEG_Upper 0088  
 __end_of_DO_DISPLAY_7SEG_Upper 2AD2            ??_Select_ADC_Channel 0001                        ?___awdiv 004F  
                      ?___ftadd 0010                        ?___awmod 0049                        ?___ftdiv 002B  
                      ?___ftneg 000D                        ?___lldiv 0001                        ?___ftmul 001C  
                      ?___llmod 0001                        ?___ftsub 001C                       __npowers_ 1029  
                      ?___fttol 003A                     __tdiv_to_l_ 22F2                    ??__div_to_l_ 0007  
                ?_SET_D2_YELLOW 0001                     __smallconst 1000      DO_DISPLAY_7SEG_Upper@digit 0001  
                     _init_UART 2EB8                  __size_of_scale 03E0                  __size_of_putch 000E  
       __end_of_Activate_Buzzer 2EDE                  ___wmul@product 005B                        _PIE1bits 000F9D  
                      _PIR1bits 000F9E              __end_of__div_to_l_ 250C                       main@L_614 00A1  
                     main@L_626 00A3                       main@U_613 00A4                       main@U_625 00A2  
                    _ADCON0bits 000FC2               ___wmul@multiplier 0057                      printf@flag 0085  
                    printf@fval 0093                      printf@prec 0087                      ?_init_UART 0001  
                     copy_data0 2D5C                        _Init_ADC 2EF8                     ??_OpenUSART 0003  
               OpenUSART@config 0003                        __Hrparam 0000                        __Lrparam 0000  
              __size_of___awdiv 0096                __size_of___ftadd 01C4                __size_of___awmod 0082  
              __size_of___ftdiv 00E2                __size_of___ftneg 0024                __size_of___lldiv 008C  
              __size_of___ftmul 00F8                __size_of___llmod 0070                __size_of___ftsub 0044  
              __size_of___fttol 00E6                        ___awtoft 2D72                 ??_SET_D2_YELLOW 0001  
                      ___ftpack 27CC                        ___lbtoft 2DFC                     _fround$1510 0060  
                   _fround$1509 0063                        ___lltoft 2C34                        ___lwtoft 2DD6  
                      __ptext10 2402                        __ptext11 2C34                        __ptext20 2DFC  
                      __ptext12 2B54                        __ptext21 2D72                        __ptext13 29BE  
                      __ptext30 2604                        __ptext22 2E6C                        __ptext14 2CEC  
                      __ptext31 2928                        __ptext23 2EEC                        __ptext15 212E  
                      __ptext32 26EA                        __ptext24 2F0A                        __ptext16 2E48  
                      __ptext33 27CC                        __ptext25 2F10                        __ptext17 2EB8  
                      __ptext34 2A4A                        __ptext26 2EF8                        __ptext18 2BC4  
                      __ptext35 2E8C                        __ptext27 2E22                        __ptext19 2DD6  
                      __ptext36 2ECC                        __ptext28 2F02                        __ptext29 2C94  
                      __powers_ 1050                   ?_Get_Full_ADC 0001                ?_Activate_Buzzer 0001  
                 __size_of_main 03AC          __size_of_DO_DISPLAY_D1 0058                       printf@exp 008D  
                     printf@val 0089                  OpenUSART@spbrg 0001                     ??_init_UART 0004  
                ??_Get_Full_ADC 0003                        scale@scl 0063                __tdiv_to_l_@exp1 000F  
              __tdiv_to_l_@cntr 000E                __tdiv_to_l_@quot 000A                ___lldiv@dividend 0001  
                      printf@ap 0083                      _WAIT_1_SEC 2E6C                    ?__tdiv_to_l_ 0001  
                    _SET_D2_OFF 2F10                     _printf$1512 0080                ___lldiv@quotient 0009  
                 _DO_DISPLAY_D1 2C94     __size_of_Select_ADC_Channel 000C           _DO_DISPLAY_7SEG_Lower 2E8C  
         _DO_DISPLAY_7SEG_Upper 2A4A  
