

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Nov 01 14:41:27 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           	psect	idataCOMRAM
    52  000B8E                     __pidataCOMRAM:
    53                           	opt stack 0
    54                           
    55                           ;initializer for _Display_D1
    56  000B8E  00                 	db	0
    57  000B8F  02                 	db	2
    58  000B90  04                 	db	4
    59  000B91  06                 	db	6
    60  000B92  10                 	db	16
    61  000B93  12                 	db	18
    62  000B94  14                 	db	20
    63  000B95  16                 	db	22
    64  000B96  16                 	db	22
    65  000B97  16                 	db	22
    66                           
    67                           ;initializer for _tempSecond
    68  000B98  FF                 	db	255
    69                           
    70                           ;initializer for _wrap
    71  000B99  01                 	db	1
    72                           
    73                           	psect	mediumconst
    74  00FDB6                     __pmediumconst:
    75                           	opt stack 0
    76  00FDB6  00                 	db	0
    77  00FDB7                     _font:
    78                           	opt stack 0
    79  00FDB7  00                 	db	0
    80  00FDB8  00                 	db	0
    81  00FDB9  00                 	db	0
    82  00FDBA  00                 	db	0
    83  00FDBB  00                 	db	0
    84  00FDBC  00                 	db	0
    85  00FDBD  00                 	db	0
    86  00FDBE  5F                 	db	95
    87  00FDBF  00                 	db	0
    88  00FDC0  00                 	db	0
    89  00FDC1  00                 	db	0
    90  00FDC2  07                 	db	7
    91  00FDC3  00                 	db	0
    92  00FDC4  07                 	db	7
    93  00FDC5  00                 	db	0
    94  00FDC6  14                 	db	20
    95  00FDC7  7F                 	db	127
    96  00FDC8  14                 	db	20
    97  00FDC9  7F                 	db	127
    98  00FDCA  14                 	db	20
    99  00FDCB  24                 	db	36
   100  00FDCC  2A                 	db	42
   101  00FDCD  7F                 	db	127
   102  00FDCE  2A                 	db	42
   103  00FDCF  12                 	db	18
   104  00FDD0  23                 	db	35
   105  00FDD1  13                 	db	19
   106  00FDD2  08                 	db	8
   107  00FDD3  64                 	db	100
   108  00FDD4  62                 	db	98
   109  00FDD5  36                 	db	54
   110  00FDD6  49                 	db	73
   111  00FDD7  56                 	db	86
   112  00FDD8  20                 	db	32
   113  00FDD9  50                 	db	80
   114  00FDDA  00                 	db	0
   115  00FDDB  08                 	db	8
   116  00FDDC  07                 	db	7
   117  00FDDD  03                 	db	3
   118  00FDDE  00                 	db	0
   119  00FDDF  00                 	db	0
   120  00FDE0  1C                 	db	28
   121  00FDE1  22                 	db	34
   122  00FDE2  41                 	db	65
   123  00FDE3  00                 	db	0
   124  00FDE4  00                 	db	0
   125  00FDE5  41                 	db	65
   126  00FDE6  22                 	db	34
   127  00FDE7  1C                 	db	28
   128  00FDE8  00                 	db	0
   129  00FDE9  2A                 	db	42
   130  00FDEA  1C                 	db	28
   131  00FDEB  7F                 	db	127
   132  00FDEC  1C                 	db	28
   133  00FDED  2A                 	db	42
   134  00FDEE  08                 	db	8
   135  00FDEF  08                 	db	8
   136  00FDF0  3E                 	db	62
   137  00FDF1  08                 	db	8
   138  00FDF2  08                 	db	8
   139  00FDF3  00                 	db	0
   140  00FDF4  80                 	db	128
   141  00FDF5  70                 	db	112
   142  00FDF6  30                 	db	48
   143  00FDF7  00                 	db	0
   144  00FDF8  08                 	db	8
   145  00FDF9  08                 	db	8
   146  00FDFA  08                 	db	8
   147  00FDFB  08                 	db	8
   148  00FDFC  08                 	db	8
   149  00FDFD  00                 	db	0
   150  00FDFE  00                 	db	0
   151  00FDFF  60                 	db	96
   152  00FE00  60                 	db	96
   153  00FE01  00                 	db	0
   154  00FE02  20                 	db	32
   155  00FE03  10                 	db	16
   156  00FE04  08                 	db	8
   157  00FE05  04                 	db	4
   158  00FE06  02                 	db	2
   159  00FE07  3E                 	db	62
   160  00FE08  51                 	db	81
   161  00FE09  49                 	db	73
   162  00FE0A  45                 	db	69
   163  00FE0B  3E                 	db	62
   164  00FE0C  00                 	db	0
   165  00FE0D  42                 	db	66
   166  00FE0E  7F                 	db	127
   167  00FE0F  40                 	db	64
   168  00FE10  00                 	db	0
   169  00FE11  72                 	db	114
   170  00FE12  49                 	db	73
   171  00FE13  49                 	db	73
   172  00FE14  49                 	db	73
   173  00FE15  46                 	db	70
   174  00FE16  21                 	db	33
   175  00FE17  41                 	db	65
   176  00FE18  49                 	db	73
   177  00FE19  4D                 	db	77
   178  00FE1A  33                 	db	51
   179  00FE1B  18                 	db	24
   180  00FE1C  14                 	db	20
   181  00FE1D  12                 	db	18
   182  00FE1E  7F                 	db	127
   183  00FE1F  10                 	db	16
   184  00FE20  27                 	db	39
   185  00FE21  45                 	db	69
   186  00FE22  45                 	db	69
   187  00FE23  45                 	db	69
   188  00FE24  39                 	db	57
   189  00FE25  3C                 	db	60
   190  00FE26  4A                 	db	74
   191  00FE27  49                 	db	73
   192  00FE28  49                 	db	73
   193  00FE29  31                 	db	49
   194  00FE2A  41                 	db	65
   195  00FE2B  21                 	db	33
   196  00FE2C  11                 	db	17
   197  00FE2D  09                 	db	9
   198  00FE2E  07                 	db	7
   199  00FE2F  36                 	db	54
   200  00FE30  49                 	db	73
   201  00FE31  49                 	db	73
   202  00FE32  49                 	db	73
   203  00FE33  36                 	db	54
   204  00FE34  46                 	db	70
   205  00FE35  49                 	db	73
   206  00FE36  49                 	db	73
   207  00FE37  29                 	db	41
   208  00FE38  1E                 	db	30
   209  00FE39  00                 	db	0
   210  00FE3A  00                 	db	0
   211  00FE3B  14                 	db	20
   212  00FE3C  00                 	db	0
   213  00FE3D  00                 	db	0
   214  00FE3E  00                 	db	0
   215  00FE3F  40                 	db	64
   216  00FE40  34                 	db	52
   217  00FE41  00                 	db	0
   218  00FE42  00                 	db	0
   219  00FE43  00                 	db	0
   220  00FE44  08                 	db	8
   221  00FE45  14                 	db	20
   222  00FE46  22                 	db	34
   223  00FE47  41                 	db	65
   224  00FE48  14                 	db	20
   225  00FE49  14                 	db	20
   226  00FE4A  14                 	db	20
   227  00FE4B  14                 	db	20
   228  00FE4C  14                 	db	20
   229  00FE4D  00                 	db	0
   230  00FE4E  41                 	db	65
   231  00FE4F  22                 	db	34
   232  00FE50  14                 	db	20
   233  00FE51  08                 	db	8
   234  00FE52  02                 	db	2
   235  00FE53  01                 	db	1
   236  00FE54  59                 	db	89
   237  00FE55  09                 	db	9
   238  00FE56  06                 	db	6
   239  00FE57  3E                 	db	62
   240  00FE58  41                 	db	65
   241  00FE59  5D                 	db	93
   242  00FE5A  59                 	db	89
   243  00FE5B  4E                 	db	78
   244  00FE5C  7C                 	db	124
   245  00FE5D  12                 	db	18
   246  00FE5E  11                 	db	17
   247  00FE5F  12                 	db	18
   248  00FE60  7C                 	db	124
   249  00FE61  7F                 	db	127
   250  00FE62  49                 	db	73
   251  00FE63  49                 	db	73
   252  00FE64  49                 	db	73
   253  00FE65  36                 	db	54
   254  00FE66  3E                 	db	62
   255  00FE67  41                 	db	65
   256  00FE68  41                 	db	65
   257  00FE69  41                 	db	65
   258  00FE6A  22                 	db	34
   259  00FE6B  7F                 	db	127
   260  00FE6C  41                 	db	65
   261  00FE6D  41                 	db	65
   262  00FE6E  41                 	db	65
   263  00FE6F  3E                 	db	62
   264  00FE70  7F                 	db	127
   265  00FE71  49                 	db	73
   266  00FE72  49                 	db	73
   267  00FE73  49                 	db	73
   268  00FE74  41                 	db	65
   269  00FE75  7F                 	db	127
   270  00FE76  09                 	db	9
   271  00FE77  09                 	db	9
   272  00FE78  09                 	db	9
   273  00FE79  01                 	db	1
   274  00FE7A  3E                 	db	62
   275  00FE7B  41                 	db	65
   276  00FE7C  41                 	db	65
   277  00FE7D  51                 	db	81
   278  00FE7E  73                 	db	115
   279  00FE7F  7F                 	db	127
   280  00FE80  08                 	db	8
   281  00FE81  08                 	db	8
   282  00FE82  08                 	db	8
   283  00FE83  7F                 	db	127
   284  00FE84  00                 	db	0
   285  00FE85  41                 	db	65
   286  00FE86  7F                 	db	127
   287  00FE87  41                 	db	65
   288  00FE88  00                 	db	0
   289  00FE89  20                 	db	32
   290  00FE8A  40                 	db	64
   291  00FE8B  41                 	db	65
   292  00FE8C  3F                 	db	63
   293  00FE8D  01                 	db	1
   294  00FE8E  7F                 	db	127
   295  00FE8F  08                 	db	8
   296  00FE90  14                 	db	20
   297  00FE91  22                 	db	34
   298  00FE92  41                 	db	65
   299  00FE93  7F                 	db	127
   300  00FE94  40                 	db	64
   301  00FE95  40                 	db	64
   302  00FE96  40                 	db	64
   303  00FE97  40                 	db	64
   304  00FE98  7F                 	db	127
   305  00FE99  02                 	db	2
   306  00FE9A  1C                 	db	28
   307  00FE9B  02                 	db	2
   308  00FE9C  7F                 	db	127
   309  00FE9D  7F                 	db	127
   310  00FE9E  04                 	db	4
   311  00FE9F  08                 	db	8
   312  00FEA0  10                 	db	16
   313  00FEA1  7F                 	db	127
   314  00FEA2  3E                 	db	62
   315  00FEA3  41                 	db	65
   316  00FEA4  41                 	db	65
   317  00FEA5  41                 	db	65
   318  00FEA6  3E                 	db	62
   319  00FEA7  7F                 	db	127
   320  00FEA8  09                 	db	9
   321  00FEA9  09                 	db	9
   322  00FEAA  09                 	db	9
   323  00FEAB  06                 	db	6
   324  00FEAC  3E                 	db	62
   325  00FEAD  41                 	db	65
   326  00FEAE  51                 	db	81
   327  00FEAF  21                 	db	33
   328  00FEB0  5E                 	db	94
   329  00FEB1  7F                 	db	127
   330  00FEB2  09                 	db	9
   331  00FEB3  19                 	db	25
   332  00FEB4  29                 	db	41
   333  00FEB5  46                 	db	70
   334  00FEB6                     __end_of_font:
   335                           	opt stack 0
   336  00FEB6                     _font2:
   337                           	opt stack 0
   338  00FEB6  26                 	db	38
   339  00FEB7  49                 	db	73
   340  00FEB8  49                 	db	73
   341  00FEB9  49                 	db	73
   342  00FEBA  32                 	db	50
   343  00FEBB  03                 	db	3
   344  00FEBC  01                 	db	1
   345  00FEBD  7F                 	db	127
   346  00FEBE  01                 	db	1
   347  00FEBF  03                 	db	3
   348  00FEC0  3F                 	db	63
   349  00FEC1  40                 	db	64
   350  00FEC2  40                 	db	64
   351  00FEC3  40                 	db	64
   352  00FEC4  3F                 	db	63
   353  00FEC5  1F                 	db	31
   354  00FEC6  20                 	db	32
   355  00FEC7  40                 	db	64
   356  00FEC8  20                 	db	32
   357  00FEC9  1F                 	db	31
   358  00FECA  3F                 	db	63
   359  00FECB  40                 	db	64
   360  00FECC  38                 	db	56
   361  00FECD  40                 	db	64
   362  00FECE  3F                 	db	63
   363  00FECF  63                 	db	99
   364  00FED0  14                 	db	20
   365  00FED1  08                 	db	8
   366  00FED2  14                 	db	20
   367  00FED3  63                 	db	99
   368  00FED4  03                 	db	3
   369  00FED5  04                 	db	4
   370  00FED6  78                 	db	120
   371  00FED7  04                 	db	4
   372  00FED8  03                 	db	3
   373  00FED9  61                 	db	97
   374  00FEDA  59                 	db	89
   375  00FEDB  49                 	db	73
   376  00FEDC  4D                 	db	77
   377  00FEDD  43                 	db	67
   378  00FEDE  00                 	db	0
   379  00FEDF  7F                 	db	127
   380  00FEE0  41                 	db	65
   381  00FEE1  41                 	db	65
   382  00FEE2  41                 	db	65
   383  00FEE3  02                 	db	2
   384  00FEE4  04                 	db	4
   385  00FEE5  08                 	db	8
   386  00FEE6  10                 	db	16
   387  00FEE7  20                 	db	32
   388  00FEE8  00                 	db	0
   389  00FEE9  41                 	db	65
   390  00FEEA  41                 	db	65
   391  00FEEB  41                 	db	65
   392  00FEEC  7F                 	db	127
   393  00FEED  04                 	db	4
   394  00FEEE  02                 	db	2
   395  00FEEF  01                 	db	1
   396  00FEF0  02                 	db	2
   397  00FEF1  04                 	db	4
   398  00FEF2  40                 	db	64
   399  00FEF3  40                 	db	64
   400  00FEF4  40                 	db	64
   401  00FEF5  40                 	db	64
   402  00FEF6  40                 	db	64
   403  00FEF7  00                 	db	0
   404  00FEF8  03                 	db	3
   405  00FEF9  07                 	db	7
   406  00FEFA  08                 	db	8
   407  00FEFB  00                 	db	0
   408  00FEFC  20                 	db	32
   409  00FEFD  54                 	db	84
   410  00FEFE  54                 	db	84
   411  00FEFF  78                 	db	120
   412  00FF00  40                 	db	64
   413  00FF01  7F                 	db	127
   414  00FF02  28                 	db	40
   415  00FF03  44                 	db	68
   416  00FF04  44                 	db	68
   417  00FF05  38                 	db	56
   418  00FF06  38                 	db	56
   419  00FF07  44                 	db	68
   420  00FF08  44                 	db	68
   421  00FF09  44                 	db	68
   422  00FF0A  28                 	db	40
   423  00FF0B  38                 	db	56
   424  00FF0C  44                 	db	68
   425  00FF0D  44                 	db	68
   426  00FF0E  28                 	db	40
   427  00FF0F  7F                 	db	127
   428  00FF10  38                 	db	56
   429  00FF11  54                 	db	84
   430  00FF12  54                 	db	84
   431  00FF13  54                 	db	84
   432  00FF14  18                 	db	24
   433  00FF15  00                 	db	0
   434  00FF16  08                 	db	8
   435  00FF17  7E                 	db	126
   436  00FF18  09                 	db	9
   437  00FF19  02                 	db	2
   438  00FF1A  18                 	db	24
   439  00FF1B  A4                 	db	164
   440  00FF1C  A4                 	db	164
   441  00FF1D  9C                 	db	156
   442  00FF1E  78                 	db	120
   443  00FF1F  7F                 	db	127
   444  00FF20  08                 	db	8
   445  00FF21  04                 	db	4
   446  00FF22  04                 	db	4
   447  00FF23  78                 	db	120
   448  00FF24  00                 	db	0
   449  00FF25  44                 	db	68
   450  00FF26  7D                 	db	125
   451  00FF27  40                 	db	64
   452  00FF28  00                 	db	0
   453  00FF29  20                 	db	32
   454  00FF2A  40                 	db	64
   455  00FF2B  40                 	db	64
   456  00FF2C  3D                 	db	61
   457  00FF2D  00                 	db	0
   458  00FF2E  7F                 	db	127
   459  00FF2F  10                 	db	16
   460  00FF30  28                 	db	40
   461  00FF31  44                 	db	68
   462  00FF32  00                 	db	0
   463  00FF33  00                 	db	0
   464  00FF34  41                 	db	65
   465  00FF35  7F                 	db	127
   466  00FF36  40                 	db	64
   467  00FF37  00                 	db	0
   468  00FF38  7C                 	db	124
   469  00FF39  04                 	db	4
   470  00FF3A  78                 	db	120
   471  00FF3B  04                 	db	4
   472  00FF3C  78                 	db	120
   473  00FF3D  7C                 	db	124
   474  00FF3E  08                 	db	8
   475  00FF3F  04                 	db	4
   476  00FF40  04                 	db	4
   477  00FF41  78                 	db	120
   478  00FF42  38                 	db	56
   479  00FF43  44                 	db	68
   480  00FF44  44                 	db	68
   481  00FF45  44                 	db	68
   482  00FF46  38                 	db	56
   483  00FF47  FC                 	db	252
   484  00FF48  18                 	db	24
   485  00FF49  24                 	db	36
   486  00FF4A  24                 	db	36
   487  00FF4B  18                 	db	24
   488  00FF4C  18                 	db	24
   489  00FF4D  24                 	db	36
   490  00FF4E  24                 	db	36
   491  00FF4F  18                 	db	24
   492  00FF50  FC                 	db	252
   493  00FF51  7C                 	db	124
   494  00FF52  08                 	db	8
   495  00FF53  04                 	db	4
   496  00FF54  04                 	db	4
   497  00FF55  08                 	db	8
   498  00FF56  48                 	db	72
   499  00FF57  54                 	db	84
   500  00FF58  54                 	db	84
   501  00FF59  54                 	db	84
   502  00FF5A  24                 	db	36
   503  00FF5B  04                 	db	4
   504  00FF5C  04                 	db	4
   505  00FF5D  3F                 	db	63
   506  00FF5E  44                 	db	68
   507  00FF5F  24                 	db	36
   508  00FF60  3C                 	db	60
   509  00FF61  40                 	db	64
   510  00FF62  40                 	db	64
   511  00FF63  20                 	db	32
   512  00FF64  7C                 	db	124
   513  00FF65  1C                 	db	28
   514  00FF66  20                 	db	32
   515  00FF67  40                 	db	64
   516  00FF68  20                 	db	32
   517  00FF69  1C                 	db	28
   518  00FF6A  3C                 	db	60
   519  00FF6B  40                 	db	64
   520  00FF6C  30                 	db	48
   521  00FF6D  40                 	db	64
   522  00FF6E  3C                 	db	60
   523  00FF6F  44                 	db	68
   524  00FF70  28                 	db	40
   525  00FF71  10                 	db	16
   526  00FF72  28                 	db	40
   527  00FF73  44                 	db	68
   528  00FF74  4C                 	db	76
   529  00FF75  90                 	db	144
   530  00FF76  90                 	db	144
   531  00FF77  90                 	db	144
   532  00FF78  7C                 	db	124
   533  00FF79  44                 	db	68
   534  00FF7A  64                 	db	100
   535  00FF7B  54                 	db	84
   536  00FF7C  4C                 	db	76
   537  00FF7D  44                 	db	68
   538  00FF7E  00                 	db	0
   539  00FF7F  08                 	db	8
   540  00FF80  36                 	db	54
   541  00FF81  41                 	db	65
   542  00FF82  00                 	db	0
   543  00FF83  00                 	db	0
   544  00FF84  00                 	db	0
   545  00FF85  77                 	db	119
   546  00FF86  00                 	db	0
   547  00FF87  00                 	db	0
   548  00FF88  00                 	db	0
   549  00FF89  41                 	db	65
   550  00FF8A  36                 	db	54
   551  00FF8B  08                 	db	8
   552  00FF8C  00                 	db	0
   553  00FF8D  02                 	db	2
   554  00FF8E  01                 	db	1
   555  00FF8F  02                 	db	2
   556  00FF90  04                 	db	4
   557  00FF91  02                 	db	2
   558  00FF92                     __end_of_font2:
   559                           	opt stack 0
   560  00FF92                     _dpowers:
   561                           	opt stack 0
   562  00FF92  0001               	dw	1
   563  00FF94  000A               	dw	10
   564  00FF96  0064               	dw	100
   565  00FF98  03E8               	dw	1000
   566  00FF9A  2710               	dw	10000
   567  00FF9C                     __end_of_dpowers:
   568                           	opt stack 0
   569  00FF9C                     _hexpowers:
   570                           	opt stack 0
   571  00FF9C  0001               	dw	1
   572  00FF9E  0010               	dw	16
   573  00FFA0  0100               	dw	256
   574  00FFA2  1000               	dw	4096
   575  00FFA4                     __end_of_hexpowers:
   576                           	opt stack 0
   577  0000                     _ADCON1	set	4033
   578  0000                     _INTCON2bits	set	4081
   579  0000                     _INTCONbits	set	4082
   580  0000                     _OSCCON	set	4051
   581  0000                     _PIE1bits	set	3997
   582  0000                     _PIR1bits	set	3998
   583  0000                     _PIR2bits	set	4001
   584  0000                     _PORTCbits	set	3970
   585  0000                     _PORTDbits	set	3971
   586  0000                     _PORTEbits	set	3972
   587  0000                     _RCSTA	set	4011
   588  0000                     _RCSTAbits	set	4011
   589  0000                     _SPBRG	set	4015
   590  0000                     _SPBRGH	set	4016
   591  0000                     _SSPBUF	set	4041
   592  0000                     _SSPCON1	set	4038
   593  0000                     _SSPSTAT	set	4039
   594  0000                     _SSPSTATbits	set	4039
   595  0000                     _T0CON	set	4053
   596  0000                     _T0CONbits	set	4053
   597  0000                     _T1CON	set	4045
   598  0000                     _T1CONbits	set	4045
   599  0000                     _T3CON	set	4017
   600  0000                     _T3CONbits	set	4017
   601  0000                     _TMR0H	set	4055
   602  0000                     _TMR0L	set	4054
   603  0000                     _TMR1H	set	4047
   604  0000                     _TMR1L	set	4046
   605  0000                     _TMR3H	set	4019
   606  0000                     _TMR3L	set	4018
   607  0000                     _TRISA	set	3986
   608  0000                     _TRISB	set	3987
   609  0000                     _TRISC	set	3988
   610  0000                     _TRISCbits	set	3988
   611  0000                     _TRISD	set	3989
   612  0000                     _TRISE	set	3990
   613  0000                     _TXREG	set	4013
   614  0000                     _TXSTA	set	4012
   615  0000                     _TXSTAbits	set	4012
   616  0000                     _RBPU	set	32655
   617  0000                     _TRMT	set	32097
   618  00FFA4                     STR_2:
   619  00FFA4  20                 	db	32
   620  00FFA5  54                 	db	84	;'T'
   621  00FFA6  65                 	db	101	;'e'
   622  00FFA7  6D                 	db	109	;'m'
   623  00FFA8  70                 	db	112	;'p'
   624  00FFA9  65                 	db	101	;'e'
   625  00FFAA  72                 	db	114	;'r'
   626  00FFAB  61                 	db	97	;'a'
   627  00FFAC  74                 	db	116	;'t'
   628  00FFAD  75                 	db	117	;'u'
   629  00FFAE  72                 	db	114	;'r'
   630  00FFAF  65                 	db	101	;'e'
   631  00FFB0  20                 	db	32
   632  00FFB1  3D                 	db	61	;'='
   633  00FFB2  20                 	db	32
   634  00FFB3  25                 	db	37
   635  00FFB4  64                 	db	100	;'d'
   636  00FFB5  20                 	db	32
   637  00FFB6  64                 	db	100	;'d'
   638  00FFB7  65                 	db	101	;'e'
   639  00FFB8  67                 	db	103	;'g'
   640  00FFB9  72                 	db	114	;'r'
   641  00FFBA  65                 	db	101	;'e'
   642  00FFBB  65                 	db	101	;'e'
   643  00FFBC  73                 	db	115	;'s'
   644  00FFBD  43                 	db	67	;'C'
   645  00FFBE  20                 	db	32
   646  00FFBF  3D                 	db	61	;'='
   647  00FFC0  20                 	db	32
   648  00FFC1  25                 	db	37
   649  00FFC2  64                 	db	100	;'d'
   650  00FFC3  20                 	db	32
   651  00FFC4  64                 	db	100	;'d'
   652  00FFC5  65                 	db	101	;'e'
   653  00FFC6  67                 	db	103	;'g'
   654  00FFC7  72                 	db	114	;'r'
   655  00FFC8  65                 	db	101	;'e'
   656  00FFC9  65                 	db	101	;'e'
   657  00FFCA  73                 	db	115	;'s'
   658  00FFCB  46                 	db	70	;'F'
   659  00FFCC  0D                 	db	13
   660  00FFCD  0A                 	db	10
   661  00FFCE  00                 	db	0
   662  00FFCF                     STR_1:
   663  00FFCF  25                 	db	37
   664  00FFD0  30                 	db	48	;'0'
   665  00FFD1  32                 	db	50	;'2'
   666  00FFD2  78                 	db	120	;'x'
   667  00FFD3  3A                 	db	58	;':'
   668  00FFD4  25                 	db	37
   669  00FFD5  30                 	db	48	;'0'
   670  00FFD6  32                 	db	50	;'2'
   671  00FFD7  78                 	db	120	;'x'
   672  00FFD8  3A                 	db	58	;':'
   673  00FFD9  25                 	db	37
   674  00FFDA  30                 	db	48	;'0'
   675  00FFDB  32                 	db	50	;'2'
   676  00FFDC  78                 	db	120	;'x'
   677  00FFDD  20                 	db	32
   678  00FFDE  25                 	db	37
   679  00FFDF  30                 	db	48	;'0'
   680  00FFE0  32                 	db	50	;'2'
   681  00FFE1  78                 	db	120	;'x'
   682  00FFE2  2F                 	db	47
   683  00FFE3  25                 	db	37
   684  00FFE4  30                 	db	48	;'0'
   685  00FFE5  32                 	db	50	;'2'
   686  00FFE6  78                 	db	120	;'x'
   687  00FFE7  2F                 	db	47
   688  00FFE8  25                 	db	37
   689  00FFE9  30                 	db	48	;'0'
   690  00FFEA  32                 	db	50	;'2'
   691  00FFEB  78                 	db	120	;'x'
   692  00FFEC  00                 	db	0
   693  00FFED                     STR_3:
   694  00FFED  30                 	db	48	;'0'
   695  00FFEE  31                 	db	49	;'1'
   696  00FFEF  32                 	db	50	;'2'
   697  00FFF0  33                 	db	51	;'3'
   698  00FFF1  34                 	db	52	;'4'
   699  00FFF2  35                 	db	53	;'5'
   700  00FFF3  36                 	db	54	;'6'
   701  00FFF4  37                 	db	55	;'7'
   702  00FFF5  38                 	db	56	;'8'
   703  00FFF6  39                 	db	57	;'9'
   704  00FFF7  61                 	db	97	;'a'
   705  00FFF8  62                 	db	98	;'b'
   706  00FFF9  63                 	db	99	;'c'
   707  00FFFA  64                 	db	100	;'d'
   708  00FFFB  65                 	db	101	;'e'
   709  00FFFC  66                 	db	102	;'f'
   710  00FFFD  00                 	db	0
   711                           
   712                           ; #config settings
   713  00FFFE  00                 	db	0	; dummy byte at the end
   714  0000                     
   715                           	psect	cinit
   716  000952                     __pcinit:
   717                           	opt stack 0
   718  000952                     start_initialization:
   719                           	opt stack 0
   720  000952                     __initialization:
   721                           	opt stack 0
   722                           
   723                           ; Clear objects allocated to BANK0 (31 bytes)
   724  000952  EE00  F080         	lfsr	0,__pbssBANK0
   725  000956  0E1F               	movlw	31
   726  000958                     clear_0:
   727  000958  6AEE               	clrf	postinc0,c
   728  00095A  06E8               	decf	wreg,f,c
   729  00095C  E1FD               	bnz	clear_0
   730                           
   731                           ; Clear objects allocated to COMRAM (47 bytes)
   732  00095E  EE00  F032         	lfsr	0,__pbssCOMRAM
   733  000962  0E2F               	movlw	47
   734  000964                     clear_1:
   735  000964  6AEE               	clrf	postinc0,c
   736  000966  06E8               	decf	wreg,f,c
   737  000968  E1FD               	bnz	clear_1
   738                           
   739                           ; Initialize objects allocated to COMRAM (12 bytes)
   740                           ; load TBLPTR registers with __pidataCOMRAM
   741  00096A  0E8E               	movlw	low __pidataCOMRAM
   742  00096C  6EF6               	movwf	tblptrl,c
   743  00096E  0E0B               	movlw	high __pidataCOMRAM
   744  000970  6EF7               	movwf	tblptrh,c
   745  000972  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   746  000974  6EF8               	movwf	tblptru,c
   747  000976  EE00  F061         	lfsr	0,__pdataCOMRAM
   748  00097A  EE10 F00C          	lfsr	1,12
   749  00097E                     copy_data0:
   750  00097E  0009               	tblrd		*+
   751  000980  CFF5 FFEE          	movff	tablat,postinc0
   752  000984  50E5               	movf	postdec1,w,c
   753  000986  50E1               	movf	fsr1l,w,c
   754  000988  E1FA               	bnz	copy_data0
   755  00098A                     end_of_initialization:
   756                           	opt stack 0
   757  00098A                     __end_of__initialization:
   758                           	opt stack 0
   759  00098A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   760  00098C  6EF8               	movwf	tblptru,c
   761  00098E  0100               	movlb	0
   762  000990  EFAB  F002         	goto	_main	;jump to C main() function
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           postdec1	equ	0xFE5
   770                           fsr1l	equ	0xFE1
   771                           
   772                           	psect	bssCOMRAM
   773  000032                     __pbssCOMRAM:
   774                           	opt stack 0
   775  000032                     _Nec_code:
   776                           	opt stack 0
   777  000032                     	ds	4
   778  000036                     _Time_Elapsed:
   779                           	opt stack 0
   780  000036                     	ds	2
   781  000038                     _nbr:
   782                           	opt stack 0
   783  000038                     	ds	2
   784  00003A                     _nec_ok:
   785                           	opt stack 0
   786  00003A                     	ds	2
   787  00003C                     _txt:
   788                           	opt stack 0
   789  00003C                     	ds	2
   790  00003E                     _Address:
   791                           	opt stack 0
   792  00003E                     	ds	1
   793  00003F                     _Cmd:
   794                           	opt stack 0
   795  00003F                     	ds	1
   796  000040                     _Device:
   797                           	opt stack 0
   798  000040                     	ds	1
   799  000041                     _Nec_code1:
   800                           	opt stack 0
   801  000041                     	ds	1
   802  000042                     _Nec_state:
   803                           	opt stack 0
   804  000042                     	ds	1
   805  000043                     _TempSecond:
   806                           	opt stack 0
   807  000043                     	ds	1
   808  000044                     __tft_type:
   809                           	opt stack 0
   810  000044                     	ds	1
   811  000045                     _alarm_date:
   812                           	opt stack 0
   813  000045                     	ds	1
   814  000046                     _alarm_hour:
   815                           	opt stack 0
   816  000046                     	ds	1
   817  000047                     _alarm_minute:
   818                           	opt stack 0
   819  000047                     	ds	1
   820  000048                     _alarm_second:
   821                           	opt stack 0
   822  000048                     	ds	1
   823  000049                     _bit_count:
   824                           	opt stack 0
   825  000049                     	ds	1
   826  00004A                     _colstart:
   827                           	opt stack 0
   828  00004A                     	ds	1
   829  00004B                     _day:
   830                           	opt stack 0
   831  00004B                     	ds	1
   832  00004C                     _dow:
   833                           	opt stack 0
   834  00004C                     	ds	1
   835  00004D                     _found:
   836                           	opt stack 0
   837  00004D                     	ds	1
   838  00004E                     _hour:
   839                           	opt stack 0
   840  00004E                     	ds	1
   841  00004F                     _i:
   842                           	opt stack 0
   843  00004F                     	ds	1
   844  000050                     _minute:
   845                           	opt stack 0
   846  000050                     	ds	1
   847  000051                     _month:
   848                           	opt stack 0
   849  000051                     	ds	1
   850  000052                     _prev_second:
   851                           	opt stack 0
   852  000052                     	ds	1
   853  000053                     _rowstart:
   854                           	opt stack 0
   855  000053                     	ds	1
   856  000054                     _second:
   857                           	opt stack 0
   858  000054                     	ds	1
   859  000055                     _setup_alarm_hour:
   860                           	opt stack 0
   861  000055                     	ds	1
   862  000056                     _setup_alarm_minute:
   863                           	opt stack 0
   864  000056                     	ds	1
   865  000057                     _setup_alarm_second:
   866                           	opt stack 0
   867  000057                     	ds	1
   868  000058                     _setup_day:
   869                           	opt stack 0
   870  000058                     	ds	1
   871  000059                     _setup_hour:
   872                           	opt stack 0
   873  000059                     	ds	1
   874  00005A                     _setup_minute:
   875                           	opt stack 0
   876  00005A                     	ds	1
   877  00005B                     _setup_month:
   878                           	opt stack 0
   879  00005B                     	ds	1
   880  00005C                     _setup_second:
   881                           	opt stack 0
   882  00005C                     	ds	1
   883  00005D                     _setup_year:
   884                           	opt stack 0
   885  00005D                     	ds	1
   886  00005E                     _tempC:
   887                           	opt stack 0
   888  00005E                     	ds	1
   889  00005F                     _tempF:
   890                           	opt stack 0
   891  00005F                     	ds	1
   892  000060                     _year:
   893                           	opt stack 0
   894  000060                     	ds	1
   895                           tblptru	equ	0xFF8
   896                           tblptrh	equ	0xFF7
   897                           tblptrl	equ	0xFF6
   898                           tablat	equ	0xFF5
   899                           postinc0	equ	0xFEE
   900                           wreg	equ	0xFE8
   901                           postdec1	equ	0xFE5
   902                           fsr1l	equ	0xFE1
   903                           
   904                           	psect	dataCOMRAM
   905  000061                     __pdataCOMRAM:
   906                           	opt stack 0
   907  000061                     _Display_D1:
   908                           	opt stack 0
   909  000061                     	ds	10
   910  00006B                     _tempSecond:
   911                           	opt stack 0
   912  00006B                     	ds	1
   913  00006C                     _wrap:
   914                           	opt stack 0
   915  00006C                     	ds	1
   916                           tblptru	equ	0xFF8
   917                           tblptrh	equ	0xFF7
   918                           tblptrl	equ	0xFF6
   919                           tablat	equ	0xFF5
   920                           postinc0	equ	0xFEE
   921                           wreg	equ	0xFE8
   922                           postdec1	equ	0xFE5
   923                           fsr1l	equ	0xFE1
   924                           
   925                           	psect	bssBANK0
   926  000080                     __pbssBANK0:
   927                           	opt stack 0
   928  000080                     _buffer:
   929                           	opt stack 0
   930  000080                     	ds	31
   931                           tblptru	equ	0xFF8
   932                           tblptrh	equ	0xFF7
   933                           tblptrl	equ	0xFF6
   934                           tablat	equ	0xFF5
   935                           postinc0	equ	0xFEE
   936                           wreg	equ	0xFE8
   937                           postdec1	equ	0xFE5
   938                           fsr1l	equ	0xFE1
   939                           
   940                           	psect	cstackBANK0
   941  00009F                     __pcstackBANK0:
   942                           	opt stack 0
   943  00009F                     printf@idx:
   944                           	opt stack 0
   945                           
   946                           ; 1 bytes @ 0x0
   947  00009F                     	ds	1
   948  0000A0                     printf@ap:
   949                           	opt stack 0
   950                           
   951                           ; 2 bytes @ 0x1
   952  0000A0                     	ds	2
   953  0000A2                     printf@prec:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x3
   957  0000A2                     	ds	1
   958  0000A3                     printf@val:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x4
   962  0000A3                     	ds	2
   963  0000A5                     printf@flag:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x6
   967  0000A5                     	ds	1
   968  0000A6                     printf@width:
   969                           	opt stack 0
   970                           
   971                           ; 2 bytes @ 0x7
   972  0000A6                     	ds	2
   973  0000A8                     printf@c:
   974                           	opt stack 0
   975                           
   976                           ; 1 bytes @ 0x9
   977  0000A8                     	ds	1
   978                           tblptru	equ	0xFF8
   979                           tblptrh	equ	0xFF7
   980                           tblptrl	equ	0xFF6
   981                           tablat	equ	0xFF5
   982                           postinc0	equ	0xFEE
   983                           wreg	equ	0xFE8
   984                           postdec1	equ	0xFE5
   985                           fsr1l	equ	0xFE1
   986                           
   987                           	psect	cstackCOMRAM
   988  000001                     __pcstackCOMRAM:
   989                           	opt stack 0
   990  000001                     ??_INT0_isr:
   991  000001                     
   992                           ; 1 bytes @ 0x0
   993  000001                     	ds	2
   994  000003                     ??_chkisr:
   995                           
   996                           ; 0 bytes @ 0x2
   997  000003                     	ds	14
   998  000011                     ??_isdigit:
   999  000011                     ?___wmul:
  1000                           	opt stack 0
  1001  000011                     ?___lwdiv:
  1002                           	opt stack 0
  1003  000011                     I2C_Read@ack:
  1004                           	opt stack 0
  1005  000011                     I2C_Write@outByte:
  1006                           	opt stack 0
  1007  000011                     putch@c:
  1008                           	opt stack 0
  1009  000011                     OpenUSART@spbrg:
  1010                           	opt stack 0
  1011  000011                     ___wmul@multiplier:
  1012                           	opt stack 0
  1013  000011                     ___lwdiv@dividend:
  1014                           	opt stack 0
  1015  000011                     I2C_Init@c:
  1016                           	opt stack 0
  1017                           
  1018                           ; 4 bytes @ 0x10
  1019  000011                     	ds	1
  1020  000012                     I2C_Read@n:
  1021                           	opt stack 0
  1022  000012                     I2C_Write@n:
  1023                           	opt stack 0
  1024  000012                     _isdigit$1950:
  1025                           	opt stack 0
  1026                           
  1027                           ; 1 bytes @ 0x11
  1028  000012                     	ds	1
  1029  000013                     I2C_Read@inByte:
  1030                           	opt stack 0
  1031  000013                     I2C_Write_Cmd_Only@Cmd:
  1032                           	opt stack 0
  1033  000013                     I2C_Write_Cmd_Write_Data@Cmd:
  1034                           	opt stack 0
  1035  000013                     DS3231_Setup_Time@Device:
  1036                           	opt stack 0
  1037  000013                     OpenUSART@config:
  1038                           	opt stack 0
  1039  000013                     isdigit@c:
  1040                           	opt stack 0
  1041  000013                     ___wmul@multiplicand:
  1042                           	opt stack 0
  1043  000013                     ___lwdiv@divisor:
  1044                           	opt stack 0
  1045                           
  1046                           ; 2 bytes @ 0x12
  1047  000013                     	ds	1
  1048  000014                     ?_DS1621_Read_Temp:
  1049                           	opt stack 0
  1050  000014                     I2C_Write_Cmd_Only@Device:
  1051                           	opt stack 0
  1052  000014                     I2C_Write_Cmd_Write_Data@Data_Out:
  1053                           	opt stack 0
  1054  000014                     DS3231_Read_Time@Address:
  1055                           	opt stack 0
  1056  000014                     DS3231_Setup_Time@Address:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0x13
  1060  000014                     	ds	1
  1061  000015                     I2C_Write_Cmd_Write_Data@Device:
  1062                           	opt stack 0
  1063  000015                     DS3231_Read_Time@Device:
  1064                           	opt stack 0
  1065  000015                     ___lwdiv@counter:
  1066                           	opt stack 0
  1067  000015                     ___wmul@product:
  1068                           	opt stack 0
  1069                           
  1070                           ; 2 bytes @ 0x14
  1071  000015                     	ds	1
  1072  000016                     DS1621_Init@Device:
  1073                           	opt stack 0
  1074  000016                     DS1621_Read_Temp@Cmd:
  1075                           	opt stack 0
  1076  000016                     ___lwdiv@quotient:
  1077                           	opt stack 0
  1078                           
  1079                           ; 2 bytes @ 0x15
  1080  000016                     	ds	1
  1081  000017                     ?___awdiv:
  1082                           	opt stack 0
  1083  000017                     DS1621_Read_Temp@Data_Ret:
  1084                           	opt stack 0
  1085  000017                     ___awdiv@dividend:
  1086                           	opt stack 0
  1087                           
  1088                           ; 2 bytes @ 0x16
  1089  000017                     	ds	1
  1090  000018                     ?___lwmod:
  1091                           	opt stack 0
  1092  000018                     DS1621_Read_Temp@Device:
  1093                           	opt stack 0
  1094  000018                     ___lwmod@dividend:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0x17
  1098  000018                     	ds	1
  1099  000019                     ___awdiv@divisor:
  1100                           	opt stack 0
  1101                           
  1102                           ; 2 bytes @ 0x18
  1103  000019                     	ds	1
  1104  00001A                     ___lwmod@divisor:
  1105                           	opt stack 0
  1106                           
  1107                           ; 2 bytes @ 0x19
  1108  00001A                     	ds	1
  1109  00001B                     ___awdiv@counter:
  1110                           	opt stack 0
  1111                           
  1112                           ; 1 bytes @ 0x1A
  1113  00001B                     	ds	1
  1114  00001C                     ___awdiv@sign:
  1115                           	opt stack 0
  1116  00001C                     ___lwmod@counter:
  1117                           	opt stack 0
  1118                           
  1119                           ; 1 bytes @ 0x1B
  1120  00001C                     	ds	1
  1121  00001D                     ?_printf:
  1122                           	opt stack 0
  1123  00001D                     printf@f:
  1124                           	opt stack 0
  1125  00001D                     ___awdiv@quotient:
  1126                           	opt stack 0
  1127                           
  1128                           ; 2 bytes @ 0x1C
  1129  00001D                     	ds	14
  1130  00002B                     ??_printf:
  1131                           
  1132                           ; 0 bytes @ 0x2A
  1133  00002B                     	ds	4
  1134  00002F                     main@U:
  1135                           	opt stack 0
  1136                           
  1137                           ; 1 bytes @ 0x2E
  1138  00002F                     	ds	1
  1139  000030                     main@tempC:
  1140                           	opt stack 0
  1141                           
  1142                           ; 1 bytes @ 0x2F
  1143  000030                     	ds	1
  1144  000031                     main@tempF:
  1145                           	opt stack 0
  1146                           
  1147                           ; 1 bytes @ 0x30
  1148  000031                     	ds	1
  1149                           tblptru	equ	0xFF8
  1150                           tblptrh	equ	0xFF7
  1151                           tblptrl	equ	0xFF6
  1152                           tablat	equ	0xFF5
  1153                           postinc0	equ	0xFEE
  1154                           wreg	equ	0xFE8
  1155                           postdec1	equ	0xFE5
  1156                           fsr1l	equ	0xFE1
  1157                           
  1158 ;;
  1159 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1160 ;;
  1161 ;; *************** function _main *****************
  1162 ;; Defined at:
  1163 ;;		line 148 in file "Lab10p3.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  tempF           1   48[COMRAM] char 
  1168 ;;  tempC           1   47[COMRAM] char 
  1169 ;;  U               1   46[COMRAM] char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;		None               void
  1172 ;; Registers used:
  1173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;Total ram usage:        3 bytes
  1184 ;; Hardware stack levels required when called:    8
  1185 ;; This function calls:
  1186 ;;		_DS1621_Read_Temp
  1187 ;;		_DS3231_Read_Time
  1188 ;;		_DS3231_Setup_Time
  1189 ;;		_Do_Init
  1190 ;;		___awdiv
  1191 ;;		___wmul
  1192 ;;		_printf
  1193 ;; This function is called by:
  1194 ;;		Startup code after reset
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text0
  1199  000556                     __ptext0:
  1200                           	opt stack 0
  1201  000556                     _main:
  1202                           	opt stack 23
  1203                           
  1204                           ;Lab10p3.c: 150: Do_Init();
  1205                           
  1206                           ;incstack = 0
  1207  000556  ECCA  F004         	call	_Do_Init	;wreg free
  1208                           
  1209                           ;Lab10p3.c: 152: DS3231_Setup_Time();
  1210  00055A  ECCC  F003         	call	_DS3231_Setup_Time	;wreg free
  1211  00055E                     l520:
  1212                           
  1213                           ;Lab10p3.c: 154: {
  1214                           ;Lab10p3.c: 156: DS3231_Read_Time();
  1215  00055E  ECFF  F003         	call	_DS3231_Read_Time	;wreg free
  1216                           
  1217                           ;Lab10p3.c: 157: if(tempSecond != second)
  1218  000562  5054               	movf	_second,w,c
  1219  000564  186B               	xorwf	_tempSecond,w,c
  1220  000566  B4D8               	btfsc	status,2,c
  1221  000568  D7FA               	goto	l520
  1222                           
  1223                           ;Lab10p3.c: 158: {
  1224                           ;Lab10p3.c: 159: tempSecond = second;
  1225  00056A  C054  F06B         	movff	_second,_tempSecond
  1226                           
  1227                           ;Lab10p3.c: 160: signed char tempC = DS1621_Read_Temp();
  1228  00056E  EC09  F005         	call	_DS1621_Read_Temp	;wreg free
  1229  000572  5014               	movf	?_DS1621_Read_Temp,w,c
  1230  000574  6E30               	movwf	main@tempC,c
  1231                           
  1232                           ;Lab10p3.c: 161: signed char tempF = (tempC * 9 / 5) + 32;
  1233  000576  5030               	movf	main@tempC,w,c
  1234  000578  6E11               	movwf	___wmul@multiplier,c
  1235  00057A  6A12               	clrf	___wmul@multiplier+1,c
  1236  00057C  BE11               	btfsc	___wmul@multiplier,7,c
  1237  00057E  0612               	decf	___wmul@multiplier+1,f,c
  1238  000580  0E00               	movlw	0
  1239  000582  6E14               	movwf	___wmul@multiplicand+1,c
  1240  000584  0E09               	movlw	9
  1241  000586  6E13               	movwf	___wmul@multiplicand,c
  1242  000588  EC3F  F005         	call	___wmul	;wreg free
  1243  00058C  C011  F017         	movff	?___wmul,___awdiv@dividend
  1244  000590  C012  F018         	movff	?___wmul+1,___awdiv@dividend+1
  1245  000594  0E00               	movlw	0
  1246  000596  6E1A               	movwf	___awdiv@divisor+1,c
  1247  000598  0E05               	movlw	5
  1248  00059A  6E19               	movwf	___awdiv@divisor,c
  1249  00059C  EC0B  F003         	call	___awdiv	;wreg free
  1250  0005A0  5017               	movf	?___awdiv,w,c
  1251  0005A2  0F20               	addlw	32
  1252  0005A4  6E31               	movwf	main@tempF,c
  1253                           
  1254                           ;Lab10p3.c: 162: printf ("%02x:%02x:%02x %02x/%02x/%02x",hour,minute,second,month,day,ye
      +                          ar);
  1255  0005A6  0ECF               	movlw	low STR_1
  1256  0005A8  6E1D               	movwf	printf@f,c
  1257  0005AA  0EFF               	movlw	high STR_1
  1258  0005AC  6E1E               	movwf	printf@f+1,c
  1259  0005AE  C04E  F01F         	movff	_hour,?_printf+2
  1260  0005B2  6A20               	clrf	?_printf+3,c
  1261  0005B4  C050  F021         	movff	_minute,?_printf+4
  1262  0005B8  6A22               	clrf	?_printf+5,c
  1263  0005BA  C054  F023         	movff	_second,?_printf+6
  1264  0005BE  6A24               	clrf	?_printf+7,c
  1265  0005C0  C051  F025         	movff	_month,?_printf+8
  1266  0005C4  6A26               	clrf	?_printf+9,c
  1267  0005C6  C04B  F027         	movff	_day,?_printf+10
  1268  0005CA  6A28               	clrf	?_printf+11,c
  1269  0005CC  C060  F029         	movff	_year,?_printf+12
  1270  0005D0  6A2A               	clrf	?_printf+13,c
  1271  0005D2  EC0E  F000         	call	_printf	;wreg free
  1272                           
  1273                           ;Lab10p3.c: 163: printf (" Temperature = %d degreesC = %d degreesF\r\n", tempC, tempF);
  1274  0005D6  0EA4               	movlw	low STR_2
  1275  0005D8  6E1D               	movwf	printf@f,c
  1276  0005DA  0EFF               	movlw	high STR_2
  1277  0005DC  6E1E               	movwf	printf@f+1,c
  1278  0005DE  5030               	movf	main@tempC,w,c
  1279  0005E0  6E1F               	movwf	?_printf+2,c
  1280  0005E2  6A20               	clrf	?_printf+3,c
  1281  0005E4  BE1F               	btfsc	?_printf+2,7,c
  1282  0005E6  0620               	decf	?_printf+3,f,c
  1283  0005E8  5031               	movf	main@tempF,w,c
  1284  0005EA  6E21               	movwf	?_printf+4,c
  1285  0005EC  6A22               	clrf	?_printf+5,c
  1286  0005EE  BE21               	btfsc	?_printf+4,7,c
  1287  0005F0  0622               	decf	?_printf+5,f,c
  1288  0005F2  EC0E  F000         	call	_printf	;wreg free
  1289                           
  1290                           ;Lab10p3.c: 164: signed char U = (int)(tempF/10);
  1291  0005F6  5031               	movf	main@tempF,w,c
  1292  0005F8  6E17               	movwf	___awdiv@dividend,c
  1293  0005FA  6A18               	clrf	___awdiv@dividend+1,c
  1294  0005FC  BE17               	btfsc	___awdiv@dividend,7,c
  1295  0005FE  0618               	decf	___awdiv@dividend+1,f,c
  1296  000600  0E00               	movlw	0
  1297  000602  6E1A               	movwf	___awdiv@divisor+1,c
  1298  000604  0E0A               	movlw	10
  1299  000606  6E19               	movwf	___awdiv@divisor,c
  1300  000608  EC0B  F003         	call	___awdiv	;wreg free
  1301  00060C  5017               	movf	?___awdiv,w,c
  1302  00060E  6E2F               	movwf	main@U,c
  1303  000610  D7A6               	goto	l520
  1304  000612  EF0C  F000         	goto	start
  1305  000616                     __end_of_main:
  1306                           	opt stack 0
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           postinc0	equ	0xFEE
  1312                           wreg	equ	0xFE8
  1313                           postdec1	equ	0xFE5
  1314                           fsr1l	equ	0xFE1
  1315                           status	equ	0xFD8
  1316                           
  1317 ;; *************** function _printf *****************
  1318 ;; Defined at:
  1319 ;;		line 464 in file "E:\XC8\sources\common\doprnt.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  f               2   28[COMRAM] PTR const unsigned char 
  1322 ;;		 -> STR_2(43), STR_1(30), 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  idx             1    0[BANK0 ] unsigned char 
  1325 ;;  tmpval          4    0        struct .
  1326 ;;  cp              3    0        PTR const unsigned char 
  1327 ;;  width           2    7[BANK0 ] int 
  1328 ;;  val             2    4[BANK0 ] unsigned int 
  1329 ;;  ap              2    1[BANK0 ] PTR void [1]
  1330 ;;		 -> ?_printf(2), 
  1331 ;;  len             2    0        unsigned int 
  1332 ;;  c               1    9[BANK0 ] char 
  1333 ;;  flag            1    6[BANK0 ] unsigned char 
  1334 ;;  prec            1    3[BANK0 ] char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  2   28[COMRAM] int 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1344 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Totals:        18      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;Total ram usage:       28 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; Hardware stack levels required when called:    4
  1351 ;; This function calls:
  1352 ;;		___lwdiv
  1353 ;;		___lwmod
  1354 ;;		___wmul
  1355 ;;		_isdigit
  1356 ;;		_putch
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text1
  1363  00001C                     __ptext1:
  1364                           	opt stack 0
  1365  00001C                     _printf:
  1366                           	opt stack 26
  1367                           
  1368                           ;doprnt.c: 466: va_list ap;
  1369                           ;doprnt.c: 499: signed char c;
  1370                           ;doprnt.c: 501: int width;
  1371                           ;doprnt.c: 506: signed char prec;
  1372                           ;doprnt.c: 508: unsigned char flag;
  1373                           ;doprnt.c: 523: union {
  1374                           ;doprnt.c: 524: unsigned long vd;
  1375                           ;doprnt.c: 525: double integ;
  1376                           ;doprnt.c: 526: } tmpval;
  1377                           ;doprnt.c: 528: unsigned int val;
  1378                           ;doprnt.c: 529: unsigned len;
  1379                           ;doprnt.c: 530: const char * cp;
  1380                           ;doprnt.c: 533: *ap = __va_start();
  1381                           
  1382                           ;incstack = 0
  1383  00001C  0E1F               	movlw	low (?_printf+2)
  1384  00001E  0100               	movlb	0	; () banked
  1385  000020  6FA0               	movwf	printf@ap& (0+255),b
  1386  000022  0E00               	movlw	high (?_printf+2)
  1387  000024  0100               	movlb	0	; () banked
  1388  000026  6FA1               	movwf	(printf@ap+1)& (0+255),b
  1389                           
  1390                           ;doprnt.c: 536: while(c = *f++) {
  1391  000028  D1D6               	goto	l3673
  1392  00002A                     l3547:
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;doprnt.c: 538: if(c != '%')
  1396  00002A  0E25               	movlw	37
  1397  00002C  0100               	movlb	0	; () banked
  1398  00002E  19A8               	xorwf	printf@c& (0+255),w,b
  1399  000030  B4D8               	btfsc	status,2,c
  1400  000032  D005               	goto	l3551
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;doprnt.c: 540: {
  1404                           ;doprnt.c: 541: (putch(c) );
  1405  000034  0100               	movlb	0	; () banked
  1406  000036  51A8               	movf	printf@c& (0+255),w,b
  1407  000038  ECC0  F005         	call	_putch
  1408                           
  1409                           ;doprnt.c: 542: continue;
  1410  00003C  D1CC               	goto	l3673
  1411  00003E                     l3551:
  1412                           
  1413                           ;doprnt.c: 543: }
  1414                           ;doprnt.c: 546: width = 0;
  1415  00003E  0E00               	movlw	0
  1416  000040  0100               	movlb	0	; () banked
  1417  000042  6FA7               	movwf	(printf@width+1)& (0+255),b
  1418  000044  0E00               	movlw	0
  1419  000046  6FA6               	movwf	printf@width& (0+255),b
  1420                           
  1421                           ;doprnt.c: 548: flag = 0;
  1422  000048  0E00               	movlw	0
  1423  00004A  0100               	movlb	0	; () banked
  1424  00004C  6FA5               	movwf	printf@flag& (0+255),b
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;doprnt.c: 551: switch(*f) {
  1428                           
  1429                           ;doprnt.c: 550: for(;;) {
  1430  00004E  D006               	goto	l3557
  1431  000050                     l3553:
  1432                           
  1433                           ;doprnt.c: 580: flag |= 0x04;
  1434  000050  0100               	movlb	0	; () banked
  1435  000052  85A5               	bsf	printf@flag& (0+255),2,b
  1436                           
  1437                           ;doprnt.c: 581: f++;
  1438  000054  4A1D               	infsnz	printf@f,f,c
  1439  000056  2A1E               	incf	printf@f+1,f,c
  1440                           
  1441                           ;doprnt.c: 582: continue;
  1442  000058  D001               	goto	l3557
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;doprnt.c: 584: }
  1446  00005A  D00B               	goto	l3559
  1447  00005C                     l3557:
  1448  00005C  C01D  FFF6         	movff	printf@f,tblptrl
  1449  000060  C01E  FFF7         	movff	printf@f+1,tblptrh
  1450  000064                     	if	0	;tblptru may be non-zero
  1451  000064                     	endif
  1452  000064                     	if	0	;tblptru may be non-zero
  1453  000064                     	endif
  1454  000064  0008               	tblrd		*
  1455  000066  50F5               	movf	tablat,w,c
  1456                           
  1457                           ; Switch size 1, requested type "space"
  1458                           ; Number of cases is 1, Range of values is 48 to 48
  1459                           ; switch strategies available:
  1460                           ; Name         Instructions Cycles
  1461                           ; simple_byte            4     3 (average)
  1462                           ;	Chosen strategy is simple_byte
  1463  000068  0A30               	xorlw	48	; case 48
  1464  00006A  B4D8               	btfsc	status,2,c
  1465  00006C  D7F1               	goto	l3553
  1466                           
  1467                           ;doprnt.c: 585: break;
  1468  00006E  D001               	goto	l3559
  1469                           
  1470                           ;doprnt.c: 586: }
  1471  000070  D7F5               	goto	l3557
  1472  000072                     l3559:
  1473                           
  1474                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1475  000072  C01D  FFF6         	movff	printf@f,tblptrl
  1476  000076  C01E  FFF7         	movff	printf@f+1,tblptrh
  1477  00007A                     	if	0	;tblptru may be non-zero
  1478  00007A                     	endif
  1479  00007A                     	if	0	;tblptru may be non-zero
  1480  00007A                     	endif
  1481  00007A  0008               	tblrd		*
  1482  00007C  50F5               	movf	tablat,w,c
  1483  00007E  EC53  F005         	call	_isdigit
  1484  000082  A0D8               	btfss	status,0,c
  1485  000084  D03F               	goto	l3575
  1486                           
  1487                           ;doprnt.c: 598: width = 0;
  1488  000086  0E00               	movlw	0
  1489  000088  0100               	movlb	0	; () banked
  1490  00008A  6FA7               	movwf	(printf@width+1)& (0+255),b
  1491  00008C  0E00               	movlw	0
  1492  00008E  6FA6               	movwf	printf@width& (0+255),b
  1493  000090  D000               	goto	l3563
  1494  000092                     l3563:
  1495                           
  1496                           ;doprnt.c: 600: width *= 10;
  1497  000092  C0A6  F011         	movff	printf@width,___wmul@multiplier
  1498  000096  C0A7  F012         	movff	printf@width+1,___wmul@multiplier+1
  1499  00009A  0E00               	movlw	0
  1500  00009C  6E14               	movwf	___wmul@multiplicand+1,c
  1501  00009E  0E0A               	movlw	10
  1502  0000A0  6E13               	movwf	___wmul@multiplicand,c
  1503  0000A2  EC3F  F005         	call	___wmul	;wreg free
  1504  0000A6  C011  F0A6         	movff	?___wmul,printf@width
  1505  0000AA  C012  F0A7         	movff	?___wmul+1,printf@width+1
  1506                           
  1507                           ;doprnt.c: 601: width += *f++ - '0';
  1508  0000AE  0ED0               	movlw	208
  1509  0000B0  6E2B               	movwf	??_printf& (0+255),c
  1510  0000B2  0EFF               	movlw	255
  1511  0000B4  6E2C               	movwf	(??_printf+1)& (0+255),c
  1512  0000B6  C01D  FFF6         	movff	printf@f,tblptrl
  1513  0000BA  C01E  FFF7         	movff	printf@f+1,tblptrh
  1514  0000BE                     	if	0	;tblptru may be non-zero
  1515  0000BE                     	endif
  1516  0000BE                     	if	0	;tblptru may be non-zero
  1517  0000BE                     	endif
  1518  0000BE  0008               	tblrd		*
  1519  0000C0  50F5               	movf	tablat,w,c
  1520  0000C2  6E2D               	movwf	(??_printf+2)& (0+255),c
  1521  0000C4  6A2E               	clrf	(??_printf+3)& (0+255),c
  1522  0000C6  502B               	movf	??_printf,w,c
  1523  0000C8  262D               	addwf	??_printf+2,f,c
  1524  0000CA  502C               	movf	??_printf+1,w,c
  1525  0000CC  222E               	addwfc	??_printf+3,f,c
  1526  0000CE  502D               	movf	??_printf+2,w,c
  1527  0000D0  0100               	movlb	0	; () banked
  1528  0000D2  27A6               	addwf	printf@width& (0+255),f,b
  1529  0000D4  502E               	movf	??_printf+3,w,c
  1530  0000D6  0100               	movlb	0	; () banked
  1531  0000D8  23A7               	addwfc	(printf@width+1)& (0+255),f,b
  1532                           
  1533                           ; BSR set to: 0
  1534  0000DA  4A1D               	infsnz	printf@f,f,c
  1535  0000DC  2A1E               	incf	printf@f+1,f,c
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1539  0000DE  C01D  FFF6         	movff	printf@f,tblptrl
  1540  0000E2  C01E  FFF7         	movff	printf@f+1,tblptrh
  1541  0000E6                     	if	0	;tblptru may be non-zero
  1542  0000E6                     	endif
  1543  0000E6                     	if	0	;tblptru may be non-zero
  1544  0000E6                     	endif
  1545  0000E6  0008               	tblrd		*
  1546  0000E8  50F5               	movf	tablat,w,c
  1547  0000EA  EC53  F005         	call	_isdigit
  1548  0000EE  A0D8               	btfss	status,0,c
  1549  0000F0  D009               	goto	l3575
  1550  0000F2  D7CF               	goto	l3563
  1551                           
  1552                           ;doprnt.c: 608: }
  1553                           ;doprnt.c: 635: switch(c = *f++) {
  1554  0000F4  D007               	goto	l3575
  1555                           
  1556                           ;doprnt.c: 638: goto alldone;
  1557                           
  1558                           ;doprnt.c: 637: case 0:
  1559  0000F6  D17E               	goto	l593
  1560                           
  1561                           ;doprnt.c: 698: case 'i':
  1562                           ;doprnt.c: 699: break;
  1563                           
  1564                           ;doprnt.c: 697: case 'd':
  1565  0000F8  D01D               	goto	l556
  1566  0000FA                     l3571:
  1567                           
  1568                           ;doprnt.c: 721: flag |= 0x80;
  1569  0000FA  0100               	movlb	0	; () banked
  1570  0000FC  8FA5               	bsf	printf@flag& (0+255),7,b
  1571                           
  1572                           ;doprnt.c: 723: break;
  1573  0000FE  D01A               	goto	l556
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;doprnt.c: 813: continue;
  1577                           
  1578                           ;doprnt.c: 802: default:
  1579  000100  D16A               	goto	l3673
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;doprnt.c: 822: }
  1583  000102  D018               	goto	l556
  1584  000104                     l3575:
  1585  000104  C01D  FFF6         	movff	printf@f,tblptrl
  1586  000108  C01E  FFF7         	movff	printf@f+1,tblptrh
  1587  00010C  4A1D               	infsnz	printf@f,f,c
  1588  00010E  2A1E               	incf	printf@f+1,f,c
  1589  000110                     	if	0	;tblptru may be non-zero
  1590  000110                     	endif
  1591  000110                     	if	0	;tblptru may be non-zero
  1592  000110                     	endif
  1593  000110  0008               	tblrd		*
  1594  000112  CFF5 F0A8          	movff	tablat,printf@c
  1595  000116  0100               	movlb	0	; () banked
  1596  000118  51A8               	movf	printf@c& (0+255),w,b
  1597                           
  1598                           ; Switch size 1, requested type "space"
  1599                           ; Number of cases is 4, Range of values is 0 to 120
  1600                           ; switch strategies available:
  1601                           ; Name         Instructions Cycles
  1602                           ; simple_byte           13     7 (average)
  1603                           ;	Chosen strategy is simple_byte
  1604  00011A  0A00               	xorlw	0	; case 0
  1605  00011C  B4D8               	btfsc	status,2,c
  1606  00011E  D16A               	goto	l593
  1607  000120  0A64               	xorlw	100	; case 100
  1608  000122  B4D8               	btfsc	status,2,c
  1609  000124  D007               	goto	l556
  1610  000126  0A0D               	xorlw	13	; case 105
  1611  000128  B4D8               	btfsc	status,2,c
  1612  00012A  D004               	goto	l556
  1613  00012C  0A11               	xorlw	17	; case 120
  1614  00012E  B4D8               	btfsc	status,2,c
  1615  000130  D7E4               	goto	l3571
  1616  000132  D151               	goto	l3673
  1617  000134                     l556:
  1618                           
  1619                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  1620  000134  0100               	movlb	0	; () banked
  1621  000136  BFA5               	btfsc	printf@flag& (0+255),7,b
  1622  000138  D019               	goto	l3587
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;doprnt.c: 1253: {
  1626                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1627  00013A  C0A0  FFD9         	movff	printf@ap,fsr2l
  1628  00013E  C0A1  FFDA         	movff	printf@ap+1,fsr2h
  1629  000142  CFDE F0A3          	movff	postinc2,printf@val
  1630  000146  CFDD F0A4          	movff	postdec2,printf@val+1
  1631                           
  1632                           ; BSR set to: 0
  1633  00014A  0E02               	movlw	2
  1634  00014C  0100               	movlb	0	; () banked
  1635  00014E  27A0               	addwf	printf@ap& (0+255),f,b
  1636  000150  0E00               	movlw	0
  1637  000152  23A1               	addwfc	(printf@ap+1)& (0+255),f,b
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;doprnt.c: 1261: if((int)val < 0) {
  1641  000154  0100               	movlb	0	; () banked
  1642  000156  AFA4               	btfss	(printf@val+1)& (0+255),7,b
  1643  000158  D05D               	goto	l3621
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;doprnt.c: 1262: flag |= 0x03;
  1647  00015A  0E03               	movlw	3
  1648  00015C  0100               	movlb	0	; () banked
  1649  00015E  13A5               	iorwf	printf@flag& (0+255),f,b
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;doprnt.c: 1263: val = -val;
  1653  000160  0100               	movlb	0	; () banked
  1654  000162  6DA3               	negf	printf@val& (0+255),b
  1655  000164  1FA4               	comf	(printf@val+1)& (0+255),f,b
  1656  000166  B0D8               	btfsc	status,0,c
  1657  000168  2BA4               	incf	(printf@val+1)& (0+255),f,b
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;doprnt.c: 1264: }
  1661                           ;doprnt.c: 1266: }
  1662  00016A  D054               	goto	l3621
  1663  00016C                     l3587:
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;doprnt.c: 1268: else
  1667                           ;doprnt.c: 1273: {
  1668                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1669  00016C  C0A0  FFD9         	movff	printf@ap,fsr2l
  1670  000170  C0A1  FFDA         	movff	printf@ap+1,fsr2h
  1671  000174  CFDE F0A3          	movff	postinc2,printf@val
  1672  000178  CFDD F0A4          	movff	postdec2,printf@val+1
  1673                           
  1674                           ; BSR set to: 0
  1675  00017C  0E02               	movlw	2
  1676  00017E  0100               	movlb	0	; () banked
  1677  000180  27A0               	addwf	printf@ap& (0+255),f,b
  1678  000182  0E00               	movlw	0
  1679  000184  23A1               	addwfc	(printf@ap+1)& (0+255),f,b
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;doprnt.c: 1287: }
  1683                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  1684  000186  D046               	goto	l3621
  1685  000188                     l3591:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1689  000188  0E01               	movlw	1
  1690  00018A  0100               	movlb	0	; () banked
  1691  00018C  6FA8               	movwf	printf@c& (0+255),b
  1692  00018E                     l3593:
  1693                           
  1694                           ; BSR set to: 0
  1695  00018E  0E05               	movlw	5
  1696  000190  0100               	movlb	0	; () banked
  1697  000192  19A8               	xorwf	printf@c& (0+255),w,b
  1698  000194  B4D8               	btfsc	status,2,c
  1699  000196  D048               	goto	l3623
  1700  000198  D001               	goto	l3597
  1701                           
  1702                           ; BSR set to: 0
  1703  00019A  D046               	goto	l3623
  1704  00019C                     l3597:
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;doprnt.c: 1306: if(val < dpowers[c])
  1708  00019C  0100               	movlb	0	; () banked
  1709  00019E  51A8               	movf	printf@c& (0+255),w,b
  1710  0001A0  0D02               	mullw	2
  1711  0001A2  0E92               	movlw	low _dpowers
  1712  0001A4  24F3               	addwf	prodl,w,c
  1713  0001A6  6EF6               	movwf	tblptrl,c
  1714  0001A8  0EFF               	movlw	high _dpowers
  1715  0001AA  20F4               	addwfc	prodh,w,c
  1716  0001AC  6EF7               	movwf	tblptrh,c
  1717  0001AE                     	if	0	;There are less than 3 active tblptr bytes
  1718  0001AE                     	endif
  1719  0001AE  0009               	tblrd		*+
  1720  0001B0  50F5               	movf	tablat,w,c
  1721  0001B2  0100               	movlb	0	; () banked
  1722  0001B4  5DA3               	subwf	printf@val& (0+255),w,b
  1723  0001B6  0009               	tblrd		*+
  1724  0001B8  50F5               	movf	tablat,w,c
  1725  0001BA  0100               	movlb	0	; () banked
  1726  0001BC  59A4               	subwfb	(printf@val+1)& (0+255),w,b
  1727  0001BE  A0D8               	btfss	status,0,c
  1728  0001C0  D033               	goto	l3623
  1729  0001C2  D001               	goto	l3601
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;doprnt.c: 1307: break;
  1733  0001C4  D031               	goto	l3623
  1734  0001C6                     l3601:
  1735                           
  1736                           ; BSR set to: 0
  1737  0001C6  0100               	movlb	0	; () banked
  1738  0001C8  2BA8               	incf	printf@c& (0+255),f,b
  1739  0001CA  D7E1               	goto	l3593
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;doprnt.c: 1309: break;
  1743                           
  1744                           ; BSR set to: 0
  1745  0001CC  D02D               	goto	l3623
  1746  0001CE                     l3605:
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1750  0001CE  0E01               	movlw	1
  1751  0001D0  0100               	movlb	0	; () banked
  1752  0001D2  6FA8               	movwf	printf@c& (0+255),b
  1753  0001D4                     l3607:
  1754                           
  1755                           ; BSR set to: 0
  1756  0001D4  0E04               	movlw	4
  1757  0001D6  0100               	movlb	0	; () banked
  1758  0001D8  19A8               	xorwf	printf@c& (0+255),w,b
  1759  0001DA  B4D8               	btfsc	status,2,c
  1760  0001DC  D025               	goto	l3623
  1761  0001DE  D001               	goto	l3611
  1762                           
  1763                           ; BSR set to: 0
  1764  0001E0  D023               	goto	l3623
  1765  0001E2                     l3611:
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1769  0001E2  0100               	movlb	0	; () banked
  1770  0001E4  51A8               	movf	printf@c& (0+255),w,b
  1771  0001E6  0D02               	mullw	2
  1772  0001E8  0E9C               	movlw	low _hexpowers
  1773  0001EA  24F3               	addwf	prodl,w,c
  1774  0001EC  6EF6               	movwf	tblptrl,c
  1775  0001EE  0EFF               	movlw	high _hexpowers
  1776  0001F0  20F4               	addwfc	prodh,w,c
  1777  0001F2  6EF7               	movwf	tblptrh,c
  1778  0001F4                     	if	0	;There are less than 3 active tblptr bytes
  1779  0001F4                     	endif
  1780  0001F4  0009               	tblrd		*+
  1781  0001F6  50F5               	movf	tablat,w,c
  1782  0001F8  0100               	movlb	0	; () banked
  1783  0001FA  5DA3               	subwf	printf@val& (0+255),w,b
  1784  0001FC  0009               	tblrd		*+
  1785  0001FE  50F5               	movf	tablat,w,c
  1786  000200  0100               	movlb	0	; () banked
  1787  000202  59A4               	subwfb	(printf@val+1)& (0+255),w,b
  1788  000204  A0D8               	btfss	status,0,c
  1789  000206  D010               	goto	l3623
  1790  000208  D001               	goto	l3615
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;doprnt.c: 1318: break;
  1794  00020A  D00E               	goto	l3623
  1795  00020C                     l3615:
  1796                           
  1797                           ; BSR set to: 0
  1798  00020C  0100               	movlb	0	; () banked
  1799  00020E  2BA8               	incf	printf@c& (0+255),f,b
  1800  000210  D7E1               	goto	l3607
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;doprnt.c: 1336: }
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;doprnt.c: 1320: break;
  1807                           
  1808                           ; BSR set to: 0
  1809  000212  D00A               	goto	l3623
  1810  000214                     l3621:
  1811                           
  1812                           ; BSR set to: 0
  1813  000214  0100               	movlb	0	; () banked
  1814  000216  51A5               	movf	printf@flag& (0+255),w,b
  1815  000218  0B80               	andlw	128
  1816                           
  1817                           ; Switch size 1, requested type "space"
  1818                           ; Number of cases is 2, Range of values is 0 to 128
  1819                           ; switch strategies available:
  1820                           ; Name         Instructions Cycles
  1821                           ; simple_byte            7     4 (average)
  1822                           ;	Chosen strategy is simple_byte
  1823  00021A  0A00               	xorlw	0	; case 0
  1824  00021C  B4D8               	btfsc	status,2,c
  1825  00021E  D7B4               	goto	l3591
  1826  000220  0A80               	xorlw	128	; case 128
  1827  000222  B4D8               	btfsc	status,2,c
  1828  000224  D7D4               	goto	l3605
  1829  000226  D000               	goto	l3623
  1830  000228                     l3623:
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;doprnt.c: 1345: if(width && flag & 0x03)
  1834  000228  0100               	movlb	0	; () banked
  1835  00022A  51A6               	movf	printf@width& (0+255),w,b
  1836  00022C  0100               	movlb	0	; () banked
  1837  00022E  11A7               	iorwf	(printf@width+1)& (0+255),w,b
  1838  000230  B4D8               	btfsc	status,2,c
  1839  000232  D00B               	goto	l3629
  1840                           
  1841                           ; BSR set to: 0
  1842  000234  C0A5  F02B         	movff	printf@flag,??_printf
  1843  000238  0E03               	movlw	3
  1844  00023A  162B               	andwf	??_printf,f,c
  1845  00023C  B4D8               	btfsc	status,2,c
  1846  00023E  D005               	goto	l3629
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;doprnt.c: 1346: width--;
  1850  000240  0100               	movlb	0	; () banked
  1851  000242  07A6               	decf	printf@width& (0+255),f,b
  1852  000244  A0D8               	btfss	status,0,c
  1853  000246  07A7               	decf	(printf@width+1)& (0+255),f,b
  1854  000248  D000               	goto	l3629
  1855  00024A                     l3629:
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;doprnt.c: 1381: if(width > c)
  1859  00024A  0E80               	movlw	128
  1860  00024C  0100               	movlb	0	; () banked
  1861  00024E  BFA8               	btfsc	printf@c& (0+255),7,b
  1862  000250  0E7F               	movlw	127
  1863  000252  6E2B               	movwf	??_printf& (0+255),c
  1864  000254  0100               	movlb	0	; () banked
  1865  000256  51A6               	movf	printf@width& (0+255),w,b
  1866  000258  0100               	movlb	0	; () banked
  1867  00025A  5DA8               	subwf	printf@c& (0+255),w,b
  1868  00025C  0100               	movlb	0	; () banked
  1869  00025E  51A7               	movf	(printf@width+1)& (0+255),w,b
  1870  000260  0A80               	xorlw	128
  1871  000262  582B               	subwfb	??_printf& (0+255),w,c
  1872  000264  B0D8               	btfsc	status,0,c
  1873  000266  D00B               	goto	l3633
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;doprnt.c: 1382: width -= c;
  1877  000268  0100               	movlb	0	; () banked
  1878  00026A  51A8               	movf	printf@c& (0+255),w,b
  1879  00026C  0100               	movlb	0	; () banked
  1880  00026E  5FA6               	subwf	printf@width& (0+255),f,b
  1881  000270  0E00               	movlw	0
  1882  000272  0100               	movlb	0	; () banked
  1883  000274  BFA8               	btfsc	printf@c& (0+255),7,b
  1884  000276  0EFF               	movlw	255
  1885  000278  0100               	movlb	0	; () banked
  1886  00027A  5BA7               	subwfb	(printf@width+1)& (0+255),f,b
  1887  00027C  D006               	goto	l3635
  1888  00027E                     l3633:
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;doprnt.c: 1383: else
  1892                           ;doprnt.c: 1384: width = 0;
  1893  00027E  0E00               	movlw	0
  1894  000280  0100               	movlb	0	; () banked
  1895  000282  6FA7               	movwf	(printf@width+1)& (0+255),b
  1896  000284  0E00               	movlw	0
  1897  000286  6FA6               	movwf	printf@width& (0+255),b
  1898  000288  D000               	goto	l3635
  1899  00028A                     l3635:
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;doprnt.c: 1387: if(flag & 0x04) {
  1903  00028A  0100               	movlb	0	; () banked
  1904  00028C  A5A5               	btfss	printf@flag& (0+255),2,b
  1905  00028E  D01F               	goto	l3647
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;doprnt.c: 1392: if(flag & 0x03)
  1909  000290  C0A5  F02B         	movff	printf@flag,??_printf
  1910  000294  0E03               	movlw	3
  1911  000296  162B               	andwf	??_printf,f,c
  1912  000298  B4D8               	btfsc	status,2,c
  1913  00029A  D004               	goto	l3641
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;doprnt.c: 1393: (putch('-') );
  1917  00029C  0E2D               	movlw	45
  1918  00029E  ECC0  F005         	call	_putch
  1919  0002A2  D000               	goto	l3641
  1920  0002A4                     l3641:
  1921                           
  1922                           ;doprnt.c: 1415: if(width)
  1923  0002A4  0100               	movlb	0	; () banked
  1924  0002A6  51A6               	movf	printf@width& (0+255),w,b
  1925  0002A8  0100               	movlb	0	; () banked
  1926  0002AA  11A7               	iorwf	(printf@width+1)& (0+255),w,b
  1927  0002AC  B4D8               	btfsc	status,2,c
  1928  0002AE  D02E               	goto	l3657
  1929  0002B0                     l3643:
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;doprnt.c: 1417: (putch('0') );
  1933  0002B0  0E30               	movlw	48
  1934  0002B2  ECC0  F005         	call	_putch
  1935                           
  1936                           ;doprnt.c: 1418: while(--width);
  1937  0002B6  0100               	movlb	0	; () banked
  1938  0002B8  07A6               	decf	printf@width& (0+255),f,b
  1939  0002BA  A0D8               	btfss	status,0,c
  1940  0002BC  07A7               	decf	(printf@width+1)& (0+255),f,b
  1941  0002BE  0100               	movlb	0	; () banked
  1942  0002C0  51A6               	movf	printf@width& (0+255),w,b
  1943  0002C2  0100               	movlb	0	; () banked
  1944  0002C4  11A7               	iorwf	(printf@width+1)& (0+255),w,b
  1945  0002C6  B4D8               	btfsc	status,2,c
  1946  0002C8  D021               	goto	l3657
  1947  0002CA  D7F2               	goto	l3643
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;doprnt.c: 1420: } else
  1951                           
  1952                           ; BSR set to: 0
  1953  0002CC  D01F               	goto	l3657
  1954  0002CE                     l3647:
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;doprnt.c: 1422: {
  1958                           ;doprnt.c: 1424: if(width
  1959                           ;doprnt.c: 1428: )
  1960  0002CE  0100               	movlb	0	; () banked
  1961  0002D0  51A6               	movf	printf@width& (0+255),w,b
  1962  0002D2  0100               	movlb	0	; () banked
  1963  0002D4  11A7               	iorwf	(printf@width+1)& (0+255),w,b
  1964  0002D6  B4D8               	btfsc	status,2,c
  1965  0002D8  D00F               	goto	l3653
  1966  0002DA                     l3649:
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;doprnt.c: 1430: (putch(' ') );
  1970  0002DA  0E20               	movlw	32
  1971  0002DC  ECC0  F005         	call	_putch
  1972                           
  1973                           ;doprnt.c: 1431: while(--width);
  1974  0002E0  0100               	movlb	0	; () banked
  1975  0002E2  07A6               	decf	printf@width& (0+255),f,b
  1976  0002E4  A0D8               	btfss	status,0,c
  1977  0002E6  07A7               	decf	(printf@width+1)& (0+255),f,b
  1978  0002E8  0100               	movlb	0	; () banked
  1979  0002EA  51A6               	movf	printf@width& (0+255),w,b
  1980  0002EC  0100               	movlb	0	; () banked
  1981  0002EE  11A7               	iorwf	(printf@width+1)& (0+255),w,b
  1982  0002F0  B4D8               	btfsc	status,2,c
  1983  0002F2  D002               	goto	l3653
  1984  0002F4  D7F2               	goto	l3649
  1985                           
  1986                           ; BSR set to: 0
  1987  0002F6  D000               	goto	l3653
  1988  0002F8                     l3653:
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;doprnt.c: 1438: if(flag & 0x03)
  1992  0002F8  C0A5  F02B         	movff	printf@flag,??_printf
  1993  0002FC  0E03               	movlw	3
  1994  0002FE  162B               	andwf	??_printf,f,c
  1995  000300  B4D8               	btfsc	status,2,c
  1996  000302  D004               	goto	l3657
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;doprnt.c: 1439: (putch('-') );
  2000  000304  0E2D               	movlw	45
  2001  000306  ECC0  F005         	call	_putch
  2002  00030A  D000               	goto	l3657
  2003  00030C                     l3657:
  2004                           
  2005                           ;doprnt.c: 1469: }
  2006                           ;doprnt.c: 1472: prec = c;
  2007  00030C  C0A8  F0A2         	movff	printf@c,printf@prec
  2008                           
  2009                           ;doprnt.c: 1474: while(prec--) {
  2010  000310  D05A               	goto	l3671
  2011                           
  2012                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  2013  000312  D04A               	goto	l3667
  2014  000314                     l3659:
  2015                           
  2016                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2017  000314  0100               	movlb	0	; () banked
  2018  000316  51A2               	movf	printf@prec& (0+255),w,b
  2019  000318  0D02               	mullw	2
  2020  00031A  0E92               	movlw	low _dpowers
  2021  00031C  24F3               	addwf	prodl,w,c
  2022  00031E  6EF6               	movwf	tblptrl,c
  2023  000320  0EFF               	movlw	high _dpowers
  2024  000322  20F4               	addwfc	prodh,w,c
  2025  000324  6EF7               	movwf	tblptrh,c
  2026  000326                     	if	0	;There are less than 3 active tblptr bytes
  2027  000326                     	endif
  2028  000326  0009               	tblrd		*+
  2029  000328  CFF5 F013          	movff	tablat,___lwdiv@divisor
  2030  00032C  000A               	tblrd		*-
  2031  00032E  CFF5 F014          	movff	tablat,___lwdiv@divisor+1
  2032  000332  C0A3  F011         	movff	printf@val,___lwdiv@dividend
  2033  000336  C0A4  F012         	movff	printf@val+1,___lwdiv@dividend+1
  2034  00033A  EC31  F004         	call	___lwdiv	;wreg free
  2035  00033E  C011  F018         	movff	?___lwdiv,___lwmod@dividend
  2036  000342  C012  F019         	movff	?___lwdiv+1,___lwmod@dividend+1
  2037  000346  0E00               	movlw	0
  2038  000348  6E1B               	movwf	___lwmod@divisor+1,c
  2039  00034A  0E0A               	movlw	10
  2040  00034C  6E1A               	movwf	___lwmod@divisor,c
  2041  00034E  EC5F  F004         	call	___lwmod	;wreg free
  2042  000352  5018               	movf	?___lwmod,w,c
  2043  000354  0F30               	addlw	48
  2044  000356  0100               	movlb	0	; () banked
  2045  000358  6FA8               	movwf	printf@c& (0+255),b
  2046                           
  2047                           ;doprnt.c: 1491: break;
  2048  00035A  D030               	goto	l3669
  2049  00035C                     l3661:
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;doprnt.c: 1499: {
  2053                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  2054  00035C  C0A3  F011         	movff	printf@val,___lwdiv@dividend
  2055  000360  C0A4  F012         	movff	printf@val+1,___lwdiv@dividend+1
  2056  000364  0100               	movlb	0	; () banked
  2057  000366  51A2               	movf	printf@prec& (0+255),w,b
  2058  000368  0D02               	mullw	2
  2059  00036A  0E9C               	movlw	low _hexpowers
  2060  00036C  24F3               	addwf	prodl,w,c
  2061  00036E  6EF6               	movwf	tblptrl,c
  2062  000370  0EFF               	movlw	high _hexpowers
  2063  000372  20F4               	addwfc	prodh,w,c
  2064  000374  6EF7               	movwf	tblptrh,c
  2065  000376                     	if	0	;There are less than 3 active tblptr bytes
  2066  000376                     	endif
  2067  000376  0009               	tblrd		*+
  2068  000378  CFF5 F013          	movff	tablat,___lwdiv@divisor
  2069  00037C  000A               	tblrd		*-
  2070  00037E  CFF5 F014          	movff	tablat,___lwdiv@divisor+1
  2071  000382  EC31  F004         	call	___lwdiv	;wreg free
  2072  000386  5011               	movf	?___lwdiv,w,c
  2073  000388  0B0F               	andlw	15
  2074  00038A  0100               	movlb	0	; () banked
  2075  00038C  6F9F               	movwf	printf@idx& (0+255),b
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  2079  00038E  0100               	movlb	0	; () banked
  2080  000390  519F               	movf	printf@idx& (0+255),w,b
  2081  000392  0D01               	mullw	1
  2082  000394  0EED               	movlw	low STR_3
  2083  000396  24F3               	addwf	prodl,w,c
  2084  000398  6EF6               	movwf	tblptrl,c
  2085  00039A  0EFF               	movlw	high STR_3
  2086  00039C  20F4               	addwfc	prodh,w,c
  2087  00039E  6EF7               	movwf	tblptrh,c
  2088  0003A0                     	if	0	;There are less than 3 active tblptr bytes
  2089  0003A0                     	endif
  2090  0003A0  0008               	tblrd		*
  2091  0003A2  CFF5 F0A8          	movff	tablat,printf@c
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;doprnt.c: 1523: }
  2095                           
  2096                           ;doprnt.c: 1508: }
  2097                           ;doprnt.c: 1510: break;
  2098  0003A6  D00A               	goto	l3669
  2099  0003A8                     l3667:
  2100  0003A8  0100               	movlb	0	; () banked
  2101  0003AA  51A5               	movf	printf@flag& (0+255),w,b
  2102  0003AC  0B80               	andlw	128
  2103                           
  2104                           ; Switch size 1, requested type "space"
  2105                           ; Number of cases is 2, Range of values is 0 to 128
  2106                           ; switch strategies available:
  2107                           ; Name         Instructions Cycles
  2108                           ; simple_byte            7     4 (average)
  2109                           ;	Chosen strategy is simple_byte
  2110  0003AE  0A00               	xorlw	0	; case 0
  2111  0003B0  B4D8               	btfsc	status,2,c
  2112  0003B2  D7B0               	goto	l3659
  2113  0003B4  0A80               	xorlw	128	; case 128
  2114  0003B6  B4D8               	btfsc	status,2,c
  2115  0003B8  D7D1               	goto	l3661
  2116  0003BA  D000               	goto	l3669
  2117  0003BC                     l3669:
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;doprnt.c: 1524: (putch(c) );
  2121  0003BC  0100               	movlb	0	; () banked
  2122  0003BE  51A8               	movf	printf@c& (0+255),w,b
  2123  0003C0  ECC0  F005         	call	_putch
  2124  0003C4  D000               	goto	l3671
  2125  0003C6                     l3671:
  2126  0003C6  0100               	movlb	0	; () banked
  2127  0003C8  07A2               	decf	printf@prec& (0+255),f,b
  2128  0003CA  0100               	movlb	0	; () banked
  2129  0003CC  29A2               	incf	printf@prec& (0+255),w,b
  2130  0003CE  B4D8               	btfsc	status,2,c
  2131  0003D0  D002               	goto	l3673
  2132  0003D2  D7EA               	goto	l3667
  2133                           
  2134                           ; BSR set to: 0
  2135  0003D4  D000               	goto	l3673
  2136  0003D6                     l3673:
  2137  0003D6  C01D  FFF6         	movff	printf@f,tblptrl
  2138  0003DA  C01E  FFF7         	movff	printf@f+1,tblptrh
  2139  0003DE  4A1D               	infsnz	printf@f,f,c
  2140  0003E0  2A1E               	incf	printf@f+1,f,c
  2141  0003E2                     	if	0	;tblptru may be non-zero
  2142  0003E2                     	endif
  2143  0003E2                     	if	0	;tblptru may be non-zero
  2144  0003E2                     	endif
  2145  0003E2  0008               	tblrd		*
  2146  0003E4  CFF5 F0A8          	movff	tablat,printf@c
  2147  0003E8  0100               	movlb	0	; () banked
  2148  0003EA  51A8               	movf	printf@c& (0+255),w,b
  2149  0003EC  B4D8               	btfsc	status,2,c
  2150  0003EE  D002               	goto	l593
  2151  0003F0  D61C               	goto	l3547
  2152                           
  2153                           ; BSR set to: 0
  2154  0003F2  D000               	goto	l593
  2155  0003F4                     l593:
  2156  0003F4  0012               	return		;funcret
  2157  0003F6                     __end_of_printf:
  2158                           	opt stack 0
  2159                           tblptru	equ	0xFF8
  2160                           tblptrh	equ	0xFF7
  2161                           tblptrl	equ	0xFF6
  2162                           tablat	equ	0xFF5
  2163                           prodh	equ	0xFF4
  2164                           prodl	equ	0xFF3
  2165                           postinc0	equ	0xFEE
  2166                           wreg	equ	0xFE8
  2167                           postdec1	equ	0xFE5
  2168                           fsr1l	equ	0xFE1
  2169                           postinc2	equ	0xFDE
  2170                           postdec2	equ	0xFDD
  2171                           fsr2h	equ	0xFDA
  2172                           fsr2l	equ	0xFD9
  2173                           status	equ	0xFD8
  2174                           
  2175 ;; *************** function _putch *****************
  2176 ;; Defined at:
  2177 ;;		line 89 in file "Lab10p3.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  c               1    wreg     unsigned char 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  c               1   16[COMRAM] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;		None               void
  2184 ;; Registers used:
  2185 ;;		wreg
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;Total ram usage:        1 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    3
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_printf
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text2
  2206  000B80                     __ptext2:
  2207                           	opt stack 0
  2208  000B80                     _putch:
  2209                           	opt stack 26
  2210                           
  2211                           ;incstack = 0
  2212                           ;putch@c stored from wreg
  2213  000B80  6E11               	movwf	putch@c,c
  2214                           
  2215                           ;Lab10p3.c: 91: while (!TRMT);
  2216  000B82  D000               	goto	l496
  2217  000B84                     l496:
  2218  000B84  A2AC               	btfss	4012,1,c	;volatile
  2219  000B86  D7FE               	goto	l496
  2220                           
  2221                           ;Lab10p3.c: 92: TXREG = c;
  2222  000B88  C011  FFAD         	movff	putch@c,4013	;volatile
  2223  000B8C  0012               	return		;funcret
  2224  000B8E                     __end_of_putch:
  2225                           	opt stack 0
  2226                           tblptru	equ	0xFF8
  2227                           tblptrh	equ	0xFF7
  2228                           tblptrl	equ	0xFF6
  2229                           tablat	equ	0xFF5
  2230                           prodh	equ	0xFF4
  2231                           prodl	equ	0xFF3
  2232                           postinc0	equ	0xFEE
  2233                           wreg	equ	0xFE8
  2234                           postdec1	equ	0xFE5
  2235                           fsr1l	equ	0xFE1
  2236                           postinc2	equ	0xFDE
  2237                           postdec2	equ	0xFDD
  2238                           fsr2h	equ	0xFDA
  2239                           fsr2l	equ	0xFD9
  2240                           status	equ	0xFD8
  2241                           
  2242 ;; *************** function _isdigit *****************
  2243 ;; Defined at:
  2244 ;;		line 8 in file "E:\XC8\sources\common\isdigit.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  c               1    wreg     unsigned char 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  c               1   18[COMRAM] unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;		None               void
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2262 ;;Total ram usage:        3 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:    3
  2265 ;; This function calls:
  2266 ;;		Nothing
  2267 ;; This function is called by:
  2268 ;;		_printf
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text3
  2273  000AA6                     __ptext3:
  2274                           	opt stack 0
  2275  000AA6                     _isdigit:
  2276                           	opt stack 26
  2277                           
  2278                           ;incstack = 0
  2279                           ;isdigit@c stored from wreg
  2280  000AA6  6E13               	movwf	isdigit@c,c
  2281  000AA8  0E00               	movlw	0
  2282  000AAA  6E12               	movwf	_isdigit$1950,c
  2283  000AAC  0E3A               	movlw	58
  2284  000AAE  6013               	cpfslt	isdigit@c,c
  2285  000AB0  D006               	goto	l3353
  2286  000AB2  0E2F               	movlw	47
  2287  000AB4  6413               	cpfsgt	isdigit@c,c
  2288  000AB6  D003               	goto	l3353
  2289  000AB8  0E01               	movlw	1
  2290  000ABA  6E12               	movwf	_isdigit$1950,c
  2291  000ABC  D000               	goto	l3353
  2292  000ABE                     l3353:
  2293  000ABE  C012  F011         	movff	_isdigit$1950,??_isdigit
  2294  000AC2  3011               	rrcf	??_isdigit,w,c
  2295  000AC4  D000               	goto	l1060
  2296  000AC6                     l1060:
  2297  000AC6  0012               	return		;funcret
  2298  000AC8                     __end_of_isdigit:
  2299                           	opt stack 0
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           prodh	equ	0xFF4
  2305                           prodl	equ	0xFF3
  2306                           postinc0	equ	0xFEE
  2307                           wreg	equ	0xFE8
  2308                           postdec1	equ	0xFE5
  2309                           fsr1l	equ	0xFE1
  2310                           postinc2	equ	0xFDE
  2311                           postdec2	equ	0xFDD
  2312                           fsr2h	equ	0xFDA
  2313                           fsr2l	equ	0xFD9
  2314                           status	equ	0xFD8
  2315                           
  2316 ;; *************** function ___wmul *****************
  2317 ;; Defined at:
  2318 ;;		line 15 in file "E:\XC8\sources\common\Umul16.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  multiplier      2   16[COMRAM] unsigned int 
  2321 ;;  multiplicand    2   18[COMRAM] unsigned int 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  product         2   20[COMRAM] unsigned int 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  2   16[COMRAM] unsigned int 
  2326 ;; Registers used:
  2327 ;;		wreg, status,2, status,0, prodl, prodh
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2333 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;Total ram usage:        6 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:    3
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_main
  2344 ;;		_printf
  2345 ;;		_delay_ms
  2346 ;;		_drawChar
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text4
  2351  000A7E                     __ptext4:
  2352                           	opt stack 0
  2353  000A7E                     ___wmul:
  2354                           	opt stack 26
  2355                           
  2356                           ;incstack = 0
  2357  000A7E  5011               	movf	___wmul@multiplier,w,c
  2358  000A80  0213               	mulwf	___wmul@multiplicand,c
  2359  000A82  CFF3 F015          	movff	prodl,___wmul@product
  2360  000A86  CFF4 F016          	movff	prodh,___wmul@product+1
  2361  000A8A  5011               	movf	___wmul@multiplier,w,c
  2362  000A8C  0214               	mulwf	___wmul@multiplicand+1,c
  2363  000A8E  50F3               	movf	prodl,w,c
  2364  000A90  2616               	addwf	___wmul@product+1,f,c
  2365  000A92  5012               	movf	___wmul@multiplier+1,w,c
  2366  000A94  0213               	mulwf	___wmul@multiplicand,c
  2367  000A96  50F3               	movf	prodl,w,c
  2368  000A98  2616               	addwf	___wmul@product+1,f,c
  2369  000A9A  C015  F011         	movff	___wmul@product,?___wmul
  2370  000A9E  C016  F012         	movff	___wmul@product+1,?___wmul+1
  2371  000AA2  D000               	goto	l629
  2372  000AA4                     l629:
  2373  000AA4  0012               	return		;funcret
  2374  000AA6                     __end_of___wmul:
  2375                           	opt stack 0
  2376                           tblptru	equ	0xFF8
  2377                           tblptrh	equ	0xFF7
  2378                           tblptrl	equ	0xFF6
  2379                           tablat	equ	0xFF5
  2380                           prodh	equ	0xFF4
  2381                           prodl	equ	0xFF3
  2382                           postinc0	equ	0xFEE
  2383                           wreg	equ	0xFE8
  2384                           postdec1	equ	0xFE5
  2385                           fsr1l	equ	0xFE1
  2386                           postinc2	equ	0xFDE
  2387                           postdec2	equ	0xFDD
  2388                           fsr2h	equ	0xFDA
  2389                           fsr2l	equ	0xFD9
  2390                           status	equ	0xFD8
  2391                           
  2392 ;; *************** function ___lwmod *****************
  2393 ;; Defined at:
  2394 ;;		line 8 in file "E:\XC8\sources\common\lwmod.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  dividend        2   23[COMRAM] unsigned int 
  2397 ;;  divisor         2   25[COMRAM] unsigned int 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  counter         1   27[COMRAM] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  2   23[COMRAM] unsigned int 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2409 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;Total ram usage:        5 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    3
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_printf
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text5
  2424  0008BE                     __ptext5:
  2425                           	opt stack 0
  2426  0008BE                     ___lwmod:
  2427                           	opt stack 26
  2428                           
  2429                           ;incstack = 0
  2430  0008BE  501A               	movf	___lwmod@divisor,w,c
  2431  0008C0  101B               	iorwf	___lwmod@divisor+1,w,c
  2432  0008C2  B4D8               	btfsc	status,2,c
  2433  0008C4  D01D               	goto	l1162
  2434  0008C6  0E01               	movlw	1
  2435  0008C8  6E1C               	movwf	___lwmod@counter,c
  2436  0008CA  D005               	goto	l3391
  2437  0008CC                     l3389:
  2438  0008CC  90D8               	bcf	status,0,c
  2439  0008CE  361A               	rlcf	___lwmod@divisor,f,c
  2440  0008D0  361B               	rlcf	___lwmod@divisor+1,f,c
  2441  0008D2  2A1C               	incf	___lwmod@counter,f,c
  2442  0008D4  D000               	goto	l3391
  2443  0008D6                     l3391:
  2444  0008D6  BE1B               	btfsc	___lwmod@divisor+1,7,c
  2445  0008D8  D002               	goto	l3393
  2446  0008DA  D7F8               	goto	l3389
  2447  0008DC  D000               	goto	l3393
  2448  0008DE                     l3393:
  2449  0008DE  501A               	movf	___lwmod@divisor,w,c
  2450  0008E0  5C18               	subwf	___lwmod@dividend,w,c
  2451  0008E2  501B               	movf	___lwmod@divisor+1,w,c
  2452  0008E4  5819               	subwfb	___lwmod@dividend+1,w,c
  2453  0008E6  A0D8               	btfss	status,0,c
  2454  0008E8  D005               	goto	l3397
  2455  0008EA  501A               	movf	___lwmod@divisor,w,c
  2456  0008EC  5E18               	subwf	___lwmod@dividend,f,c
  2457  0008EE  501B               	movf	___lwmod@divisor+1,w,c
  2458  0008F0  5A19               	subwfb	___lwmod@dividend+1,f,c
  2459  0008F2  D000               	goto	l3397
  2460  0008F4                     l3397:
  2461  0008F4  90D8               	bcf	status,0,c
  2462  0008F6  321B               	rrcf	___lwmod@divisor+1,f,c
  2463  0008F8  321A               	rrcf	___lwmod@divisor,f,c
  2464  0008FA  2E1C               	decfsz	___lwmod@counter,f,c
  2465  0008FC  D7F0               	goto	l3393
  2466  0008FE  D000               	goto	l1162
  2467  000900                     l1162:
  2468  000900  C018  F018         	movff	___lwmod@dividend,?___lwmod
  2469  000904  C019  F019         	movff	___lwmod@dividend+1,?___lwmod+1
  2470  000908  0012               	return		;funcret
  2471  00090A                     __end_of___lwmod:
  2472                           	opt stack 0
  2473                           tblptru	equ	0xFF8
  2474                           tblptrh	equ	0xFF7
  2475                           tblptrl	equ	0xFF6
  2476                           tablat	equ	0xFF5
  2477                           prodh	equ	0xFF4
  2478                           prodl	equ	0xFF3
  2479                           postinc0	equ	0xFEE
  2480                           wreg	equ	0xFE8
  2481                           postdec1	equ	0xFE5
  2482                           fsr1l	equ	0xFE1
  2483                           postinc2	equ	0xFDE
  2484                           postdec2	equ	0xFDD
  2485                           fsr2h	equ	0xFDA
  2486                           fsr2l	equ	0xFD9
  2487                           status	equ	0xFD8
  2488                           
  2489 ;; *************** function ___lwdiv *****************
  2490 ;; Defined at:
  2491 ;;		line 8 in file "E:\XC8\sources\common\lwdiv.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  dividend        2   16[COMRAM] unsigned int 
  2494 ;;  divisor         2   18[COMRAM] unsigned int 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  quotient        2   21[COMRAM] unsigned int 
  2497 ;;  counter         1   20[COMRAM] unsigned char 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  2   16[COMRAM] unsigned int 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2508 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;Total ram usage:        7 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    3
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_printf
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text6
  2522  000862                     __ptext6:
  2523                           	opt stack 0
  2524  000862                     ___lwdiv:
  2525                           	opt stack 26
  2526                           
  2527                           ;incstack = 0
  2528  000862  0E00               	movlw	0
  2529  000864  6E17               	movwf	___lwdiv@quotient+1,c
  2530  000866  0E00               	movlw	0
  2531  000868  6E16               	movwf	___lwdiv@quotient,c
  2532  00086A  5013               	movf	___lwdiv@divisor,w,c
  2533  00086C  1014               	iorwf	___lwdiv@divisor+1,w,c
  2534  00086E  B4D8               	btfsc	status,2,c
  2535  000870  D021               	goto	l1152
  2536  000872  0E01               	movlw	1
  2537  000874  6E15               	movwf	___lwdiv@counter,c
  2538  000876  D005               	goto	l3371
  2539  000878                     l3369:
  2540  000878  90D8               	bcf	status,0,c
  2541  00087A  3613               	rlcf	___lwdiv@divisor,f,c
  2542  00087C  3614               	rlcf	___lwdiv@divisor+1,f,c
  2543  00087E  2A15               	incf	___lwdiv@counter,f,c
  2544  000880  D000               	goto	l3371
  2545  000882                     l3371:
  2546  000882  BE14               	btfsc	___lwdiv@divisor+1,7,c
  2547  000884  D002               	goto	l3373
  2548  000886  D7F8               	goto	l3369
  2549  000888  D000               	goto	l3373
  2550  00088A                     l3373:
  2551  00088A  90D8               	bcf	status,0,c
  2552  00088C  3616               	rlcf	___lwdiv@quotient,f,c
  2553  00088E  3617               	rlcf	___lwdiv@quotient+1,f,c
  2554  000890  5013               	movf	___lwdiv@divisor,w,c
  2555  000892  5C11               	subwf	___lwdiv@dividend,w,c
  2556  000894  5014               	movf	___lwdiv@divisor+1,w,c
  2557  000896  5812               	subwfb	___lwdiv@dividend+1,w,c
  2558  000898  A0D8               	btfss	status,0,c
  2559  00089A  D006               	goto	l3381
  2560  00089C  5013               	movf	___lwdiv@divisor,w,c
  2561  00089E  5E11               	subwf	___lwdiv@dividend,f,c
  2562  0008A0  5014               	movf	___lwdiv@divisor+1,w,c
  2563  0008A2  5A12               	subwfb	___lwdiv@dividend+1,f,c
  2564  0008A4  8016               	bsf	___lwdiv@quotient,0,c
  2565  0008A6  D000               	goto	l3381
  2566  0008A8                     l3381:
  2567  0008A8  90D8               	bcf	status,0,c
  2568  0008AA  3214               	rrcf	___lwdiv@divisor+1,f,c
  2569  0008AC  3213               	rrcf	___lwdiv@divisor,f,c
  2570  0008AE  2E15               	decfsz	___lwdiv@counter,f,c
  2571  0008B0  D7EC               	goto	l3373
  2572  0008B2  D000               	goto	l1152
  2573  0008B4                     l1152:
  2574  0008B4  C016  F011         	movff	___lwdiv@quotient,?___lwdiv
  2575  0008B8  C017  F012         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2576  0008BC  0012               	return		;funcret
  2577  0008BE                     __end_of___lwdiv:
  2578                           	opt stack 0
  2579                           tblptru	equ	0xFF8
  2580                           tblptrh	equ	0xFF7
  2581                           tblptrl	equ	0xFF6
  2582                           tablat	equ	0xFF5
  2583                           prodh	equ	0xFF4
  2584                           prodl	equ	0xFF3
  2585                           postinc0	equ	0xFEE
  2586                           wreg	equ	0xFE8
  2587                           postdec1	equ	0xFE5
  2588                           fsr1l	equ	0xFE1
  2589                           postinc2	equ	0xFDE
  2590                           postdec2	equ	0xFDD
  2591                           fsr2h	equ	0xFDA
  2592                           fsr2l	equ	0xFD9
  2593                           status	equ	0xFD8
  2594                           
  2595 ;; *************** function ___awdiv *****************
  2596 ;; Defined at:
  2597 ;;		line 8 in file "E:\XC8\sources\common\awdiv.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  dividend        2   22[COMRAM] int 
  2600 ;;  divisor         2   24[COMRAM] int 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  quotient        2   28[COMRAM] int 
  2603 ;;  sign            1   27[COMRAM] unsigned char 
  2604 ;;  counter         1   26[COMRAM] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  2   22[COMRAM] int 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2, status,0
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2614 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;Total ram usage:        8 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    3
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_main
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text7
  2629  000616                     __ptext7:
  2630                           	opt stack 0
  2631  000616                     ___awdiv:
  2632                           	opt stack 27
  2633                           
  2634                           ;incstack = 0
  2635  000616  0E00               	movlw	0
  2636  000618  6E1C               	movwf	___awdiv@sign,c
  2637  00061A  AE1A               	btfss	___awdiv@divisor+1,7,c
  2638  00061C  D007               	goto	l3067
  2639  00061E  6C19               	negf	___awdiv@divisor,c
  2640  000620  1E1A               	comf	___awdiv@divisor+1,f,c
  2641  000622  B0D8               	btfsc	status,0,c
  2642  000624  2A1A               	incf	___awdiv@divisor+1,f,c
  2643  000626  0E01               	movlw	1
  2644  000628  6E1C               	movwf	___awdiv@sign,c
  2645  00062A  D000               	goto	l3067
  2646  00062C                     l3067:
  2647  00062C  AE18               	btfss	___awdiv@dividend+1,7,c
  2648  00062E  D007               	goto	l3073
  2649  000630  6C17               	negf	___awdiv@dividend,c
  2650  000632  1E18               	comf	___awdiv@dividend+1,f,c
  2651  000634  B0D8               	btfsc	status,0,c
  2652  000636  2A18               	incf	___awdiv@dividend+1,f,c
  2653  000638  0E01               	movlw	1
  2654  00063A  1A1C               	xorwf	___awdiv@sign,f,c
  2655  00063C  D000               	goto	l3073
  2656  00063E                     l3073:
  2657  00063E  0E00               	movlw	0
  2658  000640  6E1E               	movwf	___awdiv@quotient+1,c
  2659  000642  0E00               	movlw	0
  2660  000644  6E1D               	movwf	___awdiv@quotient,c
  2661  000646  5019               	movf	___awdiv@divisor,w,c
  2662  000648  101A               	iorwf	___awdiv@divisor+1,w,c
  2663  00064A  B4D8               	btfsc	status,2,c
  2664  00064C  D021               	goto	l3095
  2665  00064E  0E01               	movlw	1
  2666  000650  6E1B               	movwf	___awdiv@counter,c
  2667  000652  D005               	goto	l3081
  2668  000654                     l3079:
  2669  000654  90D8               	bcf	status,0,c
  2670  000656  3619               	rlcf	___awdiv@divisor,f,c
  2671  000658  361A               	rlcf	___awdiv@divisor+1,f,c
  2672  00065A  2A1B               	incf	___awdiv@counter,f,c
  2673  00065C  D000               	goto	l3081
  2674  00065E                     l3081:
  2675  00065E  BE1A               	btfsc	___awdiv@divisor+1,7,c
  2676  000660  D002               	goto	l3083
  2677  000662  D7F8               	goto	l3079
  2678  000664  D000               	goto	l3083
  2679  000666                     l3083:
  2680  000666  90D8               	bcf	status,0,c
  2681  000668  361D               	rlcf	___awdiv@quotient,f,c
  2682  00066A  361E               	rlcf	___awdiv@quotient+1,f,c
  2683  00066C  5019               	movf	___awdiv@divisor,w,c
  2684  00066E  5C17               	subwf	___awdiv@dividend,w,c
  2685  000670  501A               	movf	___awdiv@divisor+1,w,c
  2686  000672  5818               	subwfb	___awdiv@dividend+1,w,c
  2687  000674  A0D8               	btfss	status,0,c
  2688  000676  D006               	goto	l3091
  2689  000678  5019               	movf	___awdiv@divisor,w,c
  2690  00067A  5E17               	subwf	___awdiv@dividend,f,c
  2691  00067C  501A               	movf	___awdiv@divisor+1,w,c
  2692  00067E  5A18               	subwfb	___awdiv@dividend+1,f,c
  2693  000680  801D               	bsf	___awdiv@quotient,0,c
  2694  000682  D000               	goto	l3091
  2695  000684                     l3091:
  2696  000684  90D8               	bcf	status,0,c
  2697  000686  321A               	rrcf	___awdiv@divisor+1,f,c
  2698  000688  3219               	rrcf	___awdiv@divisor,f,c
  2699  00068A  2E1B               	decfsz	___awdiv@counter,f,c
  2700  00068C  D7EC               	goto	l3083
  2701  00068E  D000               	goto	l3095
  2702  000690                     l3095:
  2703  000690  501C               	movf	___awdiv@sign,w,c
  2704  000692  B4D8               	btfsc	status,2,c
  2705  000694  D005               	goto	l3099
  2706  000696  6C1D               	negf	___awdiv@quotient,c
  2707  000698  1E1E               	comf	___awdiv@quotient+1,f,c
  2708  00069A  B0D8               	btfsc	status,0,c
  2709  00069C  2A1E               	incf	___awdiv@quotient+1,f,c
  2710  00069E  D000               	goto	l3099
  2711  0006A0                     l3099:
  2712  0006A0  C01D  F017         	movff	___awdiv@quotient,?___awdiv
  2713  0006A4  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
  2714  0006A8  D000               	goto	l822
  2715  0006AA                     l822:
  2716  0006AA  0012               	return		;funcret
  2717  0006AC                     __end_of___awdiv:
  2718                           	opt stack 0
  2719                           tblptru	equ	0xFF8
  2720                           tblptrh	equ	0xFF7
  2721                           tblptrl	equ	0xFF6
  2722                           tablat	equ	0xFF5
  2723                           prodh	equ	0xFF4
  2724                           prodl	equ	0xFF3
  2725                           postinc0	equ	0xFEE
  2726                           wreg	equ	0xFE8
  2727                           postdec1	equ	0xFE5
  2728                           fsr1l	equ	0xFE1
  2729                           postinc2	equ	0xFDE
  2730                           postdec2	equ	0xFDD
  2731                           fsr2h	equ	0xFDA
  2732                           fsr2l	equ	0xFD9
  2733                           status	equ	0xFD8
  2734                           
  2735 ;; *************** function _Do_Init *****************
  2736 ;; Defined at:
  2737 ;;		line 130 in file "Lab10p3.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;		None
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;		None
  2742 ;; Return value:  Size  Location     Type
  2743 ;;		None               void
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0, cstack
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;Total ram usage:        0 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    7
  2758 ;; This function calls:
  2759 ;;		_DS1621_Init
  2760 ;;		_I2C_Init
  2761 ;;		_init_INTERRUPT
  2762 ;;		_init_UART
  2763 ;; This function is called by:
  2764 ;;		_main
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text8
  2769  000994                     __ptext8:
  2770                           	opt stack 0
  2771  000994                     _Do_Init:
  2772                           	opt stack 23
  2773                           
  2774                           ;Lab10p3.c: 133: init_UART();
  2775                           
  2776                           ;incstack = 0
  2777  000994  EC9B  F005         	call	_init_UART	;wreg free
  2778                           
  2779                           ;Lab10p3.c: 134: OSCCON=0x70;
  2780  000998  0E70               	movlw	112
  2781  00099A  6ED3               	movwf	4051,c	;volatile
  2782                           
  2783                           ;Lab10p3.c: 136: ADCON1=0x0F;
  2784  00099C  0E0F               	movlw	15
  2785  00099E  6EC1               	movwf	4033,c	;volatile
  2786                           
  2787                           ;Lab10p3.c: 137: TRISA = 0x00;
  2788  0009A0  0E00               	movlw	0
  2789  0009A2  6E92               	movwf	3986,c	;volatile
  2790                           
  2791                           ;Lab10p3.c: 138: TRISB = 0x01;
  2792  0009A4  0E01               	movlw	1
  2793  0009A6  6E93               	movwf	3987,c	;volatile
  2794                           
  2795                           ;Lab10p3.c: 139: TRISC = 0x00;
  2796  0009A8  0E00               	movlw	0
  2797  0009AA  6E94               	movwf	3988,c	;volatile
  2798                           
  2799                           ;Lab10p3.c: 140: TRISD = 0x00;
  2800  0009AC  0E00               	movlw	0
  2801  0009AE  6E95               	movwf	3989,c	;volatile
  2802                           
  2803                           ;Lab10p3.c: 141: TRISE = 0x00;
  2804  0009B0  0E00               	movlw	0
  2805  0009B2  6E96               	movwf	3990,c	;volatile
  2806                           
  2807                           ;Lab10p3.c: 142: RBPU=0;
  2808  0009B4  9EF1               	bcf	intcon2,7,c	;volatile
  2809                           
  2810                           ;Lab10p3.c: 143: DS1621_Init();
  2811  0009B6  EC74  F005         	call	_DS1621_Init	;wreg free
  2812                           
  2813                           ;Lab10p3.c: 144: init_INTERRUPT();
  2814  0009BA  EC27  F005         	call	_init_INTERRUPT	;wreg free
  2815                           
  2816                           ;Lab10p3.c: 145: I2C_Init(100000);
  2817  0009BE  0EA0               	movlw	160
  2818  0009C0  6E11               	movwf	I2C_Init@c,c
  2819  0009C2  0E86               	movlw	134
  2820  0009C4  6E12               	movwf	I2C_Init@c+1,c
  2821  0009C6  0E01               	movlw	1
  2822  0009C8  6E13               	movwf	I2C_Init@c+2,c
  2823  0009CA  0E00               	movlw	0
  2824  0009CC  6E14               	movwf	I2C_Init@c+3,c
  2825  0009CE  ECD9  F005         	call	_I2C_Init	;wreg free
  2826  0009D2  0012               	return		;funcret
  2827  0009D4                     __end_of_Do_Init:
  2828                           	opt stack 0
  2829                           tblptru	equ	0xFF8
  2830                           tblptrh	equ	0xFF7
  2831                           tblptrl	equ	0xFF6
  2832                           tablat	equ	0xFF5
  2833                           prodh	equ	0xFF4
  2834                           prodl	equ	0xFF3
  2835                           intcon2	equ	0xFF1
  2836                           postinc0	equ	0xFEE
  2837                           wreg	equ	0xFE8
  2838                           postdec1	equ	0xFE5
  2839                           fsr1l	equ	0xFE1
  2840                           postinc2	equ	0xFDE
  2841                           postdec2	equ	0xFDD
  2842                           fsr2h	equ	0xFDA
  2843                           fsr2l	equ	0xFD9
  2844                           status	equ	0xFD8
  2845                           
  2846 ;; *************** function _init_UART *****************
  2847 ;; Defined at:
  2848 ;;		line 95 in file "Lab10p3.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;		None               void
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;Total ram usage:        0 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    4
  2869 ;; This function calls:
  2870 ;;		_OpenUSART
  2871 ;; This function is called by:
  2872 ;;		_Do_Init
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           	psect	text9
  2877  000B36                     __ptext9:
  2878                           	opt stack 0
  2879  000B36                     _init_UART:
  2880                           	opt stack 25
  2881                           
  2882                           ;Lab10p3.c: 97: OpenUSART (0b01111111 & 0b10111111 &
  2883                           ;Lab10p3.c: 98: 0b11111110 & 0b11111101 & 0b11111111 &
  2884                           ;Lab10p3.c: 99: 0b11111111, 25);
  2885                           
  2886                           ;incstack = 0
  2887  000B36  0E00               	movlw	0
  2888  000B38  6E12               	movwf	OpenUSART@spbrg+1,c
  2889  000B3A  0E19               	movlw	25
  2890  000B3C  6E11               	movwf	OpenUSART@spbrg,c
  2891  000B3E  0E3C               	movlw	60
  2892  000B40  EC94  F003         	call	_OpenUSART
  2893                           
  2894                           ;Lab10p3.c: 100: OSCCON = 0x70;
  2895  000B44  0E70               	movlw	112
  2896  000B46  6ED3               	movwf	4051,c	;volatile
  2897  000B48  0012               	return		;funcret
  2898  000B4A                     __end_of_init_UART:
  2899                           	opt stack 0
  2900                           tblptru	equ	0xFF8
  2901                           tblptrh	equ	0xFF7
  2902                           tblptrl	equ	0xFF6
  2903                           tablat	equ	0xFF5
  2904                           prodh	equ	0xFF4
  2905                           prodl	equ	0xFF3
  2906                           intcon2	equ	0xFF1
  2907                           postinc0	equ	0xFEE
  2908                           wreg	equ	0xFE8
  2909                           postdec1	equ	0xFE5
  2910                           fsr1l	equ	0xFE1
  2911                           postinc2	equ	0xFDE
  2912                           postdec2	equ	0xFDD
  2913                           fsr2h	equ	0xFDA
  2914                           fsr2l	equ	0xFD9
  2915                           status	equ	0xFD8
  2916                           
  2917 ;; *************** function _OpenUSART *****************
  2918 ;; Defined at:
  2919 ;;		line 73 in file "E:\XC8\sources\pic18\plib\USART\uopen.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  config          1    wreg     unsigned char 
  2922 ;;  spbrg           2   16[COMRAM] unsigned int 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;  config          1   18[COMRAM] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;		None               void
  2927 ;; Registers used:
  2928 ;;		wreg, status,2
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;Total ram usage:        3 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    3
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_init_UART
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text10
  2949  000728                     __ptext10:
  2950                           	opt stack 0
  2951  000728                     _OpenUSART:
  2952                           	opt stack 25
  2953                           
  2954                           ;incstack = 0
  2955                           ;OpenUSART@config stored from wreg
  2956  000728  6E13               	movwf	OpenUSART@config,c
  2957  00072A  0E00               	movlw	0
  2958  00072C  6EAC               	movwf	4012,c	;volatile
  2959  00072E  0E00               	movlw	0
  2960  000730  6EAB               	movwf	4011,c	;volatile
  2961  000732  A013               	btfss	OpenUSART@config,0,c
  2962  000734  D002               	goto	l2613
  2963  000736  88AC               	bsf	4012,4,c	;volatile
  2964  000738  D000               	goto	l2613
  2965  00073A                     l2613:
  2966  00073A  A213               	btfss	OpenUSART@config,1,c
  2967  00073C  D003               	goto	l2617
  2968  00073E  8CAC               	bsf	4012,6,c	;volatile
  2969  000740  8CAB               	bsf	4011,6,c	;volatile
  2970  000742  D000               	goto	l2617
  2971  000744                     l2617:
  2972  000744  A413               	btfss	OpenUSART@config,2,c
  2973  000746  D002               	goto	l2621
  2974  000748  8EAC               	bsf	4012,7,c	;volatile
  2975  00074A  D000               	goto	l2621
  2976  00074C                     l2621:
  2977  00074C  A613               	btfss	OpenUSART@config,3,c
  2978  00074E  D002               	goto	l617
  2979  000750  88AB               	bsf	4011,4,c	;volatile
  2980  000752  D002               	goto	l2625
  2981  000754                     l617:
  2982  000754  8AAB               	bsf	4011,5,c	;volatile
  2983  000756  D000               	goto	l2625
  2984  000758                     l2625:
  2985  000758  B813               	btfsc	OpenUSART@config,4,c
  2986  00075A  84AC               	bsf	4012,2,c	;volatile
  2987  00075C  989E               	bcf	3998,4,c	;volatile
  2988  00075E  AA13               	btfss	OpenUSART@config,5,c
  2989  000760  D002               	goto	l2633
  2990  000762  86AB               	bsf	4011,3,c	;volatile
  2991  000764  D000               	goto	l2633
  2992  000766                     l2633:
  2993  000766  AC13               	btfss	OpenUSART@config,6,c
  2994  000768  D002               	goto	l621
  2995  00076A  8A9D               	bsf	3997,5,c	;volatile
  2996  00076C  D001               	goto	l622
  2997  00076E                     l621:
  2998  00076E  9A9D               	bcf	3997,5,c	;volatile
  2999  000770                     l622:
  3000  000770  9A9E               	bcf	3998,5,c	;volatile
  3001  000772  AE13               	btfss	OpenUSART@config,7,c
  3002  000774  D002               	goto	l623
  3003  000776  889D               	bsf	3997,4,c	;volatile
  3004  000778  D001               	goto	l624
  3005  00077A                     l623:
  3006  00077A  989D               	bcf	3997,4,c	;volatile
  3007  00077C                     l624:
  3008  00077C  C011  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3009  000780  5012               	movf	OpenUSART@spbrg+1,w,c
  3010  000782  6EB0               	movwf	4016,c	;volatile
  3011  000784  8AAC               	bsf	4012,5,c	;volatile
  3012  000786  8EAB               	bsf	4011,7,c	;volatile
  3013  000788  9C94               	bcf	3988,6,c	;volatile
  3014  00078A  8E94               	bsf	3988,7,c	;volatile
  3015  00078C  B8AC               	btfsc	4012,4,c	;volatile
  3016  00078E  BEAC               	btfsc	4012,7,c	;volatile
  3017  000790  D002               	goto	l626
  3018  000792  8C94               	bsf	3988,6,c	;volatile
  3019  000794  D000               	goto	l626
  3020  000796                     l626:
  3021  000796  0012               	return		;funcret
  3022  000798                     __end_of_OpenUSART:
  3023                           	opt stack 0
  3024                           tblptru	equ	0xFF8
  3025                           tblptrh	equ	0xFF7
  3026                           tblptrl	equ	0xFF6
  3027                           tablat	equ	0xFF5
  3028                           prodh	equ	0xFF4
  3029                           prodl	equ	0xFF3
  3030                           intcon2	equ	0xFF1
  3031                           postinc0	equ	0xFEE
  3032                           wreg	equ	0xFE8
  3033                           postdec1	equ	0xFE5
  3034                           fsr1l	equ	0xFE1
  3035                           postinc2	equ	0xFDE
  3036                           postdec2	equ	0xFDD
  3037                           fsr2h	equ	0xFDA
  3038                           fsr2l	equ	0xFD9
  3039                           status	equ	0xFD8
  3040                           
  3041 ;; *************** function _init_INTERRUPT *****************
  3042 ;; Defined at:
  3043 ;;		line 13 in file "Interrupt.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;		None
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;		None
  3048 ;; Return value:  Size  Location     Type
  3049 ;;		None               void
  3050 ;; Registers used:
  3051 ;;		wreg, status,2
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;Total ram usage:        0 bytes
  3062 ;; Hardware stack levels used:    1
  3063 ;; Hardware stack levels required when called:    3
  3064 ;; This function calls:
  3065 ;;		Nothing
  3066 ;; This function is called by:
  3067 ;;		_Do_Init
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           	psect	text11
  3072  000A4E                     __ptext11:
  3073                           	opt stack 0
  3074  000A4E                     _init_INTERRUPT:
  3075                           	opt stack 26
  3076                           
  3077                           ;Interrupt.c: 15: INTCONbits.INT0IF = 0;
  3078                           
  3079                           ;incstack = 0
  3080  000A4E  92F2               	bcf	intcon,1,c	;volatile
  3081                           
  3082                           ;Interrupt.c: 16: INTCON2bits.INTEDG0 = 0;
  3083  000A50  9CF1               	bcf	intcon2,6,c	;volatile
  3084                           
  3085                           ;Interrupt.c: 17: INTCONbits.INT0IE = 1;
  3086  000A52  88F2               	bsf	intcon,4,c	;volatile
  3087                           
  3088                           ;Interrupt.c: 18: TMR1H = 0;
  3089  000A54  0E00               	movlw	0
  3090  000A56  6ECF               	movwf	4047,c	;volatile
  3091                           
  3092                           ;Interrupt.c: 19: TMR1L = 0;
  3093  000A58  0E00               	movlw	0
  3094  000A5A  6ECE               	movwf	4046,c	;volatile
  3095                           
  3096                           ;Interrupt.c: 20: PIR1bits.TMR1IF = 0;
  3097  000A5C  909E               	bcf	3998,0,c	;volatile
  3098                           
  3099                           ;Interrupt.c: 21: PIE1bits.TMR1IE = 1;
  3100  000A5E  809D               	bsf	3997,0,c	;volatile
  3101                           
  3102                           ;Interrupt.c: 22: INTCONbits.PEIE = 1;
  3103  000A60  8CF2               	bsf	intcon,6,c	;volatile
  3104                           
  3105                           ;Interrupt.c: 23: INTCONbits.GIE = 1;
  3106  000A62  8EF2               	bsf	intcon,7,c	;volatile
  3107                           
  3108                           ;Interrupt.c: 24: nec_ok = 0;
  3109  000A64  0E00               	movlw	0
  3110  000A66  6E3B               	movwf	_nec_ok+1,c
  3111  000A68  0E00               	movlw	0
  3112  000A6A  6E3A               	movwf	_nec_ok,c
  3113                           
  3114                           ;Interrupt.c: 25: Nec_code = 0x0;
  3115  000A6C  0E00               	movlw	0
  3116  000A6E  6E32               	movwf	_Nec_code,c
  3117  000A70  0E00               	movlw	0
  3118  000A72  6E33               	movwf	_Nec_code+1,c
  3119  000A74  0E00               	movlw	0
  3120  000A76  6E34               	movwf	_Nec_code+2,c
  3121  000A78  0E00               	movlw	0
  3122  000A7A  6E35               	movwf	_Nec_code+3,c
  3123  000A7C  0012               	return		;funcret
  3124  000A7E                     __end_of_init_INTERRUPT:
  3125                           	opt stack 0
  3126                           tblptru	equ	0xFF8
  3127                           tblptrh	equ	0xFF7
  3128                           tblptrl	equ	0xFF6
  3129                           tablat	equ	0xFF5
  3130                           prodh	equ	0xFF4
  3131                           prodl	equ	0xFF3
  3132                           intcon	equ	0xFF2
  3133                           intcon2	equ	0xFF1
  3134                           postinc0	equ	0xFEE
  3135                           wreg	equ	0xFE8
  3136                           postdec1	equ	0xFE5
  3137                           fsr1l	equ	0xFE1
  3138                           postinc2	equ	0xFDE
  3139                           postdec2	equ	0xFDD
  3140                           fsr2h	equ	0xFDA
  3141                           fsr2l	equ	0xFD9
  3142                           status	equ	0xFD8
  3143                           
  3144 ;; *************** function _I2C_Init *****************
  3145 ;; Defined at:
  3146 ;;		line 14 in file "I2C.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  c               4   16[COMRAM] unsigned long 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;		None               void
  3153 ;; Registers used:
  3154 ;;		wreg, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;Total ram usage:        4 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    4
  3167 ;; This function calls:
  3168 ;;		_i2cHighScl
  3169 ;;		_i2cHighSda
  3170 ;; This function is called by:
  3171 ;;		_Do_Init
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           	psect	text12
  3176  000BB2                     __ptext12:
  3177                           	opt stack 0
  3178  000BB2                     _I2C_Init:
  3179                           	opt stack 25
  3180                           
  3181                           ;I2C.c: 16: i2cHighScl();
  3182                           
  3183                           ;incstack = 0
  3184  000BB2  ECCD  F005         	call	_i2cHighScl	;wreg free
  3185                           
  3186                           ;I2C.c: 17: i2cHighSda();
  3187  000BB6  ECEC  F005         	call	_i2cHighSda	;wreg free
  3188  000BBA  0012               	return		;funcret
  3189  000BBC                     __end_of_I2C_Init:
  3190                           	opt stack 0
  3191                           tblptru	equ	0xFF8
  3192                           tblptrh	equ	0xFF7
  3193                           tblptrl	equ	0xFF6
  3194                           tablat	equ	0xFF5
  3195                           prodh	equ	0xFF4
  3196                           prodl	equ	0xFF3
  3197                           intcon	equ	0xFF2
  3198                           intcon2	equ	0xFF1
  3199                           postinc0	equ	0xFEE
  3200                           wreg	equ	0xFE8
  3201                           postdec1	equ	0xFE5
  3202                           fsr1l	equ	0xFE1
  3203                           postinc2	equ	0xFDE
  3204                           postdec2	equ	0xFDD
  3205                           fsr2h	equ	0xFDA
  3206                           fsr2l	equ	0xFD9
  3207                           status	equ	0xFD8
  3208                           
  3209 ;; *************** function _DS1621_Init *****************
  3210 ;; Defined at:
  3211 ;;		line 21 in file "I2C_Support.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  Device          1   21[COMRAM] unsigned char 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;		None               void
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;Total ram usage:        1 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    6
  3232 ;; This function calls:
  3233 ;;		_I2C_Write_Cmd_Only
  3234 ;;		_I2C_Write_Cmd_Write_Data
  3235 ;; This function is called by:
  3236 ;;		_Do_Init
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text13
  3241  000AE8                     __ptext13:
  3242                           	opt stack 0
  3243  000AE8                     _DS1621_Init:
  3244                           	opt stack 23
  3245                           
  3246                           ;I2C_Support.c: 23: char Device = 0x48;
  3247                           
  3248                           ;incstack = 0
  3249  000AE8  0E48               	movlw	72
  3250  000AEA  6E16               	movwf	DS1621_Init@Device,c
  3251                           
  3252                           ;I2C_Support.c: 24: I2C_Write_Cmd_Write_Data (Device, 0xAC, 0x02);
  3253  000AEC  0EAC               	movlw	172
  3254  000AEE  6E13               	movwf	I2C_Write_Cmd_Write_Data@Cmd,c
  3255  000AF0  0E02               	movlw	2
  3256  000AF2  6E14               	movwf	I2C_Write_Cmd_Write_Data@Data_Out,c
  3257  000AF4  5016               	movf	DS1621_Init@Device,w,c
  3258  000AF6  EC64  F005         	call	_I2C_Write_Cmd_Write_Data
  3259                           
  3260                           ;I2C_Support.c: 25: I2C_Write_Cmd_Only(Device, 0xEE);
  3261  000AFA  0EEE               	movlw	238
  3262  000AFC  6E13               	movwf	I2C_Write_Cmd_Only@Cmd,c
  3263  000AFE  5016               	movf	DS1621_Init@Device,w,c
  3264  000B00  EC83  F005         	call	_I2C_Write_Cmd_Only
  3265  000B04  0012               	return		;funcret
  3266  000B06                     __end_of_DS1621_Init:
  3267                           	opt stack 0
  3268                           tblptru	equ	0xFF8
  3269                           tblptrh	equ	0xFF7
  3270                           tblptrl	equ	0xFF6
  3271                           tablat	equ	0xFF5
  3272                           prodh	equ	0xFF4
  3273                           prodl	equ	0xFF3
  3274                           intcon	equ	0xFF2
  3275                           intcon2	equ	0xFF1
  3276                           postinc0	equ	0xFEE
  3277                           wreg	equ	0xFE8
  3278                           postdec1	equ	0xFE5
  3279                           fsr1l	equ	0xFE1
  3280                           postinc2	equ	0xFDE
  3281                           postdec2	equ	0xFDD
  3282                           fsr2h	equ	0xFDA
  3283                           fsr2l	equ	0xFD9
  3284                           status	equ	0xFD8
  3285                           
  3286 ;; *************** function _I2C_Write_Cmd_Write_Data *****************
  3287 ;; Defined at:
  3288 ;;		line 152 in file "I2C.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  Device          1    wreg     unsigned char 
  3291 ;;  Cmd             1   18[COMRAM] unsigned char 
  3292 ;;  Data_Out        1   19[COMRAM] unsigned char 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  Device          1   20[COMRAM] unsigned char 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;		None               void
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;Total ram usage:        3 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    5
  3311 ;; This function calls:
  3312 ;;		_I2C_Start
  3313 ;;		_I2C_Stop
  3314 ;;		_I2C_Write
  3315 ;; This function is called by:
  3316 ;;		_DS1621_Init
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text14
  3321  000AC8                     __ptext14:
  3322                           	opt stack 0
  3323  000AC8                     _I2C_Write_Cmd_Write_Data:
  3324                           	opt stack 23
  3325                           
  3326                           ;incstack = 0
  3327                           ;I2C_Write_Cmd_Write_Data@Device stored from wreg
  3328  000AC8  6E15               	movwf	I2C_Write_Cmd_Write_Data@Device,c
  3329                           
  3330                           ;I2C.c: 154: I2C_Start();
  3331  000ACA  ECAE  F005         	call	_I2C_Start	;wreg free
  3332                           
  3333                           ;I2C.c: 155: I2C_Write((Device << 1) | 0);
  3334  000ACE  5015               	movf	I2C_Write_Cmd_Write_Data@Device,w,c
  3335  000AD0  2415               	addwf	I2C_Write_Cmd_Write_Data@Device,w,c
  3336  000AD2  ECEA  F004         	call	_I2C_Write
  3337                           
  3338                           ;I2C.c: 156: I2C_Write(Cmd);
  3339  000AD6  5013               	movf	I2C_Write_Cmd_Write_Data@Cmd,w,c
  3340  000AD8  ECEA  F004         	call	_I2C_Write
  3341                           
  3342                           ;I2C.c: 157: I2C_Write(Data_Out);
  3343  000ADC  5014               	movf	I2C_Write_Cmd_Write_Data@Data_Out,w,c
  3344  000ADE  ECEA  F004         	call	_I2C_Write
  3345                           
  3346                           ;I2C.c: 158: I2C_Stop();
  3347  000AE2  ECA5  F005         	call	_I2C_Stop	;wreg free
  3348  000AE6  0012               	return		;funcret
  3349  000AE8                     __end_of_I2C_Write_Cmd_Write_Data:
  3350                           	opt stack 0
  3351                           tblptru	equ	0xFF8
  3352                           tblptrh	equ	0xFF7
  3353                           tblptrl	equ	0xFF6
  3354                           tablat	equ	0xFF5
  3355                           prodh	equ	0xFF4
  3356                           prodl	equ	0xFF3
  3357                           intcon	equ	0xFF2
  3358                           intcon2	equ	0xFF1
  3359                           postinc0	equ	0xFEE
  3360                           wreg	equ	0xFE8
  3361                           postdec1	equ	0xFE5
  3362                           fsr1l	equ	0xFE1
  3363                           postinc2	equ	0xFDE
  3364                           postdec2	equ	0xFDD
  3365                           fsr2h	equ	0xFDA
  3366                           fsr2l	equ	0xFD9
  3367                           status	equ	0xFD8
  3368                           
  3369 ;; *************** function _I2C_Write_Cmd_Only *****************
  3370 ;; Defined at:
  3371 ;;		line 144 in file "I2C.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  Device          1    wreg     unsigned char 
  3374 ;;  Cmd             1   18[COMRAM] unsigned char 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  Device          1   19[COMRAM] unsigned char 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;		None               void
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3386 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;Total ram usage:        2 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    5
  3393 ;; This function calls:
  3394 ;;		_I2C_Start
  3395 ;;		_I2C_Stop
  3396 ;;		_I2C_Write
  3397 ;; This function is called by:
  3398 ;;		_DS1621_Init
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           	psect	text15
  3403  000B06                     __ptext15:
  3404                           	opt stack 0
  3405  000B06                     _I2C_Write_Cmd_Only:
  3406                           	opt stack 23
  3407                           
  3408                           ;incstack = 0
  3409                           ;I2C_Write_Cmd_Only@Device stored from wreg
  3410  000B06  6E14               	movwf	I2C_Write_Cmd_Only@Device,c
  3411                           
  3412                           ;I2C.c: 146: I2C_Start();
  3413  000B08  ECAE  F005         	call	_I2C_Start	;wreg free
  3414                           
  3415                           ;I2C.c: 147: I2C_Write((Device << 1) | 0);
  3416  000B0C  5014               	movf	I2C_Write_Cmd_Only@Device,w,c
  3417  000B0E  2414               	addwf	I2C_Write_Cmd_Only@Device,w,c
  3418  000B10  ECEA  F004         	call	_I2C_Write
  3419                           
  3420                           ;I2C.c: 148: I2C_Write(Cmd);
  3421  000B14  5013               	movf	I2C_Write_Cmd_Only@Cmd,w,c
  3422  000B16  ECEA  F004         	call	_I2C_Write
  3423                           
  3424                           ;I2C.c: 149: I2C_Stop();
  3425  000B1A  ECA5  F005         	call	_I2C_Stop	;wreg free
  3426  000B1E  0012               	return		;funcret
  3427  000B20                     __end_of_I2C_Write_Cmd_Only:
  3428                           	opt stack 0
  3429                           tblptru	equ	0xFF8
  3430                           tblptrh	equ	0xFF7
  3431                           tblptrl	equ	0xFF6
  3432                           tablat	equ	0xFF5
  3433                           prodh	equ	0xFF4
  3434                           prodl	equ	0xFF3
  3435                           intcon	equ	0xFF2
  3436                           intcon2	equ	0xFF1
  3437                           postinc0	equ	0xFEE
  3438                           wreg	equ	0xFE8
  3439                           postdec1	equ	0xFE5
  3440                           fsr1l	equ	0xFE1
  3441                           postinc2	equ	0xFDE
  3442                           postdec2	equ	0xFDD
  3443                           fsr2h	equ	0xFDA
  3444                           fsr2l	equ	0xFD9
  3445                           status	equ	0xFD8
  3446                           
  3447 ;; *************** function _DS3231_Setup_Time *****************
  3448 ;; Defined at:
  3449 ;;		line 67 in file "I2C_Support.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;  Address         1   19[COMRAM] unsigned char 
  3454 ;;  Device          1   18[COMRAM] unsigned char 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;		None               void
  3457 ;; Registers used:
  3458 ;;		wreg, status,2, status,0, cstack
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;Total ram usage:        2 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:    5
  3471 ;; This function calls:
  3472 ;;		_I2C_Start
  3473 ;;		_I2C_Stop
  3474 ;;		_I2C_Write
  3475 ;; This function is called by:
  3476 ;;		_main
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text16
  3481  000798                     __ptext16:
  3482                           	opt stack 0
  3483  000798                     _DS3231_Setup_Time:
  3484                           	opt stack 25
  3485                           
  3486                           ;I2C_Support.c: 70: char Device = 0x68;
  3487                           
  3488                           ;incstack = 0
  3489  000798  0E68               	movlw	104
  3490  00079A  6E13               	movwf	DS3231_Setup_Time@Device,c
  3491                           
  3492                           ;I2C_Support.c: 71: char Address = 0x00;
  3493  00079C  0E00               	movlw	0
  3494  00079E  6E14               	movwf	DS3231_Setup_Time@Address,c
  3495                           
  3496                           ;I2C_Support.c: 73: second = 0x00;
  3497  0007A0  0E00               	movlw	0
  3498  0007A2  6E54               	movwf	_second,c
  3499                           
  3500                           ;I2C_Support.c: 74: minute = 0x00;
  3501  0007A4  0E00               	movlw	0
  3502  0007A6  6E50               	movwf	_minute,c
  3503                           
  3504                           ;I2C_Support.c: 75: hour = 0x09;
  3505  0007A8  0E09               	movlw	9
  3506  0007AA  6E4E               	movwf	_hour,c
  3507                           
  3508                           ;I2C_Support.c: 76: dow = 0x00;
  3509  0007AC  0E00               	movlw	0
  3510  0007AE  6E4C               	movwf	_dow,c
  3511                           
  3512                           ;I2C_Support.c: 77: day = 0x21;
  3513  0007B0  0E21               	movlw	33
  3514  0007B2  6E4B               	movwf	_day,c
  3515                           
  3516                           ;I2C_Support.c: 78: month = 0x11;
  3517  0007B4  0E11               	movlw	17
  3518  0007B6  6E51               	movwf	_month,c
  3519                           
  3520                           ;I2C_Support.c: 79: year = 0x28;
  3521  0007B8  0E28               	movlw	40
  3522  0007BA  6E60               	movwf	_year,c
  3523                           
  3524                           ;I2C_Support.c: 81: I2C_Start();
  3525  0007BC  ECAE  F005         	call	_I2C_Start	;wreg free
  3526                           
  3527                           ;I2C_Support.c: 82: I2C_Write((Device << 1) | 0);
  3528  0007C0  5013               	movf	DS3231_Setup_Time@Device,w,c
  3529  0007C2  2413               	addwf	DS3231_Setup_Time@Device,w,c
  3530  0007C4  ECEA  F004         	call	_I2C_Write
  3531                           
  3532                           ;I2C_Support.c: 83: I2C_Write(Address);
  3533  0007C8  5014               	movf	DS3231_Setup_Time@Address,w,c
  3534  0007CA  ECEA  F004         	call	_I2C_Write
  3535                           
  3536                           ;I2C_Support.c: 84: I2C_Write(second);
  3537  0007CE  5054               	movf	_second,w,c
  3538  0007D0  ECEA  F004         	call	_I2C_Write
  3539                           
  3540                           ;I2C_Support.c: 85: I2C_Write(minute);
  3541  0007D4  5050               	movf	_minute,w,c
  3542  0007D6  ECEA  F004         	call	_I2C_Write
  3543                           
  3544                           ;I2C_Support.c: 86: I2C_Write(hour);
  3545  0007DA  504E               	movf	_hour,w,c
  3546  0007DC  ECEA  F004         	call	_I2C_Write
  3547                           
  3548                           ;I2C_Support.c: 87: I2C_Write(dow);
  3549  0007E0  504C               	movf	_dow,w,c
  3550  0007E2  ECEA  F004         	call	_I2C_Write
  3551                           
  3552                           ;I2C_Support.c: 88: I2C_Write(day);
  3553  0007E6  504B               	movf	_day,w,c
  3554  0007E8  ECEA  F004         	call	_I2C_Write
  3555                           
  3556                           ;I2C_Support.c: 89: I2C_Write(month);
  3557  0007EC  5051               	movf	_month,w,c
  3558  0007EE  ECEA  F004         	call	_I2C_Write
  3559                           
  3560                           ;I2C_Support.c: 90: I2C_Write(year);
  3561  0007F2  5060               	movf	_year,w,c
  3562  0007F4  ECEA  F004         	call	_I2C_Write
  3563                           
  3564                           ;I2C_Support.c: 91: I2C_Stop();
  3565  0007F8  ECA5  F005         	call	_I2C_Stop	;wreg free
  3566  0007FC  0012               	return		;funcret
  3567  0007FE                     __end_of_DS3231_Setup_Time:
  3568                           	opt stack 0
  3569                           tblptru	equ	0xFF8
  3570                           tblptrh	equ	0xFF7
  3571                           tblptrl	equ	0xFF6
  3572                           tablat	equ	0xFF5
  3573                           prodh	equ	0xFF4
  3574                           prodl	equ	0xFF3
  3575                           intcon	equ	0xFF2
  3576                           intcon2	equ	0xFF1
  3577                           postinc0	equ	0xFEE
  3578                           wreg	equ	0xFE8
  3579                           postdec1	equ	0xFE5
  3580                           fsr1l	equ	0xFE1
  3581                           postinc2	equ	0xFDE
  3582                           postdec2	equ	0xFDD
  3583                           fsr2h	equ	0xFDA
  3584                           fsr2l	equ	0xFD9
  3585                           status	equ	0xFD8
  3586                           
  3587 ;; *************** function _DS3231_Read_Time *****************
  3588 ;; Defined at:
  3589 ;;		line 45 in file "I2C_Support.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  Device          1   20[COMRAM] unsigned char 
  3594 ;;  Address         1   19[COMRAM] unsigned char 
  3595 ;;  Data_Ret        1    0        unsigned char 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;		None               void
  3598 ;; Registers used:
  3599 ;;		wreg, status,2, status,0, cstack
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;Total ram usage:        2 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; Hardware stack levels required when called:    6
  3612 ;; This function calls:
  3613 ;;		_I2C_ReStart
  3614 ;;		_I2C_Read
  3615 ;;		_I2C_Start
  3616 ;;		_I2C_Stop
  3617 ;;		_I2C_Write
  3618 ;; This function is called by:
  3619 ;;		_main
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text17
  3624  0007FE                     __ptext17:
  3625                           	opt stack 0
  3626  0007FE                     _DS3231_Read_Time:
  3627                           	opt stack 24
  3628                           
  3629                           ;I2C_Support.c: 47: char Device = 0x68;
  3630                           
  3631                           ;incstack = 0
  3632  0007FE  0E68               	movlw	104
  3633  000800  6E15               	movwf	DS3231_Read_Time@Device,c
  3634                           
  3635                           ;I2C_Support.c: 48: char Address = 0x00;
  3636  000802  0E00               	movlw	0
  3637  000804  6E14               	movwf	DS3231_Read_Time@Address,c
  3638                           
  3639                           ;I2C_Support.c: 49: char Data_Ret;
  3640                           ;I2C_Support.c: 50: I2C_Start();
  3641  000806  ECAE  F005         	call	_I2C_Start	;wreg free
  3642                           
  3643                           ;I2C_Support.c: 51: I2C_Write((Device << 1) | 0);
  3644  00080A  5015               	movf	DS3231_Read_Time@Device,w,c
  3645  00080C  2415               	addwf	DS3231_Read_Time@Device,w,c
  3646  00080E  ECEA  F004         	call	_I2C_Write
  3647                           
  3648                           ;I2C_Support.c: 52: I2C_Write(Address);
  3649  000812  5014               	movf	DS3231_Read_Time@Address,w,c
  3650  000814  ECEA  F004         	call	_I2C_Write
  3651                           
  3652                           ;I2C_Support.c: 53: I2C_ReStart();
  3653  000818  EC90  F005         	call	_I2C_ReStart	;wreg free
  3654                           
  3655                           ;I2C_Support.c: 54: I2C_Write((Device << 1) | 1);
  3656  00081C  80D8               	bsf	status,0,c
  3657  00081E  3415               	rlcf	DS3231_Read_Time@Device,w,c
  3658  000820  ECEA  F004         	call	_I2C_Write
  3659                           
  3660                           ;I2C_Support.c: 56: second = I2C_Read(1);
  3661  000824  0E01               	movlw	1
  3662  000826  EC85  F004         	call	_I2C_Read
  3663  00082A  6E54               	movwf	_second,c
  3664                           
  3665                           ;I2C_Support.c: 57: minute = I2C_Read(1);
  3666  00082C  0E01               	movlw	1
  3667  00082E  EC85  F004         	call	_I2C_Read
  3668  000832  6E50               	movwf	_minute,c
  3669                           
  3670                           ;I2C_Support.c: 58: hour = I2C_Read(1);
  3671  000834  0E01               	movlw	1
  3672  000836  EC85  F004         	call	_I2C_Read
  3673  00083A  6E4E               	movwf	_hour,c
  3674                           
  3675                           ;I2C_Support.c: 59: dow = I2C_Read(1);
  3676  00083C  0E01               	movlw	1
  3677  00083E  EC85  F004         	call	_I2C_Read
  3678  000842  6E4C               	movwf	_dow,c
  3679                           
  3680                           ;I2C_Support.c: 60: day = I2C_Read(1);
  3681  000844  0E01               	movlw	1
  3682  000846  EC85  F004         	call	_I2C_Read
  3683  00084A  6E4B               	movwf	_day,c
  3684                           
  3685                           ;I2C_Support.c: 61: month = I2C_Read(1);
  3686  00084C  0E01               	movlw	1
  3687  00084E  EC85  F004         	call	_I2C_Read
  3688  000852  6E51               	movwf	_month,c
  3689                           
  3690                           ;I2C_Support.c: 62: year = I2C_Read(0);
  3691  000854  0E00               	movlw	0
  3692  000856  EC85  F004         	call	_I2C_Read
  3693  00085A  6E60               	movwf	_year,c
  3694                           
  3695                           ;I2C_Support.c: 64: I2C_Stop();
  3696  00085C  ECA5  F005         	call	_I2C_Stop	;wreg free
  3697  000860  0012               	return		;funcret
  3698  000862                     __end_of_DS3231_Read_Time:
  3699                           	opt stack 0
  3700                           tblptru	equ	0xFF8
  3701                           tblptrh	equ	0xFF7
  3702                           tblptrl	equ	0xFF6
  3703                           tablat	equ	0xFF5
  3704                           prodh	equ	0xFF4
  3705                           prodl	equ	0xFF3
  3706                           intcon	equ	0xFF2
  3707                           intcon2	equ	0xFF1
  3708                           postinc0	equ	0xFEE
  3709                           wreg	equ	0xFE8
  3710                           postdec1	equ	0xFE5
  3711                           fsr1l	equ	0xFE1
  3712                           postinc2	equ	0xFDE
  3713                           postdec2	equ	0xFDD
  3714                           fsr2h	equ	0xFDA
  3715                           fsr2l	equ	0xFD9
  3716                           status	equ	0xFD8
  3717                           
  3718 ;; *************** function _DS1621_Read_Temp *****************
  3719 ;; Defined at:
  3720 ;;		line 29 in file "I2C_Support.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;		None
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  Device          1   23[COMRAM] unsigned char 
  3725 ;;  Data_Ret        1   22[COMRAM] unsigned char 
  3726 ;;  Cmd             1   21[COMRAM] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  2   19[COMRAM] int 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3736 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;Total ram usage:        5 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    6
  3743 ;; This function calls:
  3744 ;;		_I2C_ReStart
  3745 ;;		_I2C_Read
  3746 ;;		_I2C_Start
  3747 ;;		_I2C_Stop
  3748 ;;		_I2C_Write
  3749 ;; This function is called by:
  3750 ;;		_main
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text18
  3755  000A12                     __ptext18:
  3756                           	opt stack 0
  3757  000A12                     _DS1621_Read_Temp:
  3758                           	opt stack 24
  3759                           
  3760                           ;I2C_Support.c: 31: char Device = 0x48;
  3761                           
  3762                           ;incstack = 0
  3763  000A12  0E48               	movlw	72
  3764  000A14  6E18               	movwf	DS1621_Read_Temp@Device,c
  3765                           
  3766                           ;I2C_Support.c: 32: char Cmd = 0xAA;
  3767  000A16  0EAA               	movlw	170
  3768  000A18  6E16               	movwf	DS1621_Read_Temp@Cmd,c
  3769                           
  3770                           ;I2C_Support.c: 34: char Data_Ret;
  3771                           ;I2C_Support.c: 35: I2C_Start();
  3772  000A1A  ECAE  F005         	call	_I2C_Start	;wreg free
  3773                           
  3774                           ;I2C_Support.c: 36: I2C_Write((Device << 1) | 0);
  3775  000A1E  5018               	movf	DS1621_Read_Temp@Device,w,c
  3776  000A20  2418               	addwf	DS1621_Read_Temp@Device,w,c
  3777  000A22  ECEA  F004         	call	_I2C_Write
  3778                           
  3779                           ;I2C_Support.c: 37: I2C_Write(Cmd);
  3780  000A26  5016               	movf	DS1621_Read_Temp@Cmd,w,c
  3781  000A28  ECEA  F004         	call	_I2C_Write
  3782                           
  3783                           ;I2C_Support.c: 38: I2C_ReStart();
  3784  000A2C  EC90  F005         	call	_I2C_ReStart	;wreg free
  3785                           
  3786                           ;I2C_Support.c: 39: I2C_Write((Device << 1) | 1);
  3787  000A30  80D8               	bsf	status,0,c
  3788  000A32  3418               	rlcf	DS1621_Read_Temp@Device,w,c
  3789  000A34  ECEA  F004         	call	_I2C_Write
  3790                           
  3791                           ;I2C_Support.c: 40: Data_Ret = I2C_Read(0);
  3792  000A38  0E00               	movlw	0
  3793  000A3A  EC85  F004         	call	_I2C_Read
  3794  000A3E  6E17               	movwf	DS1621_Read_Temp@Data_Ret,c
  3795                           
  3796                           ;I2C_Support.c: 41: I2C_Stop();
  3797  000A40  ECA5  F005         	call	_I2C_Stop	;wreg free
  3798                           
  3799                           ;I2C_Support.c: 42: return Data_Ret;
  3800  000A44  C017  F014         	movff	DS1621_Read_Temp@Data_Ret,?_DS1621_Read_Temp
  3801  000A48  6A15               	clrf	?_DS1621_Read_Temp+1,c
  3802  000A4A  D000               	goto	l187
  3803  000A4C                     l187:
  3804  000A4C  0012               	return		;funcret
  3805  000A4E                     __end_of_DS1621_Read_Temp:
  3806                           	opt stack 0
  3807                           tblptru	equ	0xFF8
  3808                           tblptrh	equ	0xFF7
  3809                           tblptrl	equ	0xFF6
  3810                           tablat	equ	0xFF5
  3811                           prodh	equ	0xFF4
  3812                           prodl	equ	0xFF3
  3813                           intcon	equ	0xFF2
  3814                           intcon2	equ	0xFF1
  3815                           postinc0	equ	0xFEE
  3816                           wreg	equ	0xFE8
  3817                           postdec1	equ	0xFE5
  3818                           fsr1l	equ	0xFE1
  3819                           postinc2	equ	0xFDE
  3820                           postdec2	equ	0xFDD
  3821                           fsr2h	equ	0xFDA
  3822                           fsr2l	equ	0xFD9
  3823                           status	equ	0xFD8
  3824                           
  3825 ;; *************** function _I2C_Write *****************
  3826 ;; Defined at:
  3827 ;;		line 41 in file "I2C.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  outByte         1    wreg     unsigned char 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  outByte         1   16[COMRAM] unsigned char 
  3832 ;;  n               1   17[COMRAM] unsigned char 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;		None               void
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;Total ram usage:        2 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    4
  3849 ;; This function calls:
  3850 ;;		_i2cHighScl
  3851 ;;		_i2cHighSda
  3852 ;;		_i2cLowScl
  3853 ;;		_i2cLowSda
  3854 ;; This function is called by:
  3855 ;;		_I2C_Write_Cmd_Only
  3856 ;;		_I2C_Write_Cmd_Write_Data
  3857 ;;		_DS1621_Read_Temp
  3858 ;;		_DS3231_Read_Time
  3859 ;;		_DS3231_Setup_Time
  3860 ;;		_I2C_Write_Address_Read_One_Byte
  3861 ;;		_I2C_Write_Address_Write_One_Byte
  3862 ;;		_I2C_Write_Cmd_Read_One_Byte
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text19
  3867  0009D4                     __ptext19:
  3868                           	opt stack 0
  3869  0009D4                     _I2C_Write:
  3870                           	opt stack 23
  3871                           
  3872                           ;incstack = 0
  3873                           ;I2C_Write@outByte stored from wreg
  3874  0009D4  6E11               	movwf	I2C_Write@outByte,c
  3875                           
  3876                           ;I2C.c: 43: unsigned char n;
  3877                           ;I2C.c: 44: for(n=0; n<8; n++)
  3878  0009D6  0E00               	movlw	0
  3879  0009D8  6E12               	movwf	I2C_Write@n,c
  3880  0009DA                     l1239:
  3881  0009DA  0E07               	movlw	7
  3882  0009DC  6412               	cpfsgt	I2C_Write@n,c
  3883  0009DE  D001               	goto	l135
  3884  0009E0  D011               	goto	l1257
  3885  0009E2                     l135:
  3886                           
  3887                           ;I2C.c: 45: {
  3888                           ;I2C.c: 46: if(outByte&0x80) i2cHighSda();
  3889  0009E2  AE11               	btfss	I2C_Write@outByte,7,c
  3890  0009E4  D003               	goto	l1245
  3891  0009E6  ECEC  F005         	call	_i2cHighSda	;wreg free
  3892  0009EA  D003               	goto	l1247
  3893  0009EC                     l1245:
  3894                           
  3895                           ;I2C.c: 47: else i2cLowSda();
  3896  0009EC  ECE3  F005         	call	_i2cLowSda	;wreg free
  3897  0009F0  D000               	goto	l1247
  3898  0009F2                     l1247:
  3899                           
  3900                           ;I2C.c: 48: i2cHighScl();
  3901  0009F2  ECCD  F005         	call	_i2cHighScl	;wreg free
  3902                           
  3903                           ;I2C.c: 49: i2cLowScl();
  3904  0009F6  ECE8  F005         	call	_i2cLowScl	;wreg free
  3905                           
  3906                           ;I2C.c: 50: outByte = outByte << 1;
  3907  0009FA  5011               	movf	I2C_Write@outByte,w,c
  3908  0009FC  2411               	addwf	I2C_Write@outByte,w,c
  3909  0009FE  6E11               	movwf	I2C_Write@outByte,c
  3910  000A00  2A12               	incf	I2C_Write@n,f,c
  3911  000A02  D7EB               	goto	l1239
  3912  000A04                     l1257:
  3913                           
  3914                           ;I2C.c: 51: }
  3915                           ;I2C.c: 52: i2cHighSda();
  3916  000A04  ECEC  F005         	call	_i2cHighSda	;wreg free
  3917                           
  3918                           ;I2C.c: 53: i2cHighScl();
  3919  000A08  ECCD  F005         	call	_i2cHighScl	;wreg free
  3920                           
  3921                           ;I2C.c: 54: i2cLowScl();
  3922  000A0C  ECE8  F005         	call	_i2cLowScl	;wreg free
  3923  000A10  0012               	return		;funcret
  3924  000A12                     __end_of_I2C_Write:
  3925                           	opt stack 0
  3926                           tblptru	equ	0xFF8
  3927                           tblptrh	equ	0xFF7
  3928                           tblptrl	equ	0xFF6
  3929                           tablat	equ	0xFF5
  3930                           prodh	equ	0xFF4
  3931                           prodl	equ	0xFF3
  3932                           intcon	equ	0xFF2
  3933                           intcon2	equ	0xFF1
  3934                           postinc0	equ	0xFEE
  3935                           wreg	equ	0xFE8
  3936                           postdec1	equ	0xFE5
  3937                           fsr1l	equ	0xFE1
  3938                           postinc2	equ	0xFDE
  3939                           postdec2	equ	0xFDD
  3940                           fsr2h	equ	0xFDA
  3941                           fsr2l	equ	0xFD9
  3942                           status	equ	0xFD8
  3943                           
  3944 ;; *************** function _I2C_Stop *****************
  3945 ;; Defined at:
  3946 ;;		line 88 in file "I2C.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;		None
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;		None
  3951 ;; Return value:  Size  Location     Type
  3952 ;;		None               void
  3953 ;; Registers used:
  3954 ;;		wreg, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;Total ram usage:        0 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; Hardware stack levels required when called:    4
  3967 ;; This function calls:
  3968 ;;		_i2cHighScl
  3969 ;;		_i2cHighSda
  3970 ;;		_i2cLowScl
  3971 ;;		_i2cLowSda
  3972 ;; This function is called by:
  3973 ;;		_I2C_Write_Cmd_Only
  3974 ;;		_I2C_Write_Cmd_Write_Data
  3975 ;;		_DS1621_Read_Temp
  3976 ;;		_DS3231_Read_Time
  3977 ;;		_DS3231_Setup_Time
  3978 ;;		_I2C_Write_Address_Read_One_Byte
  3979 ;;		_I2C_Write_Address_Write_One_Byte
  3980 ;;		_I2C_Write_Cmd_Read_One_Byte
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text20
  3985  000B4A                     __ptext20:
  3986                           	opt stack 0
  3987  000B4A                     _I2C_Stop:
  3988                           	opt stack 23
  3989                           
  3990                           ;I2C.c: 90: i2cLowScl();
  3991                           
  3992                           ;incstack = 0
  3993  000B4A  ECE8  F005         	call	_i2cLowScl	;wreg free
  3994                           
  3995                           ;I2C.c: 91: i2cLowSda();
  3996  000B4E  ECE3  F005         	call	_i2cLowSda	;wreg free
  3997                           
  3998                           ;I2C.c: 92: i2cHighScl();
  3999  000B52  ECCD  F005         	call	_i2cHighScl	;wreg free
  4000                           
  4001                           ;I2C.c: 93: i2cHighSda();
  4002  000B56  ECEC  F005         	call	_i2cHighSda	;wreg free
  4003  000B5A  0012               	return		;funcret
  4004  000B5C                     __end_of_I2C_Stop:
  4005                           	opt stack 0
  4006                           tblptru	equ	0xFF8
  4007                           tblptrh	equ	0xFF7
  4008                           tblptrl	equ	0xFF6
  4009                           tablat	equ	0xFF5
  4010                           prodh	equ	0xFF4
  4011                           prodl	equ	0xFF3
  4012                           intcon	equ	0xFF2
  4013                           intcon2	equ	0xFF1
  4014                           postinc0	equ	0xFEE
  4015                           wreg	equ	0xFE8
  4016                           postdec1	equ	0xFE5
  4017                           fsr1l	equ	0xFE1
  4018                           postinc2	equ	0xFDE
  4019                           postdec2	equ	0xFDD
  4020                           fsr2h	equ	0xFDA
  4021                           fsr2l	equ	0xFD9
  4022                           status	equ	0xFD8
  4023                           
  4024 ;; *************** function _I2C_Start *****************
  4025 ;; Defined at:
  4026 ;;		line 71 in file "I2C.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;		None
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;		None               void
  4033 ;; Registers used:
  4034 ;;		wreg, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;Total ram usage:        0 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:    4
  4047 ;; This function calls:
  4048 ;;		_i2cHighScl
  4049 ;;		_i2cHighSda
  4050 ;;		_i2cLowScl
  4051 ;;		_i2cLowSda
  4052 ;; This function is called by:
  4053 ;;		_I2C_Write_Cmd_Only
  4054 ;;		_I2C_Write_Cmd_Write_Data
  4055 ;;		_DS1621_Read_Temp
  4056 ;;		_DS3231_Read_Time
  4057 ;;		_DS3231_Setup_Time
  4058 ;;		_I2C_Write_Address_Read_One_Byte
  4059 ;;		_I2C_Write_Address_Write_One_Byte
  4060 ;;		_I2C_Write_Cmd_Read_One_Byte
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text21
  4065  000B5C                     __ptext21:
  4066                           	opt stack 0
  4067  000B5C                     _I2C_Start:
  4068                           	opt stack 23
  4069                           
  4070                           ;I2C.c: 73: i2cHighSda();
  4071                           
  4072                           ;incstack = 0
  4073  000B5C  ECEC  F005         	call	_i2cHighSda	;wreg free
  4074                           
  4075                           ;I2C.c: 74: i2cHighScl();
  4076  000B60  ECCD  F005         	call	_i2cHighScl	;wreg free
  4077                           
  4078                           ;I2C.c: 75: i2cLowSda();
  4079  000B64  ECE3  F005         	call	_i2cLowSda	;wreg free
  4080                           
  4081                           ;I2C.c: 76: i2cLowScl();
  4082  000B68  ECE8  F005         	call	_i2cLowScl	;wreg free
  4083  000B6C  0012               	return		;funcret
  4084  000B6E                     __end_of_I2C_Start:
  4085                           	opt stack 0
  4086                           tblptru	equ	0xFF8
  4087                           tblptrh	equ	0xFF7
  4088                           tblptrl	equ	0xFF6
  4089                           tablat	equ	0xFF5
  4090                           prodh	equ	0xFF4
  4091                           prodl	equ	0xFF3
  4092                           intcon	equ	0xFF2
  4093                           intcon2	equ	0xFF1
  4094                           postinc0	equ	0xFEE
  4095                           wreg	equ	0xFE8
  4096                           postdec1	equ	0xFE5
  4097                           fsr1l	equ	0xFE1
  4098                           postinc2	equ	0xFDE
  4099                           postdec2	equ	0xFDD
  4100                           fsr2h	equ	0xFDA
  4101                           fsr2l	equ	0xFD9
  4102                           status	equ	0xFD8
  4103                           
  4104 ;; *************** function _I2C_Read *****************
  4105 ;; Defined at:
  4106 ;;		line 20 in file "I2C.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;  ack             1    wreg     unsigned char 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;  ack             1   16[COMRAM] unsigned char 
  4111 ;;  inByte          1   18[COMRAM] unsigned char 
  4112 ;;  n               1   17[COMRAM] unsigned char 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      unsigned char 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;Total ram usage:        3 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:    5
  4129 ;; This function calls:
  4130 ;;		_i2cAck
  4131 ;;		_i2cHighScl
  4132 ;;		_i2cHighSda
  4133 ;;		_i2cLowScl
  4134 ;;		_i2cNack
  4135 ;; This function is called by:
  4136 ;;		_DS1621_Read_Temp
  4137 ;;		_DS3231_Read_Time
  4138 ;;		_I2C_Write_Address_Read_One_Byte
  4139 ;;		_I2C_Write_Cmd_Read_One_Byte
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text22
  4144  00090A                     __ptext22:
  4145                           	opt stack 0
  4146  00090A                     _I2C_Read:
  4147                           	opt stack 24
  4148                           
  4149                           ;incstack = 0
  4150                           ;I2C_Read@ack stored from wreg
  4151  00090A  6E11               	movwf	I2C_Read@ack,c
  4152                           
  4153                           ;I2C.c: 22: unsigned char inByte, n;
  4154                           ;I2C.c: 23: i2cHighSda();
  4155  00090C  ECEC  F005         	call	_i2cHighSda	;wreg free
  4156                           
  4157                           ;I2C.c: 24: for (n=0; n<8; n++)
  4158  000910  0E00               	movlw	0
  4159  000912  6E12               	movwf	I2C_Read@n,c
  4160  000914                     l1379:
  4161  000914  0E07               	movlw	7
  4162  000916  6412               	cpfsgt	I2C_Read@n,c
  4163  000918  D001               	goto	l1383
  4164  00091A  D00F               	goto	l1397
  4165  00091C                     l1383:
  4166                           
  4167                           ;I2C.c: 25: {
  4168                           ;I2C.c: 26: i2cHighScl();
  4169  00091C  ECCD  F005         	call	_i2cHighScl	;wreg free
  4170                           
  4171                           ;I2C.c: 28: if (PORTCbits.RC1)
  4172  000920  A282               	btfss	3970,1,c	;volatile
  4173  000922  D003               	goto	l1389
  4174                           
  4175                           ;I2C.c: 29: inByte = (inByte << 1) | 0x01;
  4176  000924  80D8               	bsf	status,0,c
  4177  000926  3613               	rlcf	I2C_Read@inByte,f,c
  4178  000928  D004               	goto	l1391
  4179  00092A                     l1389:
  4180                           
  4181                           ;I2C.c: 30: else
  4182                           ;I2C.c: 31: inByte = inByte << 1;
  4183  00092A  5013               	movf	I2C_Read@inByte,w,c
  4184  00092C  2413               	addwf	I2C_Read@inByte,w,c
  4185  00092E  6E13               	movwf	I2C_Read@inByte,c
  4186  000930  D000               	goto	l1391
  4187  000932                     l1391:
  4188                           
  4189                           ;I2C.c: 32: i2cLowScl();
  4190  000932  ECE8  F005         	call	_i2cLowScl	;wreg free
  4191  000936  2A12               	incf	I2C_Read@n,f,c
  4192  000938  D7ED               	goto	l1379
  4193  00093A                     l1397:
  4194                           
  4195                           ;I2C.c: 33: }
  4196                           ;I2C.c: 34: if (ack) i2cAck();
  4197  00093A  5011               	movf	I2C_Read@ack,w,c
  4198  00093C  B4D8               	btfsc	status,2,c
  4199  00093E  D003               	goto	l1401
  4200  000940  ECB7  F005         	call	_i2cAck	;wreg free
  4201  000944  D003               	goto	l1403
  4202  000946                     l1401:
  4203                           
  4204                           ;I2C.c: 35: else i2cNack();
  4205  000946  ECDE  F005         	call	_i2cNack	;wreg free
  4206  00094A  D000               	goto	l1403
  4207  00094C                     l1403:
  4208                           
  4209                           ;I2C.c: 38: return(inByte);
  4210  00094C  5013               	movf	I2C_Read@inByte,w,c
  4211  00094E  D000               	goto	l132
  4212  000950                     l132:
  4213  000950  0012               	return		;funcret
  4214  000952                     __end_of_I2C_Read:
  4215                           	opt stack 0
  4216                           tblptru	equ	0xFF8
  4217                           tblptrh	equ	0xFF7
  4218                           tblptrl	equ	0xFF6
  4219                           tablat	equ	0xFF5
  4220                           prodh	equ	0xFF4
  4221                           prodl	equ	0xFF3
  4222                           intcon	equ	0xFF2
  4223                           intcon2	equ	0xFF1
  4224                           postinc0	equ	0xFEE
  4225                           wreg	equ	0xFE8
  4226                           postdec1	equ	0xFE5
  4227                           fsr1l	equ	0xFE1
  4228                           postinc2	equ	0xFDE
  4229                           postdec2	equ	0xFDD
  4230                           fsr2h	equ	0xFDA
  4231                           fsr2l	equ	0xFD9
  4232                           status	equ	0xFD8
  4233                           
  4234 ;; *************** function _i2cNack *****************
  4235 ;; Defined at:
  4236 ;;		line 57 in file "I2C.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;		None               void
  4243 ;; Registers used:
  4244 ;;		wreg, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;Total ram usage:        0 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    4
  4257 ;; This function calls:
  4258 ;;		_i2cHighScl
  4259 ;;		_i2cLowScl
  4260 ;; This function is called by:
  4261 ;;		_I2C_Read
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text23
  4266  000BBC                     __ptext23:
  4267                           	opt stack 0
  4268  000BBC                     _i2cNack:
  4269                           	opt stack 24
  4270                           
  4271                           ;I2C.c: 59: i2cHighScl();
  4272                           
  4273                           ;incstack = 0
  4274  000BBC  ECCD  F005         	call	_i2cHighScl	;wreg free
  4275                           
  4276                           ;I2C.c: 60: i2cLowScl();
  4277  000BC0  ECE8  F005         	call	_i2cLowScl	;wreg free
  4278  000BC4  0012               	return		;funcret
  4279  000BC6                     __end_of_i2cNack:
  4280                           	opt stack 0
  4281                           tblptru	equ	0xFF8
  4282                           tblptrh	equ	0xFF7
  4283                           tblptrl	equ	0xFF6
  4284                           tablat	equ	0xFF5
  4285                           prodh	equ	0xFF4
  4286                           prodl	equ	0xFF3
  4287                           intcon	equ	0xFF2
  4288                           intcon2	equ	0xFF1
  4289                           postinc0	equ	0xFEE
  4290                           wreg	equ	0xFE8
  4291                           postdec1	equ	0xFE5
  4292                           fsr1l	equ	0xFE1
  4293                           postinc2	equ	0xFDE
  4294                           postdec2	equ	0xFDD
  4295                           fsr2h	equ	0xFDA
  4296                           fsr2l	equ	0xFD9
  4297                           status	equ	0xFD8
  4298                           
  4299 ;; *************** function _i2cAck *****************
  4300 ;; Defined at:
  4301 ;;		line 63 in file "I2C.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;		None               void
  4308 ;; Registers used:
  4309 ;;		wreg, cstack
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    4
  4322 ;; This function calls:
  4323 ;;		_i2cHighScl
  4324 ;;		_i2cHighSda
  4325 ;;		_i2cLowScl
  4326 ;;		_i2cLowSda
  4327 ;; This function is called by:
  4328 ;;		_I2C_Read
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text24
  4333  000B6E                     __ptext24:
  4334                           	opt stack 0
  4335  000B6E                     _i2cAck:
  4336                           	opt stack 24
  4337                           
  4338                           ;I2C.c: 65: i2cLowSda();
  4339                           
  4340                           ;incstack = 0
  4341  000B6E  ECE3  F005         	call	_i2cLowSda	;wreg free
  4342                           
  4343                           ;I2C.c: 66: i2cHighScl();
  4344  000B72  ECCD  F005         	call	_i2cHighScl	;wreg free
  4345                           
  4346                           ;I2C.c: 67: i2cLowScl();
  4347  000B76  ECE8  F005         	call	_i2cLowScl	;wreg free
  4348                           
  4349                           ;I2C.c: 68: i2cHighSda();
  4350  000B7A  ECEC  F005         	call	_i2cHighSda	;wreg free
  4351  000B7E  0012               	return		;funcret
  4352  000B80                     __end_of_i2cAck:
  4353                           	opt stack 0
  4354                           tblptru	equ	0xFF8
  4355                           tblptrh	equ	0xFF7
  4356                           tblptrl	equ	0xFF6
  4357                           tablat	equ	0xFF5
  4358                           prodh	equ	0xFF4
  4359                           prodl	equ	0xFF3
  4360                           intcon	equ	0xFF2
  4361                           intcon2	equ	0xFF1
  4362                           postinc0	equ	0xFEE
  4363                           wreg	equ	0xFE8
  4364                           postdec1	equ	0xFE5
  4365                           fsr1l	equ	0xFE1
  4366                           postinc2	equ	0xFDE
  4367                           postdec2	equ	0xFDD
  4368                           fsr2h	equ	0xFDA
  4369                           fsr2l	equ	0xFD9
  4370                           status	equ	0xFD8
  4371                           
  4372 ;; *************** function _I2C_ReStart *****************
  4373 ;; Defined at:
  4374 ;;		line 79 in file "I2C.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;		None               void
  4381 ;; Registers used:
  4382 ;;		wreg, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;Total ram usage:        0 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    4
  4395 ;; This function calls:
  4396 ;;		_i2cHighScl
  4397 ;;		_i2cHighSda
  4398 ;;		_i2cLowScl
  4399 ;;		_i2cLowSda
  4400 ;; This function is called by:
  4401 ;;		_DS1621_Read_Temp
  4402 ;;		_DS3231_Read_Time
  4403 ;;		_I2C_Write_Address_Read_One_Byte
  4404 ;;		_I2C_Write_Cmd_Read_One_Byte
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text25
  4409  000B20                     __ptext25:
  4410                           	opt stack 0
  4411  000B20                     _I2C_ReStart:
  4412                           	opt stack 25
  4413                           
  4414                           ;I2C.c: 81: i2cLowScl();
  4415                           
  4416                           ;incstack = 0
  4417  000B20  ECE8  F005         	call	_i2cLowScl	;wreg free
  4418                           
  4419                           ;I2C.c: 82: i2cHighSda();
  4420  000B24  ECEC  F005         	call	_i2cHighSda	;wreg free
  4421                           
  4422                           ;I2C.c: 83: i2cHighScl();
  4423  000B28  ECCD  F005         	call	_i2cHighScl	;wreg free
  4424                           
  4425                           ;I2C.c: 84: i2cLowSda();
  4426  000B2C  ECE3  F005         	call	_i2cLowSda	;wreg free
  4427                           
  4428                           ;I2C.c: 85: i2cLowScl();
  4429  000B30  ECE8  F005         	call	_i2cLowScl	;wreg free
  4430  000B34  0012               	return		;funcret
  4431  000B36                     __end_of_I2C_ReStart:
  4432                           	opt stack 0
  4433                           tblptru	equ	0xFF8
  4434                           tblptrh	equ	0xFF7
  4435                           tblptrl	equ	0xFF6
  4436                           tablat	equ	0xFF5
  4437                           prodh	equ	0xFF4
  4438                           prodl	equ	0xFF3
  4439                           intcon	equ	0xFF2
  4440                           intcon2	equ	0xFF1
  4441                           postinc0	equ	0xFEE
  4442                           wreg	equ	0xFE8
  4443                           postdec1	equ	0xFE5
  4444                           fsr1l	equ	0xFE1
  4445                           postinc2	equ	0xFDE
  4446                           postdec2	equ	0xFDD
  4447                           fsr2h	equ	0xFDA
  4448                           fsr2l	equ	0xFD9
  4449                           status	equ	0xFD8
  4450                           
  4451 ;; *************** function _i2cLowSda *****************
  4452 ;; Defined at:
  4453 ;;		line 102 in file "I2C.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;		None
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;		None               void
  4460 ;; Registers used:
  4461 ;;		None
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;Total ram usage:        0 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:    3
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_I2C_Write
  4478 ;;		_i2cAck
  4479 ;;		_I2C_Start
  4480 ;;		_I2C_ReStart
  4481 ;;		_I2C_Stop
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text26
  4486  000BC6                     __ptext26:
  4487                           	opt stack 0
  4488  000BC6                     _i2cLowSda:
  4489                           	opt stack 23
  4490                           
  4491                           ;I2C.c: 104: PORTCbits.RC1 = 0;
  4492                           
  4493                           ;incstack = 0
  4494  000BC6  9282               	bcf	3970,1,c	;volatile
  4495                           
  4496                           ;I2C.c: 105: TRISCbits.RC1 = 0;
  4497  000BC8  9294               	bcf	3988,1,c	;volatile
  4498                           
  4499                           ;I2C.c: 106: _delay((unsigned long)((2)*(8000000/4000000.0)));
  4500  000BCA  D000               	nop2		;2 cycle nop
  4501  000BCC  D000               	nop2		;2 cycle nop
  4502  000BCE  0012               	return		;funcret
  4503  000BD0                     __end_of_i2cLowSda:
  4504                           	opt stack 0
  4505                           tblptru	equ	0xFF8
  4506                           tblptrh	equ	0xFF7
  4507                           tblptrl	equ	0xFF6
  4508                           tablat	equ	0xFF5
  4509                           prodh	equ	0xFF4
  4510                           prodl	equ	0xFF3
  4511                           intcon	equ	0xFF2
  4512                           intcon2	equ	0xFF1
  4513                           postinc0	equ	0xFEE
  4514                           wreg	equ	0xFE8
  4515                           postdec1	equ	0xFE5
  4516                           fsr1l	equ	0xFE1
  4517                           postinc2	equ	0xFDE
  4518                           postdec2	equ	0xFDD
  4519                           fsr2h	equ	0xFDA
  4520                           fsr2l	equ	0xFD9
  4521                           status	equ	0xFD8
  4522                           
  4523 ;; *************** function _i2cLowScl *****************
  4524 ;; Defined at:
  4525 ;;		line 115 in file "I2C.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;		None
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;		None
  4530 ;; Return value:  Size  Location     Type
  4531 ;;		None               void
  4532 ;; Registers used:
  4533 ;;		None
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;Total ram usage:        0 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; Hardware stack levels required when called:    3
  4546 ;; This function calls:
  4547 ;;		Nothing
  4548 ;; This function is called by:
  4549 ;;		_I2C_Read
  4550 ;;		_I2C_Write
  4551 ;;		_i2cNack
  4552 ;;		_i2cAck
  4553 ;;		_I2C_Start
  4554 ;;		_I2C_ReStart
  4555 ;;		_I2C_Stop
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text27
  4560  000BD0                     __ptext27:
  4561                           	opt stack 0
  4562  000BD0                     _i2cLowScl:
  4563                           	opt stack 23
  4564                           
  4565                           ;I2C.c: 117: PORTCbits.RC2 = 0;
  4566                           
  4567                           ;incstack = 0
  4568  000BD0  9482               	bcf	3970,2,c	;volatile
  4569                           
  4570                           ;I2C.c: 118: TRISCbits.RC2 = 0;
  4571  000BD2  9494               	bcf	3988,2,c	;volatile
  4572                           
  4573                           ;I2C.c: 119: _delay((unsigned long)((1)*(8000000/4000000.0)));
  4574  000BD4  D000               	nop2		;2 cycle nop
  4575  000BD6  0012               	return		;funcret
  4576  000BD8                     __end_of_i2cLowScl:
  4577                           	opt stack 0
  4578                           tblptru	equ	0xFF8
  4579                           tblptrh	equ	0xFF7
  4580                           tblptrl	equ	0xFF6
  4581                           tablat	equ	0xFF5
  4582                           prodh	equ	0xFF4
  4583                           prodl	equ	0xFF3
  4584                           intcon	equ	0xFF2
  4585                           intcon2	equ	0xFF1
  4586                           postinc0	equ	0xFEE
  4587                           wreg	equ	0xFE8
  4588                           postdec1	equ	0xFE5
  4589                           fsr1l	equ	0xFE1
  4590                           postinc2	equ	0xFDE
  4591                           postdec2	equ	0xFDD
  4592                           fsr2h	equ	0xFDA
  4593                           fsr2l	equ	0xFD9
  4594                           status	equ	0xFD8
  4595                           
  4596 ;; *************** function _i2cHighSda *****************
  4597 ;; Defined at:
  4598 ;;		line 96 in file "I2C.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;		None               void
  4605 ;; Registers used:
  4606 ;;		None
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    3
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_I2C_Init
  4623 ;;		_I2C_Read
  4624 ;;		_I2C_Write
  4625 ;;		_i2cAck
  4626 ;;		_I2C_Start
  4627 ;;		_I2C_ReStart
  4628 ;;		_I2C_Stop
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text28
  4633  000BD8                     __ptext28:
  4634                           	opt stack 0
  4635  000BD8                     _i2cHighSda:
  4636                           	opt stack 25
  4637                           
  4638                           ;I2C.c: 98: TRISCbits.RC1 = 1;
  4639                           
  4640                           ;incstack = 0
  4641  000BD8  8294               	bsf	3988,1,c	;volatile
  4642                           
  4643                           ;I2C.c: 99: _delay((unsigned long)((2)*(8000000/4000000.0)));
  4644  000BDA  D000               	nop2		;2 cycle nop
  4645  000BDC  D000               	nop2		;2 cycle nop
  4646  000BDE  0012               	return		;funcret
  4647  000BE0                     __end_of_i2cHighSda:
  4648                           	opt stack 0
  4649                           tblptru	equ	0xFF8
  4650                           tblptrh	equ	0xFF7
  4651                           tblptrl	equ	0xFF6
  4652                           tablat	equ	0xFF5
  4653                           prodh	equ	0xFF4
  4654                           prodl	equ	0xFF3
  4655                           intcon	equ	0xFF2
  4656                           intcon2	equ	0xFF1
  4657                           postinc0	equ	0xFEE
  4658                           wreg	equ	0xFE8
  4659                           postdec1	equ	0xFE5
  4660                           fsr1l	equ	0xFE1
  4661                           postinc2	equ	0xFDE
  4662                           postdec2	equ	0xFDD
  4663                           fsr2h	equ	0xFDA
  4664                           fsr2l	equ	0xFD9
  4665                           status	equ	0xFD8
  4666                           
  4667 ;; *************** function _i2cHighScl *****************
  4668 ;; Defined at:
  4669 ;;		line 109 in file "I2C.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;		None               void
  4676 ;; Registers used:
  4677 ;;		wreg
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;Total ram usage:        0 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    3
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_I2C_Init
  4694 ;;		_I2C_Read
  4695 ;;		_I2C_Write
  4696 ;;		_i2cNack
  4697 ;;		_i2cAck
  4698 ;;		_I2C_Start
  4699 ;;		_I2C_ReStart
  4700 ;;		_I2C_Stop
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text29
  4705  000B9A                     __ptext29:
  4706                           	opt stack 0
  4707  000B9A                     _i2cHighScl:
  4708                           	opt stack 25
  4709                           
  4710                           ;I2C.c: 111: TRISCbits.RC2 = 1;
  4711                           
  4712                           ;incstack = 0
  4713  000B9A  8494               	bsf	3988,2,c	;volatile
  4714                           
  4715                           ;I2C.c: 112: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4716  000B9C  0E06               	movlw	6
  4717  000B9E                     u2547:
  4718  000B9E  2EE8               	decfsz	wreg,f,c
  4719  000BA0  D7FE               	goto	u2547
  4720  000BA2  D000               	nop2		;nop
  4721  000BA4  0012               	return		;funcret
  4722  000BA6                     __end_of_i2cHighScl:
  4723                           	opt stack 0
  4724                           tblptru	equ	0xFF8
  4725                           tblptrh	equ	0xFF7
  4726                           tblptrl	equ	0xFF6
  4727                           tablat	equ	0xFF5
  4728                           prodh	equ	0xFF4
  4729                           prodl	equ	0xFF3
  4730                           intcon	equ	0xFF2
  4731                           intcon2	equ	0xFF1
  4732                           postinc0	equ	0xFEE
  4733                           wreg	equ	0xFE8
  4734                           postdec1	equ	0xFE5
  4735                           fsr1l	equ	0xFE1
  4736                           postinc2	equ	0xFDE
  4737                           postdec2	equ	0xFDD
  4738                           fsr2h	equ	0xFDA
  4739                           fsr2l	equ	0xFD9
  4740                           status	equ	0xFD8
  4741                           
  4742 ;; *************** function _chkisr *****************
  4743 ;; Defined at:
  4744 ;;		line 28 in file "Interrupt.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;		None
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;		None               void
  4751 ;; Registers used:
  4752 ;;		wreg, status,2, status,0, cstack
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4762 ;;Total ram usage:       14 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    2
  4765 ;; This function calls:
  4766 ;;		_INT0_isr
  4767 ;;		_TIMER1_isr
  4768 ;; This function is called by:
  4769 ;;		Interrupt level 2
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           	psect	intcode
  4774  000008                     __pintcode:
  4775                           	opt stack 0
  4776  000008                     _chkisr:
  4777                           	opt stack 23
  4778                           
  4779                           ;incstack = 0
  4780  000008  CFFA F003          	movff	pclath,??_chkisr
  4781  00000C  CFFB F004          	movff	pclatu,??_chkisr+1
  4782  000010  CFE9 F005          	movff	fsr0l,??_chkisr+2
  4783  000014  ED56  F003         	call	int_func,f	;refresh shadow registers
  4784                           pclatu	equ	0xFFB
  4785                           pclath	equ	0xFFA
  4786                           tblptru	equ	0xFF8
  4787                           tblptrh	equ	0xFF7
  4788                           tblptrl	equ	0xFF6
  4789                           tablat	equ	0xFF5
  4790                           prodh	equ	0xFF4
  4791                           prodl	equ	0xFF3
  4792                           intcon	equ	0xFF2
  4793                           intcon2	equ	0xFF1
  4794                           postinc0	equ	0xFEE
  4795                           fsr0l	equ	0xFE9
  4796                           wreg	equ	0xFE8
  4797                           postdec1	equ	0xFE5
  4798                           fsr1l	equ	0xFE1
  4799                           postinc2	equ	0xFDE
  4800                           postdec2	equ	0xFDD
  4801                           fsr2h	equ	0xFDA
  4802                           fsr2l	equ	0xFD9
  4803                           status	equ	0xFD8
  4804                           
  4805                           	psect	intcode_body
  4806  0006AC                     __pintcode_body:
  4807                           	opt stack 23
  4808  0006AC                     int_func:
  4809                           	opt stack 23
  4810  0006AC  0006               	pop		; remove dummy address from shadow register refresh
  4811  0006AE  CFEA F006          	movff	fsr0h,??_chkisr+3
  4812  0006B2  CFE1 F007          	movff	fsr1l,??_chkisr+4
  4813  0006B6  CFE2 F008          	movff	fsr1h,??_chkisr+5
  4814  0006BA  CFD9 F009          	movff	fsr2l,??_chkisr+6
  4815  0006BE  CFDA F00A          	movff	fsr2h,??_chkisr+7
  4816  0006C2  CFF3 F00B          	movff	prodl,??_chkisr+8
  4817  0006C6  CFF4 F00C          	movff	prodh,??_chkisr+9
  4818  0006CA  CFF6 F00D          	movff	tblptrl,??_chkisr+10
  4819  0006CE  CFF7 F00E          	movff	tblptrh,??_chkisr+11
  4820  0006D2  CFF8 F00F          	movff	tblptru,??_chkisr+12
  4821  0006D6  CFF5 F010          	movff	tablat,??_chkisr+13
  4822                           
  4823                           ;Interrupt.c: 30: if (PIR1bits.TMR1IF == 1) TIMER1_isr();
  4824  0006DA  A09E               	btfss	3998,0,c	;volatile
  4825  0006DC  D003               	goto	i2l2211
  4826  0006DE  ECD3  F005         	call	_TIMER1_isr	;wreg free
  4827  0006E2  D000               	goto	i2l2211
  4828  0006E4                     i2l2211:
  4829                           
  4830                           ;Interrupt.c: 31: if (INTCONbits.INT0IF == 1) INT0_isr();
  4831  0006E4  A2F2               	btfss	intcon,1,c	;volatile
  4832  0006E6  D003               	goto	i2l205
  4833  0006E8  ECFB  F001         	call	_INT0_isr	;wreg free
  4834  0006EC  D000               	goto	i2l205
  4835  0006EE                     i2l205:
  4836  0006EE  C010  FFF5         	movff	??_chkisr+13,tablat
  4837  0006F2  C00F  FFF8         	movff	??_chkisr+12,tblptru
  4838  0006F6  C00E  FFF7         	movff	??_chkisr+11,tblptrh
  4839  0006FA  C00D  FFF6         	movff	??_chkisr+10,tblptrl
  4840  0006FE  C00C  FFF4         	movff	??_chkisr+9,prodh
  4841  000702  C00B  FFF3         	movff	??_chkisr+8,prodl
  4842  000706  C00A  FFDA         	movff	??_chkisr+7,fsr2h
  4843  00070A  C009  FFD9         	movff	??_chkisr+6,fsr2l
  4844  00070E  C008  FFE2         	movff	??_chkisr+5,fsr1h
  4845  000712  C007  FFE1         	movff	??_chkisr+4,fsr1l
  4846  000716  C006  FFEA         	movff	??_chkisr+3,fsr0h
  4847  00071A  C005  FFE9         	movff	??_chkisr+2,fsr0l
  4848  00071E  C004  FFFB         	movff	??_chkisr+1,pclatu
  4849  000722  C003  FFFA         	movff	??_chkisr,pclath
  4850  000726  0011               	retfie		f
  4851  000728                     __end_of_chkisr:
  4852                           	opt stack 0
  4853                           pclatu	equ	0xFFB
  4854                           pclath	equ	0xFFA
  4855                           tblptru	equ	0xFF8
  4856                           tblptrh	equ	0xFF7
  4857                           tblptrl	equ	0xFF6
  4858                           tablat	equ	0xFF5
  4859                           prodh	equ	0xFF4
  4860                           prodl	equ	0xFF3
  4861                           intcon	equ	0xFF2
  4862                           intcon2	equ	0xFF1
  4863                           postinc0	equ	0xFEE
  4864                           fsr0h	equ	0xFEA
  4865                           fsr0l	equ	0xFE9
  4866                           wreg	equ	0xFE8
  4867                           postdec1	equ	0xFE5
  4868                           fsr1h	equ	0xFE2
  4869                           fsr1l	equ	0xFE1
  4870                           postinc2	equ	0xFDE
  4871                           postdec2	equ	0xFDD
  4872                           fsr2h	equ	0xFDA
  4873                           fsr2l	equ	0xFD9
  4874                           status	equ	0xFD8
  4875                           
  4876 ;; *************** function _TIMER1_isr *****************
  4877 ;; Defined at:
  4878 ;;		line 34 in file "Interrupt.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;		None
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;		None
  4883 ;; Return value:  Size  Location     Type
  4884 ;;		None               void
  4885 ;; Registers used:
  4886 ;;		wreg, status,2
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4896 ;;Total ram usage:        0 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_chkisr
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text31
  4906  000BA6                     __ptext31:
  4907                           	opt stack 0
  4908  000BA6                     _TIMER1_isr:
  4909                           	opt stack 24
  4910                           
  4911                           ;Interrupt.c: 36: Nec_state = 0;
  4912                           
  4913                           ;incstack = 0
  4914  000BA6  0E00               	movlw	0
  4915  000BA8  6E42               	movwf	_Nec_state,c
  4916                           
  4917                           ;Interrupt.c: 37: INTCON2bits.INTEDG0 = 0;
  4918  000BAA  9CF1               	bcf	intcon2,6,c	;volatile
  4919                           
  4920                           ;Interrupt.c: 38: T1CONbits.TMR1ON = 0;
  4921  000BAC  90CD               	bcf	4045,0,c	;volatile
  4922                           
  4923                           ;Interrupt.c: 39: PIR1bits.TMR1IF = 0;
  4924  000BAE  909E               	bcf	3998,0,c	;volatile
  4925  000BB0  0012               	return		;funcret
  4926  000BB2                     __end_of_TIMER1_isr:
  4927                           	opt stack 0
  4928                           pclatu	equ	0xFFB
  4929                           pclath	equ	0xFFA
  4930                           tblptru	equ	0xFF8
  4931                           tblptrh	equ	0xFF7
  4932                           tblptrl	equ	0xFF6
  4933                           tablat	equ	0xFF5
  4934                           prodh	equ	0xFF4
  4935                           prodl	equ	0xFF3
  4936                           intcon	equ	0xFF2
  4937                           intcon2	equ	0xFF1
  4938                           postinc0	equ	0xFEE
  4939                           fsr0h	equ	0xFEA
  4940                           fsr0l	equ	0xFE9
  4941                           wreg	equ	0xFE8
  4942                           postdec1	equ	0xFE5
  4943                           fsr1h	equ	0xFE2
  4944                           fsr1l	equ	0xFE1
  4945                           postinc2	equ	0xFDE
  4946                           postdec2	equ	0xFDD
  4947                           fsr2h	equ	0xFDA
  4948                           fsr2l	equ	0xFD9
  4949                           status	equ	0xFD8
  4950                           
  4951 ;; *************** function _INT0_isr *****************
  4952 ;; Defined at:
  4953 ;;		line 48 in file "Interrupt.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;		None               void
  4960 ;; Registers used:
  4961 ;;		wreg, status,2, status,0, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;Total ram usage:        2 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    1
  4974 ;; This function calls:
  4975 ;;		_force_nec_state0
  4976 ;; This function is called by:
  4977 ;;		_chkisr
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           	psect	text32
  4982  0003F6                     __ptext32:
  4983                           	opt stack 0
  4984  0003F6                     _INT0_isr:
  4985                           	opt stack 23
  4986                           
  4987                           ;Interrupt.c: 51: INTCONbits.INT0IF = 0;
  4988                           
  4989                           ;incstack = 0
  4990  0003F6  92F2               	bcf	intcon,1,c	;volatile
  4991                           
  4992                           ;Interrupt.c: 52: if (Nec_state != 0)
  4993  0003F8  5042               	movf	_Nec_state,w,c
  4994  0003FA  B4D8               	btfsc	status,2,c
  4995  0003FC  D09A               	goto	i2l1693
  4996                           
  4997                           ;Interrupt.c: 53: {
  4998                           ;Interrupt.c: 54: Time_Elapsed = (TMR1H << 8) | TMR1L;
  4999  0003FE  50CE               	movf	4046,w,c	;volatile
  5000  000400  CFCF F001          	movff	4047,??_INT0_isr	;volatile
  5001  000404  6A02               	clrf	(??_INT0_isr+1)& (0+255),c
  5002  000406  C001  F002         	movff	??_INT0_isr,??_INT0_isr+1
  5003  00040A  6A01               	clrf	??_INT0_isr,c
  5004  00040C  1001               	iorwf	??_INT0_isr,w,c
  5005  00040E  6E36               	movwf	_Time_Elapsed,c
  5006  000410  5002               	movf	??_INT0_isr+1,w,c
  5007  000412  6E37               	movwf	_Time_Elapsed+1,c
  5008                           
  5009                           ;Interrupt.c: 55: TMR1H = 0;
  5010  000414  0E00               	movlw	0
  5011  000416  6ECF               	movwf	4047,c	;volatile
  5012                           
  5013                           ;Interrupt.c: 56: TMR1L = 0;
  5014  000418  0E00               	movlw	0
  5015  00041A  6ECE               	movwf	4046,c	;volatile
  5016                           
  5017                           ;Interrupt.c: 57: }
  5018                           ;Interrupt.c: 59: switch(Nec_state)
  5019  00041C  D08A               	goto	i2l1693
  5020  00041E                     i2l1627:
  5021                           
  5022                           ;Interrupt.c: 62: {
  5023                           ;Interrupt.c: 63: TMR1H = 0;
  5024  00041E  0E00               	movlw	0
  5025  000420  6ECF               	movwf	4047,c	;volatile
  5026                           
  5027                           ;Interrupt.c: 64: TMR1L = 0;
  5028  000422  0E00               	movlw	0
  5029  000424  6ECE               	movwf	4046,c	;volatile
  5030                           
  5031                           ;Interrupt.c: 65: PIR1bits.TMR1IF = 0;
  5032  000426  909E               	bcf	3998,0,c	;volatile
  5033                           
  5034                           ;Interrupt.c: 66: T1CON= 0x90;
  5035  000428  0E90               	movlw	144
  5036  00042A  6ECD               	movwf	4045,c	;volatile
  5037                           
  5038                           ;Interrupt.c: 67: T1CONbits.TMR1ON = 1;
  5039  00042C  80CD               	bsf	4045,0,c	;volatile
  5040                           
  5041                           ;Interrupt.c: 68: bit_count = 0;
  5042  00042E  0E00               	movlw	0
  5043  000430  6E49               	movwf	_bit_count,c
  5044                           
  5045                           ;Interrupt.c: 69: Nec_code = 0;
  5046  000432  0E00               	movlw	0
  5047  000434  6E32               	movwf	_Nec_code,c
  5048  000436  0E00               	movlw	0
  5049  000438  6E33               	movwf	_Nec_code+1,c
  5050  00043A  0E00               	movlw	0
  5051  00043C  6E34               	movwf	_Nec_code+2,c
  5052  00043E  0E00               	movlw	0
  5053  000440  6E35               	movwf	_Nec_code+3,c
  5054                           
  5055                           ;Interrupt.c: 70: Nec_state = 1;
  5056  000442  0E01               	movlw	1
  5057  000444  6E42               	movwf	_Nec_state,c
  5058  000446  D073               	goto	i2l1687
  5059                           
  5060                           ;Interrupt.c: 72: return;
  5061                           
  5062                           ;Interrupt.c: 71: INTCON2bits.INTEDG0 = 1;
  5063  000448  D085               	goto	i2l217
  5064  00044A                     i2l1637:
  5065                           
  5066                           ;Interrupt.c: 76: {
  5067                           ;Interrupt.c: 77: if (Time_Elapsed > 8500 && Time_Elapsed < 9500)
  5068  00044A  0E35               	movlw	53
  5069  00044C  5C36               	subwf	_Time_Elapsed,w,c
  5070  00044E  0E21               	movlw	33
  5071  000450  5837               	subwfb	_Time_Elapsed+1,w,c
  5072  000452  A0D8               	btfss	status,0,c
  5073  000454  D009               	goto	i2l1643
  5074  000456  0E1C               	movlw	28
  5075  000458  5C36               	subwf	_Time_Elapsed,w,c
  5076  00045A  0E25               	movlw	37
  5077  00045C  5837               	subwfb	_Time_Elapsed+1,w,c
  5078  00045E  B0D8               	btfsc	status,0,c
  5079  000460  D003               	goto	i2l1643
  5080                           
  5081                           ;Interrupt.c: 78: {
  5082                           ;Interrupt.c: 79: Nec_state = 2;
  5083  000462  0E02               	movlw	2
  5084  000464  6E42               	movwf	_Nec_state,c
  5085                           
  5086                           ;Interrupt.c: 80: }
  5087  000466  D02A               	goto	i2l1669
  5088  000468                     i2l1643:
  5089                           
  5090                           ;Interrupt.c: 81: else
  5091                           ;Interrupt.c: 82: {
  5092                           ;Interrupt.c: 83: force_nec_state0();
  5093  000468  ECF0  F005         	call	_force_nec_state0	;wreg free
  5094  00046C  D027               	goto	i2l1669
  5095  00046E  D026               	goto	i2l1669
  5096                           
  5097                           ;Interrupt.c: 86: return;
  5098                           
  5099                           ;Interrupt.c: 84: }
  5100                           ;Interrupt.c: 85: INTCON2bits.INTEDG0 = 0;
  5101  000470  D071               	goto	i2l217
  5102  000472                     i2l1649:
  5103                           
  5104                           ;Interrupt.c: 90: {
  5105                           ;Interrupt.c: 91: if (Time_Elapsed > 4000 && Time_Elapsed < 5000 )
  5106  000472  0EA1               	movlw	161
  5107  000474  5C36               	subwf	_Time_Elapsed,w,c
  5108  000476  0E0F               	movlw	15
  5109  000478  5837               	subwfb	_Time_Elapsed+1,w,c
  5110  00047A  A0D8               	btfss	status,0,c
  5111  00047C  D009               	goto	i2l1655
  5112  00047E  0E88               	movlw	136
  5113  000480  5C36               	subwf	_Time_Elapsed,w,c
  5114  000482  0E13               	movlw	19
  5115  000484  5837               	subwfb	_Time_Elapsed+1,w,c
  5116  000486  B0D8               	btfsc	status,0,c
  5117  000488  D003               	goto	i2l1655
  5118  00048A                     
  5119                           ;Interrupt.c: 92: {
  5120                           ;Interrupt.c: 93: Nec_state = 3;
  5121  00048A  0E03               	movlw	3
  5122  00048C  6E42               	movwf	_Nec_state,c
  5123                           
  5124                           ;Interrupt.c: 94: }
  5125  00048E  D04F               	goto	i2l1687
  5126  000490                     i2l1655:
  5127                           
  5128                           ;Interrupt.c: 95: else
  5129                           ;Interrupt.c: 96: {
  5130                           ;Interrupt.c: 97: force_nec_state0();
  5131  000490  ECF0  F005         	call	_force_nec_state0	;wreg free
  5132  000494  D04C               	goto	i2l1687
  5133  000496  D04B               	goto	i2l1687
  5134                           
  5135                           ;Interrupt.c: 100: return;
  5136                           
  5137                           ;Interrupt.c: 98: }
  5138                           ;Interrupt.c: 99: INTCON2bits.INTEDG0 = 1;
  5139  000498  D05D               	goto	i2l217
  5140  00049A                     i2l1661:
  5141                           
  5142                           ;Interrupt.c: 104: {
  5143                           ;Interrupt.c: 105: if (Time_Elapsed > 400 && Time_Elapsed < 700)
  5144  00049A  0E91               	movlw	145
  5145  00049C  5C36               	subwf	_Time_Elapsed,w,c
  5146  00049E  0E01               	movlw	1
  5147  0004A0  5837               	subwfb	_Time_Elapsed+1,w,c
  5148  0004A2  A0D8               	btfss	status,0,c
  5149  0004A4  D008               	goto	i2l1667
  5150  0004A6  0EBC               	movlw	188
  5151  0004A8  5C36               	subwf	_Time_Elapsed,w,c
  5152  0004AA  0E02               	movlw	2
  5153  0004AC  5837               	subwfb	_Time_Elapsed+1,w,c
  5154  0004AE  B0D8               	btfsc	status,0,c
  5155  0004B0  D002               	goto	i2l1667
  5156                           
  5157                           ;Interrupt.c: 106: {
  5158                           ;Interrupt.c: 107: Nec_state = 4;
  5159  0004B2  0E04               	movlw	4
  5160  0004B4  D7D7               	goto	L1
  5161  0004B6                     i2l1667:
  5162                           
  5163                           ;Interrupt.c: 109: else
  5164                           ;Interrupt.c: 110: {
  5165                           ;Interrupt.c: 111: force_nec_state0();
  5166  0004B6  ECF0  F005         	call	_force_nec_state0	;wreg free
  5167  0004BA  D000               	goto	i2l1669
  5168  0004BC                     i2l1669:
  5169                           
  5170                           ;Interrupt.c: 112: }
  5171                           ;Interrupt.c: 113: INTCON2bits.INTEDG0 = 0;
  5172  0004BC  9CF1               	bcf	intcon2,6,c	;volatile
  5173                           
  5174                           ;Interrupt.c: 114: return;
  5175  0004BE  D04A               	goto	i2l217
  5176  0004C0                     i2l1673:
  5177                           
  5178                           ;Interrupt.c: 118: {
  5179                           ;Interrupt.c: 119: if (Time_Elapsed > 400 && Time_Elapsed < 1800)
  5180  0004C0  0E91               	movlw	145
  5181  0004C2  5C36               	subwf	_Time_Elapsed,w,c
  5182  0004C4  0E01               	movlw	1
  5183  0004C6  5837               	subwfb	_Time_Elapsed+1,w,c
  5184  0004C8  A0D8               	btfss	status,0,c
  5185  0004CA  D02E               	goto	i2l1685
  5186  0004CC  0E08               	movlw	8
  5187  0004CE  5C36               	subwf	_Time_Elapsed,w,c
  5188  0004D0  0E07               	movlw	7
  5189  0004D2  5837               	subwfb	_Time_Elapsed+1,w,c
  5190  0004D4  B0D8               	btfsc	status,0,c
  5191  0004D6  D028               	goto	i2l1685
  5192                           
  5193                           ;Interrupt.c: 120: {
  5194                           ;Interrupt.c: 121: Nec_code = Nec_code << 1;
  5195  0004D8  90D8               	bcf	status,0,c
  5196  0004DA  3432               	rlcf	_Nec_code,w,c
  5197  0004DC  6E32               	movwf	_Nec_code,c
  5198  0004DE  3433               	rlcf	_Nec_code+1,w,c
  5199  0004E0  6E33               	movwf	_Nec_code+1,c
  5200  0004E2  3434               	rlcf	_Nec_code+2,w,c
  5201  0004E4  6E34               	movwf	_Nec_code+2,c
  5202  0004E6  3435               	rlcf	_Nec_code+3,w,c
  5203  0004E8  6E35               	movwf	_Nec_code+3,c
  5204                           
  5205                           ;Interrupt.c: 122: if (Time_Elapsed > 1000)
  5206  0004EA  0EE9               	movlw	233
  5207  0004EC  5C36               	subwf	_Time_Elapsed,w,c
  5208  0004EE  0E03               	movlw	3
  5209  0004F0  5837               	subwfb	_Time_Elapsed+1,w,c
  5210  0004F2  A0D8               	btfss	status,0,c
  5211  0004F4  D00C               	goto	i2l229
  5212                           
  5213                           ;Interrupt.c: 123: {
  5214                           ;Interrupt.c: 124: Nec_code = Nec_code + 1;
  5215  0004F6  0E01               	movlw	1
  5216  0004F8  2432               	addwf	_Nec_code,w,c
  5217  0004FA  6E32               	movwf	_Nec_code,c
  5218  0004FC  0E00               	movlw	0
  5219  0004FE  2033               	addwfc	_Nec_code+1,w,c
  5220  000500  6E33               	movwf	_Nec_code+1,c
  5221  000502  0E00               	movlw	0
  5222  000504  2034               	addwfc	_Nec_code+2,w,c
  5223  000506  6E34               	movwf	_Nec_code+2,c
  5224  000508  0E00               	movlw	0
  5225  00050A  2035               	addwfc	_Nec_code+3,w,c
  5226  00050C  6E35               	movwf	_Nec_code+3,c
  5227  00050E                     i2l229:
  5228                           
  5229                           ;Interrupt.c: 125: }
  5230                           ;Interrupt.c: 126: bit_count = bit_count + 1;
  5231  00050E  2849               	incf	_bit_count,w,c
  5232  000510  6E49               	movwf	_bit_count,c
  5233                           
  5234                           ;Interrupt.c: 127: if (bit_count > 31)
  5235  000512  0E1F               	movlw	31
  5236  000514  6449               	cpfsgt	_bit_count,c
  5237  000516  D7B9               	goto	L2
  5238                           
  5239                           ;Interrupt.c: 128: {
  5240                           ;Interrupt.c: 129: nec_ok = 1;
  5241  000518  0E00               	movlw	0
  5242  00051A  6E3B               	movwf	_nec_ok+1,c
  5243  00051C  0E01               	movlw	1
  5244  00051E  6E3A               	movwf	_nec_ok,c
  5245                           
  5246                           ;Interrupt.c: 130: INTCONbits.INT0IE = 0;
  5247  000520  98F2               	bcf	intcon,4,c	;volatile
  5248                           
  5249                           ;Interrupt.c: 131: Nec_state = 0;
  5250  000522  0E00               	movlw	0
  5251  000524  6E42               	movwf	_Nec_state,c
  5252  000526  D7B1               	goto	L2
  5253  000528                     i2l1685:
  5254                           
  5255                           ;Interrupt.c: 135: else
  5256                           ;Interrupt.c: 136: {
  5257                           ;Interrupt.c: 137: force_nec_state0();
  5258  000528  ECF0  F005         	call	_force_nec_state0	;wreg free
  5259  00052C  D000               	goto	i2l1687
  5260  00052E                     i2l1687:
  5261                           
  5262                           ;Interrupt.c: 138: }
  5263                           ;Interrupt.c: 139: INTCON2bits.INTEDG0 = 1;
  5264  00052E  8CF1               	bsf	intcon2,6,c	;volatile
  5265                           
  5266                           ;Interrupt.c: 141: }
  5267                           ;Interrupt.c: 142: }
  5268                           
  5269                           ;Interrupt.c: 140: return;
  5270  000530  D011               	goto	i2l217
  5271  000532                     i2l1693:
  5272  000532  5042               	movf	_Nec_state,w,c
  5273                           
  5274                           ; Switch size 1, requested type "space"
  5275                           ; Number of cases is 5, Range of values is 0 to 4
  5276                           ; switch strategies available:
  5277                           ; Name         Instructions Cycles
  5278                           ; simple_byte           16     9 (average)
  5279                           ;	Chosen strategy is simple_byte
  5280  000534  0A00               	xorlw	0	; case 0
  5281  000536  B4D8               	btfsc	status,2,c
  5282  000538  D772               	goto	i2l1627
  5283  00053A  0A01               	xorlw	1	; case 1
  5284  00053C  B4D8               	btfsc	status,2,c
  5285  00053E  D785               	goto	i2l1637
  5286  000540  0A03               	xorlw	3	; case 2
  5287  000542  B4D8               	btfsc	status,2,c
  5288  000544  D796               	goto	i2l1649
  5289  000546  0A01               	xorlw	1	; case 3
  5290  000548  B4D8               	btfsc	status,2,c
  5291  00054A  D7A7               	goto	i2l1661
  5292  00054C  0A07               	xorlw	7	; case 4
  5293  00054E  B4D8               	btfsc	status,2,c
  5294  000550  D7B7               	goto	i2l1673
  5295  000552  D000               	goto	i2l217
  5296  000554                     i2l217:
  5297  000554  0012               	return		;funcret
  5298  000556                     __end_of_INT0_isr:
  5299                           	opt stack 0
  5300                           pclatu	equ	0xFFB
  5301                           pclath	equ	0xFFA
  5302                           tblptru	equ	0xFF8
  5303                           tblptrh	equ	0xFF7
  5304                           tblptrl	equ	0xFF6
  5305                           tablat	equ	0xFF5
  5306                           prodh	equ	0xFF4
  5307                           prodl	equ	0xFF3
  5308                           intcon	equ	0xFF2
  5309                           intcon2	equ	0xFF1
  5310                           postinc0	equ	0xFEE
  5311                           fsr0h	equ	0xFEA
  5312                           fsr0l	equ	0xFE9
  5313                           wreg	equ	0xFE8
  5314                           postdec1	equ	0xFE5
  5315                           fsr1h	equ	0xFE2
  5316                           fsr1l	equ	0xFE1
  5317                           postinc2	equ	0xFDE
  5318                           postdec2	equ	0xFDD
  5319                           fsr2h	equ	0xFDA
  5320                           fsr2l	equ	0xFD9
  5321                           status	equ	0xFD8
  5322                           
  5323 ;; *************** function _force_nec_state0 *****************
  5324 ;; Defined at:
  5325 ;;		line 42 in file "Interrupt.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;		None
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;		None
  5330 ;; Return value:  Size  Location     Type
  5331 ;;		None               void
  5332 ;; Registers used:
  5333 ;;		wreg, status,2
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5343 ;;Total ram usage:        0 bytes
  5344 ;; Hardware stack levels used:    1
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_INT0_isr
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text33
  5353  000BE0                     __ptext33:
  5354                           	opt stack 0
  5355  000BE0                     _force_nec_state0:
  5356                           	opt stack 23
  5357                           
  5358                           ;Interrupt.c: 44: Nec_state=0;
  5359                           
  5360                           ;incstack = 0
  5361  000BE0  0E00               	movlw	0
  5362  000BE2  6E42               	movwf	_Nec_state,c
  5363                           
  5364                           ;Interrupt.c: 45: T1CONbits.TMR1ON = 0;
  5365  000BE4  90CD               	bcf	4045,0,c	;volatile
  5366  000BE6  0012               	return		;funcret
  5367  000BE8                     __end_of_force_nec_state0:
  5368                           	opt stack 0
  5369                           pclatu	equ	0xFFB
  5370                           pclath	equ	0xFFA
  5371                           tblptru	equ	0xFF8
  5372                           tblptrh	equ	0xFF7
  5373                           tblptrl	equ	0xFF6
  5374                           tablat	equ	0xFF5
  5375                           prodh	equ	0xFF4
  5376                           prodl	equ	0xFF3
  5377                           intcon	equ	0xFF2
  5378                           intcon2	equ	0xFF1
  5379                           postinc0	equ	0xFEE
  5380                           fsr0h	equ	0xFEA
  5381                           fsr0l	equ	0xFE9
  5382                           wreg	equ	0xFE8
  5383                           postdec1	equ	0xFE5
  5384                           fsr1h	equ	0xFE2
  5385                           fsr1l	equ	0xFE1
  5386                           postinc2	equ	0xFDE
  5387                           postdec2	equ	0xFDD
  5388                           fsr2h	equ	0xFDA
  5389                           fsr2l	equ	0xFD9
  5390                           status	equ	0xFD8
  5391                           pclatu	equ	0xFFB
  5392                           pclath	equ	0xFFA
  5393                           tblptru	equ	0xFF8
  5394                           tblptrh	equ	0xFF7
  5395                           tblptrl	equ	0xFF6
  5396                           tablat	equ	0xFF5
  5397                           prodh	equ	0xFF4
  5398                           prodl	equ	0xFF3
  5399                           intcon	equ	0xFF2
  5400                           intcon2	equ	0xFF1
  5401                           postinc0	equ	0xFEE
  5402                           fsr0h	equ	0xFEA
  5403                           fsr0l	equ	0xFE9
  5404                           wreg	equ	0xFE8
  5405                           postdec1	equ	0xFE5
  5406                           fsr1h	equ	0xFE2
  5407                           fsr1l	equ	0xFE1
  5408                           postinc2	equ	0xFDE
  5409                           postdec2	equ	0xFDD
  5410                           fsr2h	equ	0xFDA
  5411                           fsr2l	equ	0xFD9
  5412                           status	equ	0xFD8
  5413                           
  5414                           	psect	rparam
  5415  0000                     pclatu	equ	0xFFB
  5416                           pclath	equ	0xFFA
  5417                           tblptru	equ	0xFF8
  5418                           tblptrh	equ	0xFF7
  5419                           tblptrl	equ	0xFF6
  5420                           tablat	equ	0xFF5
  5421                           prodh	equ	0xFF4
  5422                           prodl	equ	0xFF3
  5423                           intcon	equ	0xFF2
  5424                           intcon2	equ	0xFF1
  5425                           postinc0	equ	0xFEE
  5426                           fsr0h	equ	0xFEA
  5427                           fsr0l	equ	0xFE9
  5428                           wreg	equ	0xFE8
  5429                           postdec1	equ	0xFE5
  5430                           fsr1h	equ	0xFE2
  5431                           fsr1l	equ	0xFE1
  5432                           postinc2	equ	0xFDE
  5433                           postdec2	equ	0xFDD
  5434                           fsr2h	equ	0xFDA
  5435                           fsr2l	equ	0xFD9
  5436                           status	equ	0xFD8


Data Sizes:
    Strings     90
    Constant    493
    Data        12
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     49     108
    BANK0           128     10      41
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    txt	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    nbr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_2(CODE[43]), STR_1(CODE[30]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    ___awdiv->___wmul
    _Do_Init->_DS1621_Init
    _init_UART->_OpenUSART
    _DS1621_Init->_I2C_Write_Cmd_Write_Data
    _I2C_Write_Cmd_Write_Data->_I2C_Write
    _I2C_Write_Cmd_Only->_I2C_Write
    _DS3231_Setup_Time->_I2C_Write
    _DS3231_Read_Time->_I2C_Read
    _DS1621_Read_Temp->_I2C_Read

Critical Paths under _chkisr in COMRAM

    _chkisr->_INT0_isr

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _chkisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _chkisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _chkisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chkisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chkisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chkisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _chkisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _chkisr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _chkisr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _chkisr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _chkisr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _chkisr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _chkisr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _chkisr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _chkisr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _chkisr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6260
                                             46 COMRAM     3     3      0
                   _DS1621_Read_Temp
                   _DS3231_Read_Time
                  _DS3231_Setup_Time
                            _Do_Init
                            ___awdiv
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              37    23     14    3447
                                             28 COMRAM    18     4     14
                                              0 BANK0     10    10      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             16 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     882
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     362
                                             23 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     501
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     512
                                             22 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Do_Init                                              0     0      0     760
                        _DS1621_Init
                           _I2C_Init
                     _init_INTERRUPT
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     273
                                             16 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _init_INTERRUPT                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             4     0      4      53
                                             16 COMRAM     4     0      4
                         _i2cHighScl
                         _i2cHighSda
 ---------------------------------------------------------------------------------
 (2) _DS1621_Init                                          1     1      0     434
                                             21 COMRAM     1     1      0
                 _I2C_Write_Cmd_Only
           _I2C_Write_Cmd_Write_Data
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Write_Data                             3     1      2     232
                                             18 COMRAM     3     1      2
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Only                                   2     1      1     157
                                             18 COMRAM     2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS3231_Setup_Time                                    2     2      0      90
                                             18 COMRAM     2     2      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS3231_Read_Time                                     3     3      0     195
                                             19 COMRAM     2     2      0
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS1621_Read_Temp                                     5     3      2     241
                                             19 COMRAM     5     3      2
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            2     2      0      60
                                             16 COMRAM     2     2      0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      90
                                             16 COMRAM     3     3      0
                             _i2cAck
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                            _i2cNack
 ---------------------------------------------------------------------------------
 (3) _i2cNack                                              0     0      0       0
                         _i2cHighScl
                          _i2cLowScl
 ---------------------------------------------------------------------------------
 (3) _i2cAck                                               0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (5) _i2cLowSda                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2cLowScl                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2cHighSda                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2cHighScl                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _chkisr                                              14    14      0       0
                                              2 COMRAM    14    14      0
                           _INT0_isr
                         _TIMER1_isr
 ---------------------------------------------------------------------------------
 (7) _TIMER1_isr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT0_isr                                             2     2      0       0
                                              0 COMRAM     2     2      0
                   _force_nec_state0
 ---------------------------------------------------------------------------------
 (8) _force_nec_state0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1621_Read_Temp
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Read_Time
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Setup_Time
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _Do_Init
     _DS1621_Init
       _I2C_Write_Cmd_Only
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _I2C_Write_Cmd_Write_Data
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
     _I2C_Init
       _i2cHighScl
       _i2cHighSda
     _init_INTERRUPT
     _init_UART
       _OpenUSART
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch

 _chkisr (ROOT)
   _INT0_isr
     _force_nec_state0
   _TIMER1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      A      29       5       32.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     31      6C       1       85.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      95      34        0.0%
DATA                 0      0      95       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Nov 01 14:41:27 2021

                                _i 004F                 __size_of_I2C_Start 0012  
                      _SSPSTATbits 000FC7                 __size_of_I2C_Write 003E  
                     ___awdiv@sign 001C                ___wmul@multiplicand 0013  
                              l132 0950                                l135 09E2  
                              l520 055E                                l187 0A4C  
                              l621 076E                                l622 0770  
                              l623 077A                                l624 077C  
                              l617 0754                                l626 0796  
                              l556 0134                                l629 0AA4  
                              l822 06AA                                l496 0B84  
                              l593 03F4                                _Cmd 003F  
                              _day 004B               __size_of_I2C_ReStart 0016  
                              _dow 004C                                _nbr 0038  
                              _txt 003C                                wreg 000FE8  
                     __CFG_LVP$OFF 000000                       __CFG_WDT$OFF 000000  
                             l1060 0AC6                               l1152 08B4  
                             l1401 0946                               l1162 0900  
                             l1403 094C                               l1245 09EC  
                             l1247 09F2                               l1239 09DA  
                             l1257 0A04                               l1391 0932  
                             l1383 091C                               l3081 065E  
                             l3073 063E                               l1379 0914  
                             l3091 0684                               l3083 0666  
                             l3067 062C                               l1389 092A  
                             l1397 093A                               l2621 074C  
                             l2613 073A                               l3079 0654  
                             l3095 0690                               l2633 0766  
                             l2625 0758                               l2617 0744  
                             l3353 0ABE                               l3601 01C6  
                             l3099 06A0                               l3371 0882  
                             l3611 01E2                               l3381 08A8  
                             l3373 088A                               l3605 01CE  
                             l3621 0214                               l3391 08D6  
                             l3615 020C                               l3607 01D4  
                             l3623 0228                               l3551 003E  
                             l3369 0878                               l3393 08DE  
                             l3641 02A4                               l3633 027E  
                             l3553 0050                               l3643 02B0  
                             l3635 028A                               l3571 00FA  
                             l3563 0092                               l3547 002A  
                             l3397 08F4                               l3389 08CC  
                             l3661 035C                               l3653 02F8  
                             l3629 024A                               l3557 005C  
                             l3671 03C6                               l3647 02CE  
                             l3591 0188                               l3575 0104  
                             l3559 0072                               l3649 02DA  
                             l3657 030C                               l3593 018E  
                             l3673 03D6                               l3659 0314  
                             l3667 03A8                               l3587 016C  
                             l3669 03BC                               l3597 019C  
   I2C_Write_Cmd_Write_Data@Device 0015                               STR_1 FFCF  
                             STR_2 FFA4                               STR_3 FFED  
                             u2547 0B9E                               _RBPU 007F8F  
                             _TRMT 007D61                               _main 0556  
                             _font FDB7                               _hour 004E  
                 __end_of_I2C_Init 0BBC                   __end_of_I2C_Read 0952  
                             _year 0060                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               fsr1l 000FE1  
                             fsr2l 000FD9                               _wrap 006C  
                 __end_of_I2C_Stop 0B5C                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 0018        __size_of_I2C_Write_Cmd_Only 001A  
                  __end_of_Do_Init 09D4                    __end_of_i2cNack 0BC6  
                     ___param_bank 000010                        ?_TIMER1_isr 0001  
                 __end_of_INT0_isr 0556                              ?_main 0001  
                  __end_of___awdiv 06AC                              _T0CON 000FD5  
                  ___awdiv@divisor 0019                              _T1CON 000FCD  
                            _T3CON 000FB1                    __end_of___lwdiv 08BE  
                  __end_of___lwmod 090A                              i2l205 06EE  
                            i2l217 0554                              i2l229 050E  
                  ___awdiv@counter 001B                              _RCSTA 000FAB  
                            _TMR0H 000FD7                              _TMR1H 000FCF  
                            _TMR0L 000FD6                              _TMR3H 000FB3  
                            _TMR1L 000FCE                              _TMR3L 000FB2  
                            _SPBRG 000FAF                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                            _TXREG 000FAD                              _TXSTA 000FAC  
                       _Display_D1 0061                         _i2cHighSda 0BD8  
                       _i2cHighScl 0B9A                    __end_of_dpowers FF9C  
                            _font2 FEB6                              _found 004D  
                  __end_of_isdigit 0AC8                              _tempC 005E  
                            _tempF 005F                              _month 0051  
                            main@U 002F                              _putch 0B80  
                __end_of_I2C_Start 0B6E                  __end_of_I2C_Write 0A12  
                   __CFG_BOREN$OFF 000000                              tablat 000FF5  
                            status 000FD8                  ?_DS1621_Read_Temp 0014  
               ??_DS1621_Read_Temp 0016                    __initialization 0952  
                     __end_of_main 0616                       __end_of_font FEB6  
                           ??_main 002F                      __activetblptr 000002  
                ?_DS3231_Read_Time 0001                 ??_DS3231_Read_Time 0014  
          __size_of_init_INTERRUPT 0030                          I2C_Init@c 0011  
                        I2C_Read@n 0012                             _ADCON1 000FC1  
              DS1621_Read_Temp@Cmd 0016                   ___awdiv@dividend 0017  
               __size_of_i2cLowSda 000A                 __size_of_i2cLowScl 0008  
                           ?_putch 0001                             i2l2211 06E4  
                           i2l1643 0468                             i2l1627 041E  
                           i2l1661 049A                             i2l1637 044A  
                           i2l1655 0490                             i2l1673 04C0  
                           i2l1649 0472                             i2l1667 04B6  
                           i2l1685 0528                             i2l1669 04BC  
                           i2l1693 0532                             i2l1687 052E  
                        ??_Do_Init 0017                             _OSCCON 000FD3  
              __size_of_TIMER1_isr 000C                             _SPBRGH 000FB0  
                           _SSPBUF 000FC9                          ??_i2cNack 0011  
                 _force_nec_state0 0BE0                             _Device 0040  
                           _i2cAck 0B6E                         _TempSecond 0043  
               __size_of_OpenUSART 0070                             ___wmul 0A7E  
                        ??___awdiv 001B                             _chkisr 0008  
                        ??___lwdiv 0015                          ??___lwmod 001C  
                           _buffer 0080                             _nec_ok 003A  
                           clear_0 0958                             clear_1 0964  
                 ___awdiv@quotient 001D                             _minute 0050  
                           _second 0054            DS3231_Setup_Time@Device 0013  
                           _printf 001C                       __pdataCOMRAM 0061  
                        ??_isdigit 0011                          ?_I2C_Init 0011  
                        ?_I2C_Read 0001                          ?_I2C_Stop 0001  
                     __mediumconst FDB6                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
 __end_of_I2C_Write_Cmd_Write_Data 0AE8                        ?_i2cHighSda 0001  
                      ?_i2cHighScl 0001                             putch@c 0011  
                       __accesstop 0080            __end_of__initialization 098A  
                        ?_INT0_isr 0001                 _setup_alarm_minute 0056  
               _setup_alarm_second 0057                      ___rparam_used 000001  
                   __pcstackCOMRAM 0001                      __end_of_font2 FF92  
                __end_of_i2cLowSda 0BD0                  __end_of_i2cLowScl 0BD8  
                    __end_of_putch 0B8E                         ??_I2C_Init 0015  
                       ??_I2C_Read 0011                       _alarm_minute 0047  
                     _alarm_second 0048                         ??_I2C_Stop 0011  
                __end_of_OpenUSART 0798                            ??_putch 0011  
                       __pbssBANK0 0080                   _setup_alarm_hour 0055  
                    ??_DS1621_Init 0016                 __size_of_init_UART 0014  
                       _alarm_date 0045                         ??_INT0_isr 0001  
                       _alarm_hour 0046                            ?_i2cAck 0001  
               __CFG_CCP2MX$PORTBE 000000                     I2C_Read@inByte 0013  
                          ?___wmul 0011                __size_of_i2cHighSda 0008  
              __size_of_i2cHighScl 000C                            ?_chkisr 0001  
 I2C_Write_Cmd_Write_Data@Data_Out 0014                       ??_TIMER1_isr 0001  
                    ??_I2C_ReStart 0011                         I2C_Write@n 0012  
                          ?_printf 001D                     _init_INTERRUPT 0A4E  
                          _SSPCON1 000FC6                            _SSPSTAT 000FC7  
                          _Address 003E                  _DS3231_Setup_Time 0798  
                          _Do_Init 0994           _I2C_Write_Cmd_Write_Data 0AC8  
       __end_of_I2C_Write_Cmd_Only 0B20             DS1621_Read_Temp@Device 0018  
                          _i2cNack 0BBC                 __end_of_TIMER1_isr 0BB2  
               ?_DS3231_Setup_Time 0001                          _I2C_Start 0B5C  
                        _I2C_Write 09D4                    __size_of_i2cAck 0012  
                          __Hparam 0000                            __Lparam 0000  
              __end_of_DS1621_Init 0B06                ??_DS3231_Setup_Time 0013  
                          ___awdiv 0616                    __size_of___wmul 0028  
                          ___lwdiv 0862                            ___lwmod 08BE  
                  __size_of_chkisr 0720                            __pcinit 0952  
                          __ramtop 1000                            __ptext0 0556  
                          __ptext1 001C                            __ptext2 0B80  
                          __ptext3 0AA6                            __ptext4 0A7E  
                          __ptext5 08BE          __size_of_DS1621_Read_Temp 003C  
                          __ptext6 0862                            __ptext7 0616  
                          __ptext8 0994                            __ptext9 0B36  
                  __size_of_printf 03DA                  __end_of_init_UART 0B4A  
           __end_of_init_INTERRUPT 0A7E                          _T0CONbits 000FD5  
                __end_of_hexpowers FFA4           __end_of_force_nec_state0 0BE8  
                        _T1CONbits 000FCD           DS3231_Setup_Time@Address 0014  
                          _dpowers FF92                            _isdigit 0AA6  
                        _T3CONbits 000FB1                __end_of_I2C_ReStart 0B36  
        __end_of_DS3231_Setup_Time 07FE                     __pintcode_body 06AC  
             end_of_initialization 098A                      __Lmediumconst FDB6  
        __size_of_DS3231_Read_Time 0064                            int_func 06AC  
          DS3231_Read_Time@Address 0014                         ?_I2C_Start 0001  
                       ?_I2C_Write 0001                         _tempSecond 006B  
                        _RCSTAbits 000FAB                            printf@c 00A8  
                          printf@f 001D                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE        I2C_Write_Cmd_Write_Data@Cmd 0013  
                        _PORTCbits 000F82                          _PORTDbits 000F83  
                        _PORTEbits 000F84                   I2C_Write@outByte 0011  
                  ?_init_INTERRUPT 0001                         _setup_hour 0059  
                       _setup_year 005D                          _TRISCbits 000F94  
                     ??_i2cHighSda 0011                       ??_i2cHighScl 0011  
                __size_of_I2C_Init 000A                  __size_of_I2C_Read 0048  
                __size_of_I2C_Stop 0012                        _DS1621_Init 0AE8  
                      printf@width 00A6                          _TXSTAbits 000FAC  
                __size_of_INT0_isr 0160                     __end_of_i2cAck 0B80  
         DS1621_Read_Temp@Data_Ret 0017                 __end_of_i2cHighSda 0BE0  
               __end_of_i2cHighScl 0BA6                     __end_of___wmul 0AA6  
                    __pidataCOMRAM 0B8E                     __end_of_chkisr 0728  
                      _I2C_ReStart 0B20                          _Nec_code1 0041  
                        _i2cLowSda 0BC6                          _i2cLowScl 0BD0  
                   __end_of_printf 03F6                          _Nec_state 0042  
              start_initialization 0952         __size_of_DS3231_Setup_Time 0066  
                        _OpenUSART 0728                   __CFG_OSC$INTIO67 000000  
                      ??_I2C_Start 0011                        ??_I2C_Write 0011  
                         ??_i2cAck 0011                           ??___wmul 0015  
                         ??_chkisr 0003                           ??_printf 002B  
                 _DS1621_Read_Temp 0A12                         ?_i2cLowSda 0001  
                       ?_i2cLowScl 0001                        __pbssCOMRAM 0032  
       ??_I2C_Write_Cmd_Write_Data 0015                      __pcstackBANK0 009F  
                     _isdigit$1950 0012                           ?_Do_Init 0001  
                       ?_OpenUSART 0011                   _DS3231_Read_Time 07FE  
                         ?_i2cNack 0001                   ___lwdiv@dividend 0011  
                      I2C_Read@ack 0011                          _bit_count 0049  
                        __pintcode 0008                      __pmediumconst FDB6  
                         ?___awdiv 0017                          __tft_type 0044  
                         ?___lwdiv 0011                 _I2C_Write_Cmd_Only 0B06  
                         ?___lwmod 0018                ?_I2C_Write_Cmd_Only 0013  
                ?_force_nec_state0 0001                           ?_isdigit 0001  
                         _I2C_Init 0BB2                           _I2C_Read 090A  
                         _I2C_Stop 0B4A                          _init_UART 0B36  
               ??_force_nec_state0 0001           I2C_Write_Cmd_Only@Device 0014  
                        _hexpowers FF9C                   ___lwdiv@quotient 0016  
                   __size_of_putch 000E                     ___wmul@product 0015  
                         _INT0_isr 03F6               ??_I2C_Write_Cmd_Only 0014  
                         _PIE1bits 000F9D             DS3231_Read_Time@Device 0015  
                         _PIR1bits 000F9E                           _PIR2bits 000FA1  
                 ??_init_INTERRUPT 0011                          _setup_day 0058  
                DS1621_Init@Device 0016                  ___wmul@multiplier 0011  
                      ??_i2cLowSda 0011                        ??_i2cLowScl 0011  
                       printf@flag 00A5                         printf@prec 00A2  
                        main@tempC 0030                          main@tempF 0031  
                       ?_init_UART 0001                        _INTCON2bits 000FF1  
                        copy_data0 097E                           _Nec_code 0032  
                      ??_OpenUSART 0013                       ?_DS1621_Init 0001  
                 __size_of_Do_Init 0040                    OpenUSART@config 0013  
                     _Time_Elapsed 0036                   __size_of_i2cNack 000A  
                         __Hrparam 0000                           __Lrparam 0000  
                 __size_of___awdiv 0096                   __size_of___lwdiv 005C  
                 __size_of___lwmod 004C                       ?_I2C_ReStart 0001  
                 __size_of_isdigit 0022                    ___lwdiv@divisor 0013  
                  ___lwdiv@counter 0015                           __ptext10 0728  
                         __ptext11 0A4E                           __ptext20 0B4A  
                         __ptext12 0BB2                           __ptext21 0B5C  
                         __ptext13 0AE8                           __ptext22 090A  
                         __ptext14 0AC8                           __ptext31 0BA6  
                         __ptext23 0BBC                           __ptext15 0B06  
                         __ptext32 03F6                           __ptext24 0B6E  
                         __ptext16 0798                           __ptext33 0BE0  
                         __ptext25 0B20                           __ptext17 07FE  
                         __ptext26 0BC6                           __ptext18 0A12  
                         __ptext27 0BD0                           __ptext19 09D4  
                         __ptext28 0BD8                           __ptext29 0B9A  
                         _colstart 004A           __end_of_DS1621_Read_Temp 0A4E  
                    __size_of_main 00C0                          printf@idx 009F  
                        printf@val 00A3                           _rowstart 0053  
         __end_of_DS3231_Read_Time 0862                         _INTCONbits 000FF2  
                   OpenUSART@spbrg 0011                        ??_init_UART 0014  
                         isdigit@c 0013                           intlevel2 0000  
                 ___lwmod@dividend 0018                           printf@ap 00A0  
                       _TIMER1_isr 0BA6                    ___lwmod@divisor 001A  
            I2C_Write_Cmd_Only@Cmd 0013                    ___lwmod@counter 001C  
                     _setup_minute 005A                       _setup_second 005C  
                      _prev_second 0052                        _setup_month 005B  
        __size_of_force_nec_state0 0008  __size_of_I2C_Write_Cmd_Write_Data 0020  
             __size_of_DS1621_Init 001E          ?_I2C_Write_Cmd_Write_Data 0013  
