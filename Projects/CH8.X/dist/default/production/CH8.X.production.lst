

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Oct 22 10:37:00 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           	psect	idataCOMRAM
    15  00FE38                     __pidataCOMRAM:
    16                           	opt stack 0
    17                           
    18                           ;initializer for main@F4280
    19  00FE38  3F                 	db	63
    20  00FE39  06                 	db	6
    21  00FE3A  5B                 	db	91
    22  00FE3B  4F                 	db	79
    23  00FE3C  66                 	db	102
    24  00FE3D  6D                 	db	109
    25  00FE3E  7C                 	db	124
    26  00FE3F  07                 	db	7
    27  00FE40  7F                 	db	127
    28  00FE41  67                 	db	103
    29  0000                     _PORTB	set	3969
    30  0000                     _PORTDbits	set	3971
    31  0000                     _TRISB	set	3987
    32  0000                     _TRISD	set	3989
    33                           
    34                           ; #config settings
    35  0000                     
    36                           	psect	cinit
    37  00FE42                     __pcinit:
    38                           	opt stack 0
    39  00FE42                     start_initialization:
    40                           	opt stack 0
    41  00FE42                     __initialization:
    42                           	opt stack 0
    43                           
    44                           ; Initialize objects allocated to COMRAM (10 bytes)
    45                           ; load TBLPTR registers with __pidataCOMRAM
    46  00FE42  0E38               	movlw	low __pidataCOMRAM
    47  00FE44  6EF6               	movwf	tblptrl,c
    48  00FE46  0EFE               	movlw	high __pidataCOMRAM
    49  00FE48  6EF7               	movwf	tblptrh,c
    50  00FE4A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    51  00FE4C  6EF8               	movwf	tblptru,c
    52  00FE4E  EE00  F02D         	lfsr	0,__pdataCOMRAM
    53  00FE52  EE10 F00A          	lfsr	1,10
    54  00FE56                     copy_data0:
    55  00FE56  0009               	tblrd		*+
    56  00FE58  CFF5 FFEE          	movff	tablat,postinc0
    57  00FE5C  50E5               	movf	postdec1,w,c
    58  00FE5E  50E1               	movf	fsr1l,w,c
    59  00FE60  E1FA               	bnz	copy_data0
    60  00FE62                     end_of_initialization:
    61                           	opt stack 0
    62  00FE62                     __end_of__initialization:
    63                           	opt stack 0
    64  00FE62  0100               	movlb	0
    65  00FE64  EF34  F07F         	goto	_main	;jump to C main() function
    66                           tblptru	equ	0xFF8
    67                           tblptrh	equ	0xFF7
    68                           tblptrl	equ	0xFF6
    69                           tablat	equ	0xFF5
    70                           postinc0	equ	0xFEE
    71                           postdec1	equ	0xFE5
    72                           fsr1l	equ	0xFE1
    73                           
    74                           	psect	dataCOMRAM
    75  00002D                     __pdataCOMRAM:
    76                           	opt stack 0
    77  00002D                     main@F4280:
    78                           	opt stack 0
    79  00002D                     	ds	10
    80                           tblptru	equ	0xFF8
    81                           tblptrh	equ	0xFF7
    82                           tblptrl	equ	0xFF6
    83                           tablat	equ	0xFF5
    84                           postinc0	equ	0xFEE
    85                           postdec1	equ	0xFE5
    86                           fsr1l	equ	0xFE1
    87                           
    88                           	psect	cstackCOMRAM
    89  000001                     __pcstackCOMRAM:
    90                           	opt stack 0
    91  000001                     ?_add:
    92                           	opt stack 0
    93  000001                     add@aa:
    94                           	opt stack 0
    95                           
    96                           ; 2 bytes @ 0x0
    97  000001                     	ds	2
    98  000003                     add@ab:
    99                           	opt stack 0
   100                           
   101                           ; 2 bytes @ 0x2
   102  000003                     	ds	2
   103  000005                     add@ac:
   104                           	opt stack 0
   105                           
   106                           ; 2 bytes @ 0x4
   107  000005                     	ds	2
   108  000007                     add@ba:
   109                           	opt stack 0
   110                           
   111                           ; 2 bytes @ 0x6
   112  000007                     	ds	2
   113  000009                     add@bb:
   114                           	opt stack 0
   115                           
   116                           ; 2 bytes @ 0x8
   117  000009                     	ds	2
   118  00000B                     add@bc:
   119                           	opt stack 0
   120                           
   121                           ; 2 bytes @ 0xA
   122  00000B                     	ds	2
   123  00000D                     add@carry1:
   124                           	opt stack 0
   125                           
   126                           ; 2 bytes @ 0xC
   127  00000D                     	ds	2
   128  00000F                     add@result1:
   129                           	opt stack 0
   130                           
   131                           ; 2 bytes @ 0xE
   132  00000F                     	ds	2
   133  000011                     add@carry2:
   134                           	opt stack 0
   135                           
   136                           ; 2 bytes @ 0x10
   137  000011                     	ds	2
   138  000013                     add@result2:
   139                           	opt stack 0
   140                           
   141                           ; 2 bytes @ 0x12
   142  000013                     	ds	2
   143  000015                     add@carry3:
   144                           	opt stack 0
   145                           
   146                           ; 2 bytes @ 0x14
   147  000015                     	ds	2
   148  000017                     add@result3:
   149                           	opt stack 0
   150                           
   151                           ; 2 bytes @ 0x16
   152  000017                     	ds	2
   153  000019                     add@result:
   154                           	opt stack 0
   155                           
   156                           ; 2 bytes @ 0x18
   157  000019                     	ds	2
   158  00001B                     ??_main:
   159                           
   160                           ; 0 bytes @ 0x1A
   161  00001B                     	ds	6
   162  000021                     main@array:
   163                           	opt stack 0
   164                           
   165                           ; 10 bytes @ 0x20
   166  000021                     	ds	10
   167  00002B                     main@sum:
   168                           	opt stack 0
   169                           
   170                           ; 2 bytes @ 0x2A
   171  00002B                     	ds	2
   172                           tblptru	equ	0xFF8
   173                           tblptrh	equ	0xFF7
   174                           tblptrl	equ	0xFF6
   175                           tablat	equ	0xFF5
   176                           postinc0	equ	0xFEE
   177                           postdec1	equ	0xFE5
   178                           fsr1l	equ	0xFE1
   179                           
   180 ;;
   181 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   182 ;;
   183 ;; *************** function _main *****************
   184 ;; Defined at:
   185 ;;		line 63 in file "Ch8.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;  array          10   32[COMRAM] unsigned char [10]
   190 ;;  sum             2   42[COMRAM] int 
   191 ;; Return value:  Size  Location     Type
   192 ;;		None               void
   193 ;; Registers used:
   194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   195 ;; Tracked objects:
   196 ;;		On entry : 0/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   201 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   202 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   203 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   204 ;;Total ram usage:       18 bytes
   205 ;; Hardware stack levels required when called:    1
   206 ;; This function calls:
   207 ;;		_add
   208 ;; This function is called by:
   209 ;;		Startup code after reset
   210 ;; This function uses a non-reentrant model
   211 ;;
   212                           
   213                           	psect	text0
   214  00FE68                     __ptext0:
   215                           	opt stack 0
   216  00FE68                     _main:
   217                           	opt stack 30
   218                           
   219                           ;Ch8.c: 65: TRISD = 0x3F;
   220                           
   221                           ;incstack = 0
   222  00FE68  0E3F               	movlw	63
   223  00FE6A  6E95               	movwf	3989,c	;volatile
   224                           
   225                           ;Ch8.c: 66: TRISB = 0;
   226  00FE6C  0E00               	movlw	0
   227  00FE6E  6E93               	movwf	3987,c	;volatile
   228                           
   229                           ;Ch8.c: 67: unsigned char array[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7C, 0x07, 0
      +                          x7F, 0x67};
   230  00FE70  EE20  F02D         	lfsr	2,main@F4280
   231  00FE74  EE10  F021         	lfsr	1,main@array
   232  00FE78  0E09               	movlw	9
   233  00FE7A                     u221:
   234  00FE7A  CFDB FFE3          	movff	plusw2,plusw1
   235  00FE7E  06E8               	decf	wreg,f,c
   236  00FE80  E2FC               	bc	u221
   237  00FE82  D000               	goto	l688
   238  00FE84                     l688:
   239                           
   240                           ;Ch8.c: 72: {
   241                           ;Ch8.c: 73: sum = add(PORTDbits.RD0, PORTDbits.RD1, PORTDbits.RD2, PORTDbits.RD3, PORTDb
      +                          its.RD4, PORTDbits.RD5);
   242  00FE84  A083               	btfss	3971,0,c	;volatile
   243  00FE86  D003               	goto	u230
   244  00FE88  6A1B               	clrf	??_main& (0+255),c
   245  00FE8A  2A1B               	incf	??_main& (0+255),f,c
   246  00FE8C  D001               	goto	u238
   247  00FE8E                     u230:
   248  00FE8E  6A1B               	clrf	??_main& (0+255),c
   249  00FE90                     u238:
   250  00FE90  501B               	movf	??_main,w,c
   251  00FE92  6E01               	movwf	add@aa,c
   252  00FE94  6A02               	clrf	add@aa+1,c
   253  00FE96  A283               	btfss	3971,1,c	;volatile
   254  00FE98  D003               	goto	u240
   255  00FE9A  6A1C               	clrf	(??_main+1)& (0+255),c
   256  00FE9C  2A1C               	incf	(??_main+1)& (0+255),f,c
   257  00FE9E  D001               	goto	u248
   258  00FEA0                     u240:
   259  00FEA0  6A1C               	clrf	(??_main+1)& (0+255),c
   260  00FEA2                     u248:
   261  00FEA2  501C               	movf	??_main+1,w,c
   262  00FEA4  6E03               	movwf	add@ab,c
   263  00FEA6  6A04               	clrf	add@ab+1,c
   264  00FEA8  A483               	btfss	3971,2,c	;volatile
   265  00FEAA  D003               	goto	u250
   266  00FEAC  6A1D               	clrf	(??_main+2)& (0+255),c
   267  00FEAE  2A1D               	incf	(??_main+2)& (0+255),f,c
   268  00FEB0  D001               	goto	u258
   269  00FEB2                     u250:
   270  00FEB2  6A1D               	clrf	(??_main+2)& (0+255),c
   271  00FEB4                     u258:
   272  00FEB4  501D               	movf	??_main+2,w,c
   273  00FEB6  6E05               	movwf	add@ac,c
   274  00FEB8  6A06               	clrf	add@ac+1,c
   275  00FEBA  A683               	btfss	3971,3,c	;volatile
   276  00FEBC  D003               	goto	u260
   277  00FEBE  6A1E               	clrf	(??_main+3)& (0+255),c
   278  00FEC0  2A1E               	incf	(??_main+3)& (0+255),f,c
   279  00FEC2  D001               	goto	u268
   280  00FEC4                     u260:
   281  00FEC4  6A1E               	clrf	(??_main+3)& (0+255),c
   282  00FEC6                     u268:
   283  00FEC6  501E               	movf	??_main+3,w,c
   284  00FEC8  6E07               	movwf	add@ba,c
   285  00FECA  6A08               	clrf	add@ba+1,c
   286  00FECC  A883               	btfss	3971,4,c	;volatile
   287  00FECE  D003               	goto	u270
   288  00FED0  6A1F               	clrf	(??_main+4)& (0+255),c
   289  00FED2  2A1F               	incf	(??_main+4)& (0+255),f,c
   290  00FED4  D001               	goto	u278
   291  00FED6                     u270:
   292  00FED6  6A1F               	clrf	(??_main+4)& (0+255),c
   293  00FED8                     u278:
   294  00FED8  501F               	movf	??_main+4,w,c
   295  00FEDA  6E09               	movwf	add@bb,c
   296  00FEDC  6A0A               	clrf	add@bb+1,c
   297  00FEDE  AA83               	btfss	3971,5,c	;volatile
   298  00FEE0  D003               	goto	u280
   299  00FEE2  6A20               	clrf	(??_main+5)& (0+255),c
   300  00FEE4  2A20               	incf	(??_main+5)& (0+255),f,c
   301  00FEE6  D001               	goto	u288
   302  00FEE8                     u280:
   303  00FEE8  6A20               	clrf	(??_main+5)& (0+255),c
   304  00FEEA                     u288:
   305  00FEEA  5020               	movf	??_main+5,w,c
   306  00FEEC  6E0B               	movwf	add@bc,c
   307  00FEEE  6A0C               	clrf	add@bc+1,c
   308  00FEF0  EC89  F07F         	call	_add	;wreg free
   309  00FEF4  C001  F02B         	movff	?_add,main@sum
   310  00FEF8  C002  F02C         	movff	?_add+1,main@sum+1
   311                           
   312                           ;Ch8.c: 74: PORTB = array[sum];
   313  00FEFC  0E21               	movlw	low main@array
   314  00FEFE  242B               	addwf	main@sum,w,c
   315  00FF00  6ED9               	movwf	fsr2l,c
   316  00FF02  0E00               	movlw	high main@array
   317  00FF04  202C               	addwfc	main@sum+1,w,c
   318  00FF06  6EDA               	movwf	fsr2h,c
   319  00FF08  50DF               	movf	indf2,w,c
   320  00FF0A  6E81               	movwf	3969,c	;volatile
   321  00FF0C  D7BB               	goto	l688
   322  00FF0E  EF00  F000         	goto	start
   323  00FF12                     __end_of_main:
   324                           	opt stack 0
   325                           tblptru	equ	0xFF8
   326                           tblptrh	equ	0xFF7
   327                           tblptrl	equ	0xFF6
   328                           tablat	equ	0xFF5
   329                           postinc0	equ	0xFEE
   330                           wreg	equ	0xFE8
   331                           postdec1	equ	0xFE5
   332                           plusw1	equ	0xFE3
   333                           fsr1l	equ	0xFE1
   334                           indf2	equ	0xFDF
   335                           plusw2	equ	0xFDB
   336                           fsr2h	equ	0xFDA
   337                           fsr2l	equ	0xFD9
   338                           
   339 ;; *************** function _add *****************
   340 ;; Defined at:
   341 ;;		line 22 in file "Ch8.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;  aa              2    0[COMRAM] unsigned int 
   344 ;;  ab              2    2[COMRAM] unsigned int 
   345 ;;  ac              2    4[COMRAM] unsigned int 
   346 ;;  ba              2    6[COMRAM] unsigned int 
   347 ;;  bb              2    8[COMRAM] unsigned int 
   348 ;;  bc              2   10[COMRAM] unsigned int 
   349 ;; Auto vars:     Size  Location     Type
   350 ;;  result          2   24[COMRAM] int 
   351 ;;  result3         2   22[COMRAM] unsigned int 
   352 ;;  carry3          2   20[COMRAM] unsigned int 
   353 ;;  result2         2   18[COMRAM] unsigned int 
   354 ;;  carry2          2   16[COMRAM] unsigned int 
   355 ;;  result1         2   14[COMRAM] unsigned int 
   356 ;;  carry1          2   12[COMRAM] unsigned int 
   357 ;; Return value:  Size  Location     Type
   358 ;;                  2    0[COMRAM] int 
   359 ;; Registers used:
   360 ;;		wreg, status,2, status,0
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   366 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;Total ram usage:       26 bytes
   371 ;; Hardware stack levels used:    1
   372 ;; This function calls:
   373 ;;		Nothing
   374 ;; This function is called by:
   375 ;;		_main
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           	psect	text1
   380  00FF12                     __ptext1:
   381                           	opt stack 0
   382  00FF12                     _add:
   383                           	opt stack 30
   384                           
   385                           ;Ch8.c: 24: int result = 0;
   386                           
   387                           ;incstack = 0
   388  00FF12  0E00               	movlw	0
   389  00FF14  6E1A               	movwf	add@result+1,c
   390  00FF16  0E00               	movlw	0
   391  00FF18  6E19               	movwf	add@result,c
   392                           
   393                           ;Ch8.c: 25: unsigned int carry1 = aa & ba;
   394  00FF1A  5007               	movf	add@ba,w,c
   395  00FF1C  1401               	andwf	add@aa,w,c
   396  00FF1E  6E0D               	movwf	add@carry1,c
   397  00FF20  5008               	movf	add@ba+1,w,c
   398  00FF22  1402               	andwf	add@aa+1,w,c
   399  00FF24  6E0E               	movwf	add@carry1+1,c
   400                           
   401                           ;Ch8.c: 26: unsigned int result1 = aa ^ ba;
   402  00FF26  5007               	movf	add@ba,w,c
   403  00FF28  1801               	xorwf	add@aa,w,c
   404  00FF2A  6E0F               	movwf	add@result1,c
   405  00FF2C  5008               	movf	add@ba+1,w,c
   406  00FF2E  1802               	xorwf	add@aa+1,w,c
   407  00FF30  6E10               	movwf	add@result1+1,c
   408                           
   409                           ;Ch8.c: 27: unsigned int carry2 = ab & bb;
   410  00FF32  5009               	movf	add@bb,w,c
   411  00FF34  1403               	andwf	add@ab,w,c
   412  00FF36  6E11               	movwf	add@carry2,c
   413  00FF38  500A               	movf	add@bb+1,w,c
   414  00FF3A  1404               	andwf	add@ab+1,w,c
   415  00FF3C  6E12               	movwf	add@carry2+1,c
   416                           
   417                           ;Ch8.c: 28: unsigned int result2 = ab ^ bb;
   418  00FF3E  5009               	movf	add@bb,w,c
   419  00FF40  1803               	xorwf	add@ab,w,c
   420  00FF42  6E13               	movwf	add@result2,c
   421  00FF44  500A               	movf	add@bb+1,w,c
   422  00FF46  1804               	xorwf	add@ab+1,w,c
   423  00FF48  6E14               	movwf	add@result2+1,c
   424                           
   425                           ;Ch8.c: 29: unsigned int carry3 = ac & bc;
   426  00FF4A  500B               	movf	add@bc,w,c
   427  00FF4C  1405               	andwf	add@ac,w,c
   428  00FF4E  6E15               	movwf	add@carry3,c
   429  00FF50  500C               	movf	add@bc+1,w,c
   430  00FF52  1406               	andwf	add@ac+1,w,c
   431  00FF54  6E16               	movwf	add@carry3+1,c
   432                           
   433                           ;Ch8.c: 30: unsigned int result3 = ac ^ bc;
   434  00FF56  500B               	movf	add@bc,w,c
   435  00FF58  1805               	xorwf	add@ac,w,c
   436  00FF5A  6E17               	movwf	add@result3,c
   437  00FF5C  500C               	movf	add@bc+1,w,c
   438  00FF5E  1806               	xorwf	add@ac+1,w,c
   439  00FF60  6E18               	movwf	add@result3+1,c
   440                           
   441                           ;Ch8.c: 31: if(result1 == 1)
   442  00FF62  040F               	decf	add@result1,w,c
   443  00FF64  1010               	iorwf	add@result1+1,w,c
   444  00FF66  A4D8               	btfss	status,2,c
   445  00FF68  D006               	goto	l11
   446                           
   447                           ;Ch8.c: 32: {
   448                           ;Ch8.c: 33: result = result + 1;
   449  00FF6A  0E01               	movlw	1
   450  00FF6C  2419               	addwf	add@result,w,c
   451  00FF6E  6E19               	movwf	add@result,c
   452  00FF70  0E00               	movlw	0
   453  00FF72  201A               	addwfc	add@result+1,w,c
   454  00FF74  6E1A               	movwf	add@result+1,c
   455  00FF76                     l11:
   456                           
   457                           ;Ch8.c: 34: }
   458                           ;Ch8.c: 35: if(carry1 ==1)
   459  00FF76  040D               	decf	add@carry1,w,c
   460  00FF78  100E               	iorwf	add@carry1+1,w,c
   461  00FF7A  A4D8               	btfss	status,2,c
   462  00FF7C  D006               	goto	l12
   463                           
   464                           ;Ch8.c: 36: {
   465                           ;Ch8.c: 37: result = result +2;
   466  00FF7E  0E02               	movlw	2
   467  00FF80  2419               	addwf	add@result,w,c
   468  00FF82  6E19               	movwf	add@result,c
   469  00FF84  0E00               	movlw	0
   470  00FF86  201A               	addwfc	add@result+1,w,c
   471  00FF88  6E1A               	movwf	add@result+1,c
   472  00FF8A                     l12:
   473                           
   474                           ;Ch8.c: 38: }
   475                           ;Ch8.c: 39: if(result2 == 1)
   476  00FF8A  0413               	decf	add@result2,w,c
   477  00FF8C  1014               	iorwf	add@result2+1,w,c
   478  00FF8E  A4D8               	btfss	status,2,c
   479  00FF90  D006               	goto	l13
   480                           
   481                           ;Ch8.c: 40: {
   482                           ;Ch8.c: 41: result = result + 2;
   483  00FF92  0E02               	movlw	2
   484  00FF94  2419               	addwf	add@result,w,c
   485  00FF96  6E19               	movwf	add@result,c
   486  00FF98  0E00               	movlw	0
   487  00FF9A  201A               	addwfc	add@result+1,w,c
   488  00FF9C  6E1A               	movwf	add@result+1,c
   489  00FF9E                     l13:
   490                           
   491                           ;Ch8.c: 42: }
   492                           ;Ch8.c: 43: if(carry2 ==1)
   493  00FF9E  0411               	decf	add@carry2,w,c
   494  00FFA0  1012               	iorwf	add@carry2+1,w,c
   495  00FFA2  A4D8               	btfss	status,2,c
   496  00FFA4  D006               	goto	l14
   497                           
   498                           ;Ch8.c: 44: {
   499                           ;Ch8.c: 45: result = result +4;
   500  00FFA6  0E04               	movlw	4
   501  00FFA8  2419               	addwf	add@result,w,c
   502  00FFAA  6E19               	movwf	add@result,c
   503  00FFAC  0E00               	movlw	0
   504  00FFAE  201A               	addwfc	add@result+1,w,c
   505  00FFB0  6E1A               	movwf	add@result+1,c
   506  00FFB2                     l14:
   507                           
   508                           ;Ch8.c: 46: }
   509                           ;Ch8.c: 47: if(result3 == 1)
   510  00FFB2  0417               	decf	add@result3,w,c
   511  00FFB4  1018               	iorwf	add@result3+1,w,c
   512  00FFB6  A4D8               	btfss	status,2,c
   513  00FFB8  D006               	goto	l15
   514                           
   515                           ;Ch8.c: 48: {
   516                           ;Ch8.c: 49: result = result + 4;
   517  00FFBA  0E04               	movlw	4
   518  00FFBC  2419               	addwf	add@result,w,c
   519  00FFBE  6E19               	movwf	add@result,c
   520  00FFC0  0E00               	movlw	0
   521  00FFC2  201A               	addwfc	add@result+1,w,c
   522  00FFC4  6E1A               	movwf	add@result+1,c
   523  00FFC6                     l15:
   524                           
   525                           ;Ch8.c: 50: }
   526                           ;Ch8.c: 51: if(carry3 ==1)
   527  00FFC6  0415               	decf	add@carry3,w,c
   528  00FFC8  1016               	iorwf	add@carry3+1,w,c
   529  00FFCA  A4D8               	btfss	status,2,c
   530  00FFCC  D006               	goto	l16
   531                           
   532                           ;Ch8.c: 52: {
   533                           ;Ch8.c: 53: result = result +8;
   534  00FFCE  0E08               	movlw	8
   535  00FFD0  2419               	addwf	add@result,w,c
   536  00FFD2  6E19               	movwf	add@result,c
   537  00FFD4  0E00               	movlw	0
   538  00FFD6  201A               	addwfc	add@result+1,w,c
   539  00FFD8  6E1A               	movwf	add@result+1,c
   540  00FFDA                     l16:
   541                           
   542                           ;Ch8.c: 54: }
   543                           ;Ch8.c: 55: if(result>9)
   544  00FFDA  BE1A               	btfsc	add@result+1,7,c
   545  00FFDC  D00B               	goto	l680
   546  00FFDE  501A               	movf	add@result+1,w,c
   547  00FFE0  E104               	bnz	u210
   548  00FFE2  0E0A               	movlw	10
   549  00FFE4  5C19               	subwf	add@result,w,c
   550  00FFE6  A0D8               	btfss	status,0,c
   551  00FFE8  D005               	goto	l680
   552  00FFEA                     u210:
   553                           
   554                           ;Ch8.c: 56: {
   555                           ;Ch8.c: 57: result = 0;
   556  00FFEA  0E00               	movlw	0
   557  00FFEC  6E1A               	movwf	add@result+1,c
   558  00FFEE  0E00               	movlw	0
   559  00FFF0  6E19               	movwf	add@result,c
   560  00FFF2  D000               	goto	l680
   561  00FFF4                     l680:
   562                           
   563                           ;Ch8.c: 58: }
   564                           ;Ch8.c: 59: return result;
   565  00FFF4  C019  F001         	movff	add@result,?_add
   566  00FFF8  C01A  F002         	movff	add@result+1,?_add+1
   567  00FFFC  D000               	goto	l18
   568  00FFFE                     l18:
   569  00FFFE  0012               	return		;funcret
   570  010000                     __end_of_add:
   571                           	opt stack 0
   572  0000                     tblptru	equ	0xFF8
   573                           tblptrh	equ	0xFF7
   574                           tblptrl	equ	0xFF6
   575                           tablat	equ	0xFF5
   576                           postinc0	equ	0xFEE
   577                           wreg	equ	0xFE8
   578                           postdec1	equ	0xFE5
   579                           plusw1	equ	0xFE3
   580                           fsr1l	equ	0xFE1
   581                           indf2	equ	0xFDF
   582                           plusw2	equ	0xFDB
   583                           fsr2h	equ	0xFDA
   584                           fsr2l	equ	0xFD9
   585                           status	equ	0xFD8
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           postinc0	equ	0xFEE
   591                           wreg	equ	0xFE8
   592                           postdec1	equ	0xFE5
   593                           plusw1	equ	0xFE3
   594                           fsr1l	equ	0xFE1
   595                           indf2	equ	0xFDF
   596                           plusw2	equ	0xFDB
   597                           fsr2h	equ	0xFDA
   598                           fsr2l	equ	0xFD9
   599                           status	equ	0xFD8
   600                           
   601                           	psect	rparam
   602  0000                     tblptru	equ	0xFF8
   603                           tblptrh	equ	0xFF7
   604                           tblptrl	equ	0xFF6
   605                           tablat	equ	0xFF5
   606                           postinc0	equ	0xFEE
   607                           wreg	equ	0xFE8
   608                           postdec1	equ	0xFE5
   609                           plusw1	equ	0xFE3
   610                           fsr1l	equ	0xFE1
   611                           indf2	equ	0xFDF
   612                           plusw2	equ	0xFDB
   613                           fsr2h	equ	0xFDA
   614                           fsr2l	equ	0xFD9
   615                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     44      54
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_add

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0     891
                                             26 COMRAM    18    18      0
                                _add
 ---------------------------------------------------------------------------------
 (1) _add                                                 26    14     12     844
                                              0 COMRAM    26    14     12
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _add

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2C      36       1       42.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36      34        0.0%
DATA                 0      0      36       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Oct 22 10:37:00 2021

                     l11 FF76                       l12 FF8A                       l13 FF9E  
                     l14 FFB2                       l15 FFC6                       l16 FFDA  
                     l18 FFFE                      l680 FFF4                      l688 FE84  
                    u210 FFEA                      u221 FE7A                      u230 FE8E  
                    u240 FEA0                      u250 FEB2                      u260 FEC4  
                    u270 FED6                      u238 FE90                      u280 FEE8  
                    u248 FEA2                      u258 FEB4                      u268 FEC6  
                    u278 FED8                      u288 FEEA                      _add FF12  
                    wreg 000FE8             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   ?_add 0001                     _main FE68                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     start 0000  
           ___param_bank 000010                    ??_add 000D                    ?_main 0001  
                  _PORTB 000F81                    _TRISB 000F93                    _TRISD 000F95  
                  add@aa 0001                    add@ab 0003                    add@ba 0007  
                  add@ac 0005                    add@bb 0009                    add@bc 000B  
         __CFG_BOREN$OFF 000000                    tablat 000FF5                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8          __initialization FE42  
           __end_of_main FF12                   ??_main 001B            __activetblptr 000000  
           __pdataCOMRAM 002D                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0080  __end_of__initialization FE62  
          ___rparam_used 000001           __pcstackCOMRAM 0001               add@result1 000F  
             add@result2 0013               add@result3 0017       __CFG_CCP2MX$PORTBE 000000  
                __Hparam 0000                  __Lparam 0000                  __pcinit FE42  
                __ramtop 1000                  __ptext0 FE68                  __ptext1 FF12  
           __size_of_add 00EE                  main@sum 002B     end_of_initialization FE62  
                postdec1 000FE5                  postinc0 000FEE                _PORTDbits 000F83  
          __pidataCOMRAM FE38      start_initialization FE42              __end_of_add 0000  
       __CFG_OSC$INTIO67 000000                add@carry1 000D                add@carry2 0011  
              add@carry3 0015                add@result 0019                main@F4280 002D  
              main@array 0021                copy_data0 FE56                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 00AA  
