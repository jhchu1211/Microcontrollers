

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Nov 01 14:38:39 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataCOMRAM
    55  000BB8                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _Display_D1
    59  000BB8  00                 	db	0
    60  000BB9  02                 	db	2
    61  000BBA  04                 	db	4
    62  000BBB  06                 	db	6
    63  000BBC  10                 	db	16
    64  000BBD  12                 	db	18
    65  000BBE  14                 	db	20
    66  000BBF  16                 	db	22
    67  000BC0  16                 	db	22
    68  000BC1  16                 	db	22
    69                           
    70                           ;initializer for _tempSecond
    71  000BC2  FF                 	db	255
    72                           
    73                           ;initializer for _wrap
    74  000BC3  01                 	db	1
    75                           
    76                           	psect	idataBANK0
    77  000B4A                     __pidataBANK0:
    78                           	opt stack 0
    79                           
    80                           ;initializer for _array1
    81  000B4A  A2                 	db	162
    82  000B4B  62                 	db	98
    83  000B4C  E2                 	db	226
    84  000B4D  22                 	db	34
    85  000B4E  02                 	db	2
    86  000B4F  C2                 	db	194
    87  000B50  E0                 	db	224
    88  000B51  A8                 	db	168
    89  000B52  90                 	db	144
    90  000B53  68                 	db	104
    91  000B54  98                 	db	152
    92  000B55  B0                 	db	176
    93  000B56  30                 	db	48
    94  000B57  18                 	db	24
    95  000B58  7A                 	db	122
    96  000B59  10                 	db	16
    97  000B5A  38                 	db	56
    98  000B5B  5A                 	db	90
    99  000B5C  42                 	db	66
   100  000B5D  4A                 	db	74
   101  000B5E  52                 	db	82
   102                           
   103                           	psect	idataBANK1
   104  0008C0                     __pidataBANK1:
   105                           	opt stack 0
   106                           
   107                           ;initializer for _txt1
   108  0008C0  43                 	db	67
   109  0008C1  48                 	db	72
   110  0008C2  2D                 	db	45
   111  0008C3  00                 	db	0
   112  0008C4  43                 	db	67
   113  0008C5  48                 	db	72
   114  0008C6  20                 	db	32
   115  0008C7  00                 	db	0
   116  0008C8  43                 	db	67
   117  0008C9  48                 	db	72
   118  0008CA  2B                 	db	43
   119  0008CB  00                 	db	0
   120  0008CC  50                 	db	80
   121  0008CD  52                 	db	82
   122  0008CE  56                 	db	86
   123  0008CF  00                 	db	0
   124  0008D0  4E                 	db	78
   125  0008D1  58                 	db	88
   126  0008D2  54                 	db	84
   127  0008D3  00                 	db	0
   128  0008D4  50                 	db	80
   129  0008D5  4C                 	db	76
   130  0008D6  59                 	db	89
   131  0008D7  00                 	db	0
   132  0008D8  20                 	db	32
   133  0008D9  2D                 	db	45
   134  0008DA  20                 	db	32
   135  0008DB  00                 	db	0
   136  0008DC  20                 	db	32
   137  0008DD  2B                 	db	43
   138  0008DE  20                 	db	32
   139  0008DF  00                 	db	0
   140  0008E0  20                 	db	32
   141  0008E1  45                 	db	69
   142  0008E2  51                 	db	81
   143  0008E3  00                 	db	0
   144  0008E4  20                 	db	32
   145  0008E5  30                 	db	48
   146  0008E6  20                 	db	32
   147  0008E7  00                 	db	0
   148  0008E8  31                 	db	49
   149  0008E9  30                 	db	48
   150  0008EA  30                 	db	48
   151  0008EB  00                 	db	0
   152  0008EC  32                 	db	50
   153  0008ED  30                 	db	48
   154  0008EE  30                 	db	48
   155  0008EF  00                 	db	0
   156  0008F0  20                 	db	32
   157  0008F1  31                 	db	49
   158  0008F2  20                 	db	32
   159  0008F3  00                 	db	0
   160  0008F4  20                 	db	32
   161  0008F5  32                 	db	50
   162  0008F6  20                 	db	32
   163  0008F7  00                 	db	0
   164  0008F8  20                 	db	32
   165  0008F9  33                 	db	51
   166  0008FA  20                 	db	32
   167  0008FB  00                 	db	0
   168  0008FC  20                 	db	32
   169  0008FD  34                 	db	52
   170  0008FE  20                 	db	32
   171  0008FF  00                 	db	0
   172  000900  20                 	db	32
   173  000901  35                 	db	53
   174  000902  20                 	db	32
   175  000903  00                 	db	0
   176  000904  20                 	db	32
   177  000905  36                 	db	54
   178  000906  20                 	db	32
   179  000907  00                 	db	0
   180  000908  20                 	db	32
   181  000909  37                 	db	55
   182  00090A  20                 	db	32
   183  00090B  00                 	db	0
   184  00090C  20                 	db	32
   185  00090D  38                 	db	56
   186  00090E  20                 	db	32
   187  00090F  00                 	db	0
   188  000910  20                 	db	32
   189  000911  39                 	db	57
   190  000912  20                 	db	32
   191  000913  00                 	db	0
   192                           
   193                           	psect	mediumconst
   194  00FDB6                     __pmediumconst:
   195                           	opt stack 0
   196  00FDB6  00                 	db	0
   197  00FDB7                     _font:
   198                           	opt stack 0
   199  00FDB7  00                 	db	0
   200  00FDB8  00                 	db	0
   201  00FDB9  00                 	db	0
   202  00FDBA  00                 	db	0
   203  00FDBB  00                 	db	0
   204  00FDBC  00                 	db	0
   205  00FDBD  00                 	db	0
   206  00FDBE  5F                 	db	95
   207  00FDBF  00                 	db	0
   208  00FDC0  00                 	db	0
   209  00FDC1  00                 	db	0
   210  00FDC2  07                 	db	7
   211  00FDC3  00                 	db	0
   212  00FDC4  07                 	db	7
   213  00FDC5  00                 	db	0
   214  00FDC6  14                 	db	20
   215  00FDC7  7F                 	db	127
   216  00FDC8  14                 	db	20
   217  00FDC9  7F                 	db	127
   218  00FDCA  14                 	db	20
   219  00FDCB  24                 	db	36
   220  00FDCC  2A                 	db	42
   221  00FDCD  7F                 	db	127
   222  00FDCE  2A                 	db	42
   223  00FDCF  12                 	db	18
   224  00FDD0  23                 	db	35
   225  00FDD1  13                 	db	19
   226  00FDD2  08                 	db	8
   227  00FDD3  64                 	db	100
   228  00FDD4  62                 	db	98
   229  00FDD5  36                 	db	54
   230  00FDD6  49                 	db	73
   231  00FDD7  56                 	db	86
   232  00FDD8  20                 	db	32
   233  00FDD9  50                 	db	80
   234  00FDDA  00                 	db	0
   235  00FDDB  08                 	db	8
   236  00FDDC  07                 	db	7
   237  00FDDD  03                 	db	3
   238  00FDDE  00                 	db	0
   239  00FDDF  00                 	db	0
   240  00FDE0  1C                 	db	28
   241  00FDE1  22                 	db	34
   242  00FDE2  41                 	db	65
   243  00FDE3  00                 	db	0
   244  00FDE4  00                 	db	0
   245  00FDE5  41                 	db	65
   246  00FDE6  22                 	db	34
   247  00FDE7  1C                 	db	28
   248  00FDE8  00                 	db	0
   249  00FDE9  2A                 	db	42
   250  00FDEA  1C                 	db	28
   251  00FDEB  7F                 	db	127
   252  00FDEC  1C                 	db	28
   253  00FDED  2A                 	db	42
   254  00FDEE  08                 	db	8
   255  00FDEF  08                 	db	8
   256  00FDF0  3E                 	db	62
   257  00FDF1  08                 	db	8
   258  00FDF2  08                 	db	8
   259  00FDF3  00                 	db	0
   260  00FDF4  80                 	db	128
   261  00FDF5  70                 	db	112
   262  00FDF6  30                 	db	48
   263  00FDF7  00                 	db	0
   264  00FDF8  08                 	db	8
   265  00FDF9  08                 	db	8
   266  00FDFA  08                 	db	8
   267  00FDFB  08                 	db	8
   268  00FDFC  08                 	db	8
   269  00FDFD  00                 	db	0
   270  00FDFE  00                 	db	0
   271  00FDFF  60                 	db	96
   272  00FE00  60                 	db	96
   273  00FE01  00                 	db	0
   274  00FE02  20                 	db	32
   275  00FE03  10                 	db	16
   276  00FE04  08                 	db	8
   277  00FE05  04                 	db	4
   278  00FE06  02                 	db	2
   279  00FE07  3E                 	db	62
   280  00FE08  51                 	db	81
   281  00FE09  49                 	db	73
   282  00FE0A  45                 	db	69
   283  00FE0B  3E                 	db	62
   284  00FE0C  00                 	db	0
   285  00FE0D  42                 	db	66
   286  00FE0E  7F                 	db	127
   287  00FE0F  40                 	db	64
   288  00FE10  00                 	db	0
   289  00FE11  72                 	db	114
   290  00FE12  49                 	db	73
   291  00FE13  49                 	db	73
   292  00FE14  49                 	db	73
   293  00FE15  46                 	db	70
   294  00FE16  21                 	db	33
   295  00FE17  41                 	db	65
   296  00FE18  49                 	db	73
   297  00FE19  4D                 	db	77
   298  00FE1A  33                 	db	51
   299  00FE1B  18                 	db	24
   300  00FE1C  14                 	db	20
   301  00FE1D  12                 	db	18
   302  00FE1E  7F                 	db	127
   303  00FE1F  10                 	db	16
   304  00FE20  27                 	db	39
   305  00FE21  45                 	db	69
   306  00FE22  45                 	db	69
   307  00FE23  45                 	db	69
   308  00FE24  39                 	db	57
   309  00FE25  3C                 	db	60
   310  00FE26  4A                 	db	74
   311  00FE27  49                 	db	73
   312  00FE28  49                 	db	73
   313  00FE29  31                 	db	49
   314  00FE2A  41                 	db	65
   315  00FE2B  21                 	db	33
   316  00FE2C  11                 	db	17
   317  00FE2D  09                 	db	9
   318  00FE2E  07                 	db	7
   319  00FE2F  36                 	db	54
   320  00FE30  49                 	db	73
   321  00FE31  49                 	db	73
   322  00FE32  49                 	db	73
   323  00FE33  36                 	db	54
   324  00FE34  46                 	db	70
   325  00FE35  49                 	db	73
   326  00FE36  49                 	db	73
   327  00FE37  29                 	db	41
   328  00FE38  1E                 	db	30
   329  00FE39  00                 	db	0
   330  00FE3A  00                 	db	0
   331  00FE3B  14                 	db	20
   332  00FE3C  00                 	db	0
   333  00FE3D  00                 	db	0
   334  00FE3E  00                 	db	0
   335  00FE3F  40                 	db	64
   336  00FE40  34                 	db	52
   337  00FE41  00                 	db	0
   338  00FE42  00                 	db	0
   339  00FE43  00                 	db	0
   340  00FE44  08                 	db	8
   341  00FE45  14                 	db	20
   342  00FE46  22                 	db	34
   343  00FE47  41                 	db	65
   344  00FE48  14                 	db	20
   345  00FE49  14                 	db	20
   346  00FE4A  14                 	db	20
   347  00FE4B  14                 	db	20
   348  00FE4C  14                 	db	20
   349  00FE4D  00                 	db	0
   350  00FE4E  41                 	db	65
   351  00FE4F  22                 	db	34
   352  00FE50  14                 	db	20
   353  00FE51  08                 	db	8
   354  00FE52  02                 	db	2
   355  00FE53  01                 	db	1
   356  00FE54  59                 	db	89
   357  00FE55  09                 	db	9
   358  00FE56  06                 	db	6
   359  00FE57  3E                 	db	62
   360  00FE58  41                 	db	65
   361  00FE59  5D                 	db	93
   362  00FE5A  59                 	db	89
   363  00FE5B  4E                 	db	78
   364  00FE5C  7C                 	db	124
   365  00FE5D  12                 	db	18
   366  00FE5E  11                 	db	17
   367  00FE5F  12                 	db	18
   368  00FE60  7C                 	db	124
   369  00FE61  7F                 	db	127
   370  00FE62  49                 	db	73
   371  00FE63  49                 	db	73
   372  00FE64  49                 	db	73
   373  00FE65  36                 	db	54
   374  00FE66  3E                 	db	62
   375  00FE67  41                 	db	65
   376  00FE68  41                 	db	65
   377  00FE69  41                 	db	65
   378  00FE6A  22                 	db	34
   379  00FE6B  7F                 	db	127
   380  00FE6C  41                 	db	65
   381  00FE6D  41                 	db	65
   382  00FE6E  41                 	db	65
   383  00FE6F  3E                 	db	62
   384  00FE70  7F                 	db	127
   385  00FE71  49                 	db	73
   386  00FE72  49                 	db	73
   387  00FE73  49                 	db	73
   388  00FE74  41                 	db	65
   389  00FE75  7F                 	db	127
   390  00FE76  09                 	db	9
   391  00FE77  09                 	db	9
   392  00FE78  09                 	db	9
   393  00FE79  01                 	db	1
   394  00FE7A  3E                 	db	62
   395  00FE7B  41                 	db	65
   396  00FE7C  41                 	db	65
   397  00FE7D  51                 	db	81
   398  00FE7E  73                 	db	115
   399  00FE7F  7F                 	db	127
   400  00FE80  08                 	db	8
   401  00FE81  08                 	db	8
   402  00FE82  08                 	db	8
   403  00FE83  7F                 	db	127
   404  00FE84  00                 	db	0
   405  00FE85  41                 	db	65
   406  00FE86  7F                 	db	127
   407  00FE87  41                 	db	65
   408  00FE88  00                 	db	0
   409  00FE89  20                 	db	32
   410  00FE8A  40                 	db	64
   411  00FE8B  41                 	db	65
   412  00FE8C  3F                 	db	63
   413  00FE8D  01                 	db	1
   414  00FE8E  7F                 	db	127
   415  00FE8F  08                 	db	8
   416  00FE90  14                 	db	20
   417  00FE91  22                 	db	34
   418  00FE92  41                 	db	65
   419  00FE93  7F                 	db	127
   420  00FE94  40                 	db	64
   421  00FE95  40                 	db	64
   422  00FE96  40                 	db	64
   423  00FE97  40                 	db	64
   424  00FE98  7F                 	db	127
   425  00FE99  02                 	db	2
   426  00FE9A  1C                 	db	28
   427  00FE9B  02                 	db	2
   428  00FE9C  7F                 	db	127
   429  00FE9D  7F                 	db	127
   430  00FE9E  04                 	db	4
   431  00FE9F  08                 	db	8
   432  00FEA0  10                 	db	16
   433  00FEA1  7F                 	db	127
   434  00FEA2  3E                 	db	62
   435  00FEA3  41                 	db	65
   436  00FEA4  41                 	db	65
   437  00FEA5  41                 	db	65
   438  00FEA6  3E                 	db	62
   439  00FEA7  7F                 	db	127
   440  00FEA8  09                 	db	9
   441  00FEA9  09                 	db	9
   442  00FEAA  09                 	db	9
   443  00FEAB  06                 	db	6
   444  00FEAC  3E                 	db	62
   445  00FEAD  41                 	db	65
   446  00FEAE  51                 	db	81
   447  00FEAF  21                 	db	33
   448  00FEB0  5E                 	db	94
   449  00FEB1  7F                 	db	127
   450  00FEB2  09                 	db	9
   451  00FEB3  19                 	db	25
   452  00FEB4  29                 	db	41
   453  00FEB5  46                 	db	70
   454  00FEB6                     __end_of_font:
   455                           	opt stack 0
   456  00FEB6                     _font2:
   457                           	opt stack 0
   458  00FEB6  26                 	db	38
   459  00FEB7  49                 	db	73
   460  00FEB8  49                 	db	73
   461  00FEB9  49                 	db	73
   462  00FEBA  32                 	db	50
   463  00FEBB  03                 	db	3
   464  00FEBC  01                 	db	1
   465  00FEBD  7F                 	db	127
   466  00FEBE  01                 	db	1
   467  00FEBF  03                 	db	3
   468  00FEC0  3F                 	db	63
   469  00FEC1  40                 	db	64
   470  00FEC2  40                 	db	64
   471  00FEC3  40                 	db	64
   472  00FEC4  3F                 	db	63
   473  00FEC5  1F                 	db	31
   474  00FEC6  20                 	db	32
   475  00FEC7  40                 	db	64
   476  00FEC8  20                 	db	32
   477  00FEC9  1F                 	db	31
   478  00FECA  3F                 	db	63
   479  00FECB  40                 	db	64
   480  00FECC  38                 	db	56
   481  00FECD  40                 	db	64
   482  00FECE  3F                 	db	63
   483  00FECF  63                 	db	99
   484  00FED0  14                 	db	20
   485  00FED1  08                 	db	8
   486  00FED2  14                 	db	20
   487  00FED3  63                 	db	99
   488  00FED4  03                 	db	3
   489  00FED5  04                 	db	4
   490  00FED6  78                 	db	120
   491  00FED7  04                 	db	4
   492  00FED8  03                 	db	3
   493  00FED9  61                 	db	97
   494  00FEDA  59                 	db	89
   495  00FEDB  49                 	db	73
   496  00FEDC  4D                 	db	77
   497  00FEDD  43                 	db	67
   498  00FEDE  00                 	db	0
   499  00FEDF  7F                 	db	127
   500  00FEE0  41                 	db	65
   501  00FEE1  41                 	db	65
   502  00FEE2  41                 	db	65
   503  00FEE3  02                 	db	2
   504  00FEE4  04                 	db	4
   505  00FEE5  08                 	db	8
   506  00FEE6  10                 	db	16
   507  00FEE7  20                 	db	32
   508  00FEE8  00                 	db	0
   509  00FEE9  41                 	db	65
   510  00FEEA  41                 	db	65
   511  00FEEB  41                 	db	65
   512  00FEEC  7F                 	db	127
   513  00FEED  04                 	db	4
   514  00FEEE  02                 	db	2
   515  00FEEF  01                 	db	1
   516  00FEF0  02                 	db	2
   517  00FEF1  04                 	db	4
   518  00FEF2  40                 	db	64
   519  00FEF3  40                 	db	64
   520  00FEF4  40                 	db	64
   521  00FEF5  40                 	db	64
   522  00FEF6  40                 	db	64
   523  00FEF7  00                 	db	0
   524  00FEF8  03                 	db	3
   525  00FEF9  07                 	db	7
   526  00FEFA  08                 	db	8
   527  00FEFB  00                 	db	0
   528  00FEFC  20                 	db	32
   529  00FEFD  54                 	db	84
   530  00FEFE  54                 	db	84
   531  00FEFF  78                 	db	120
   532  00FF00  40                 	db	64
   533  00FF01  7F                 	db	127
   534  00FF02  28                 	db	40
   535  00FF03  44                 	db	68
   536  00FF04  44                 	db	68
   537  00FF05  38                 	db	56
   538  00FF06  38                 	db	56
   539  00FF07  44                 	db	68
   540  00FF08  44                 	db	68
   541  00FF09  44                 	db	68
   542  00FF0A  28                 	db	40
   543  00FF0B  38                 	db	56
   544  00FF0C  44                 	db	68
   545  00FF0D  44                 	db	68
   546  00FF0E  28                 	db	40
   547  00FF0F  7F                 	db	127
   548  00FF10  38                 	db	56
   549  00FF11  54                 	db	84
   550  00FF12  54                 	db	84
   551  00FF13  54                 	db	84
   552  00FF14  18                 	db	24
   553  00FF15  00                 	db	0
   554  00FF16  08                 	db	8
   555  00FF17  7E                 	db	126
   556  00FF18  09                 	db	9
   557  00FF19  02                 	db	2
   558  00FF1A  18                 	db	24
   559  00FF1B  A4                 	db	164
   560  00FF1C  A4                 	db	164
   561  00FF1D  9C                 	db	156
   562  00FF1E  78                 	db	120
   563  00FF1F  7F                 	db	127
   564  00FF20  08                 	db	8
   565  00FF21  04                 	db	4
   566  00FF22  04                 	db	4
   567  00FF23  78                 	db	120
   568  00FF24  00                 	db	0
   569  00FF25  44                 	db	68
   570  00FF26  7D                 	db	125
   571  00FF27  40                 	db	64
   572  00FF28  00                 	db	0
   573  00FF29  20                 	db	32
   574  00FF2A  40                 	db	64
   575  00FF2B  40                 	db	64
   576  00FF2C  3D                 	db	61
   577  00FF2D  00                 	db	0
   578  00FF2E  7F                 	db	127
   579  00FF2F  10                 	db	16
   580  00FF30  28                 	db	40
   581  00FF31  44                 	db	68
   582  00FF32  00                 	db	0
   583  00FF33  00                 	db	0
   584  00FF34  41                 	db	65
   585  00FF35  7F                 	db	127
   586  00FF36  40                 	db	64
   587  00FF37  00                 	db	0
   588  00FF38  7C                 	db	124
   589  00FF39  04                 	db	4
   590  00FF3A  78                 	db	120
   591  00FF3B  04                 	db	4
   592  00FF3C  78                 	db	120
   593  00FF3D  7C                 	db	124
   594  00FF3E  08                 	db	8
   595  00FF3F  04                 	db	4
   596  00FF40  04                 	db	4
   597  00FF41  78                 	db	120
   598  00FF42  38                 	db	56
   599  00FF43  44                 	db	68
   600  00FF44  44                 	db	68
   601  00FF45  44                 	db	68
   602  00FF46  38                 	db	56
   603  00FF47  FC                 	db	252
   604  00FF48  18                 	db	24
   605  00FF49  24                 	db	36
   606  00FF4A  24                 	db	36
   607  00FF4B  18                 	db	24
   608  00FF4C  18                 	db	24
   609  00FF4D  24                 	db	36
   610  00FF4E  24                 	db	36
   611  00FF4F  18                 	db	24
   612  00FF50  FC                 	db	252
   613  00FF51  7C                 	db	124
   614  00FF52  08                 	db	8
   615  00FF53  04                 	db	4
   616  00FF54  04                 	db	4
   617  00FF55  08                 	db	8
   618  00FF56  48                 	db	72
   619  00FF57  54                 	db	84
   620  00FF58  54                 	db	84
   621  00FF59  54                 	db	84
   622  00FF5A  24                 	db	36
   623  00FF5B  04                 	db	4
   624  00FF5C  04                 	db	4
   625  00FF5D  3F                 	db	63
   626  00FF5E  44                 	db	68
   627  00FF5F  24                 	db	36
   628  00FF60  3C                 	db	60
   629  00FF61  40                 	db	64
   630  00FF62  40                 	db	64
   631  00FF63  20                 	db	32
   632  00FF64  7C                 	db	124
   633  00FF65  1C                 	db	28
   634  00FF66  20                 	db	32
   635  00FF67  40                 	db	64
   636  00FF68  20                 	db	32
   637  00FF69  1C                 	db	28
   638  00FF6A  3C                 	db	60
   639  00FF6B  40                 	db	64
   640  00FF6C  30                 	db	48
   641  00FF6D  40                 	db	64
   642  00FF6E  3C                 	db	60
   643  00FF6F  44                 	db	68
   644  00FF70  28                 	db	40
   645  00FF71  10                 	db	16
   646  00FF72  28                 	db	40
   647  00FF73  44                 	db	68
   648  00FF74  4C                 	db	76
   649  00FF75  90                 	db	144
   650  00FF76  90                 	db	144
   651  00FF77  90                 	db	144
   652  00FF78  7C                 	db	124
   653  00FF79  44                 	db	68
   654  00FF7A  64                 	db	100
   655  00FF7B  54                 	db	84
   656  00FF7C  4C                 	db	76
   657  00FF7D  44                 	db	68
   658  00FF7E  00                 	db	0
   659  00FF7F  08                 	db	8
   660  00FF80  36                 	db	54
   661  00FF81  41                 	db	65
   662  00FF82  00                 	db	0
   663  00FF83  00                 	db	0
   664  00FF84  00                 	db	0
   665  00FF85  77                 	db	119
   666  00FF86  00                 	db	0
   667  00FF87  00                 	db	0
   668  00FF88  00                 	db	0
   669  00FF89  41                 	db	65
   670  00FF8A  36                 	db	54
   671  00FF8B  08                 	db	8
   672  00FF8C  00                 	db	0
   673  00FF8D  02                 	db	2
   674  00FF8E  01                 	db	1
   675  00FF8F  02                 	db	2
   676  00FF90  04                 	db	4
   677  00FF91  02                 	db	2
   678  00FF92                     __end_of_font2:
   679                           	opt stack 0
   680  00FF92                     _dpowers:
   681                           	opt stack 0
   682  00FF92  0001               	dw	1
   683  00FF94  000A               	dw	10
   684  00FF96  0064               	dw	100
   685  00FF98  03E8               	dw	1000
   686  00FF9A  2710               	dw	10000
   687  00FF9C                     __end_of_dpowers:
   688                           	opt stack 0
   689  00FF9C                     _hexpowers:
   690                           	opt stack 0
   691  00FF9C  0001               	dw	1
   692  00FF9E  0010               	dw	16
   693  00FFA0  0100               	dw	256
   694  00FFA2  1000               	dw	4096
   695  00FFA4                     __end_of_hexpowers:
   696                           	opt stack 0
   697  0000                     _ADCON1	set	4033
   698  0000                     _INTCON2bits	set	4081
   699  0000                     _INTCONbits	set	4082
   700  0000                     _OSCCON	set	4051
   701  0000                     _PIE1bits	set	3997
   702  0000                     _PIR1bits	set	3998
   703  0000                     _PIR2bits	set	4001
   704  0000                     _PORTCbits	set	3970
   705  0000                     _PORTDbits	set	3971
   706  0000                     _RCSTA	set	4011
   707  0000                     _RCSTAbits	set	4011
   708  0000                     _SPBRG	set	4015
   709  0000                     _SPBRGH	set	4016
   710  0000                     _SSPBUF	set	4041
   711  0000                     _SSPCON1	set	4038
   712  0000                     _SSPSTAT	set	4039
   713  0000                     _SSPSTATbits	set	4039
   714  0000                     _T1CON	set	4045
   715  0000                     _T1CONbits	set	4045
   716  0000                     _T3CON	set	4017
   717  0000                     _T3CONbits	set	4017
   718  0000                     _TMR1H	set	4047
   719  0000                     _TMR1L	set	4046
   720  0000                     _TMR3H	set	4019
   721  0000                     _TMR3L	set	4018
   722  0000                     _TRISA	set	3986
   723  0000                     _TRISB	set	3987
   724  0000                     _TRISC	set	3988
   725  0000                     _TRISCbits	set	3988
   726  0000                     _TRISD	set	3989
   727  0000                     _TRISE	set	3990
   728  0000                     _TXREG	set	4013
   729  0000                     _TXSTA	set	4012
   730  0000                     _TXSTAbits	set	4012
   731  0000                     _RBPU	set	32655
   732  0000                     _TRMT	set	32097
   733  00FFA4                     STR_2:
   734  00FFA4  20                 	db	32
   735  00FFA5  54                 	db	84	;'T'
   736  00FFA6  65                 	db	101	;'e'
   737  00FFA7  6D                 	db	109	;'m'
   738  00FFA8  70                 	db	112	;'p'
   739  00FFA9  65                 	db	101	;'e'
   740  00FFAA  72                 	db	114	;'r'
   741  00FFAB  61                 	db	97	;'a'
   742  00FFAC  74                 	db	116	;'t'
   743  00FFAD  75                 	db	117	;'u'
   744  00FFAE  72                 	db	114	;'r'
   745  00FFAF  65                 	db	101	;'e'
   746  00FFB0  20                 	db	32
   747  00FFB1  3D                 	db	61	;'='
   748  00FFB2  20                 	db	32
   749  00FFB3  25                 	db	37
   750  00FFB4  64                 	db	100	;'d'
   751  00FFB5  20                 	db	32
   752  00FFB6  64                 	db	100	;'d'
   753  00FFB7  65                 	db	101	;'e'
   754  00FFB8  67                 	db	103	;'g'
   755  00FFB9  72                 	db	114	;'r'
   756  00FFBA  65                 	db	101	;'e'
   757  00FFBB  65                 	db	101	;'e'
   758  00FFBC  73                 	db	115	;'s'
   759  00FFBD  43                 	db	67	;'C'
   760  00FFBE  20                 	db	32
   761  00FFBF  3D                 	db	61	;'='
   762  00FFC0  20                 	db	32
   763  00FFC1  25                 	db	37
   764  00FFC2  64                 	db	100	;'d'
   765  00FFC3  20                 	db	32
   766  00FFC4  64                 	db	100	;'d'
   767  00FFC5  65                 	db	101	;'e'
   768  00FFC6  67                 	db	103	;'g'
   769  00FFC7  72                 	db	114	;'r'
   770  00FFC8  65                 	db	101	;'e'
   771  00FFC9  65                 	db	101	;'e'
   772  00FFCA  73                 	db	115	;'s'
   773  00FFCB  46                 	db	70	;'F'
   774  00FFCC  0D                 	db	13
   775  00FFCD  0A                 	db	10
   776  00FFCE  00                 	db	0
   777  00FFCF                     STR_1:
   778  00FFCF  25                 	db	37
   779  00FFD0  30                 	db	48	;'0'
   780  00FFD1  32                 	db	50	;'2'
   781  00FFD2  78                 	db	120	;'x'
   782  00FFD3  3A                 	db	58	;':'
   783  00FFD4  25                 	db	37
   784  00FFD5  30                 	db	48	;'0'
   785  00FFD6  32                 	db	50	;'2'
   786  00FFD7  78                 	db	120	;'x'
   787  00FFD8  3A                 	db	58	;':'
   788  00FFD9  25                 	db	37
   789  00FFDA  30                 	db	48	;'0'
   790  00FFDB  32                 	db	50	;'2'
   791  00FFDC  78                 	db	120	;'x'
   792  00FFDD  20                 	db	32
   793  00FFDE  25                 	db	37
   794  00FFDF  30                 	db	48	;'0'
   795  00FFE0  32                 	db	50	;'2'
   796  00FFE1  78                 	db	120	;'x'
   797  00FFE2  2F                 	db	47
   798  00FFE3  25                 	db	37
   799  00FFE4  30                 	db	48	;'0'
   800  00FFE5  32                 	db	50	;'2'
   801  00FFE6  78                 	db	120	;'x'
   802  00FFE7  2F                 	db	47
   803  00FFE8  25                 	db	37
   804  00FFE9  30                 	db	48	;'0'
   805  00FFEA  32                 	db	50	;'2'
   806  00FFEB  78                 	db	120	;'x'
   807  00FFEC  00                 	db	0
   808  00FFED                     STR_3:
   809  00FFED  30                 	db	48	;'0'
   810  00FFEE  31                 	db	49	;'1'
   811  00FFEF  32                 	db	50	;'2'
   812  00FFF0  33                 	db	51	;'3'
   813  00FFF1  34                 	db	52	;'4'
   814  00FFF2  35                 	db	53	;'5'
   815  00FFF3  36                 	db	54	;'6'
   816  00FFF4  37                 	db	55	;'7'
   817  00FFF5  38                 	db	56	;'8'
   818  00FFF6  39                 	db	57	;'9'
   819  00FFF7  61                 	db	97	;'a'
   820  00FFF8  62                 	db	98	;'b'
   821  00FFF9  63                 	db	99	;'c'
   822  00FFFA  64                 	db	100	;'d'
   823  00FFFB  65                 	db	101	;'e'
   824  00FFFC  66                 	db	102	;'f'
   825  00FFFD  00                 	db	0
   826                           
   827                           ; #config settings
   828  00FFFE  00                 	db	0	; dummy byte at the end
   829  0000                     
   830                           	psect	cinit
   831  000692                     __pcinit:
   832                           	opt stack 0
   833  000692                     start_initialization:
   834                           	opt stack 0
   835  000692                     __initialization:
   836                           	opt stack 0
   837                           
   838                           ; Clear objects allocated to BANK0 (31 bytes)
   839  000692  EE00  F080         	lfsr	0,__pbssBANK0
   840  000696  0E1F               	movlw	31
   841  000698                     clear_0:
   842  000698  6AEE               	clrf	postinc0,c
   843  00069A  06E8               	decf	wreg,f,c
   844  00069C  E1FD               	bnz	clear_0
   845                           
   846                           ; Clear objects allocated to COMRAM (47 bytes)
   847  00069E  EE00  F031         	lfsr	0,__pbssCOMRAM
   848  0006A2  0E2F               	movlw	47
   849  0006A4                     clear_1:
   850  0006A4  6AEE               	clrf	postinc0,c
   851  0006A6  06E8               	decf	wreg,f,c
   852  0006A8  E1FD               	bnz	clear_1
   853                           
   854                           ; Initialize objects allocated to BANK1 (84 bytes)
   855                           ; load TBLPTR registers with __pidataBANK1
   856  0006AA  0EC0               	movlw	low __pidataBANK1
   857  0006AC  6EF6               	movwf	tblptrl,c
   858  0006AE  0E08               	movlw	high __pidataBANK1
   859  0006B0  6EF7               	movwf	tblptrh,c
   860  0006B2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   861  0006B4  6EF8               	movwf	tblptru,c
   862  0006B6  EE01  F000         	lfsr	0,__pdataBANK1
   863  0006BA  EE10 F054          	lfsr	1,84
   864  0006BE                     copy_data0:
   865  0006BE  0009               	tblrd		*+
   866  0006C0  CFF5 FFEE          	movff	tablat,postinc0
   867  0006C4  50E5               	movf	postdec1,w,c
   868  0006C6  50E1               	movf	fsr1l,w,c
   869  0006C8  E1FA               	bnz	copy_data0
   870                           
   871                           ; Initialize objects allocated to BANK0 (21 bytes)
   872                           ; load TBLPTR registers with __pidataBANK0
   873  0006CA  0E4A               	movlw	low __pidataBANK0
   874  0006CC  6EF6               	movwf	tblptrl,c
   875  0006CE  0E0B               	movlw	high __pidataBANK0
   876  0006D0  6EF7               	movwf	tblptrh,c
   877  0006D2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   878  0006D4  6EF8               	movwf	tblptru,c
   879  0006D6  EE00  F09F         	lfsr	0,__pdataBANK0
   880  0006DA  EE10 F015          	lfsr	1,21
   881  0006DE                     copy_data1:
   882  0006DE  0009               	tblrd		*+
   883  0006E0  CFF5 FFEE          	movff	tablat,postinc0
   884  0006E4  50E5               	movf	postdec1,w,c
   885  0006E6  50E1               	movf	fsr1l,w,c
   886  0006E8  E1FA               	bnz	copy_data1
   887                           
   888                           ; Initialize objects allocated to COMRAM (12 bytes)
   889                           ; load TBLPTR registers with __pidataCOMRAM
   890  0006EA  0EB8               	movlw	low __pidataCOMRAM
   891  0006EC  6EF6               	movwf	tblptrl,c
   892  0006EE  0E0B               	movlw	high __pidataCOMRAM
   893  0006F0  6EF7               	movwf	tblptrh,c
   894  0006F2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   895  0006F4  6EF8               	movwf	tblptru,c
   896  0006F6  EE00  F060         	lfsr	0,__pdataCOMRAM
   897  0006FA  EE10 F00C          	lfsr	1,12
   898  0006FE                     copy_data2:
   899  0006FE  0009               	tblrd		*+
   900  000700  CFF5 FFEE          	movff	tablat,postinc0
   901  000704  50E5               	movf	postdec1,w,c
   902  000706  50E1               	movf	fsr1l,w,c
   903  000708  E1FA               	bnz	copy_data2
   904  00070A                     end_of_initialization:
   905                           	opt stack 0
   906  00070A                     __end_of__initialization:
   907                           	opt stack 0
   908  00070A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   909  00070C  6EF8               	movwf	tblptru,c
   910  00070E  0100               	movlb	0
   911  000710  EFAB  F002         	goto	_main	;jump to C main() function
   912                           tblptru	equ	0xFF8
   913                           tblptrh	equ	0xFF7
   914                           tblptrl	equ	0xFF6
   915                           tablat	equ	0xFF5
   916                           postinc0	equ	0xFEE
   917                           wreg	equ	0xFE8
   918                           postdec1	equ	0xFE5
   919                           fsr1l	equ	0xFE1
   920                           
   921                           	psect	bssCOMRAM
   922  000031                     __pbssCOMRAM:
   923                           	opt stack 0
   924  000031                     _Nec_code:
   925                           	opt stack 0
   926  000031                     	ds	4
   927  000035                     _Time_Elapsed:
   928                           	opt stack 0
   929  000035                     	ds	2
   930  000037                     _nbr:
   931                           	opt stack 0
   932  000037                     	ds	2
   933  000039                     _nec_ok:
   934                           	opt stack 0
   935  000039                     	ds	2
   936  00003B                     _txt:
   937                           	opt stack 0
   938  00003B                     	ds	2
   939  00003D                     _Address:
   940                           	opt stack 0
   941  00003D                     	ds	1
   942  00003E                     _Cmd:
   943                           	opt stack 0
   944  00003E                     	ds	1
   945  00003F                     _Device:
   946                           	opt stack 0
   947  00003F                     	ds	1
   948  000040                     _Nec_code1:
   949                           	opt stack 0
   950  000040                     	ds	1
   951  000041                     _Nec_state:
   952                           	opt stack 0
   953  000041                     	ds	1
   954  000042                     _TempSecond:
   955                           	opt stack 0
   956  000042                     	ds	1
   957  000043                     __tft_type:
   958                           	opt stack 0
   959  000043                     	ds	1
   960  000044                     _alarm_date:
   961                           	opt stack 0
   962  000044                     	ds	1
   963  000045                     _alarm_hour:
   964                           	opt stack 0
   965  000045                     	ds	1
   966  000046                     _alarm_minute:
   967                           	opt stack 0
   968  000046                     	ds	1
   969  000047                     _alarm_second:
   970                           	opt stack 0
   971  000047                     	ds	1
   972  000048                     _bit_count:
   973                           	opt stack 0
   974  000048                     	ds	1
   975  000049                     _colstart:
   976                           	opt stack 0
   977  000049                     	ds	1
   978  00004A                     _day:
   979                           	opt stack 0
   980  00004A                     	ds	1
   981  00004B                     _dow:
   982                           	opt stack 0
   983  00004B                     	ds	1
   984  00004C                     _found:
   985                           	opt stack 0
   986  00004C                     	ds	1
   987  00004D                     _hour:
   988                           	opt stack 0
   989  00004D                     	ds	1
   990  00004E                     _i:
   991                           	opt stack 0
   992  00004E                     	ds	1
   993  00004F                     _minute:
   994                           	opt stack 0
   995  00004F                     	ds	1
   996  000050                     _month:
   997                           	opt stack 0
   998  000050                     	ds	1
   999  000051                     _prev_second:
  1000                           	opt stack 0
  1001  000051                     	ds	1
  1002  000052                     _rowstart:
  1003                           	opt stack 0
  1004  000052                     	ds	1
  1005  000053                     _second:
  1006                           	opt stack 0
  1007  000053                     	ds	1
  1008  000054                     _setup_alarm_hour:
  1009                           	opt stack 0
  1010  000054                     	ds	1
  1011  000055                     _setup_alarm_minute:
  1012                           	opt stack 0
  1013  000055                     	ds	1
  1014  000056                     _setup_alarm_second:
  1015                           	opt stack 0
  1016  000056                     	ds	1
  1017  000057                     _setup_day:
  1018                           	opt stack 0
  1019  000057                     	ds	1
  1020  000058                     _setup_hour:
  1021                           	opt stack 0
  1022  000058                     	ds	1
  1023  000059                     _setup_minute:
  1024                           	opt stack 0
  1025  000059                     	ds	1
  1026  00005A                     _setup_month:
  1027                           	opt stack 0
  1028  00005A                     	ds	1
  1029  00005B                     _setup_second:
  1030                           	opt stack 0
  1031  00005B                     	ds	1
  1032  00005C                     _setup_year:
  1033                           	opt stack 0
  1034  00005C                     	ds	1
  1035  00005D                     _tempC:
  1036                           	opt stack 0
  1037  00005D                     	ds	1
  1038  00005E                     _tempF:
  1039                           	opt stack 0
  1040  00005E                     	ds	1
  1041  00005F                     _year:
  1042                           	opt stack 0
  1043  00005F                     	ds	1
  1044                           tblptru	equ	0xFF8
  1045                           tblptrh	equ	0xFF7
  1046                           tblptrl	equ	0xFF6
  1047                           tablat	equ	0xFF5
  1048                           postinc0	equ	0xFEE
  1049                           wreg	equ	0xFE8
  1050                           postdec1	equ	0xFE5
  1051                           fsr1l	equ	0xFE1
  1052                           
  1053                           	psect	dataCOMRAM
  1054  000060                     __pdataCOMRAM:
  1055                           	opt stack 0
  1056  000060                     _Display_D1:
  1057                           	opt stack 0
  1058  000060                     	ds	10
  1059  00006A                     _tempSecond:
  1060                           	opt stack 0
  1061  00006A                     	ds	1
  1062  00006B                     _wrap:
  1063                           	opt stack 0
  1064  00006B                     	ds	1
  1065                           tblptru	equ	0xFF8
  1066                           tblptrh	equ	0xFF7
  1067                           tblptrl	equ	0xFF6
  1068                           tablat	equ	0xFF5
  1069                           postinc0	equ	0xFEE
  1070                           wreg	equ	0xFE8
  1071                           postdec1	equ	0xFE5
  1072                           fsr1l	equ	0xFE1
  1073                           
  1074                           	psect	bssBANK0
  1075  000080                     __pbssBANK0:
  1076                           	opt stack 0
  1077  000080                     _buffer:
  1078                           	opt stack 0
  1079  000080                     	ds	31
  1080                           tblptru	equ	0xFF8
  1081                           tblptrh	equ	0xFF7
  1082                           tblptrl	equ	0xFF6
  1083                           tablat	equ	0xFF5
  1084                           postinc0	equ	0xFEE
  1085                           wreg	equ	0xFE8
  1086                           postdec1	equ	0xFE5
  1087                           fsr1l	equ	0xFE1
  1088                           
  1089                           	psect	dataBANK0
  1090  00009F                     __pdataBANK0:
  1091                           	opt stack 0
  1092  00009F                     _array1:
  1093                           	opt stack 0
  1094  00009F                     	ds	21
  1095                           tblptru	equ	0xFF8
  1096                           tblptrh	equ	0xFF7
  1097                           tblptrl	equ	0xFF6
  1098                           tablat	equ	0xFF5
  1099                           postinc0	equ	0xFEE
  1100                           wreg	equ	0xFE8
  1101                           postdec1	equ	0xFE5
  1102                           fsr1l	equ	0xFE1
  1103                           
  1104                           	psect	dataBANK1
  1105  000100                     __pdataBANK1:
  1106                           	opt stack 0
  1107  000100                     _txt1:
  1108                           	opt stack 0
  1109  000100                     	ds	84
  1110                           tblptru	equ	0xFF8
  1111                           tblptrh	equ	0xFF7
  1112                           tblptrl	equ	0xFF6
  1113                           tablat	equ	0xFF5
  1114                           postinc0	equ	0xFEE
  1115                           wreg	equ	0xFE8
  1116                           postdec1	equ	0xFE5
  1117                           fsr1l	equ	0xFE1
  1118                           
  1119                           	psect	cstackBANK0
  1120  0000B4                     __pcstackBANK0:
  1121                           	opt stack 0
  1122  0000B4                     printf@idx:
  1123                           	opt stack 0
  1124                           
  1125                           ; 1 bytes @ 0x0
  1126  0000B4                     	ds	1
  1127  0000B5                     printf@ap:
  1128                           	opt stack 0
  1129                           
  1130                           ; 2 bytes @ 0x1
  1131  0000B5                     	ds	2
  1132  0000B7                     printf@prec:
  1133                           	opt stack 0
  1134                           
  1135                           ; 1 bytes @ 0x3
  1136  0000B7                     	ds	1
  1137  0000B8                     printf@val:
  1138                           	opt stack 0
  1139                           
  1140                           ; 2 bytes @ 0x4
  1141  0000B8                     	ds	2
  1142  0000BA                     printf@flag:
  1143                           	opt stack 0
  1144                           
  1145                           ; 1 bytes @ 0x6
  1146  0000BA                     	ds	1
  1147  0000BB                     printf@width:
  1148                           	opt stack 0
  1149                           
  1150                           ; 2 bytes @ 0x7
  1151  0000BB                     	ds	2
  1152  0000BD                     printf@c:
  1153                           	opt stack 0
  1154                           
  1155                           ; 1 bytes @ 0x9
  1156  0000BD                     	ds	1
  1157                           tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           postinc0	equ	0xFEE
  1162                           wreg	equ	0xFE8
  1163                           postdec1	equ	0xFE5
  1164                           fsr1l	equ	0xFE1
  1165                           
  1166                           	psect	cstackCOMRAM
  1167  000001                     __pcstackCOMRAM:
  1168                           	opt stack 0
  1169  000001                     ??_INT0_isr:
  1170  000001                     
  1171                           ; 1 bytes @ 0x0
  1172  000001                     	ds	2
  1173  000003                     ??_chkisr:
  1174                           
  1175                           ; 0 bytes @ 0x2
  1176  000003                     	ds	14
  1177  000011                     ??_isdigit:
  1178  000011                     ?___wmul:
  1179                           	opt stack 0
  1180  000011                     ?___lwdiv:
  1181                           	opt stack 0
  1182  000011                     I2C_Read@ack:
  1183                           	opt stack 0
  1184  000011                     I2C_Write@outByte:
  1185                           	opt stack 0
  1186  000011                     putch@c:
  1187                           	opt stack 0
  1188  000011                     OpenUSART@spbrg:
  1189                           	opt stack 0
  1190  000011                     ___wmul@multiplier:
  1191                           	opt stack 0
  1192  000011                     ___lwdiv@dividend:
  1193                           	opt stack 0
  1194  000011                     I2C_Init@c:
  1195                           	opt stack 0
  1196                           
  1197                           ; 4 bytes @ 0x10
  1198  000011                     	ds	1
  1199  000012                     I2C_Read@n:
  1200                           	opt stack 0
  1201  000012                     I2C_Write@n:
  1202                           	opt stack 0
  1203  000012                     _isdigit$1685:
  1204                           	opt stack 0
  1205                           
  1206                           ; 1 bytes @ 0x11
  1207  000012                     	ds	1
  1208  000013                     I2C_Read@inByte:
  1209                           	opt stack 0
  1210  000013                     I2C_Write_Cmd_Only@Cmd:
  1211                           	opt stack 0
  1212  000013                     I2C_Write_Cmd_Write_Data@Cmd:
  1213                           	opt stack 0
  1214  000013                     OpenUSART@config:
  1215                           	opt stack 0
  1216  000013                     isdigit@c:
  1217                           	opt stack 0
  1218  000013                     ___wmul@multiplicand:
  1219                           	opt stack 0
  1220  000013                     ___lwdiv@divisor:
  1221                           	opt stack 0
  1222                           
  1223                           ; 2 bytes @ 0x12
  1224  000013                     	ds	1
  1225  000014                     ?_DS1621_Read_Temp:
  1226                           	opt stack 0
  1227  000014                     I2C_Write_Cmd_Only@Device:
  1228                           	opt stack 0
  1229  000014                     I2C_Write_Cmd_Write_Data@Data_Out:
  1230                           	opt stack 0
  1231  000014                     DS3231_Read_Time@Address:
  1232                           	opt stack 0
  1233                           
  1234                           ; 1 bytes @ 0x13
  1235  000014                     	ds	1
  1236  000015                     I2C_Write_Cmd_Write_Data@Device:
  1237                           	opt stack 0
  1238  000015                     DS3231_Read_Time@Device:
  1239                           	opt stack 0
  1240  000015                     ___lwdiv@counter:
  1241                           	opt stack 0
  1242  000015                     ___wmul@product:
  1243                           	opt stack 0
  1244                           
  1245                           ; 2 bytes @ 0x14
  1246  000015                     	ds	1
  1247  000016                     DS1621_Init@Device:
  1248                           	opt stack 0
  1249  000016                     DS1621_Read_Temp@Cmd:
  1250                           	opt stack 0
  1251  000016                     ___lwdiv@quotient:
  1252                           	opt stack 0
  1253                           
  1254                           ; 2 bytes @ 0x15
  1255  000016                     	ds	1
  1256  000017                     ?___awdiv:
  1257                           	opt stack 0
  1258  000017                     DS1621_Read_Temp@Data_Ret:
  1259                           	opt stack 0
  1260  000017                     ___awdiv@dividend:
  1261                           	opt stack 0
  1262                           
  1263                           ; 2 bytes @ 0x16
  1264  000017                     	ds	1
  1265  000018                     ?___lwmod:
  1266                           	opt stack 0
  1267  000018                     DS1621_Read_Temp@Device:
  1268                           	opt stack 0
  1269  000018                     ___lwmod@dividend:
  1270                           	opt stack 0
  1271                           
  1272                           ; 2 bytes @ 0x17
  1273  000018                     	ds	1
  1274  000019                     ___awdiv@divisor:
  1275                           	opt stack 0
  1276                           
  1277                           ; 2 bytes @ 0x18
  1278  000019                     	ds	1
  1279  00001A                     ___lwmod@divisor:
  1280                           	opt stack 0
  1281                           
  1282                           ; 2 bytes @ 0x19
  1283  00001A                     	ds	1
  1284  00001B                     ___awdiv@counter:
  1285                           	opt stack 0
  1286                           
  1287                           ; 1 bytes @ 0x1A
  1288  00001B                     	ds	1
  1289  00001C                     ___awdiv@sign:
  1290                           	opt stack 0
  1291  00001C                     ___lwmod@counter:
  1292                           	opt stack 0
  1293                           
  1294                           ; 1 bytes @ 0x1B
  1295  00001C                     	ds	1
  1296  00001D                     ?_printf:
  1297                           	opt stack 0
  1298  00001D                     printf@f:
  1299                           	opt stack 0
  1300  00001D                     ___awdiv@quotient:
  1301                           	opt stack 0
  1302                           
  1303                           ; 2 bytes @ 0x1C
  1304  00001D                     	ds	14
  1305  00002B                     ??_printf:
  1306                           
  1307                           ; 0 bytes @ 0x2A
  1308  00002B                     	ds	4
  1309  00002F                     main@tempF:
  1310                           	opt stack 0
  1311                           
  1312                           ; 1 bytes @ 0x2E
  1313  00002F                     	ds	1
  1314  000030                     main@tempC:
  1315                           	opt stack 0
  1316                           
  1317                           ; 1 bytes @ 0x2F
  1318  000030                     	ds	1
  1319                           tblptru	equ	0xFF8
  1320                           tblptrh	equ	0xFF7
  1321                           tblptrl	equ	0xFF6
  1322                           tablat	equ	0xFF5
  1323                           postinc0	equ	0xFEE
  1324                           wreg	equ	0xFE8
  1325                           postdec1	equ	0xFE5
  1326                           fsr1l	equ	0xFE1
  1327                           
  1328 ;;
  1329 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1330 ;;
  1331 ;; *************** function _main *****************
  1332 ;; Defined at:
  1333 ;;		line 124 in file "Lab10p2.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  tempC           1   47[COMRAM] char 
  1338 ;;  tempF           1   46[COMRAM] char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;		None               void
  1341 ;; Registers used:
  1342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;Total ram usage:        2 bytes
  1353 ;; Hardware stack levels required when called:    8
  1354 ;; This function calls:
  1355 ;;		_DS1621_Read_Temp
  1356 ;;		_DS3231_Read_Time
  1357 ;;		_Do_Init
  1358 ;;		___awdiv
  1359 ;;		___wmul
  1360 ;;		_printf
  1361 ;; This function is called by:
  1362 ;;		Startup code after reset
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text0
  1367  000556                     __ptext0:
  1368                           	opt stack 0
  1369  000556                     _main:
  1370                           	opt stack 23
  1371                           
  1372                           ;Lab10p2.c: 126: Do_Init();
  1373                           
  1374                           ;incstack = 0
  1375  000556  ECD4  F004         	call	_Do_Init	;wreg free
  1376                           
  1377                           ;Lab10p2.c: 127: DS3231_Read_Time();
  1378  00055A  EC00  F004         	call	_DS3231_Read_Time	;wreg free
  1379  00055E                     l496:
  1380                           
  1381                           ;Lab10p2.c: 129: {
  1382                           ;Lab10p2.c: 130: DS3231_Read_Time();
  1383  00055E  EC00  F004         	call	_DS3231_Read_Time	;wreg free
  1384                           
  1385                           ;Lab10p2.c: 131: if(tempSecond != second)
  1386  000562  5053               	movf	_second,w,c
  1387  000564  186A               	xorwf	_tempSecond,w,c
  1388  000566  B4D8               	btfsc	status,2,c
  1389  000568  D7FA               	goto	l496
  1390                           
  1391                           ;Lab10p2.c: 132: {
  1392                           ;Lab10p2.c: 133: tempSecond = second;
  1393  00056A  C053  F06A         	movff	_second,_tempSecond
  1394                           
  1395                           ;Lab10p2.c: 134: signed char tempC = DS1621_Read_Temp();
  1396  00056E  EC13  F005         	call	_DS1621_Read_Temp	;wreg free
  1397  000572  5014               	movf	?_DS1621_Read_Temp,w,c
  1398  000574  6E30               	movwf	main@tempC,c
  1399                           
  1400                           ;Lab10p2.c: 135: signed char tempF = (tempC * 9 / 5) + 32;
  1401  000576  5030               	movf	main@tempC,w,c
  1402  000578  6E11               	movwf	___wmul@multiplier,c
  1403  00057A  6A12               	clrf	___wmul@multiplier+1,c
  1404  00057C  BE11               	btfsc	___wmul@multiplier,7,c
  1405  00057E  0612               	decf	___wmul@multiplier+1,f,c
  1406  000580  0E00               	movlw	0
  1407  000582  6E14               	movwf	___wmul@multiplicand+1,c
  1408  000584  0E09               	movlw	9
  1409  000586  6E13               	movwf	___wmul@multiplicand,c
  1410  000588  EC49  F005         	call	___wmul	;wreg free
  1411  00058C  C011  F017         	movff	?___wmul,___awdiv@dividend
  1412  000590  C012  F018         	movff	?___wmul+1,___awdiv@dividend+1
  1413  000594  0E00               	movlw	0
  1414  000596  6E1A               	movwf	___awdiv@divisor+1,c
  1415  000598  0E05               	movlw	5
  1416  00059A  6E19               	movwf	___awdiv@divisor,c
  1417  00059C  ECFE  F002         	call	___awdiv	;wreg free
  1418  0005A0  5017               	movf	?___awdiv,w,c
  1419  0005A2  0F20               	addlw	32
  1420  0005A4  6E2F               	movwf	main@tempF,c
  1421                           
  1422                           ;Lab10p2.c: 136: printf ("%02x:%02x:%02x %02x/%02x/%02x",hour,minute,second,month,day,ye
      +                          ar);
  1423  0005A6  0ECF               	movlw	low STR_1
  1424  0005A8  6E1D               	movwf	printf@f,c
  1425  0005AA  0EFF               	movlw	high STR_1
  1426  0005AC  6E1E               	movwf	printf@f+1,c
  1427  0005AE  C04D  F01F         	movff	_hour,?_printf+2
  1428  0005B2  6A20               	clrf	?_printf+3,c
  1429  0005B4  C04F  F021         	movff	_minute,?_printf+4
  1430  0005B8  6A22               	clrf	?_printf+5,c
  1431  0005BA  C053  F023         	movff	_second,?_printf+6
  1432  0005BE  6A24               	clrf	?_printf+7,c
  1433  0005C0  C050  F025         	movff	_month,?_printf+8
  1434  0005C4  6A26               	clrf	?_printf+9,c
  1435  0005C6  C04A  F027         	movff	_day,?_printf+10
  1436  0005CA  6A28               	clrf	?_printf+11,c
  1437  0005CC  C05F  F029         	movff	_year,?_printf+12
  1438  0005D0  6A2A               	clrf	?_printf+13,c
  1439  0005D2  EC0E  F000         	call	_printf	;wreg free
  1440                           
  1441                           ;Lab10p2.c: 137: printf (" Temperature = %d degreesC = %d degreesF\r\n", tempC, tempF);
  1442  0005D6  0EA4               	movlw	low STR_2
  1443  0005D8  6E1D               	movwf	printf@f,c
  1444  0005DA  0EFF               	movlw	high STR_2
  1445  0005DC  6E1E               	movwf	printf@f+1,c
  1446  0005DE  5030               	movf	main@tempC,w,c
  1447  0005E0  6E1F               	movwf	?_printf+2,c
  1448  0005E2  6A20               	clrf	?_printf+3,c
  1449  0005E4  BE1F               	btfsc	?_printf+2,7,c
  1450  0005E6  0620               	decf	?_printf+3,f,c
  1451  0005E8  502F               	movf	main@tempF,w,c
  1452  0005EA  6E21               	movwf	?_printf+4,c
  1453  0005EC  6A22               	clrf	?_printf+5,c
  1454  0005EE  BE21               	btfsc	?_printf+4,7,c
  1455  0005F0  0622               	decf	?_printf+5,f,c
  1456  0005F2  EC0E  F000         	call	_printf	;wreg free
  1457  0005F6  D7B3               	goto	l496
  1458  0005F8  EF0C  F000         	goto	start
  1459  0005FC                     __end_of_main:
  1460                           	opt stack 0
  1461                           tblptru	equ	0xFF8
  1462                           tblptrh	equ	0xFF7
  1463                           tblptrl	equ	0xFF6
  1464                           tablat	equ	0xFF5
  1465                           postinc0	equ	0xFEE
  1466                           wreg	equ	0xFE8
  1467                           postdec1	equ	0xFE5
  1468                           fsr1l	equ	0xFE1
  1469                           status	equ	0xFD8
  1470                           
  1471 ;; *************** function _printf *****************
  1472 ;; Defined at:
  1473 ;;		line 464 in file "E:\XC8\sources\common\doprnt.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  f               2   28[COMRAM] PTR const unsigned char 
  1476 ;;		 -> STR_2(43), STR_1(30), 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  idx             1    0[BANK0 ] unsigned char 
  1479 ;;  tmpval          4    0        struct .
  1480 ;;  cp              3    0        PTR const unsigned char 
  1481 ;;  width           2    7[BANK0 ] int 
  1482 ;;  val             2    4[BANK0 ] unsigned int 
  1483 ;;  ap              2    1[BANK0 ] PTR void [1]
  1484 ;;		 -> ?_printf(2), 
  1485 ;;  len             2    0        unsigned int 
  1486 ;;  c               1    9[BANK0 ] char 
  1487 ;;  flag            1    6[BANK0 ] unsigned char 
  1488 ;;  prec            1    3[BANK0 ] char 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  2   28[COMRAM] int 
  1491 ;; Registers used:
  1492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1498 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Totals:        18      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;Total ram usage:       28 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    4
  1505 ;; This function calls:
  1506 ;;		___lwdiv
  1507 ;;		___lwmod
  1508 ;;		___wmul
  1509 ;;		_isdigit
  1510 ;;		_putch
  1511 ;; This function is called by:
  1512 ;;		_main
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text1
  1517  00001C                     __ptext1:
  1518                           	opt stack 0
  1519  00001C                     _printf:
  1520                           	opt stack 26
  1521                           
  1522                           ;doprnt.c: 466: va_list ap;
  1523                           ;doprnt.c: 499: signed char c;
  1524                           ;doprnt.c: 501: int width;
  1525                           ;doprnt.c: 506: signed char prec;
  1526                           ;doprnt.c: 508: unsigned char flag;
  1527                           ;doprnt.c: 523: union {
  1528                           ;doprnt.c: 524: unsigned long vd;
  1529                           ;doprnt.c: 525: double integ;
  1530                           ;doprnt.c: 526: } tmpval;
  1531                           ;doprnt.c: 528: unsigned int val;
  1532                           ;doprnt.c: 529: unsigned len;
  1533                           ;doprnt.c: 530: const char * cp;
  1534                           ;doprnt.c: 533: *ap = __va_start();
  1535                           
  1536                           ;incstack = 0
  1537  00001C  0E1F               	movlw	low (?_printf+2)
  1538  00001E  0100               	movlb	0	; () banked
  1539  000020  6FB5               	movwf	printf@ap& (0+255),b
  1540  000022  0E00               	movlw	high (?_printf+2)
  1541  000024  0100               	movlb	0	; () banked
  1542  000026  6FB6               	movwf	(printf@ap+1)& (0+255),b
  1543                           
  1544                           ;doprnt.c: 536: while(c = *f++) {
  1545  000028  D1D6               	goto	l3627
  1546  00002A                     l3501:
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;doprnt.c: 538: if(c != '%')
  1550  00002A  0E25               	movlw	37
  1551  00002C  0100               	movlb	0	; () banked
  1552  00002E  19BD               	xorwf	printf@c& (0+255),w,b
  1553  000030  B4D8               	btfsc	status,2,c
  1554  000032  D005               	goto	l3505
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;doprnt.c: 540: {
  1558                           ;doprnt.c: 541: (putch(c) );
  1559  000034  0100               	movlb	0	; () banked
  1560  000036  51BD               	movf	printf@c& (0+255),w,b
  1561  000038  ECD5  F005         	call	_putch
  1562                           
  1563                           ;doprnt.c: 542: continue;
  1564  00003C  D1CC               	goto	l3627
  1565  00003E                     l3505:
  1566                           
  1567                           ;doprnt.c: 543: }
  1568                           ;doprnt.c: 546: width = 0;
  1569  00003E  0E00               	movlw	0
  1570  000040  0100               	movlb	0	; () banked
  1571  000042  6FBC               	movwf	(printf@width+1)& (0+255),b
  1572  000044  0E00               	movlw	0
  1573  000046  6FBB               	movwf	printf@width& (0+255),b
  1574                           
  1575                           ;doprnt.c: 548: flag = 0;
  1576  000048  0E00               	movlw	0
  1577  00004A  0100               	movlb	0	; () banked
  1578  00004C  6FBA               	movwf	printf@flag& (0+255),b
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;doprnt.c: 551: switch(*f) {
  1582                           
  1583                           ;doprnt.c: 550: for(;;) {
  1584  00004E  D006               	goto	l3511
  1585  000050                     l3507:
  1586                           
  1587                           ;doprnt.c: 580: flag |= 0x04;
  1588  000050  0100               	movlb	0	; () banked
  1589  000052  85BA               	bsf	printf@flag& (0+255),2,b
  1590                           
  1591                           ;doprnt.c: 581: f++;
  1592  000054  4A1D               	infsnz	printf@f,f,c
  1593  000056  2A1E               	incf	printf@f+1,f,c
  1594                           
  1595                           ;doprnt.c: 582: continue;
  1596  000058  D001               	goto	l3511
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;doprnt.c: 584: }
  1600  00005A  D00B               	goto	l3513
  1601  00005C                     l3511:
  1602  00005C  C01D  FFF6         	movff	printf@f,tblptrl
  1603  000060  C01E  FFF7         	movff	printf@f+1,tblptrh
  1604  000064                     	if	0	;tblptru may be non-zero
  1605  000064                     	endif
  1606  000064                     	if	0	;tblptru may be non-zero
  1607  000064                     	endif
  1608  000064  0008               	tblrd		*
  1609  000066  50F5               	movf	tablat,w,c
  1610                           
  1611                           ; Switch size 1, requested type "space"
  1612                           ; Number of cases is 1, Range of values is 48 to 48
  1613                           ; switch strategies available:
  1614                           ; Name         Instructions Cycles
  1615                           ; simple_byte            4     3 (average)
  1616                           ;	Chosen strategy is simple_byte
  1617  000068  0A30               	xorlw	48	; case 48
  1618  00006A  B4D8               	btfsc	status,2,c
  1619  00006C  D7F1               	goto	l3507
  1620                           
  1621                           ;doprnt.c: 585: break;
  1622  00006E  D001               	goto	l3513
  1623                           
  1624                           ;doprnt.c: 586: }
  1625  000070  D7F5               	goto	l3511
  1626  000072                     l3513:
  1627                           
  1628                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1629  000072  C01D  FFF6         	movff	printf@f,tblptrl
  1630  000076  C01E  FFF7         	movff	printf@f+1,tblptrh
  1631  00007A                     	if	0	;tblptru may be non-zero
  1632  00007A                     	endif
  1633  00007A                     	if	0	;tblptru may be non-zero
  1634  00007A                     	endif
  1635  00007A  0008               	tblrd		*
  1636  00007C  50F5               	movf	tablat,w,c
  1637  00007E  EC5D  F005         	call	_isdigit
  1638  000082  A0D8               	btfss	status,0,c
  1639  000084  D03F               	goto	l3529
  1640                           
  1641                           ;doprnt.c: 598: width = 0;
  1642  000086  0E00               	movlw	0
  1643  000088  0100               	movlb	0	; () banked
  1644  00008A  6FBC               	movwf	(printf@width+1)& (0+255),b
  1645  00008C  0E00               	movlw	0
  1646  00008E  6FBB               	movwf	printf@width& (0+255),b
  1647  000090  D000               	goto	l3517
  1648  000092                     l3517:
  1649                           
  1650                           ;doprnt.c: 600: width *= 10;
  1651  000092  C0BB  F011         	movff	printf@width,___wmul@multiplier
  1652  000096  C0BC  F012         	movff	printf@width+1,___wmul@multiplier+1
  1653  00009A  0E00               	movlw	0
  1654  00009C  6E14               	movwf	___wmul@multiplicand+1,c
  1655  00009E  0E0A               	movlw	10
  1656  0000A0  6E13               	movwf	___wmul@multiplicand,c
  1657  0000A2  EC49  F005         	call	___wmul	;wreg free
  1658  0000A6  C011  F0BB         	movff	?___wmul,printf@width
  1659  0000AA  C012  F0BC         	movff	?___wmul+1,printf@width+1
  1660                           
  1661                           ;doprnt.c: 601: width += *f++ - '0';
  1662  0000AE  0ED0               	movlw	208
  1663  0000B0  6E2B               	movwf	??_printf& (0+255),c
  1664  0000B2  0EFF               	movlw	255
  1665  0000B4  6E2C               	movwf	(??_printf+1)& (0+255),c
  1666  0000B6  C01D  FFF6         	movff	printf@f,tblptrl
  1667  0000BA  C01E  FFF7         	movff	printf@f+1,tblptrh
  1668  0000BE                     	if	0	;tblptru may be non-zero
  1669  0000BE                     	endif
  1670  0000BE                     	if	0	;tblptru may be non-zero
  1671  0000BE                     	endif
  1672  0000BE  0008               	tblrd		*
  1673  0000C0  50F5               	movf	tablat,w,c
  1674  0000C2  6E2D               	movwf	(??_printf+2)& (0+255),c
  1675  0000C4  6A2E               	clrf	(??_printf+3)& (0+255),c
  1676  0000C6  502B               	movf	??_printf,w,c
  1677  0000C8  262D               	addwf	??_printf+2,f,c
  1678  0000CA  502C               	movf	??_printf+1,w,c
  1679  0000CC  222E               	addwfc	??_printf+3,f,c
  1680  0000CE  502D               	movf	??_printf+2,w,c
  1681  0000D0  0100               	movlb	0	; () banked
  1682  0000D2  27BB               	addwf	printf@width& (0+255),f,b
  1683  0000D4  502E               	movf	??_printf+3,w,c
  1684  0000D6  0100               	movlb	0	; () banked
  1685  0000D8  23BC               	addwfc	(printf@width+1)& (0+255),f,b
  1686                           
  1687                           ; BSR set to: 0
  1688  0000DA  4A1D               	infsnz	printf@f,f,c
  1689  0000DC  2A1E               	incf	printf@f+1,f,c
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1693  0000DE  C01D  FFF6         	movff	printf@f,tblptrl
  1694  0000E2  C01E  FFF7         	movff	printf@f+1,tblptrh
  1695  0000E6                     	if	0	;tblptru may be non-zero
  1696  0000E6                     	endif
  1697  0000E6                     	if	0	;tblptru may be non-zero
  1698  0000E6                     	endif
  1699  0000E6  0008               	tblrd		*
  1700  0000E8  50F5               	movf	tablat,w,c
  1701  0000EA  EC5D  F005         	call	_isdigit
  1702  0000EE  A0D8               	btfss	status,0,c
  1703  0000F0  D009               	goto	l3529
  1704  0000F2  D7CF               	goto	l3517
  1705                           
  1706                           ;doprnt.c: 608: }
  1707                           ;doprnt.c: 635: switch(c = *f++) {
  1708  0000F4  D007               	goto	l3529
  1709                           
  1710                           ;doprnt.c: 638: goto alldone;
  1711                           
  1712                           ;doprnt.c: 637: case 0:
  1713  0000F6  D17E               	goto	l569
  1714                           
  1715                           ;doprnt.c: 698: case 'i':
  1716                           ;doprnt.c: 699: break;
  1717                           
  1718                           ;doprnt.c: 697: case 'd':
  1719  0000F8  D01D               	goto	l532
  1720  0000FA                     l3525:
  1721                           
  1722                           ;doprnt.c: 721: flag |= 0x80;
  1723  0000FA  0100               	movlb	0	; () banked
  1724  0000FC  8FBA               	bsf	printf@flag& (0+255),7,b
  1725                           
  1726                           ;doprnt.c: 723: break;
  1727  0000FE  D01A               	goto	l532
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;doprnt.c: 813: continue;
  1731                           
  1732                           ;doprnt.c: 802: default:
  1733  000100  D16A               	goto	l3627
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;doprnt.c: 822: }
  1737  000102  D018               	goto	l532
  1738  000104                     l3529:
  1739  000104  C01D  FFF6         	movff	printf@f,tblptrl
  1740  000108  C01E  FFF7         	movff	printf@f+1,tblptrh
  1741  00010C  4A1D               	infsnz	printf@f,f,c
  1742  00010E  2A1E               	incf	printf@f+1,f,c
  1743  000110                     	if	0	;tblptru may be non-zero
  1744  000110                     	endif
  1745  000110                     	if	0	;tblptru may be non-zero
  1746  000110                     	endif
  1747  000110  0008               	tblrd		*
  1748  000112  CFF5 F0BD          	movff	tablat,printf@c
  1749  000116  0100               	movlb	0	; () banked
  1750  000118  51BD               	movf	printf@c& (0+255),w,b
  1751                           
  1752                           ; Switch size 1, requested type "space"
  1753                           ; Number of cases is 4, Range of values is 0 to 120
  1754                           ; switch strategies available:
  1755                           ; Name         Instructions Cycles
  1756                           ; simple_byte           13     7 (average)
  1757                           ;	Chosen strategy is simple_byte
  1758  00011A  0A00               	xorlw	0	; case 0
  1759  00011C  B4D8               	btfsc	status,2,c
  1760  00011E  D16A               	goto	l569
  1761  000120  0A64               	xorlw	100	; case 100
  1762  000122  B4D8               	btfsc	status,2,c
  1763  000124  D007               	goto	l532
  1764  000126  0A0D               	xorlw	13	; case 105
  1765  000128  B4D8               	btfsc	status,2,c
  1766  00012A  D004               	goto	l532
  1767  00012C  0A11               	xorlw	17	; case 120
  1768  00012E  B4D8               	btfsc	status,2,c
  1769  000130  D7E4               	goto	l3525
  1770  000132  D151               	goto	l3627
  1771  000134                     l532:
  1772                           
  1773                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  1774  000134  0100               	movlb	0	; () banked
  1775  000136  BFBA               	btfsc	printf@flag& (0+255),7,b
  1776  000138  D019               	goto	l3541
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;doprnt.c: 1253: {
  1780                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1781  00013A  C0B5  FFD9         	movff	printf@ap,fsr2l
  1782  00013E  C0B6  FFDA         	movff	printf@ap+1,fsr2h
  1783  000142  CFDE F0B8          	movff	postinc2,printf@val
  1784  000146  CFDD F0B9          	movff	postdec2,printf@val+1
  1785                           
  1786                           ; BSR set to: 0
  1787  00014A  0E02               	movlw	2
  1788  00014C  0100               	movlb	0	; () banked
  1789  00014E  27B5               	addwf	printf@ap& (0+255),f,b
  1790  000150  0E00               	movlw	0
  1791  000152  23B6               	addwfc	(printf@ap+1)& (0+255),f,b
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;doprnt.c: 1261: if((int)val < 0) {
  1795  000154  0100               	movlb	0	; () banked
  1796  000156  AFB9               	btfss	(printf@val+1)& (0+255),7,b
  1797  000158  D05D               	goto	l3575
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;doprnt.c: 1262: flag |= 0x03;
  1801  00015A  0E03               	movlw	3
  1802  00015C  0100               	movlb	0	; () banked
  1803  00015E  13BA               	iorwf	printf@flag& (0+255),f,b
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;doprnt.c: 1263: val = -val;
  1807  000160  0100               	movlb	0	; () banked
  1808  000162  6DB8               	negf	printf@val& (0+255),b
  1809  000164  1FB9               	comf	(printf@val+1)& (0+255),f,b
  1810  000166  B0D8               	btfsc	status,0,c
  1811  000168  2BB9               	incf	(printf@val+1)& (0+255),f,b
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;doprnt.c: 1264: }
  1815                           ;doprnt.c: 1266: }
  1816  00016A  D054               	goto	l3575
  1817  00016C                     l3541:
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;doprnt.c: 1268: else
  1821                           ;doprnt.c: 1273: {
  1822                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1823  00016C  C0B5  FFD9         	movff	printf@ap,fsr2l
  1824  000170  C0B6  FFDA         	movff	printf@ap+1,fsr2h
  1825  000174  CFDE F0B8          	movff	postinc2,printf@val
  1826  000178  CFDD F0B9          	movff	postdec2,printf@val+1
  1827                           
  1828                           ; BSR set to: 0
  1829  00017C  0E02               	movlw	2
  1830  00017E  0100               	movlb	0	; () banked
  1831  000180  27B5               	addwf	printf@ap& (0+255),f,b
  1832  000182  0E00               	movlw	0
  1833  000184  23B6               	addwfc	(printf@ap+1)& (0+255),f,b
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;doprnt.c: 1287: }
  1837                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  1838  000186  D046               	goto	l3575
  1839  000188                     l3545:
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1843  000188  0E01               	movlw	1
  1844  00018A  0100               	movlb	0	; () banked
  1845  00018C  6FBD               	movwf	printf@c& (0+255),b
  1846  00018E                     l3547:
  1847                           
  1848                           ; BSR set to: 0
  1849  00018E  0E05               	movlw	5
  1850  000190  0100               	movlb	0	; () banked
  1851  000192  19BD               	xorwf	printf@c& (0+255),w,b
  1852  000194  B4D8               	btfsc	status,2,c
  1853  000196  D048               	goto	l3577
  1854  000198  D001               	goto	l3551
  1855                           
  1856                           ; BSR set to: 0
  1857  00019A  D046               	goto	l3577
  1858  00019C                     l3551:
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;doprnt.c: 1306: if(val < dpowers[c])
  1862  00019C  0100               	movlb	0	; () banked
  1863  00019E  51BD               	movf	printf@c& (0+255),w,b
  1864  0001A0  0D02               	mullw	2
  1865  0001A2  0E92               	movlw	low _dpowers
  1866  0001A4  24F3               	addwf	prodl,w,c
  1867  0001A6  6EF6               	movwf	tblptrl,c
  1868  0001A8  0EFF               	movlw	high _dpowers
  1869  0001AA  20F4               	addwfc	prodh,w,c
  1870  0001AC  6EF7               	movwf	tblptrh,c
  1871  0001AE                     	if	0	;There are less than 3 active tblptr bytes
  1872  0001AE                     	endif
  1873  0001AE  0009               	tblrd		*+
  1874  0001B0  50F5               	movf	tablat,w,c
  1875  0001B2  0100               	movlb	0	; () banked
  1876  0001B4  5DB8               	subwf	printf@val& (0+255),w,b
  1877  0001B6  0009               	tblrd		*+
  1878  0001B8  50F5               	movf	tablat,w,c
  1879  0001BA  0100               	movlb	0	; () banked
  1880  0001BC  59B9               	subwfb	(printf@val+1)& (0+255),w,b
  1881  0001BE  A0D8               	btfss	status,0,c
  1882  0001C0  D033               	goto	l3577
  1883  0001C2  D001               	goto	l3555
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;doprnt.c: 1307: break;
  1887  0001C4  D031               	goto	l3577
  1888  0001C6                     l3555:
  1889                           
  1890                           ; BSR set to: 0
  1891  0001C6  0100               	movlb	0	; () banked
  1892  0001C8  2BBD               	incf	printf@c& (0+255),f,b
  1893  0001CA  D7E1               	goto	l3547
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;doprnt.c: 1309: break;
  1897                           
  1898                           ; BSR set to: 0
  1899  0001CC  D02D               	goto	l3577
  1900  0001CE                     l3559:
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1904  0001CE  0E01               	movlw	1
  1905  0001D0  0100               	movlb	0	; () banked
  1906  0001D2  6FBD               	movwf	printf@c& (0+255),b
  1907  0001D4                     l3561:
  1908                           
  1909                           ; BSR set to: 0
  1910  0001D4  0E04               	movlw	4
  1911  0001D6  0100               	movlb	0	; () banked
  1912  0001D8  19BD               	xorwf	printf@c& (0+255),w,b
  1913  0001DA  B4D8               	btfsc	status,2,c
  1914  0001DC  D025               	goto	l3577
  1915  0001DE  D001               	goto	l3565
  1916                           
  1917                           ; BSR set to: 0
  1918  0001E0  D023               	goto	l3577
  1919  0001E2                     l3565:
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1923  0001E2  0100               	movlb	0	; () banked
  1924  0001E4  51BD               	movf	printf@c& (0+255),w,b
  1925  0001E6  0D02               	mullw	2
  1926  0001E8  0E9C               	movlw	low _hexpowers
  1927  0001EA  24F3               	addwf	prodl,w,c
  1928  0001EC  6EF6               	movwf	tblptrl,c
  1929  0001EE  0EFF               	movlw	high _hexpowers
  1930  0001F0  20F4               	addwfc	prodh,w,c
  1931  0001F2  6EF7               	movwf	tblptrh,c
  1932  0001F4                     	if	0	;There are less than 3 active tblptr bytes
  1933  0001F4                     	endif
  1934  0001F4  0009               	tblrd		*+
  1935  0001F6  50F5               	movf	tablat,w,c
  1936  0001F8  0100               	movlb	0	; () banked
  1937  0001FA  5DB8               	subwf	printf@val& (0+255),w,b
  1938  0001FC  0009               	tblrd		*+
  1939  0001FE  50F5               	movf	tablat,w,c
  1940  000200  0100               	movlb	0	; () banked
  1941  000202  59B9               	subwfb	(printf@val+1)& (0+255),w,b
  1942  000204  A0D8               	btfss	status,0,c
  1943  000206  D010               	goto	l3577
  1944  000208  D001               	goto	l3569
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;doprnt.c: 1318: break;
  1948  00020A  D00E               	goto	l3577
  1949  00020C                     l3569:
  1950                           
  1951                           ; BSR set to: 0
  1952  00020C  0100               	movlb	0	; () banked
  1953  00020E  2BBD               	incf	printf@c& (0+255),f,b
  1954  000210  D7E1               	goto	l3561
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;doprnt.c: 1336: }
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;doprnt.c: 1320: break;
  1961                           
  1962                           ; BSR set to: 0
  1963  000212  D00A               	goto	l3577
  1964  000214                     l3575:
  1965                           
  1966                           ; BSR set to: 0
  1967  000214  0100               	movlb	0	; () banked
  1968  000216  51BA               	movf	printf@flag& (0+255),w,b
  1969  000218  0B80               	andlw	128
  1970                           
  1971                           ; Switch size 1, requested type "space"
  1972                           ; Number of cases is 2, Range of values is 0 to 128
  1973                           ; switch strategies available:
  1974                           ; Name         Instructions Cycles
  1975                           ; simple_byte            7     4 (average)
  1976                           ;	Chosen strategy is simple_byte
  1977  00021A  0A00               	xorlw	0	; case 0
  1978  00021C  B4D8               	btfsc	status,2,c
  1979  00021E  D7B4               	goto	l3545
  1980  000220  0A80               	xorlw	128	; case 128
  1981  000222  B4D8               	btfsc	status,2,c
  1982  000224  D7D4               	goto	l3559
  1983  000226  D000               	goto	l3577
  1984  000228                     l3577:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;doprnt.c: 1345: if(width && flag & 0x03)
  1988  000228  0100               	movlb	0	; () banked
  1989  00022A  51BB               	movf	printf@width& (0+255),w,b
  1990  00022C  0100               	movlb	0	; () banked
  1991  00022E  11BC               	iorwf	(printf@width+1)& (0+255),w,b
  1992  000230  B4D8               	btfsc	status,2,c
  1993  000232  D00B               	goto	l3583
  1994                           
  1995                           ; BSR set to: 0
  1996  000234  C0BA  F02B         	movff	printf@flag,??_printf
  1997  000238  0E03               	movlw	3
  1998  00023A  162B               	andwf	??_printf,f,c
  1999  00023C  B4D8               	btfsc	status,2,c
  2000  00023E  D005               	goto	l3583
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;doprnt.c: 1346: width--;
  2004  000240  0100               	movlb	0	; () banked
  2005  000242  07BB               	decf	printf@width& (0+255),f,b
  2006  000244  A0D8               	btfss	status,0,c
  2007  000246  07BC               	decf	(printf@width+1)& (0+255),f,b
  2008  000248  D000               	goto	l3583
  2009  00024A                     l3583:
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;doprnt.c: 1381: if(width > c)
  2013  00024A  0E80               	movlw	128
  2014  00024C  0100               	movlb	0	; () banked
  2015  00024E  BFBD               	btfsc	printf@c& (0+255),7,b
  2016  000250  0E7F               	movlw	127
  2017  000252  6E2B               	movwf	??_printf& (0+255),c
  2018  000254  0100               	movlb	0	; () banked
  2019  000256  51BB               	movf	printf@width& (0+255),w,b
  2020  000258  0100               	movlb	0	; () banked
  2021  00025A  5DBD               	subwf	printf@c& (0+255),w,b
  2022  00025C  0100               	movlb	0	; () banked
  2023  00025E  51BC               	movf	(printf@width+1)& (0+255),w,b
  2024  000260  0A80               	xorlw	128
  2025  000262  582B               	subwfb	??_printf& (0+255),w,c
  2026  000264  B0D8               	btfsc	status,0,c
  2027  000266  D00B               	goto	l3587
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;doprnt.c: 1382: width -= c;
  2031  000268  0100               	movlb	0	; () banked
  2032  00026A  51BD               	movf	printf@c& (0+255),w,b
  2033  00026C  0100               	movlb	0	; () banked
  2034  00026E  5FBB               	subwf	printf@width& (0+255),f,b
  2035  000270  0E00               	movlw	0
  2036  000272  0100               	movlb	0	; () banked
  2037  000274  BFBD               	btfsc	printf@c& (0+255),7,b
  2038  000276  0EFF               	movlw	255
  2039  000278  0100               	movlb	0	; () banked
  2040  00027A  5BBC               	subwfb	(printf@width+1)& (0+255),f,b
  2041  00027C  D006               	goto	l3589
  2042  00027E                     l3587:
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;doprnt.c: 1383: else
  2046                           ;doprnt.c: 1384: width = 0;
  2047  00027E  0E00               	movlw	0
  2048  000280  0100               	movlb	0	; () banked
  2049  000282  6FBC               	movwf	(printf@width+1)& (0+255),b
  2050  000284  0E00               	movlw	0
  2051  000286  6FBB               	movwf	printf@width& (0+255),b
  2052  000288  D000               	goto	l3589
  2053  00028A                     l3589:
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;doprnt.c: 1387: if(flag & 0x04) {
  2057  00028A  0100               	movlb	0	; () banked
  2058  00028C  A5BA               	btfss	printf@flag& (0+255),2,b
  2059  00028E  D01F               	goto	l3601
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;doprnt.c: 1392: if(flag & 0x03)
  2063  000290  C0BA  F02B         	movff	printf@flag,??_printf
  2064  000294  0E03               	movlw	3
  2065  000296  162B               	andwf	??_printf,f,c
  2066  000298  B4D8               	btfsc	status,2,c
  2067  00029A  D004               	goto	l3595
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;doprnt.c: 1393: (putch('-') );
  2071  00029C  0E2D               	movlw	45
  2072  00029E  ECD5  F005         	call	_putch
  2073  0002A2  D000               	goto	l3595
  2074  0002A4                     l3595:
  2075                           
  2076                           ;doprnt.c: 1415: if(width)
  2077  0002A4  0100               	movlb	0	; () banked
  2078  0002A6  51BB               	movf	printf@width& (0+255),w,b
  2079  0002A8  0100               	movlb	0	; () banked
  2080  0002AA  11BC               	iorwf	(printf@width+1)& (0+255),w,b
  2081  0002AC  B4D8               	btfsc	status,2,c
  2082  0002AE  D02E               	goto	l3611
  2083  0002B0                     l3597:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;doprnt.c: 1417: (putch('0') );
  2087  0002B0  0E30               	movlw	48
  2088  0002B2  ECD5  F005         	call	_putch
  2089                           
  2090                           ;doprnt.c: 1418: while(--width);
  2091  0002B6  0100               	movlb	0	; () banked
  2092  0002B8  07BB               	decf	printf@width& (0+255),f,b
  2093  0002BA  A0D8               	btfss	status,0,c
  2094  0002BC  07BC               	decf	(printf@width+1)& (0+255),f,b
  2095  0002BE  0100               	movlb	0	; () banked
  2096  0002C0  51BB               	movf	printf@width& (0+255),w,b
  2097  0002C2  0100               	movlb	0	; () banked
  2098  0002C4  11BC               	iorwf	(printf@width+1)& (0+255),w,b
  2099  0002C6  B4D8               	btfsc	status,2,c
  2100  0002C8  D021               	goto	l3611
  2101  0002CA  D7F2               	goto	l3597
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;doprnt.c: 1420: } else
  2105                           
  2106                           ; BSR set to: 0
  2107  0002CC  D01F               	goto	l3611
  2108  0002CE                     l3601:
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;doprnt.c: 1422: {
  2112                           ;doprnt.c: 1424: if(width
  2113                           ;doprnt.c: 1428: )
  2114  0002CE  0100               	movlb	0	; () banked
  2115  0002D0  51BB               	movf	printf@width& (0+255),w,b
  2116  0002D2  0100               	movlb	0	; () banked
  2117  0002D4  11BC               	iorwf	(printf@width+1)& (0+255),w,b
  2118  0002D6  B4D8               	btfsc	status,2,c
  2119  0002D8  D00F               	goto	l3607
  2120  0002DA                     l3603:
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;doprnt.c: 1430: (putch(' ') );
  2124  0002DA  0E20               	movlw	32
  2125  0002DC  ECD5  F005         	call	_putch
  2126                           
  2127                           ;doprnt.c: 1431: while(--width);
  2128  0002E0  0100               	movlb	0	; () banked
  2129  0002E2  07BB               	decf	printf@width& (0+255),f,b
  2130  0002E4  A0D8               	btfss	status,0,c
  2131  0002E6  07BC               	decf	(printf@width+1)& (0+255),f,b
  2132  0002E8  0100               	movlb	0	; () banked
  2133  0002EA  51BB               	movf	printf@width& (0+255),w,b
  2134  0002EC  0100               	movlb	0	; () banked
  2135  0002EE  11BC               	iorwf	(printf@width+1)& (0+255),w,b
  2136  0002F0  B4D8               	btfsc	status,2,c
  2137  0002F2  D002               	goto	l3607
  2138  0002F4  D7F2               	goto	l3603
  2139                           
  2140                           ; BSR set to: 0
  2141  0002F6  D000               	goto	l3607
  2142  0002F8                     l3607:
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;doprnt.c: 1438: if(flag & 0x03)
  2146  0002F8  C0BA  F02B         	movff	printf@flag,??_printf
  2147  0002FC  0E03               	movlw	3
  2148  0002FE  162B               	andwf	??_printf,f,c
  2149  000300  B4D8               	btfsc	status,2,c
  2150  000302  D004               	goto	l3611
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;doprnt.c: 1439: (putch('-') );
  2154  000304  0E2D               	movlw	45
  2155  000306  ECD5  F005         	call	_putch
  2156  00030A  D000               	goto	l3611
  2157  00030C                     l3611:
  2158                           
  2159                           ;doprnt.c: 1469: }
  2160                           ;doprnt.c: 1472: prec = c;
  2161  00030C  C0BD  F0B7         	movff	printf@c,printf@prec
  2162                           
  2163                           ;doprnt.c: 1474: while(prec--) {
  2164  000310  D05A               	goto	l3625
  2165                           
  2166                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  2167  000312  D04A               	goto	l3621
  2168  000314                     l3613:
  2169                           
  2170                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2171  000314  0100               	movlb	0	; () banked
  2172  000316  51B7               	movf	printf@prec& (0+255),w,b
  2173  000318  0D02               	mullw	2
  2174  00031A  0E92               	movlw	low _dpowers
  2175  00031C  24F3               	addwf	prodl,w,c
  2176  00031E  6EF6               	movwf	tblptrl,c
  2177  000320  0EFF               	movlw	high _dpowers
  2178  000322  20F4               	addwfc	prodh,w,c
  2179  000324  6EF7               	movwf	tblptrh,c
  2180  000326                     	if	0	;There are less than 3 active tblptr bytes
  2181  000326                     	endif
  2182  000326  0009               	tblrd		*+
  2183  000328  CFF5 F013          	movff	tablat,___lwdiv@divisor
  2184  00032C  000A               	tblrd		*-
  2185  00032E  CFF5 F014          	movff	tablat,___lwdiv@divisor+1
  2186  000332  C0B8  F011         	movff	printf@val,___lwdiv@dividend
  2187  000336  C0B9  F012         	movff	printf@val+1,___lwdiv@dividend+1
  2188  00033A  EC32  F004         	call	___lwdiv	;wreg free
  2189  00033E  C011  F018         	movff	?___lwdiv,___lwmod@dividend
  2190  000342  C012  F019         	movff	?___lwdiv+1,___lwmod@dividend+1
  2191  000346  0E00               	movlw	0
  2192  000348  6E1B               	movwf	___lwmod@divisor+1,c
  2193  00034A  0E0A               	movlw	10
  2194  00034C  6E1A               	movwf	___lwmod@divisor,c
  2195  00034E  EC8A  F004         	call	___lwmod	;wreg free
  2196  000352  5018               	movf	?___lwmod,w,c
  2197  000354  0F30               	addlw	48
  2198  000356  0100               	movlb	0	; () banked
  2199  000358  6FBD               	movwf	printf@c& (0+255),b
  2200                           
  2201                           ;doprnt.c: 1491: break;
  2202  00035A  D030               	goto	l3623
  2203  00035C                     l3615:
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;doprnt.c: 1499: {
  2207                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  2208  00035C  C0B8  F011         	movff	printf@val,___lwdiv@dividend
  2209  000360  C0B9  F012         	movff	printf@val+1,___lwdiv@dividend+1
  2210  000364  0100               	movlb	0	; () banked
  2211  000366  51B7               	movf	printf@prec& (0+255),w,b
  2212  000368  0D02               	mullw	2
  2213  00036A  0E9C               	movlw	low _hexpowers
  2214  00036C  24F3               	addwf	prodl,w,c
  2215  00036E  6EF6               	movwf	tblptrl,c
  2216  000370  0EFF               	movlw	high _hexpowers
  2217  000372  20F4               	addwfc	prodh,w,c
  2218  000374  6EF7               	movwf	tblptrh,c
  2219  000376                     	if	0	;There are less than 3 active tblptr bytes
  2220  000376                     	endif
  2221  000376  0009               	tblrd		*+
  2222  000378  CFF5 F013          	movff	tablat,___lwdiv@divisor
  2223  00037C  000A               	tblrd		*-
  2224  00037E  CFF5 F014          	movff	tablat,___lwdiv@divisor+1
  2225  000382  EC32  F004         	call	___lwdiv	;wreg free
  2226  000386  5011               	movf	?___lwdiv,w,c
  2227  000388  0B0F               	andlw	15
  2228  00038A  0100               	movlb	0	; () banked
  2229  00038C  6FB4               	movwf	printf@idx& (0+255),b
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  2233  00038E  0100               	movlb	0	; () banked
  2234  000390  51B4               	movf	printf@idx& (0+255),w,b
  2235  000392  0D01               	mullw	1
  2236  000394  0EED               	movlw	low STR_3
  2237  000396  24F3               	addwf	prodl,w,c
  2238  000398  6EF6               	movwf	tblptrl,c
  2239  00039A  0EFF               	movlw	high STR_3
  2240  00039C  20F4               	addwfc	prodh,w,c
  2241  00039E  6EF7               	movwf	tblptrh,c
  2242  0003A0                     	if	0	;There are less than 3 active tblptr bytes
  2243  0003A0                     	endif
  2244  0003A0  0008               	tblrd		*
  2245  0003A2  CFF5 F0BD          	movff	tablat,printf@c
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;doprnt.c: 1523: }
  2249                           
  2250                           ;doprnt.c: 1508: }
  2251                           ;doprnt.c: 1510: break;
  2252  0003A6  D00A               	goto	l3623
  2253  0003A8                     l3621:
  2254  0003A8  0100               	movlb	0	; () banked
  2255  0003AA  51BA               	movf	printf@flag& (0+255),w,b
  2256  0003AC  0B80               	andlw	128
  2257                           
  2258                           ; Switch size 1, requested type "space"
  2259                           ; Number of cases is 2, Range of values is 0 to 128
  2260                           ; switch strategies available:
  2261                           ; Name         Instructions Cycles
  2262                           ; simple_byte            7     4 (average)
  2263                           ;	Chosen strategy is simple_byte
  2264  0003AE  0A00               	xorlw	0	; case 0
  2265  0003B0  B4D8               	btfsc	status,2,c
  2266  0003B2  D7B0               	goto	l3613
  2267  0003B4  0A80               	xorlw	128	; case 128
  2268  0003B6  B4D8               	btfsc	status,2,c
  2269  0003B8  D7D1               	goto	l3615
  2270  0003BA  D000               	goto	l3623
  2271  0003BC                     l3623:
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;doprnt.c: 1524: (putch(c) );
  2275  0003BC  0100               	movlb	0	; () banked
  2276  0003BE  51BD               	movf	printf@c& (0+255),w,b
  2277  0003C0  ECD5  F005         	call	_putch
  2278  0003C4  D000               	goto	l3625
  2279  0003C6                     l3625:
  2280  0003C6  0100               	movlb	0	; () banked
  2281  0003C8  07B7               	decf	printf@prec& (0+255),f,b
  2282  0003CA  0100               	movlb	0	; () banked
  2283  0003CC  29B7               	incf	printf@prec& (0+255),w,b
  2284  0003CE  B4D8               	btfsc	status,2,c
  2285  0003D0  D002               	goto	l3627
  2286  0003D2  D7EA               	goto	l3621
  2287                           
  2288                           ; BSR set to: 0
  2289  0003D4  D000               	goto	l3627
  2290  0003D6                     l3627:
  2291  0003D6  C01D  FFF6         	movff	printf@f,tblptrl
  2292  0003DA  C01E  FFF7         	movff	printf@f+1,tblptrh
  2293  0003DE  4A1D               	infsnz	printf@f,f,c
  2294  0003E0  2A1E               	incf	printf@f+1,f,c
  2295  0003E2                     	if	0	;tblptru may be non-zero
  2296  0003E2                     	endif
  2297  0003E2                     	if	0	;tblptru may be non-zero
  2298  0003E2                     	endif
  2299  0003E2  0008               	tblrd		*
  2300  0003E4  CFF5 F0BD          	movff	tablat,printf@c
  2301  0003E8  0100               	movlb	0	; () banked
  2302  0003EA  51BD               	movf	printf@c& (0+255),w,b
  2303  0003EC  B4D8               	btfsc	status,2,c
  2304  0003EE  D002               	goto	l569
  2305  0003F0  D61C               	goto	l3501
  2306                           
  2307                           ; BSR set to: 0
  2308  0003F2  D000               	goto	l569
  2309  0003F4                     l569:
  2310  0003F4  0012               	return		;funcret
  2311  0003F6                     __end_of_printf:
  2312                           	opt stack 0
  2313                           tblptru	equ	0xFF8
  2314                           tblptrh	equ	0xFF7
  2315                           tblptrl	equ	0xFF6
  2316                           tablat	equ	0xFF5
  2317                           prodh	equ	0xFF4
  2318                           prodl	equ	0xFF3
  2319                           postinc0	equ	0xFEE
  2320                           wreg	equ	0xFE8
  2321                           postdec1	equ	0xFE5
  2322                           fsr1l	equ	0xFE1
  2323                           postinc2	equ	0xFDE
  2324                           postdec2	equ	0xFDD
  2325                           fsr2h	equ	0xFDA
  2326                           fsr2l	equ	0xFD9
  2327                           status	equ	0xFD8
  2328                           
  2329 ;; *************** function _putch *****************
  2330 ;; Defined at:
  2331 ;;		line 92 in file "Lab10p2.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  c               1    wreg     unsigned char 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  c               1   16[COMRAM] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;		None               void
  2338 ;; Registers used:
  2339 ;;		wreg
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;Total ram usage:        1 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    3
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_printf
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text2
  2360  000BAA                     __ptext2:
  2361                           	opt stack 0
  2362  000BAA                     _putch:
  2363                           	opt stack 26
  2364                           
  2365                           ;incstack = 0
  2366                           ;putch@c stored from wreg
  2367  000BAA  6E11               	movwf	putch@c,c
  2368                           
  2369                           ;Lab10p2.c: 94: while (!TRMT);
  2370  000BAC  D000               	goto	l484
  2371  000BAE                     l484:
  2372  000BAE  A2AC               	btfss	4012,1,c	;volatile
  2373  000BB0  D7FE               	goto	l484
  2374                           
  2375                           ;Lab10p2.c: 95: TXREG = c;
  2376  000BB2  C011  FFAD         	movff	putch@c,4013	;volatile
  2377  000BB6  0012               	return		;funcret
  2378  000BB8                     __end_of_putch:
  2379                           	opt stack 0
  2380                           tblptru	equ	0xFF8
  2381                           tblptrh	equ	0xFF7
  2382                           tblptrl	equ	0xFF6
  2383                           tablat	equ	0xFF5
  2384                           prodh	equ	0xFF4
  2385                           prodl	equ	0xFF3
  2386                           postinc0	equ	0xFEE
  2387                           wreg	equ	0xFE8
  2388                           postdec1	equ	0xFE5
  2389                           fsr1l	equ	0xFE1
  2390                           postinc2	equ	0xFDE
  2391                           postdec2	equ	0xFDD
  2392                           fsr2h	equ	0xFDA
  2393                           fsr2l	equ	0xFD9
  2394                           status	equ	0xFD8
  2395                           
  2396 ;; *************** function _isdigit *****************
  2397 ;; Defined at:
  2398 ;;		line 8 in file "E:\XC8\sources\common\isdigit.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  c               1    wreg     unsigned char 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  c               1   18[COMRAM] unsigned char 
  2403 ;; Return value:  Size  Location     Type
  2404 ;;		None               void
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;Total ram usage:        3 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    3
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_printf
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text3
  2427  000ABA                     __ptext3:
  2428                           	opt stack 0
  2429  000ABA                     _isdigit:
  2430                           	opt stack 26
  2431                           
  2432                           ;incstack = 0
  2433                           ;isdigit@c stored from wreg
  2434  000ABA  6E13               	movwf	isdigit@c,c
  2435  000ABC  0E00               	movlw	0
  2436  000ABE  6E12               	movwf	_isdigit$1685,c
  2437  000AC0  0E3A               	movlw	58
  2438  000AC2  6013               	cpfslt	isdigit@c,c
  2439  000AC4  D006               	goto	l3307
  2440  000AC6  0E2F               	movlw	47
  2441  000AC8  6413               	cpfsgt	isdigit@c,c
  2442  000ACA  D003               	goto	l3307
  2443  000ACC  0E01               	movlw	1
  2444  000ACE  6E12               	movwf	_isdigit$1685,c
  2445  000AD0  D000               	goto	l3307
  2446  000AD2                     l3307:
  2447  000AD2  C012  F011         	movff	_isdigit$1685,??_isdigit
  2448  000AD6  3011               	rrcf	??_isdigit,w,c
  2449  000AD8  D000               	goto	l1036
  2450  000ADA                     l1036:
  2451  000ADA  0012               	return		;funcret
  2452  000ADC                     __end_of_isdigit:
  2453                           	opt stack 0
  2454                           tblptru	equ	0xFF8
  2455                           tblptrh	equ	0xFF7
  2456                           tblptrl	equ	0xFF6
  2457                           tablat	equ	0xFF5
  2458                           prodh	equ	0xFF4
  2459                           prodl	equ	0xFF3
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           postdec1	equ	0xFE5
  2463                           fsr1l	equ	0xFE1
  2464                           postinc2	equ	0xFDE
  2465                           postdec2	equ	0xFDD
  2466                           fsr2h	equ	0xFDA
  2467                           fsr2l	equ	0xFD9
  2468                           status	equ	0xFD8
  2469                           
  2470 ;; *************** function ___wmul *****************
  2471 ;; Defined at:
  2472 ;;		line 15 in file "E:\XC8\sources\common\Umul16.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  multiplier      2   16[COMRAM] unsigned int 
  2475 ;;  multiplicand    2   18[COMRAM] unsigned int 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  product         2   20[COMRAM] unsigned int 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  2   16[COMRAM] unsigned int 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0, prodl, prodh
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;Total ram usage:        6 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    3
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_main
  2498 ;;		_printf
  2499 ;;		_delay_ms
  2500 ;;		_drawChar
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text4
  2505  000A92                     __ptext4:
  2506                           	opt stack 0
  2507  000A92                     ___wmul:
  2508                           	opt stack 26
  2509                           
  2510                           ;incstack = 0
  2511  000A92  5011               	movf	___wmul@multiplier,w,c
  2512  000A94  0213               	mulwf	___wmul@multiplicand,c
  2513  000A96  CFF3 F015          	movff	prodl,___wmul@product
  2514  000A9A  CFF4 F016          	movff	prodh,___wmul@product+1
  2515  000A9E  5011               	movf	___wmul@multiplier,w,c
  2516  000AA0  0214               	mulwf	___wmul@multiplicand+1,c
  2517  000AA2  50F3               	movf	prodl,w,c
  2518  000AA4  2616               	addwf	___wmul@product+1,f,c
  2519  000AA6  5012               	movf	___wmul@multiplier+1,w,c
  2520  000AA8  0213               	mulwf	___wmul@multiplicand,c
  2521  000AAA  50F3               	movf	prodl,w,c
  2522  000AAC  2616               	addwf	___wmul@product+1,f,c
  2523  000AAE  C015  F011         	movff	___wmul@product,?___wmul
  2524  000AB2  C016  F012         	movff	___wmul@product+1,?___wmul+1
  2525  000AB6  D000               	goto	l605
  2526  000AB8                     l605:
  2527  000AB8  0012               	return		;funcret
  2528  000ABA                     __end_of___wmul:
  2529                           	opt stack 0
  2530                           tblptru	equ	0xFF8
  2531                           tblptrh	equ	0xFF7
  2532                           tblptrl	equ	0xFF6
  2533                           tablat	equ	0xFF5
  2534                           prodh	equ	0xFF4
  2535                           prodl	equ	0xFF3
  2536                           postinc0	equ	0xFEE
  2537                           wreg	equ	0xFE8
  2538                           postdec1	equ	0xFE5
  2539                           fsr1l	equ	0xFE1
  2540                           postinc2	equ	0xFDE
  2541                           postdec2	equ	0xFDD
  2542                           fsr2h	equ	0xFDA
  2543                           fsr2l	equ	0xFD9
  2544                           status	equ	0xFD8
  2545                           
  2546 ;; *************** function ___lwmod *****************
  2547 ;; Defined at:
  2548 ;;		line 8 in file "E:\XC8\sources\common\lwmod.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  dividend        2   23[COMRAM] unsigned int 
  2551 ;;  divisor         2   25[COMRAM] unsigned int 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  counter         1   27[COMRAM] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  2   23[COMRAM] unsigned int 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;Total ram usage:        5 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    3
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_printf
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text5
  2578  000914                     __ptext5:
  2579                           	opt stack 0
  2580  000914                     ___lwmod:
  2581                           	opt stack 26
  2582                           
  2583                           ;incstack = 0
  2584  000914  501A               	movf	___lwmod@divisor,w,c
  2585  000916  101B               	iorwf	___lwmod@divisor+1,w,c
  2586  000918  B4D8               	btfsc	status,2,c
  2587  00091A  D01D               	goto	l1138
  2588  00091C  0E01               	movlw	1
  2589  00091E  6E1C               	movwf	___lwmod@counter,c
  2590  000920  D005               	goto	l3345
  2591  000922                     l3343:
  2592  000922  90D8               	bcf	status,0,c
  2593  000924  361A               	rlcf	___lwmod@divisor,f,c
  2594  000926  361B               	rlcf	___lwmod@divisor+1,f,c
  2595  000928  2A1C               	incf	___lwmod@counter,f,c
  2596  00092A  D000               	goto	l3345
  2597  00092C                     l3345:
  2598  00092C  BE1B               	btfsc	___lwmod@divisor+1,7,c
  2599  00092E  D002               	goto	l3347
  2600  000930  D7F8               	goto	l3343
  2601  000932  D000               	goto	l3347
  2602  000934                     l3347:
  2603  000934  501A               	movf	___lwmod@divisor,w,c
  2604  000936  5C18               	subwf	___lwmod@dividend,w,c
  2605  000938  501B               	movf	___lwmod@divisor+1,w,c
  2606  00093A  5819               	subwfb	___lwmod@dividend+1,w,c
  2607  00093C  A0D8               	btfss	status,0,c
  2608  00093E  D005               	goto	l3351
  2609  000940  501A               	movf	___lwmod@divisor,w,c
  2610  000942  5E18               	subwf	___lwmod@dividend,f,c
  2611  000944  501B               	movf	___lwmod@divisor+1,w,c
  2612  000946  5A19               	subwfb	___lwmod@dividend+1,f,c
  2613  000948  D000               	goto	l3351
  2614  00094A                     l3351:
  2615  00094A  90D8               	bcf	status,0,c
  2616  00094C  321B               	rrcf	___lwmod@divisor+1,f,c
  2617  00094E  321A               	rrcf	___lwmod@divisor,f,c
  2618  000950  2E1C               	decfsz	___lwmod@counter,f,c
  2619  000952  D7F0               	goto	l3347
  2620  000954  D000               	goto	l1138
  2621  000956                     l1138:
  2622  000956  C018  F018         	movff	___lwmod@dividend,?___lwmod
  2623  00095A  C019  F019         	movff	___lwmod@dividend+1,?___lwmod+1
  2624  00095E  0012               	return		;funcret
  2625  000960                     __end_of___lwmod:
  2626                           	opt stack 0
  2627                           tblptru	equ	0xFF8
  2628                           tblptrh	equ	0xFF7
  2629                           tblptrl	equ	0xFF6
  2630                           tablat	equ	0xFF5
  2631                           prodh	equ	0xFF4
  2632                           prodl	equ	0xFF3
  2633                           postinc0	equ	0xFEE
  2634                           wreg	equ	0xFE8
  2635                           postdec1	equ	0xFE5
  2636                           fsr1l	equ	0xFE1
  2637                           postinc2	equ	0xFDE
  2638                           postdec2	equ	0xFDD
  2639                           fsr2h	equ	0xFDA
  2640                           fsr2l	equ	0xFD9
  2641                           status	equ	0xFD8
  2642                           
  2643 ;; *************** function ___lwdiv *****************
  2644 ;; Defined at:
  2645 ;;		line 8 in file "E:\XC8\sources\common\lwdiv.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  dividend        2   16[COMRAM] unsigned int 
  2648 ;;  divisor         2   18[COMRAM] unsigned int 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  quotient        2   21[COMRAM] unsigned int 
  2651 ;;  counter         1   20[COMRAM] unsigned char 
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  2   16[COMRAM] unsigned int 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;Total ram usage:        7 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    3
  2668 ;; This function calls:
  2669 ;;		Nothing
  2670 ;; This function is called by:
  2671 ;;		_printf
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text6
  2676  000864                     __ptext6:
  2677                           	opt stack 0
  2678  000864                     ___lwdiv:
  2679                           	opt stack 26
  2680                           
  2681                           ;incstack = 0
  2682  000864  0E00               	movlw	0
  2683  000866  6E17               	movwf	___lwdiv@quotient+1,c
  2684  000868  0E00               	movlw	0
  2685  00086A  6E16               	movwf	___lwdiv@quotient,c
  2686  00086C  5013               	movf	___lwdiv@divisor,w,c
  2687  00086E  1014               	iorwf	___lwdiv@divisor+1,w,c
  2688  000870  B4D8               	btfsc	status,2,c
  2689  000872  D021               	goto	l1128
  2690  000874  0E01               	movlw	1
  2691  000876  6E15               	movwf	___lwdiv@counter,c
  2692  000878  D005               	goto	l3325
  2693  00087A                     l3323:
  2694  00087A  90D8               	bcf	status,0,c
  2695  00087C  3613               	rlcf	___lwdiv@divisor,f,c
  2696  00087E  3614               	rlcf	___lwdiv@divisor+1,f,c
  2697  000880  2A15               	incf	___lwdiv@counter,f,c
  2698  000882  D000               	goto	l3325
  2699  000884                     l3325:
  2700  000884  BE14               	btfsc	___lwdiv@divisor+1,7,c
  2701  000886  D002               	goto	l3327
  2702  000888  D7F8               	goto	l3323
  2703  00088A  D000               	goto	l3327
  2704  00088C                     l3327:
  2705  00088C  90D8               	bcf	status,0,c
  2706  00088E  3616               	rlcf	___lwdiv@quotient,f,c
  2707  000890  3617               	rlcf	___lwdiv@quotient+1,f,c
  2708  000892  5013               	movf	___lwdiv@divisor,w,c
  2709  000894  5C11               	subwf	___lwdiv@dividend,w,c
  2710  000896  5014               	movf	___lwdiv@divisor+1,w,c
  2711  000898  5812               	subwfb	___lwdiv@dividend+1,w,c
  2712  00089A  A0D8               	btfss	status,0,c
  2713  00089C  D006               	goto	l3335
  2714  00089E  5013               	movf	___lwdiv@divisor,w,c
  2715  0008A0  5E11               	subwf	___lwdiv@dividend,f,c
  2716  0008A2  5014               	movf	___lwdiv@divisor+1,w,c
  2717  0008A4  5A12               	subwfb	___lwdiv@dividend+1,f,c
  2718  0008A6  8016               	bsf	___lwdiv@quotient,0,c
  2719  0008A8  D000               	goto	l3335
  2720  0008AA                     l3335:
  2721  0008AA  90D8               	bcf	status,0,c
  2722  0008AC  3214               	rrcf	___lwdiv@divisor+1,f,c
  2723  0008AE  3213               	rrcf	___lwdiv@divisor,f,c
  2724  0008B0  2E15               	decfsz	___lwdiv@counter,f,c
  2725  0008B2  D7EC               	goto	l3327
  2726  0008B4  D000               	goto	l1128
  2727  0008B6                     l1128:
  2728  0008B6  C016  F011         	movff	___lwdiv@quotient,?___lwdiv
  2729  0008BA  C017  F012         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2730  0008BE  0012               	return		;funcret
  2731  0008C0                     __end_of___lwdiv:
  2732                           	opt stack 0
  2733                           tblptru	equ	0xFF8
  2734                           tblptrh	equ	0xFF7
  2735                           tblptrl	equ	0xFF6
  2736                           tablat	equ	0xFF5
  2737                           prodh	equ	0xFF4
  2738                           prodl	equ	0xFF3
  2739                           postinc0	equ	0xFEE
  2740                           wreg	equ	0xFE8
  2741                           postdec1	equ	0xFE5
  2742                           fsr1l	equ	0xFE1
  2743                           postinc2	equ	0xFDE
  2744                           postdec2	equ	0xFDD
  2745                           fsr2h	equ	0xFDA
  2746                           fsr2l	equ	0xFD9
  2747                           status	equ	0xFD8
  2748                           
  2749 ;; *************** function ___awdiv *****************
  2750 ;; Defined at:
  2751 ;;		line 8 in file "E:\XC8\sources\common\awdiv.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  dividend        2   22[COMRAM] int 
  2754 ;;  divisor         2   24[COMRAM] int 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  quotient        2   28[COMRAM] int 
  2757 ;;  sign            1   27[COMRAM] unsigned char 
  2758 ;;  counter         1   26[COMRAM] unsigned char 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  2   22[COMRAM] int 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, status,0
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;Total ram usage:        8 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    3
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_main
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text7
  2783  0005FC                     __ptext7:
  2784                           	opt stack 0
  2785  0005FC                     ___awdiv:
  2786                           	opt stack 27
  2787                           
  2788                           ;incstack = 0
  2789  0005FC  0E00               	movlw	0
  2790  0005FE  6E1C               	movwf	___awdiv@sign,c
  2791  000600  AE1A               	btfss	___awdiv@divisor+1,7,c
  2792  000602  D007               	goto	l3023
  2793  000604  6C19               	negf	___awdiv@divisor,c
  2794  000606  1E1A               	comf	___awdiv@divisor+1,f,c
  2795  000608  B0D8               	btfsc	status,0,c
  2796  00060A  2A1A               	incf	___awdiv@divisor+1,f,c
  2797  00060C  0E01               	movlw	1
  2798  00060E  6E1C               	movwf	___awdiv@sign,c
  2799  000610  D000               	goto	l3023
  2800  000612                     l3023:
  2801  000612  AE18               	btfss	___awdiv@dividend+1,7,c
  2802  000614  D007               	goto	l3029
  2803  000616  6C17               	negf	___awdiv@dividend,c
  2804  000618  1E18               	comf	___awdiv@dividend+1,f,c
  2805  00061A  B0D8               	btfsc	status,0,c
  2806  00061C  2A18               	incf	___awdiv@dividend+1,f,c
  2807  00061E  0E01               	movlw	1
  2808  000620  1A1C               	xorwf	___awdiv@sign,f,c
  2809  000622  D000               	goto	l3029
  2810  000624                     l3029:
  2811  000624  0E00               	movlw	0
  2812  000626  6E1E               	movwf	___awdiv@quotient+1,c
  2813  000628  0E00               	movlw	0
  2814  00062A  6E1D               	movwf	___awdiv@quotient,c
  2815  00062C  5019               	movf	___awdiv@divisor,w,c
  2816  00062E  101A               	iorwf	___awdiv@divisor+1,w,c
  2817  000630  B4D8               	btfsc	status,2,c
  2818  000632  D021               	goto	l3051
  2819  000634  0E01               	movlw	1
  2820  000636  6E1B               	movwf	___awdiv@counter,c
  2821  000638  D005               	goto	l3037
  2822  00063A                     l3035:
  2823  00063A  90D8               	bcf	status,0,c
  2824  00063C  3619               	rlcf	___awdiv@divisor,f,c
  2825  00063E  361A               	rlcf	___awdiv@divisor+1,f,c
  2826  000640  2A1B               	incf	___awdiv@counter,f,c
  2827  000642  D000               	goto	l3037
  2828  000644                     l3037:
  2829  000644  BE1A               	btfsc	___awdiv@divisor+1,7,c
  2830  000646  D002               	goto	l3039
  2831  000648  D7F8               	goto	l3035
  2832  00064A  D000               	goto	l3039
  2833  00064C                     l3039:
  2834  00064C  90D8               	bcf	status,0,c
  2835  00064E  361D               	rlcf	___awdiv@quotient,f,c
  2836  000650  361E               	rlcf	___awdiv@quotient+1,f,c
  2837  000652  5019               	movf	___awdiv@divisor,w,c
  2838  000654  5C17               	subwf	___awdiv@dividend,w,c
  2839  000656  501A               	movf	___awdiv@divisor+1,w,c
  2840  000658  5818               	subwfb	___awdiv@dividend+1,w,c
  2841  00065A  A0D8               	btfss	status,0,c
  2842  00065C  D006               	goto	l3047
  2843  00065E  5019               	movf	___awdiv@divisor,w,c
  2844  000660  5E17               	subwf	___awdiv@dividend,f,c
  2845  000662  501A               	movf	___awdiv@divisor+1,w,c
  2846  000664  5A18               	subwfb	___awdiv@dividend+1,f,c
  2847  000666  801D               	bsf	___awdiv@quotient,0,c
  2848  000668  D000               	goto	l3047
  2849  00066A                     l3047:
  2850  00066A  90D8               	bcf	status,0,c
  2851  00066C  321A               	rrcf	___awdiv@divisor+1,f,c
  2852  00066E  3219               	rrcf	___awdiv@divisor,f,c
  2853  000670  2E1B               	decfsz	___awdiv@counter,f,c
  2854  000672  D7EC               	goto	l3039
  2855  000674  D000               	goto	l3051
  2856  000676                     l3051:
  2857  000676  501C               	movf	___awdiv@sign,w,c
  2858  000678  B4D8               	btfsc	status,2,c
  2859  00067A  D005               	goto	l3055
  2860  00067C  6C1D               	negf	___awdiv@quotient,c
  2861  00067E  1E1E               	comf	___awdiv@quotient+1,f,c
  2862  000680  B0D8               	btfsc	status,0,c
  2863  000682  2A1E               	incf	___awdiv@quotient+1,f,c
  2864  000684  D000               	goto	l3055
  2865  000686                     l3055:
  2866  000686  C01D  F017         	movff	___awdiv@quotient,?___awdiv
  2867  00068A  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
  2868  00068E  D000               	goto	l798
  2869  000690                     l798:
  2870  000690  0012               	return		;funcret
  2871  000692                     __end_of___awdiv:
  2872                           	opt stack 0
  2873                           tblptru	equ	0xFF8
  2874                           tblptrh	equ	0xFF7
  2875                           tblptrl	equ	0xFF6
  2876                           tablat	equ	0xFF5
  2877                           prodh	equ	0xFF4
  2878                           prodl	equ	0xFF3
  2879                           postinc0	equ	0xFEE
  2880                           wreg	equ	0xFE8
  2881                           postdec1	equ	0xFE5
  2882                           fsr1l	equ	0xFE1
  2883                           postinc2	equ	0xFDE
  2884                           postdec2	equ	0xFDD
  2885                           fsr2h	equ	0xFDA
  2886                           fsr2l	equ	0xFD9
  2887                           status	equ	0xFD8
  2888                           
  2889 ;; *************** function _Do_Init *****************
  2890 ;; Defined at:
  2891 ;;		line 106 in file "Lab10p2.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;		None
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;		None               void
  2898 ;; Registers used:
  2899 ;;		wreg, status,2, status,0, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;Total ram usage:        0 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:    7
  2912 ;; This function calls:
  2913 ;;		_DS1621_Init
  2914 ;;		_I2C_Init
  2915 ;;		_init_INTERRUPT
  2916 ;;		_init_UART
  2917 ;; This function is called by:
  2918 ;;		_main
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text8
  2923  0009A8                     __ptext8:
  2924                           	opt stack 0
  2925  0009A8                     _Do_Init:
  2926                           	opt stack 23
  2927                           
  2928                           ;Lab10p2.c: 109: init_UART();
  2929                           
  2930                           ;incstack = 0
  2931  0009A8  ECB0  F005         	call	_init_UART	;wreg free
  2932                           
  2933                           ;Lab10p2.c: 110: OSCCON=0x70;
  2934  0009AC  0E70               	movlw	112
  2935  0009AE  6ED3               	movwf	4051,c	;volatile
  2936                           
  2937                           ;Lab10p2.c: 112: ADCON1=0x0F;
  2938  0009B0  0E0F               	movlw	15
  2939  0009B2  6EC1               	movwf	4033,c	;volatile
  2940                           
  2941                           ;Lab10p2.c: 113: TRISA = 0x00;
  2942  0009B4  0E00               	movlw	0
  2943  0009B6  6E92               	movwf	3986,c	;volatile
  2944                           
  2945                           ;Lab10p2.c: 114: TRISB = 0x01;
  2946  0009B8  0E01               	movlw	1
  2947  0009BA  6E93               	movwf	3987,c	;volatile
  2948                           
  2949                           ;Lab10p2.c: 115: TRISC = 0x00;
  2950  0009BC  0E00               	movlw	0
  2951  0009BE  6E94               	movwf	3988,c	;volatile
  2952                           
  2953                           ;Lab10p2.c: 116: TRISD = 0x00;
  2954  0009C0  0E00               	movlw	0
  2955  0009C2  6E95               	movwf	3989,c	;volatile
  2956                           
  2957                           ;Lab10p2.c: 117: TRISE = 0x00;
  2958  0009C4  0E00               	movlw	0
  2959  0009C6  6E96               	movwf	3990,c	;volatile
  2960                           
  2961                           ;Lab10p2.c: 118: RBPU=0;
  2962  0009C8  9EF1               	bcf	intcon2,7,c	;volatile
  2963                           
  2964                           ;Lab10p2.c: 119: DS1621_Init();
  2965  0009CA  EC7E  F005         	call	_DS1621_Init	;wreg free
  2966                           
  2967                           ;Lab10p2.c: 120: init_INTERRUPT();
  2968  0009CE  EC31  F005         	call	_init_INTERRUPT	;wreg free
  2969                           
  2970                           ;Lab10p2.c: 121: I2C_Init(100000);
  2971  0009D2  0EA0               	movlw	160
  2972  0009D4  6E11               	movwf	I2C_Init@c,c
  2973  0009D6  0E86               	movlw	134
  2974  0009D8  6E12               	movwf	I2C_Init@c+1,c
  2975  0009DA  0E01               	movlw	1
  2976  0009DC  6E13               	movwf	I2C_Init@c+2,c
  2977  0009DE  0E00               	movlw	0
  2978  0009E0  6E14               	movwf	I2C_Init@c+3,c
  2979  0009E2  ECEE  F005         	call	_I2C_Init	;wreg free
  2980  0009E6  0012               	return		;funcret
  2981  0009E8                     __end_of_Do_Init:
  2982                           	opt stack 0
  2983                           tblptru	equ	0xFF8
  2984                           tblptrh	equ	0xFF7
  2985                           tblptrl	equ	0xFF6
  2986                           tablat	equ	0xFF5
  2987                           prodh	equ	0xFF4
  2988                           prodl	equ	0xFF3
  2989                           intcon2	equ	0xFF1
  2990                           postinc0	equ	0xFEE
  2991                           wreg	equ	0xFE8
  2992                           postdec1	equ	0xFE5
  2993                           fsr1l	equ	0xFE1
  2994                           postinc2	equ	0xFDE
  2995                           postdec2	equ	0xFDD
  2996                           fsr2h	equ	0xFDA
  2997                           fsr2l	equ	0xFD9
  2998                           status	equ	0xFD8
  2999                           
  3000 ;; *************** function _init_UART *****************
  3001 ;; Defined at:
  3002 ;;		line 98 in file "Lab10p2.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;		None               void
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;Total ram usage:        0 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    4
  3023 ;; This function calls:
  3024 ;;		_OpenUSART
  3025 ;; This function is called by:
  3026 ;;		_Do_Init
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text9
  3031  000B60                     __ptext9:
  3032                           	opt stack 0
  3033  000B60                     _init_UART:
  3034                           	opt stack 25
  3035                           
  3036                           ;Lab10p2.c: 100: OpenUSART (0b01111111 & 0b10111111 &
  3037                           ;Lab10p2.c: 101: 0b11111110 & 0b11111101 & 0b11111111 &
  3038                           ;Lab10p2.c: 102: 0b11111111, 25);
  3039                           
  3040                           ;incstack = 0
  3041  000B60  0E00               	movlw	0
  3042  000B62  6E12               	movwf	OpenUSART@spbrg+1,c
  3043  000B64  0E19               	movlw	25
  3044  000B66  6E11               	movwf	OpenUSART@spbrg,c
  3045  000B68  0E3C               	movlw	60
  3046  000B6A  ECC8  F003         	call	_OpenUSART
  3047                           
  3048                           ;Lab10p2.c: 103: OSCCON = 0x70;
  3049  000B6E  0E70               	movlw	112
  3050  000B70  6ED3               	movwf	4051,c	;volatile
  3051  000B72  0012               	return		;funcret
  3052  000B74                     __end_of_init_UART:
  3053                           	opt stack 0
  3054                           tblptru	equ	0xFF8
  3055                           tblptrh	equ	0xFF7
  3056                           tblptrl	equ	0xFF6
  3057                           tablat	equ	0xFF5
  3058                           prodh	equ	0xFF4
  3059                           prodl	equ	0xFF3
  3060                           intcon2	equ	0xFF1
  3061                           postinc0	equ	0xFEE
  3062                           wreg	equ	0xFE8
  3063                           postdec1	equ	0xFE5
  3064                           fsr1l	equ	0xFE1
  3065                           postinc2	equ	0xFDE
  3066                           postdec2	equ	0xFDD
  3067                           fsr2h	equ	0xFDA
  3068                           fsr2l	equ	0xFD9
  3069                           status	equ	0xFD8
  3070                           
  3071 ;; *************** function _OpenUSART *****************
  3072 ;; Defined at:
  3073 ;;		line 73 in file "E:\XC8\sources\pic18\plib\USART\uopen.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  config          1    wreg     unsigned char 
  3076 ;;  spbrg           2   16[COMRAM] unsigned int 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  config          1   18[COMRAM] unsigned char 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;		None               void
  3081 ;; Registers used:
  3082 ;;		wreg, status,2
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;Total ram usage:        3 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    3
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_init_UART
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text10
  3103  000790                     __ptext10:
  3104                           	opt stack 0
  3105  000790                     _OpenUSART:
  3106                           	opt stack 25
  3107                           
  3108                           ;incstack = 0
  3109                           ;OpenUSART@config stored from wreg
  3110  000790  6E13               	movwf	OpenUSART@config,c
  3111  000792  0E00               	movlw	0
  3112  000794  6EAC               	movwf	4012,c	;volatile
  3113  000796  0E00               	movlw	0
  3114  000798  6EAB               	movwf	4011,c	;volatile
  3115  00079A  A013               	btfss	OpenUSART@config,0,c
  3116  00079C  D002               	goto	l2569
  3117  00079E  88AC               	bsf	4012,4,c	;volatile
  3118  0007A0  D000               	goto	l2569
  3119  0007A2                     l2569:
  3120  0007A2  A213               	btfss	OpenUSART@config,1,c
  3121  0007A4  D003               	goto	l2573
  3122  0007A6  8CAC               	bsf	4012,6,c	;volatile
  3123  0007A8  8CAB               	bsf	4011,6,c	;volatile
  3124  0007AA  D000               	goto	l2573
  3125  0007AC                     l2573:
  3126  0007AC  A413               	btfss	OpenUSART@config,2,c
  3127  0007AE  D002               	goto	l2577
  3128  0007B0  8EAC               	bsf	4012,7,c	;volatile
  3129  0007B2  D000               	goto	l2577
  3130  0007B4                     l2577:
  3131  0007B4  A613               	btfss	OpenUSART@config,3,c
  3132  0007B6  D002               	goto	l593
  3133  0007B8  88AB               	bsf	4011,4,c	;volatile
  3134  0007BA  D002               	goto	l2581
  3135  0007BC                     l593:
  3136  0007BC  8AAB               	bsf	4011,5,c	;volatile
  3137  0007BE  D000               	goto	l2581
  3138  0007C0                     l2581:
  3139  0007C0  B813               	btfsc	OpenUSART@config,4,c
  3140  0007C2  84AC               	bsf	4012,2,c	;volatile
  3141  0007C4  989E               	bcf	3998,4,c	;volatile
  3142  0007C6  AA13               	btfss	OpenUSART@config,5,c
  3143  0007C8  D002               	goto	l2589
  3144  0007CA  86AB               	bsf	4011,3,c	;volatile
  3145  0007CC  D000               	goto	l2589
  3146  0007CE                     l2589:
  3147  0007CE  AC13               	btfss	OpenUSART@config,6,c
  3148  0007D0  D002               	goto	l597
  3149  0007D2  8A9D               	bsf	3997,5,c	;volatile
  3150  0007D4  D001               	goto	l598
  3151  0007D6                     l597:
  3152  0007D6  9A9D               	bcf	3997,5,c	;volatile
  3153  0007D8                     l598:
  3154  0007D8  9A9E               	bcf	3998,5,c	;volatile
  3155  0007DA  AE13               	btfss	OpenUSART@config,7,c
  3156  0007DC  D002               	goto	l599
  3157  0007DE  889D               	bsf	3997,4,c	;volatile
  3158  0007E0  D001               	goto	l600
  3159  0007E2                     l599:
  3160  0007E2  989D               	bcf	3997,4,c	;volatile
  3161  0007E4                     l600:
  3162  0007E4  C011  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3163  0007E8  5012               	movf	OpenUSART@spbrg+1,w,c
  3164  0007EA  6EB0               	movwf	4016,c	;volatile
  3165  0007EC  8AAC               	bsf	4012,5,c	;volatile
  3166  0007EE  8EAB               	bsf	4011,7,c	;volatile
  3167  0007F0  9C94               	bcf	3988,6,c	;volatile
  3168  0007F2  8E94               	bsf	3988,7,c	;volatile
  3169  0007F4  B8AC               	btfsc	4012,4,c	;volatile
  3170  0007F6  BEAC               	btfsc	4012,7,c	;volatile
  3171  0007F8  D002               	goto	l602
  3172  0007FA  8C94               	bsf	3988,6,c	;volatile
  3173  0007FC  D000               	goto	l602
  3174  0007FE                     l602:
  3175  0007FE  0012               	return		;funcret
  3176  000800                     __end_of_OpenUSART:
  3177                           	opt stack 0
  3178                           tblptru	equ	0xFF8
  3179                           tblptrh	equ	0xFF7
  3180                           tblptrl	equ	0xFF6
  3181                           tablat	equ	0xFF5
  3182                           prodh	equ	0xFF4
  3183                           prodl	equ	0xFF3
  3184                           intcon2	equ	0xFF1
  3185                           postinc0	equ	0xFEE
  3186                           wreg	equ	0xFE8
  3187                           postdec1	equ	0xFE5
  3188                           fsr1l	equ	0xFE1
  3189                           postinc2	equ	0xFDE
  3190                           postdec2	equ	0xFDD
  3191                           fsr2h	equ	0xFDA
  3192                           fsr2l	equ	0xFD9
  3193                           status	equ	0xFD8
  3194                           
  3195 ;; *************** function _init_INTERRUPT *****************
  3196 ;; Defined at:
  3197 ;;		line 13 in file "Interrupt.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;		None               void
  3204 ;; Registers used:
  3205 ;;		wreg, status,2
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    3
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_Do_Init
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text11
  3226  000A62                     __ptext11:
  3227                           	opt stack 0
  3228  000A62                     _init_INTERRUPT:
  3229                           	opt stack 26
  3230                           
  3231                           ;Interrupt.c: 15: INTCONbits.INT0IF = 0;
  3232                           
  3233                           ;incstack = 0
  3234  000A62  92F2               	bcf	intcon,1,c	;volatile
  3235                           
  3236                           ;Interrupt.c: 16: INTCON2bits.INTEDG0 = 0;
  3237  000A64  9CF1               	bcf	intcon2,6,c	;volatile
  3238                           
  3239                           ;Interrupt.c: 17: INTCONbits.INT0IE = 1;
  3240  000A66  88F2               	bsf	intcon,4,c	;volatile
  3241                           
  3242                           ;Interrupt.c: 18: TMR1H = 0;
  3243  000A68  0E00               	movlw	0
  3244  000A6A  6ECF               	movwf	4047,c	;volatile
  3245                           
  3246                           ;Interrupt.c: 19: TMR1L = 0;
  3247  000A6C  0E00               	movlw	0
  3248  000A6E  6ECE               	movwf	4046,c	;volatile
  3249                           
  3250                           ;Interrupt.c: 20: PIR1bits.TMR1IF = 0;
  3251  000A70  909E               	bcf	3998,0,c	;volatile
  3252                           
  3253                           ;Interrupt.c: 21: PIE1bits.TMR1IE = 1;
  3254  000A72  809D               	bsf	3997,0,c	;volatile
  3255                           
  3256                           ;Interrupt.c: 22: INTCONbits.PEIE = 1;
  3257  000A74  8CF2               	bsf	intcon,6,c	;volatile
  3258                           
  3259                           ;Interrupt.c: 23: INTCONbits.GIE = 1;
  3260  000A76  8EF2               	bsf	intcon,7,c	;volatile
  3261                           
  3262                           ;Interrupt.c: 24: nec_ok = 0;
  3263  000A78  0E00               	movlw	0
  3264  000A7A  6E3A               	movwf	_nec_ok+1,c
  3265  000A7C  0E00               	movlw	0
  3266  000A7E  6E39               	movwf	_nec_ok,c
  3267                           
  3268                           ;Interrupt.c: 25: Nec_code = 0x0;
  3269  000A80  0E00               	movlw	0
  3270  000A82  6E31               	movwf	_Nec_code,c
  3271  000A84  0E00               	movlw	0
  3272  000A86  6E32               	movwf	_Nec_code+1,c
  3273  000A88  0E00               	movlw	0
  3274  000A8A  6E33               	movwf	_Nec_code+2,c
  3275  000A8C  0E00               	movlw	0
  3276  000A8E  6E34               	movwf	_Nec_code+3,c
  3277  000A90  0012               	return		;funcret
  3278  000A92                     __end_of_init_INTERRUPT:
  3279                           	opt stack 0
  3280                           tblptru	equ	0xFF8
  3281                           tblptrh	equ	0xFF7
  3282                           tblptrl	equ	0xFF6
  3283                           tablat	equ	0xFF5
  3284                           prodh	equ	0xFF4
  3285                           prodl	equ	0xFF3
  3286                           intcon	equ	0xFF2
  3287                           intcon2	equ	0xFF1
  3288                           postinc0	equ	0xFEE
  3289                           wreg	equ	0xFE8
  3290                           postdec1	equ	0xFE5
  3291                           fsr1l	equ	0xFE1
  3292                           postinc2	equ	0xFDE
  3293                           postdec2	equ	0xFDD
  3294                           fsr2h	equ	0xFDA
  3295                           fsr2l	equ	0xFD9
  3296                           status	equ	0xFD8
  3297                           
  3298 ;; *************** function _I2C_Init *****************
  3299 ;; Defined at:
  3300 ;;		line 14 in file "I2C.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  c               4   16[COMRAM] unsigned long 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;		None
  3305 ;; Return value:  Size  Location     Type
  3306 ;;		None               void
  3307 ;; Registers used:
  3308 ;;		wreg, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3314 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3318 ;;Total ram usage:        4 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    4
  3321 ;; This function calls:
  3322 ;;		_i2cHighScl
  3323 ;;		_i2cHighSda
  3324 ;; This function is called by:
  3325 ;;		_Do_Init
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text12
  3330  000BDC                     __ptext12:
  3331                           	opt stack 0
  3332  000BDC                     _I2C_Init:
  3333                           	opt stack 25
  3334                           
  3335                           ;I2C.c: 16: i2cHighScl();
  3336                           
  3337                           ;incstack = 0
  3338  000BDC  ECE2  F005         	call	_i2cHighScl	;wreg free
  3339                           
  3340                           ;I2C.c: 17: i2cHighSda();
  3341  000BE0  EC01  F006         	call	_i2cHighSda	;wreg free
  3342  000BE4  0012               	return		;funcret
  3343  000BE6                     __end_of_I2C_Init:
  3344                           	opt stack 0
  3345                           tblptru	equ	0xFF8
  3346                           tblptrh	equ	0xFF7
  3347                           tblptrl	equ	0xFF6
  3348                           tablat	equ	0xFF5
  3349                           prodh	equ	0xFF4
  3350                           prodl	equ	0xFF3
  3351                           intcon	equ	0xFF2
  3352                           intcon2	equ	0xFF1
  3353                           postinc0	equ	0xFEE
  3354                           wreg	equ	0xFE8
  3355                           postdec1	equ	0xFE5
  3356                           fsr1l	equ	0xFE1
  3357                           postinc2	equ	0xFDE
  3358                           postdec2	equ	0xFDD
  3359                           fsr2h	equ	0xFDA
  3360                           fsr2l	equ	0xFD9
  3361                           status	equ	0xFD8
  3362                           
  3363 ;; *************** function _DS1621_Init *****************
  3364 ;; Defined at:
  3365 ;;		line 21 in file "I2C_Support.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  Device          1   21[COMRAM] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;		None               void
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3382 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;Total ram usage:        1 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    6
  3386 ;; This function calls:
  3387 ;;		_I2C_Write_Cmd_Only
  3388 ;;		_I2C_Write_Cmd_Write_Data
  3389 ;; This function is called by:
  3390 ;;		_Do_Init
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text13
  3395  000AFC                     __ptext13:
  3396                           	opt stack 0
  3397  000AFC                     _DS1621_Init:
  3398                           	opt stack 23
  3399                           
  3400                           ;I2C_Support.c: 23: char Device = 0x48;
  3401                           
  3402                           ;incstack = 0
  3403  000AFC  0E48               	movlw	72
  3404  000AFE  6E16               	movwf	DS1621_Init@Device,c
  3405                           
  3406                           ;I2C_Support.c: 24: I2C_Write_Cmd_Write_Data (Device, 0xAC, 0x02);
  3407  000B00  0EAC               	movlw	172
  3408  000B02  6E13               	movwf	I2C_Write_Cmd_Write_Data@Cmd,c
  3409  000B04  0E02               	movlw	2
  3410  000B06  6E14               	movwf	I2C_Write_Cmd_Write_Data@Data_Out,c
  3411  000B08  5016               	movf	DS1621_Init@Device,w,c
  3412  000B0A  EC6E  F005         	call	_I2C_Write_Cmd_Write_Data
  3413                           
  3414                           ;I2C_Support.c: 25: I2C_Write_Cmd_Only(Device, 0xEE);
  3415  000B0E  0EEE               	movlw	238
  3416  000B10  6E13               	movwf	I2C_Write_Cmd_Only@Cmd,c
  3417  000B12  5016               	movf	DS1621_Init@Device,w,c
  3418  000B14  EC8D  F005         	call	_I2C_Write_Cmd_Only
  3419  000B18  0012               	return		;funcret
  3420  000B1A                     __end_of_DS1621_Init:
  3421                           	opt stack 0
  3422                           tblptru	equ	0xFF8
  3423                           tblptrh	equ	0xFF7
  3424                           tblptrl	equ	0xFF6
  3425                           tablat	equ	0xFF5
  3426                           prodh	equ	0xFF4
  3427                           prodl	equ	0xFF3
  3428                           intcon	equ	0xFF2
  3429                           intcon2	equ	0xFF1
  3430                           postinc0	equ	0xFEE
  3431                           wreg	equ	0xFE8
  3432                           postdec1	equ	0xFE5
  3433                           fsr1l	equ	0xFE1
  3434                           postinc2	equ	0xFDE
  3435                           postdec2	equ	0xFDD
  3436                           fsr2h	equ	0xFDA
  3437                           fsr2l	equ	0xFD9
  3438                           status	equ	0xFD8
  3439                           
  3440 ;; *************** function _I2C_Write_Cmd_Write_Data *****************
  3441 ;; Defined at:
  3442 ;;		line 152 in file "I2C.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  Device          1    wreg     unsigned char 
  3445 ;;  Cmd             1   18[COMRAM] unsigned char 
  3446 ;;  Data_Out        1   19[COMRAM] unsigned char 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  Device          1   20[COMRAM] unsigned char 
  3449 ;; Return value:  Size  Location     Type
  3450 ;;		None               void
  3451 ;; Registers used:
  3452 ;;		wreg, status,2, status,0, cstack
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3461 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;Total ram usage:        3 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    5
  3465 ;; This function calls:
  3466 ;;		_I2C_Start
  3467 ;;		_I2C_Stop
  3468 ;;		_I2C_Write
  3469 ;; This function is called by:
  3470 ;;		_DS1621_Init
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text14
  3475  000ADC                     __ptext14:
  3476                           	opt stack 0
  3477  000ADC                     _I2C_Write_Cmd_Write_Data:
  3478                           	opt stack 23
  3479                           
  3480                           ;incstack = 0
  3481                           ;I2C_Write_Cmd_Write_Data@Device stored from wreg
  3482  000ADC  6E15               	movwf	I2C_Write_Cmd_Write_Data@Device,c
  3483                           
  3484                           ;I2C.c: 154: I2C_Start();
  3485  000ADE  ECC3  F005         	call	_I2C_Start	;wreg free
  3486                           
  3487                           ;I2C.c: 155: I2C_Write((Device << 1) | 0);
  3488  000AE2  5015               	movf	I2C_Write_Cmd_Write_Data@Device,w,c
  3489  000AE4  2415               	addwf	I2C_Write_Cmd_Write_Data@Device,w,c
  3490  000AE6  ECF4  F004         	call	_I2C_Write
  3491                           
  3492                           ;I2C.c: 156: I2C_Write(Cmd);
  3493  000AEA  5013               	movf	I2C_Write_Cmd_Write_Data@Cmd,w,c
  3494  000AEC  ECF4  F004         	call	_I2C_Write
  3495                           
  3496                           ;I2C.c: 157: I2C_Write(Data_Out);
  3497  000AF0  5014               	movf	I2C_Write_Cmd_Write_Data@Data_Out,w,c
  3498  000AF2  ECF4  F004         	call	_I2C_Write
  3499                           
  3500                           ;I2C.c: 158: I2C_Stop();
  3501  000AF6  ECBA  F005         	call	_I2C_Stop	;wreg free
  3502  000AFA  0012               	return		;funcret
  3503  000AFC                     __end_of_I2C_Write_Cmd_Write_Data:
  3504                           	opt stack 0
  3505                           tblptru	equ	0xFF8
  3506                           tblptrh	equ	0xFF7
  3507                           tblptrl	equ	0xFF6
  3508                           tablat	equ	0xFF5
  3509                           prodh	equ	0xFF4
  3510                           prodl	equ	0xFF3
  3511                           intcon	equ	0xFF2
  3512                           intcon2	equ	0xFF1
  3513                           postinc0	equ	0xFEE
  3514                           wreg	equ	0xFE8
  3515                           postdec1	equ	0xFE5
  3516                           fsr1l	equ	0xFE1
  3517                           postinc2	equ	0xFDE
  3518                           postdec2	equ	0xFDD
  3519                           fsr2h	equ	0xFDA
  3520                           fsr2l	equ	0xFD9
  3521                           status	equ	0xFD8
  3522                           
  3523 ;; *************** function _I2C_Write_Cmd_Only *****************
  3524 ;; Defined at:
  3525 ;;		line 144 in file "I2C.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  Device          1    wreg     unsigned char 
  3528 ;;  Cmd             1   18[COMRAM] unsigned char 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  Device          1   19[COMRAM] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;		None               void
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3540 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;Total ram usage:        2 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    5
  3547 ;; This function calls:
  3548 ;;		_I2C_Start
  3549 ;;		_I2C_Stop
  3550 ;;		_I2C_Write
  3551 ;; This function is called by:
  3552 ;;		_DS1621_Init
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text15
  3557  000B1A                     __ptext15:
  3558                           	opt stack 0
  3559  000B1A                     _I2C_Write_Cmd_Only:
  3560                           	opt stack 23
  3561                           
  3562                           ;incstack = 0
  3563                           ;I2C_Write_Cmd_Only@Device stored from wreg
  3564  000B1A  6E14               	movwf	I2C_Write_Cmd_Only@Device,c
  3565                           
  3566                           ;I2C.c: 146: I2C_Start();
  3567  000B1C  ECC3  F005         	call	_I2C_Start	;wreg free
  3568                           
  3569                           ;I2C.c: 147: I2C_Write((Device << 1) | 0);
  3570  000B20  5014               	movf	I2C_Write_Cmd_Only@Device,w,c
  3571  000B22  2414               	addwf	I2C_Write_Cmd_Only@Device,w,c
  3572  000B24  ECF4  F004         	call	_I2C_Write
  3573                           
  3574                           ;I2C.c: 148: I2C_Write(Cmd);
  3575  000B28  5013               	movf	I2C_Write_Cmd_Only@Cmd,w,c
  3576  000B2A  ECF4  F004         	call	_I2C_Write
  3577                           
  3578                           ;I2C.c: 149: I2C_Stop();
  3579  000B2E  ECBA  F005         	call	_I2C_Stop	;wreg free
  3580  000B32  0012               	return		;funcret
  3581  000B34                     __end_of_I2C_Write_Cmd_Only:
  3582                           	opt stack 0
  3583                           tblptru	equ	0xFF8
  3584                           tblptrh	equ	0xFF7
  3585                           tblptrl	equ	0xFF6
  3586                           tablat	equ	0xFF5
  3587                           prodh	equ	0xFF4
  3588                           prodl	equ	0xFF3
  3589                           intcon	equ	0xFF2
  3590                           intcon2	equ	0xFF1
  3591                           postinc0	equ	0xFEE
  3592                           wreg	equ	0xFE8
  3593                           postdec1	equ	0xFE5
  3594                           fsr1l	equ	0xFE1
  3595                           postinc2	equ	0xFDE
  3596                           postdec2	equ	0xFDD
  3597                           fsr2h	equ	0xFDA
  3598                           fsr2l	equ	0xFD9
  3599                           status	equ	0xFD8
  3600                           
  3601 ;; *************** function _DS3231_Read_Time *****************
  3602 ;; Defined at:
  3603 ;;		line 45 in file "I2C_Support.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;		None
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  Device          1   20[COMRAM] unsigned char 
  3608 ;;  Address         1   19[COMRAM] unsigned char 
  3609 ;;  Data_Ret        1    0        unsigned char 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;		None               void
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;Total ram usage:        2 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    6
  3626 ;; This function calls:
  3627 ;;		_I2C_ReStart
  3628 ;;		_I2C_Read
  3629 ;;		_I2C_Start
  3630 ;;		_I2C_Stop
  3631 ;;		_I2C_Write
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text16
  3638  000800                     __ptext16:
  3639                           	opt stack 0
  3640  000800                     _DS3231_Read_Time:
  3641                           	opt stack 24
  3642                           
  3643                           ;I2C_Support.c: 47: char Device = 0x68;
  3644                           
  3645                           ;incstack = 0
  3646  000800  0E68               	movlw	104
  3647  000802  6E15               	movwf	DS3231_Read_Time@Device,c
  3648                           
  3649                           ;I2C_Support.c: 48: char Address = 0x00;
  3650  000804  0E00               	movlw	0
  3651  000806  6E14               	movwf	DS3231_Read_Time@Address,c
  3652                           
  3653                           ;I2C_Support.c: 49: char Data_Ret;
  3654                           ;I2C_Support.c: 50: I2C_Start();
  3655  000808  ECC3  F005         	call	_I2C_Start	;wreg free
  3656                           
  3657                           ;I2C_Support.c: 51: I2C_Write((Device << 1) | 0);
  3658  00080C  5015               	movf	DS3231_Read_Time@Device,w,c
  3659  00080E  2415               	addwf	DS3231_Read_Time@Device,w,c
  3660  000810  ECF4  F004         	call	_I2C_Write
  3661                           
  3662                           ;I2C_Support.c: 52: I2C_Write(Address);
  3663  000814  5014               	movf	DS3231_Read_Time@Address,w,c
  3664  000816  ECF4  F004         	call	_I2C_Write
  3665                           
  3666                           ;I2C_Support.c: 53: I2C_ReStart();
  3667  00081A  EC9A  F005         	call	_I2C_ReStart	;wreg free
  3668                           
  3669                           ;I2C_Support.c: 54: I2C_Write((Device << 1) | 1);
  3670  00081E  80D8               	bsf	status,0,c
  3671  000820  3415               	rlcf	DS3231_Read_Time@Device,w,c
  3672  000822  ECF4  F004         	call	_I2C_Write
  3673                           
  3674                           ;I2C_Support.c: 56: second = I2C_Read(1);
  3675  000826  0E01               	movlw	1
  3676  000828  ECB0  F004         	call	_I2C_Read
  3677  00082C  6E53               	movwf	_second,c
  3678                           
  3679                           ;I2C_Support.c: 57: minute = I2C_Read(1);
  3680  00082E  0E01               	movlw	1
  3681  000830  ECB0  F004         	call	_I2C_Read
  3682  000834  6E4F               	movwf	_minute,c
  3683                           
  3684                           ;I2C_Support.c: 58: hour = I2C_Read(1);
  3685  000836  0E01               	movlw	1
  3686  000838  ECB0  F004         	call	_I2C_Read
  3687  00083C  6E4D               	movwf	_hour,c
  3688                           
  3689                           ;I2C_Support.c: 59: dow = I2C_Read(1);
  3690  00083E  0E01               	movlw	1
  3691  000840  ECB0  F004         	call	_I2C_Read
  3692  000844  6E4B               	movwf	_dow,c
  3693                           
  3694                           ;I2C_Support.c: 60: day = I2C_Read(1);
  3695  000846  0E01               	movlw	1
  3696  000848  ECB0  F004         	call	_I2C_Read
  3697  00084C  6E4A               	movwf	_day,c
  3698                           
  3699                           ;I2C_Support.c: 61: month = I2C_Read(1);
  3700  00084E  0E01               	movlw	1
  3701  000850  ECB0  F004         	call	_I2C_Read
  3702  000854  6E50               	movwf	_month,c
  3703                           
  3704                           ;I2C_Support.c: 62: year = I2C_Read(0);
  3705  000856  0E00               	movlw	0
  3706  000858  ECB0  F004         	call	_I2C_Read
  3707  00085C  6E5F               	movwf	_year,c
  3708                           
  3709                           ;I2C_Support.c: 64: I2C_Stop();
  3710  00085E  ECBA  F005         	call	_I2C_Stop	;wreg free
  3711  000862  0012               	return		;funcret
  3712  000864                     __end_of_DS3231_Read_Time:
  3713                           	opt stack 0
  3714                           tblptru	equ	0xFF8
  3715                           tblptrh	equ	0xFF7
  3716                           tblptrl	equ	0xFF6
  3717                           tablat	equ	0xFF5
  3718                           prodh	equ	0xFF4
  3719                           prodl	equ	0xFF3
  3720                           intcon	equ	0xFF2
  3721                           intcon2	equ	0xFF1
  3722                           postinc0	equ	0xFEE
  3723                           wreg	equ	0xFE8
  3724                           postdec1	equ	0xFE5
  3725                           fsr1l	equ	0xFE1
  3726                           postinc2	equ	0xFDE
  3727                           postdec2	equ	0xFDD
  3728                           fsr2h	equ	0xFDA
  3729                           fsr2l	equ	0xFD9
  3730                           status	equ	0xFD8
  3731                           
  3732 ;; *************** function _DS1621_Read_Temp *****************
  3733 ;; Defined at:
  3734 ;;		line 29 in file "I2C_Support.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;		None
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  Device          1   23[COMRAM] unsigned char 
  3739 ;;  Data_Ret        1   22[COMRAM] unsigned char 
  3740 ;;  Cmd             1   21[COMRAM] unsigned char 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  2   19[COMRAM] int 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3754 ;;Total ram usage:        5 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    6
  3757 ;; This function calls:
  3758 ;;		_I2C_ReStart
  3759 ;;		_I2C_Read
  3760 ;;		_I2C_Start
  3761 ;;		_I2C_Stop
  3762 ;;		_I2C_Write
  3763 ;; This function is called by:
  3764 ;;		_main
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text17
  3769  000A26                     __ptext17:
  3770                           	opt stack 0
  3771  000A26                     _DS1621_Read_Temp:
  3772                           	opt stack 24
  3773                           
  3774                           ;I2C_Support.c: 31: char Device = 0x48;
  3775                           
  3776                           ;incstack = 0
  3777  000A26  0E48               	movlw	72
  3778  000A28  6E18               	movwf	DS1621_Read_Temp@Device,c
  3779                           
  3780                           ;I2C_Support.c: 32: char Cmd = 0xAA;
  3781  000A2A  0EAA               	movlw	170
  3782  000A2C  6E16               	movwf	DS1621_Read_Temp@Cmd,c
  3783                           
  3784                           ;I2C_Support.c: 34: char Data_Ret;
  3785                           ;I2C_Support.c: 35: I2C_Start();
  3786  000A2E  ECC3  F005         	call	_I2C_Start	;wreg free
  3787                           
  3788                           ;I2C_Support.c: 36: I2C_Write((Device << 1) | 0);
  3789  000A32  5018               	movf	DS1621_Read_Temp@Device,w,c
  3790  000A34  2418               	addwf	DS1621_Read_Temp@Device,w,c
  3791  000A36  ECF4  F004         	call	_I2C_Write
  3792                           
  3793                           ;I2C_Support.c: 37: I2C_Write(Cmd);
  3794  000A3A  5016               	movf	DS1621_Read_Temp@Cmd,w,c
  3795  000A3C  ECF4  F004         	call	_I2C_Write
  3796                           
  3797                           ;I2C_Support.c: 38: I2C_ReStart();
  3798  000A40  EC9A  F005         	call	_I2C_ReStart	;wreg free
  3799                           
  3800                           ;I2C_Support.c: 39: I2C_Write((Device << 1) | 1);
  3801  000A44  80D8               	bsf	status,0,c
  3802  000A46  3418               	rlcf	DS1621_Read_Temp@Device,w,c
  3803  000A48  ECF4  F004         	call	_I2C_Write
  3804                           
  3805                           ;I2C_Support.c: 40: Data_Ret = I2C_Read(0);
  3806  000A4C  0E00               	movlw	0
  3807  000A4E  ECB0  F004         	call	_I2C_Read
  3808  000A52  6E17               	movwf	DS1621_Read_Temp@Data_Ret,c
  3809                           
  3810                           ;I2C_Support.c: 41: I2C_Stop();
  3811  000A54  ECBA  F005         	call	_I2C_Stop	;wreg free
  3812                           
  3813                           ;I2C_Support.c: 42: return Data_Ret;
  3814  000A58  C017  F014         	movff	DS1621_Read_Temp@Data_Ret,?_DS1621_Read_Temp
  3815  000A5C  6A15               	clrf	?_DS1621_Read_Temp+1,c
  3816  000A5E  D000               	goto	l171
  3817  000A60                     l171:
  3818  000A60  0012               	return		;funcret
  3819  000A62                     __end_of_DS1621_Read_Temp:
  3820                           	opt stack 0
  3821                           tblptru	equ	0xFF8
  3822                           tblptrh	equ	0xFF7
  3823                           tblptrl	equ	0xFF6
  3824                           tablat	equ	0xFF5
  3825                           prodh	equ	0xFF4
  3826                           prodl	equ	0xFF3
  3827                           intcon	equ	0xFF2
  3828                           intcon2	equ	0xFF1
  3829                           postinc0	equ	0xFEE
  3830                           wreg	equ	0xFE8
  3831                           postdec1	equ	0xFE5
  3832                           fsr1l	equ	0xFE1
  3833                           postinc2	equ	0xFDE
  3834                           postdec2	equ	0xFDD
  3835                           fsr2h	equ	0xFDA
  3836                           fsr2l	equ	0xFD9
  3837                           status	equ	0xFD8
  3838                           
  3839 ;; *************** function _I2C_Write *****************
  3840 ;; Defined at:
  3841 ;;		line 41 in file "I2C.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  outByte         1    wreg     unsigned char 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;  outByte         1   16[COMRAM] unsigned char 
  3846 ;;  n               1   17[COMRAM] unsigned char 
  3847 ;; Return value:  Size  Location     Type
  3848 ;;		None               void
  3849 ;; Registers used:
  3850 ;;		wreg, status,2, status,0, cstack
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;Total ram usage:        2 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:    4
  3863 ;; This function calls:
  3864 ;;		_i2cHighScl
  3865 ;;		_i2cHighSda
  3866 ;;		_i2cLowScl
  3867 ;;		_i2cLowSda
  3868 ;; This function is called by:
  3869 ;;		_I2C_Write_Cmd_Only
  3870 ;;		_I2C_Write_Cmd_Write_Data
  3871 ;;		_DS1621_Read_Temp
  3872 ;;		_DS3231_Read_Time
  3873 ;;		_I2C_Write_Address_Read_One_Byte
  3874 ;;		_I2C_Write_Address_Write_One_Byte
  3875 ;;		_I2C_Write_Cmd_Read_One_Byte
  3876 ;;		_DS3231_Setup_Time
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text18
  3881  0009E8                     __ptext18:
  3882                           	opt stack 0
  3883  0009E8                     _I2C_Write:
  3884                           	opt stack 23
  3885                           
  3886                           ;incstack = 0
  3887                           ;I2C_Write@outByte stored from wreg
  3888  0009E8  6E11               	movwf	I2C_Write@outByte,c
  3889                           
  3890                           ;I2C.c: 43: unsigned char n;
  3891                           ;I2C.c: 44: for(n=0; n<8; n++)
  3892  0009EA  0E00               	movlw	0
  3893  0009EC  6E12               	movwf	I2C_Write@n,c
  3894  0009EE                     l1215:
  3895  0009EE  0E07               	movlw	7
  3896  0009F0  6412               	cpfsgt	I2C_Write@n,c
  3897  0009F2  D001               	goto	l119
  3898  0009F4  D011               	goto	l1233
  3899  0009F6                     l119:
  3900                           
  3901                           ;I2C.c: 45: {
  3902                           ;I2C.c: 46: if(outByte&0x80) i2cHighSda();
  3903  0009F6  AE11               	btfss	I2C_Write@outByte,7,c
  3904  0009F8  D003               	goto	l1221
  3905  0009FA  EC01  F006         	call	_i2cHighSda	;wreg free
  3906  0009FE  D003               	goto	l1223
  3907  000A00                     l1221:
  3908                           
  3909                           ;I2C.c: 47: else i2cLowSda();
  3910  000A00  ECF8  F005         	call	_i2cLowSda	;wreg free
  3911  000A04  D000               	goto	l1223
  3912  000A06                     l1223:
  3913                           
  3914                           ;I2C.c: 48: i2cHighScl();
  3915  000A06  ECE2  F005         	call	_i2cHighScl	;wreg free
  3916                           
  3917                           ;I2C.c: 49: i2cLowScl();
  3918  000A0A  ECFD  F005         	call	_i2cLowScl	;wreg free
  3919                           
  3920                           ;I2C.c: 50: outByte = outByte << 1;
  3921  000A0E  5011               	movf	I2C_Write@outByte,w,c
  3922  000A10  2411               	addwf	I2C_Write@outByte,w,c
  3923  000A12  6E11               	movwf	I2C_Write@outByte,c
  3924  000A14  2A12               	incf	I2C_Write@n,f,c
  3925  000A16  D7EB               	goto	l1215
  3926  000A18                     l1233:
  3927                           
  3928                           ;I2C.c: 51: }
  3929                           ;I2C.c: 52: i2cHighSda();
  3930  000A18  EC01  F006         	call	_i2cHighSda	;wreg free
  3931                           
  3932                           ;I2C.c: 53: i2cHighScl();
  3933  000A1C  ECE2  F005         	call	_i2cHighScl	;wreg free
  3934                           
  3935                           ;I2C.c: 54: i2cLowScl();
  3936  000A20  ECFD  F005         	call	_i2cLowScl	;wreg free
  3937  000A24  0012               	return		;funcret
  3938  000A26                     __end_of_I2C_Write:
  3939                           	opt stack 0
  3940                           tblptru	equ	0xFF8
  3941                           tblptrh	equ	0xFF7
  3942                           tblptrl	equ	0xFF6
  3943                           tablat	equ	0xFF5
  3944                           prodh	equ	0xFF4
  3945                           prodl	equ	0xFF3
  3946                           intcon	equ	0xFF2
  3947                           intcon2	equ	0xFF1
  3948                           postinc0	equ	0xFEE
  3949                           wreg	equ	0xFE8
  3950                           postdec1	equ	0xFE5
  3951                           fsr1l	equ	0xFE1
  3952                           postinc2	equ	0xFDE
  3953                           postdec2	equ	0xFDD
  3954                           fsr2h	equ	0xFDA
  3955                           fsr2l	equ	0xFD9
  3956                           status	equ	0xFD8
  3957                           
  3958 ;; *************** function _I2C_Stop *****************
  3959 ;; Defined at:
  3960 ;;		line 88 in file "I2C.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;		None
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;		None
  3965 ;; Return value:  Size  Location     Type
  3966 ;;		None               void
  3967 ;; Registers used:
  3968 ;;		wreg, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;Total ram usage:        0 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    4
  3981 ;; This function calls:
  3982 ;;		_i2cHighScl
  3983 ;;		_i2cHighSda
  3984 ;;		_i2cLowScl
  3985 ;;		_i2cLowSda
  3986 ;; This function is called by:
  3987 ;;		_I2C_Write_Cmd_Only
  3988 ;;		_I2C_Write_Cmd_Write_Data
  3989 ;;		_DS1621_Read_Temp
  3990 ;;		_DS3231_Read_Time
  3991 ;;		_I2C_Write_Address_Read_One_Byte
  3992 ;;		_I2C_Write_Address_Write_One_Byte
  3993 ;;		_I2C_Write_Cmd_Read_One_Byte
  3994 ;;		_DS3231_Setup_Time
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text19
  3999  000B74                     __ptext19:
  4000                           	opt stack 0
  4001  000B74                     _I2C_Stop:
  4002                           	opt stack 23
  4003                           
  4004                           ;I2C.c: 90: i2cLowScl();
  4005                           
  4006                           ;incstack = 0
  4007  000B74  ECFD  F005         	call	_i2cLowScl	;wreg free
  4008                           
  4009                           ;I2C.c: 91: i2cLowSda();
  4010  000B78  ECF8  F005         	call	_i2cLowSda	;wreg free
  4011                           
  4012                           ;I2C.c: 92: i2cHighScl();
  4013  000B7C  ECE2  F005         	call	_i2cHighScl	;wreg free
  4014                           
  4015                           ;I2C.c: 93: i2cHighSda();
  4016  000B80  EC01  F006         	call	_i2cHighSda	;wreg free
  4017  000B84  0012               	return		;funcret
  4018  000B86                     __end_of_I2C_Stop:
  4019                           	opt stack 0
  4020                           tblptru	equ	0xFF8
  4021                           tblptrh	equ	0xFF7
  4022                           tblptrl	equ	0xFF6
  4023                           tablat	equ	0xFF5
  4024                           prodh	equ	0xFF4
  4025                           prodl	equ	0xFF3
  4026                           intcon	equ	0xFF2
  4027                           intcon2	equ	0xFF1
  4028                           postinc0	equ	0xFEE
  4029                           wreg	equ	0xFE8
  4030                           postdec1	equ	0xFE5
  4031                           fsr1l	equ	0xFE1
  4032                           postinc2	equ	0xFDE
  4033                           postdec2	equ	0xFDD
  4034                           fsr2h	equ	0xFDA
  4035                           fsr2l	equ	0xFD9
  4036                           status	equ	0xFD8
  4037                           
  4038 ;; *************** function _I2C_Start *****************
  4039 ;; Defined at:
  4040 ;;		line 71 in file "I2C.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;		None
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;		None
  4045 ;; Return value:  Size  Location     Type
  4046 ;;		None               void
  4047 ;; Registers used:
  4048 ;;		wreg, cstack
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;Total ram usage:        0 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; Hardware stack levels required when called:    4
  4061 ;; This function calls:
  4062 ;;		_i2cHighScl
  4063 ;;		_i2cHighSda
  4064 ;;		_i2cLowScl
  4065 ;;		_i2cLowSda
  4066 ;; This function is called by:
  4067 ;;		_I2C_Write_Cmd_Only
  4068 ;;		_I2C_Write_Cmd_Write_Data
  4069 ;;		_DS1621_Read_Temp
  4070 ;;		_DS3231_Read_Time
  4071 ;;		_I2C_Write_Address_Read_One_Byte
  4072 ;;		_I2C_Write_Address_Write_One_Byte
  4073 ;;		_I2C_Write_Cmd_Read_One_Byte
  4074 ;;		_DS3231_Setup_Time
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           	psect	text20
  4079  000B86                     __ptext20:
  4080                           	opt stack 0
  4081  000B86                     _I2C_Start:
  4082                           	opt stack 23
  4083                           
  4084                           ;I2C.c: 73: i2cHighSda();
  4085                           
  4086                           ;incstack = 0
  4087  000B86  EC01  F006         	call	_i2cHighSda	;wreg free
  4088                           
  4089                           ;I2C.c: 74: i2cHighScl();
  4090  000B8A  ECE2  F005         	call	_i2cHighScl	;wreg free
  4091                           
  4092                           ;I2C.c: 75: i2cLowSda();
  4093  000B8E  ECF8  F005         	call	_i2cLowSda	;wreg free
  4094                           
  4095                           ;I2C.c: 76: i2cLowScl();
  4096  000B92  ECFD  F005         	call	_i2cLowScl	;wreg free
  4097  000B96  0012               	return		;funcret
  4098  000B98                     __end_of_I2C_Start:
  4099                           	opt stack 0
  4100                           tblptru	equ	0xFF8
  4101                           tblptrh	equ	0xFF7
  4102                           tblptrl	equ	0xFF6
  4103                           tablat	equ	0xFF5
  4104                           prodh	equ	0xFF4
  4105                           prodl	equ	0xFF3
  4106                           intcon	equ	0xFF2
  4107                           intcon2	equ	0xFF1
  4108                           postinc0	equ	0xFEE
  4109                           wreg	equ	0xFE8
  4110                           postdec1	equ	0xFE5
  4111                           fsr1l	equ	0xFE1
  4112                           postinc2	equ	0xFDE
  4113                           postdec2	equ	0xFDD
  4114                           fsr2h	equ	0xFDA
  4115                           fsr2l	equ	0xFD9
  4116                           status	equ	0xFD8
  4117                           
  4118 ;; *************** function _I2C_Read *****************
  4119 ;; Defined at:
  4120 ;;		line 20 in file "I2C.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  ack             1    wreg     unsigned char 
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;  ack             1   16[COMRAM] unsigned char 
  4125 ;;  inByte          1   18[COMRAM] unsigned char 
  4126 ;;  n               1   17[COMRAM] unsigned char 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      unsigned char 
  4129 ;; Registers used:
  4130 ;;		wreg, status,2, status,0, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;Total ram usage:        3 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    5
  4143 ;; This function calls:
  4144 ;;		_i2cAck
  4145 ;;		_i2cHighScl
  4146 ;;		_i2cHighSda
  4147 ;;		_i2cLowScl
  4148 ;;		_i2cNack
  4149 ;; This function is called by:
  4150 ;;		_DS1621_Read_Temp
  4151 ;;		_DS3231_Read_Time
  4152 ;;		_I2C_Write_Address_Read_One_Byte
  4153 ;;		_I2C_Write_Cmd_Read_One_Byte
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text21
  4158  000960                     __ptext21:
  4159                           	opt stack 0
  4160  000960                     _I2C_Read:
  4161                           	opt stack 24
  4162                           
  4163                           ;incstack = 0
  4164                           ;I2C_Read@ack stored from wreg
  4165  000960  6E11               	movwf	I2C_Read@ack,c
  4166                           
  4167                           ;I2C.c: 22: unsigned char inByte, n;
  4168                           ;I2C.c: 23: i2cHighSda();
  4169  000962  EC01  F006         	call	_i2cHighSda	;wreg free
  4170                           
  4171                           ;I2C.c: 24: for (n=0; n<8; n++)
  4172  000966  0E00               	movlw	0
  4173  000968  6E12               	movwf	I2C_Read@n,c
  4174  00096A                     l1355:
  4175  00096A  0E07               	movlw	7
  4176  00096C  6412               	cpfsgt	I2C_Read@n,c
  4177  00096E  D001               	goto	l1359
  4178  000970  D00F               	goto	l1373
  4179  000972                     l1359:
  4180                           
  4181                           ;I2C.c: 25: {
  4182                           ;I2C.c: 26: i2cHighScl();
  4183  000972  ECE2  F005         	call	_i2cHighScl	;wreg free
  4184                           
  4185                           ;I2C.c: 28: if (PORTCbits.RC1)
  4186  000976  A282               	btfss	3970,1,c	;volatile
  4187  000978  D003               	goto	l1365
  4188                           
  4189                           ;I2C.c: 29: inByte = (inByte << 1) | 0x01;
  4190  00097A  80D8               	bsf	status,0,c
  4191  00097C  3613               	rlcf	I2C_Read@inByte,f,c
  4192  00097E  D004               	goto	l1367
  4193  000980                     l1365:
  4194                           
  4195                           ;I2C.c: 30: else
  4196                           ;I2C.c: 31: inByte = inByte << 1;
  4197  000980  5013               	movf	I2C_Read@inByte,w,c
  4198  000982  2413               	addwf	I2C_Read@inByte,w,c
  4199  000984  6E13               	movwf	I2C_Read@inByte,c
  4200  000986  D000               	goto	l1367
  4201  000988                     l1367:
  4202                           
  4203                           ;I2C.c: 32: i2cLowScl();
  4204  000988  ECFD  F005         	call	_i2cLowScl	;wreg free
  4205  00098C  2A12               	incf	I2C_Read@n,f,c
  4206  00098E  D7ED               	goto	l1355
  4207  000990                     l1373:
  4208                           
  4209                           ;I2C.c: 33: }
  4210                           ;I2C.c: 34: if (ack) i2cAck();
  4211  000990  5011               	movf	I2C_Read@ack,w,c
  4212  000992  B4D8               	btfsc	status,2,c
  4213  000994  D003               	goto	l1377
  4214  000996  ECCC  F005         	call	_i2cAck	;wreg free
  4215  00099A  D003               	goto	l1379
  4216  00099C                     l1377:
  4217                           
  4218                           ;I2C.c: 35: else i2cNack();
  4219  00099C  ECF3  F005         	call	_i2cNack	;wreg free
  4220  0009A0  D000               	goto	l1379
  4221  0009A2                     l1379:
  4222                           
  4223                           ;I2C.c: 38: return(inByte);
  4224  0009A2  5013               	movf	I2C_Read@inByte,w,c
  4225  0009A4  D000               	goto	l116
  4226  0009A6                     l116:
  4227  0009A6  0012               	return		;funcret
  4228  0009A8                     __end_of_I2C_Read:
  4229                           	opt stack 0
  4230                           tblptru	equ	0xFF8
  4231                           tblptrh	equ	0xFF7
  4232                           tblptrl	equ	0xFF6
  4233                           tablat	equ	0xFF5
  4234                           prodh	equ	0xFF4
  4235                           prodl	equ	0xFF3
  4236                           intcon	equ	0xFF2
  4237                           intcon2	equ	0xFF1
  4238                           postinc0	equ	0xFEE
  4239                           wreg	equ	0xFE8
  4240                           postdec1	equ	0xFE5
  4241                           fsr1l	equ	0xFE1
  4242                           postinc2	equ	0xFDE
  4243                           postdec2	equ	0xFDD
  4244                           fsr2h	equ	0xFDA
  4245                           fsr2l	equ	0xFD9
  4246                           status	equ	0xFD8
  4247                           
  4248 ;; *************** function _i2cNack *****************
  4249 ;; Defined at:
  4250 ;;		line 57 in file "I2C.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;		None
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;		None
  4255 ;; Return value:  Size  Location     Type
  4256 ;;		None               void
  4257 ;; Registers used:
  4258 ;;		wreg, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;Total ram usage:        0 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:    4
  4271 ;; This function calls:
  4272 ;;		_i2cHighScl
  4273 ;;		_i2cLowScl
  4274 ;; This function is called by:
  4275 ;;		_I2C_Read
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text22
  4280  000BE6                     __ptext22:
  4281                           	opt stack 0
  4282  000BE6                     _i2cNack:
  4283                           	opt stack 24
  4284                           
  4285                           ;I2C.c: 59: i2cHighScl();
  4286                           
  4287                           ;incstack = 0
  4288  000BE6  ECE2  F005         	call	_i2cHighScl	;wreg free
  4289                           
  4290                           ;I2C.c: 60: i2cLowScl();
  4291  000BEA  ECFD  F005         	call	_i2cLowScl	;wreg free
  4292  000BEE  0012               	return		;funcret
  4293  000BF0                     __end_of_i2cNack:
  4294                           	opt stack 0
  4295                           tblptru	equ	0xFF8
  4296                           tblptrh	equ	0xFF7
  4297                           tblptrl	equ	0xFF6
  4298                           tablat	equ	0xFF5
  4299                           prodh	equ	0xFF4
  4300                           prodl	equ	0xFF3
  4301                           intcon	equ	0xFF2
  4302                           intcon2	equ	0xFF1
  4303                           postinc0	equ	0xFEE
  4304                           wreg	equ	0xFE8
  4305                           postdec1	equ	0xFE5
  4306                           fsr1l	equ	0xFE1
  4307                           postinc2	equ	0xFDE
  4308                           postdec2	equ	0xFDD
  4309                           fsr2h	equ	0xFDA
  4310                           fsr2l	equ	0xFD9
  4311                           status	equ	0xFD8
  4312                           
  4313 ;; *************** function _i2cAck *****************
  4314 ;; Defined at:
  4315 ;;		line 63 in file "I2C.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;		None
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;		None
  4320 ;; Return value:  Size  Location     Type
  4321 ;;		None               void
  4322 ;; Registers used:
  4323 ;;		wreg, cstack
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;Total ram usage:        0 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:    4
  4336 ;; This function calls:
  4337 ;;		_i2cHighScl
  4338 ;;		_i2cHighSda
  4339 ;;		_i2cLowScl
  4340 ;;		_i2cLowSda
  4341 ;; This function is called by:
  4342 ;;		_I2C_Read
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text23
  4347  000B98                     __ptext23:
  4348                           	opt stack 0
  4349  000B98                     _i2cAck:
  4350                           	opt stack 24
  4351                           
  4352                           ;I2C.c: 65: i2cLowSda();
  4353                           
  4354                           ;incstack = 0
  4355  000B98  ECF8  F005         	call	_i2cLowSda	;wreg free
  4356                           
  4357                           ;I2C.c: 66: i2cHighScl();
  4358  000B9C  ECE2  F005         	call	_i2cHighScl	;wreg free
  4359                           
  4360                           ;I2C.c: 67: i2cLowScl();
  4361  000BA0  ECFD  F005         	call	_i2cLowScl	;wreg free
  4362                           
  4363                           ;I2C.c: 68: i2cHighSda();
  4364  000BA4  EC01  F006         	call	_i2cHighSda	;wreg free
  4365  000BA8  0012               	return		;funcret
  4366  000BAA                     __end_of_i2cAck:
  4367                           	opt stack 0
  4368                           tblptru	equ	0xFF8
  4369                           tblptrh	equ	0xFF7
  4370                           tblptrl	equ	0xFF6
  4371                           tablat	equ	0xFF5
  4372                           prodh	equ	0xFF4
  4373                           prodl	equ	0xFF3
  4374                           intcon	equ	0xFF2
  4375                           intcon2	equ	0xFF1
  4376                           postinc0	equ	0xFEE
  4377                           wreg	equ	0xFE8
  4378                           postdec1	equ	0xFE5
  4379                           fsr1l	equ	0xFE1
  4380                           postinc2	equ	0xFDE
  4381                           postdec2	equ	0xFDD
  4382                           fsr2h	equ	0xFDA
  4383                           fsr2l	equ	0xFD9
  4384                           status	equ	0xFD8
  4385                           
  4386 ;; *************** function _I2C_ReStart *****************
  4387 ;; Defined at:
  4388 ;;		line 79 in file "I2C.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;		None
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;		None
  4393 ;; Return value:  Size  Location     Type
  4394 ;;		None               void
  4395 ;; Registers used:
  4396 ;;		wreg, cstack
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;Total ram usage:        0 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    4
  4409 ;; This function calls:
  4410 ;;		_i2cHighScl
  4411 ;;		_i2cHighSda
  4412 ;;		_i2cLowScl
  4413 ;;		_i2cLowSda
  4414 ;; This function is called by:
  4415 ;;		_DS1621_Read_Temp
  4416 ;;		_DS3231_Read_Time
  4417 ;;		_I2C_Write_Address_Read_One_Byte
  4418 ;;		_I2C_Write_Cmd_Read_One_Byte
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text24
  4423  000B34                     __ptext24:
  4424                           	opt stack 0
  4425  000B34                     _I2C_ReStart:
  4426                           	opt stack 25
  4427                           
  4428                           ;I2C.c: 81: i2cLowScl();
  4429                           
  4430                           ;incstack = 0
  4431  000B34  ECFD  F005         	call	_i2cLowScl	;wreg free
  4432                           
  4433                           ;I2C.c: 82: i2cHighSda();
  4434  000B38  EC01  F006         	call	_i2cHighSda	;wreg free
  4435                           
  4436                           ;I2C.c: 83: i2cHighScl();
  4437  000B3C  ECE2  F005         	call	_i2cHighScl	;wreg free
  4438                           
  4439                           ;I2C.c: 84: i2cLowSda();
  4440  000B40  ECF8  F005         	call	_i2cLowSda	;wreg free
  4441                           
  4442                           ;I2C.c: 85: i2cLowScl();
  4443  000B44  ECFD  F005         	call	_i2cLowScl	;wreg free
  4444  000B48  0012               	return		;funcret
  4445  000B4A                     __end_of_I2C_ReStart:
  4446                           	opt stack 0
  4447                           tblptru	equ	0xFF8
  4448                           tblptrh	equ	0xFF7
  4449                           tblptrl	equ	0xFF6
  4450                           tablat	equ	0xFF5
  4451                           prodh	equ	0xFF4
  4452                           prodl	equ	0xFF3
  4453                           intcon	equ	0xFF2
  4454                           intcon2	equ	0xFF1
  4455                           postinc0	equ	0xFEE
  4456                           wreg	equ	0xFE8
  4457                           postdec1	equ	0xFE5
  4458                           fsr1l	equ	0xFE1
  4459                           postinc2	equ	0xFDE
  4460                           postdec2	equ	0xFDD
  4461                           fsr2h	equ	0xFDA
  4462                           fsr2l	equ	0xFD9
  4463                           status	equ	0xFD8
  4464                           
  4465 ;; *************** function _i2cLowSda *****************
  4466 ;; Defined at:
  4467 ;;		line 102 in file "I2C.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;		None
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;		None
  4472 ;; Return value:  Size  Location     Type
  4473 ;;		None               void
  4474 ;; Registers used:
  4475 ;;		None
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;Total ram usage:        0 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    3
  4488 ;; This function calls:
  4489 ;;		Nothing
  4490 ;; This function is called by:
  4491 ;;		_I2C_Write
  4492 ;;		_i2cAck
  4493 ;;		_I2C_Start
  4494 ;;		_I2C_ReStart
  4495 ;;		_I2C_Stop
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text25
  4500  000BF0                     __ptext25:
  4501                           	opt stack 0
  4502  000BF0                     _i2cLowSda:
  4503                           	opt stack 23
  4504                           
  4505                           ;I2C.c: 104: PORTCbits.RC1 = 0;
  4506                           
  4507                           ;incstack = 0
  4508  000BF0  9282               	bcf	3970,1,c	;volatile
  4509                           
  4510                           ;I2C.c: 105: TRISCbits.RC1 = 0;
  4511  000BF2  9294               	bcf	3988,1,c	;volatile
  4512                           
  4513                           ;I2C.c: 106: _delay((unsigned long)((2)*(8000000/4000000.0)));
  4514  000BF4  D000               	nop2		;2 cycle nop
  4515  000BF6  D000               	nop2		;2 cycle nop
  4516  000BF8  0012               	return		;funcret
  4517  000BFA                     __end_of_i2cLowSda:
  4518                           	opt stack 0
  4519                           tblptru	equ	0xFF8
  4520                           tblptrh	equ	0xFF7
  4521                           tblptrl	equ	0xFF6
  4522                           tablat	equ	0xFF5
  4523                           prodh	equ	0xFF4
  4524                           prodl	equ	0xFF3
  4525                           intcon	equ	0xFF2
  4526                           intcon2	equ	0xFF1
  4527                           postinc0	equ	0xFEE
  4528                           wreg	equ	0xFE8
  4529                           postdec1	equ	0xFE5
  4530                           fsr1l	equ	0xFE1
  4531                           postinc2	equ	0xFDE
  4532                           postdec2	equ	0xFDD
  4533                           fsr2h	equ	0xFDA
  4534                           fsr2l	equ	0xFD9
  4535                           status	equ	0xFD8
  4536                           
  4537 ;; *************** function _i2cLowScl *****************
  4538 ;; Defined at:
  4539 ;;		line 115 in file "I2C.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;		None               void
  4546 ;; Registers used:
  4547 ;;		None
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4557 ;;Total ram usage:        0 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; Hardware stack levels required when called:    3
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_I2C_Read
  4564 ;;		_I2C_Write
  4565 ;;		_i2cNack
  4566 ;;		_i2cAck
  4567 ;;		_I2C_Start
  4568 ;;		_I2C_ReStart
  4569 ;;		_I2C_Stop
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text26
  4574  000BFA                     __ptext26:
  4575                           	opt stack 0
  4576  000BFA                     _i2cLowScl:
  4577                           	opt stack 23
  4578                           
  4579                           ;I2C.c: 117: PORTCbits.RC2 = 0;
  4580                           
  4581                           ;incstack = 0
  4582  000BFA  9482               	bcf	3970,2,c	;volatile
  4583                           
  4584                           ;I2C.c: 118: TRISCbits.RC2 = 0;
  4585  000BFC  9494               	bcf	3988,2,c	;volatile
  4586                           
  4587                           ;I2C.c: 119: _delay((unsigned long)((1)*(8000000/4000000.0)));
  4588  000BFE  D000               	nop2		;2 cycle nop
  4589  000C00  0012               	return		;funcret
  4590  000C02                     __end_of_i2cLowScl:
  4591                           	opt stack 0
  4592                           tblptru	equ	0xFF8
  4593                           tblptrh	equ	0xFF7
  4594                           tblptrl	equ	0xFF6
  4595                           tablat	equ	0xFF5
  4596                           prodh	equ	0xFF4
  4597                           prodl	equ	0xFF3
  4598                           intcon	equ	0xFF2
  4599                           intcon2	equ	0xFF1
  4600                           postinc0	equ	0xFEE
  4601                           wreg	equ	0xFE8
  4602                           postdec1	equ	0xFE5
  4603                           fsr1l	equ	0xFE1
  4604                           postinc2	equ	0xFDE
  4605                           postdec2	equ	0xFDD
  4606                           fsr2h	equ	0xFDA
  4607                           fsr2l	equ	0xFD9
  4608                           status	equ	0xFD8
  4609                           
  4610 ;; *************** function _i2cHighSda *****************
  4611 ;; Defined at:
  4612 ;;		line 96 in file "I2C.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;		None               void
  4619 ;; Registers used:
  4620 ;;		None
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4630 ;;Total ram usage:        0 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    3
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_I2C_Init
  4637 ;;		_I2C_Read
  4638 ;;		_I2C_Write
  4639 ;;		_i2cAck
  4640 ;;		_I2C_Start
  4641 ;;		_I2C_ReStart
  4642 ;;		_I2C_Stop
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text27
  4647  000C02                     __ptext27:
  4648                           	opt stack 0
  4649  000C02                     _i2cHighSda:
  4650                           	opt stack 25
  4651                           
  4652                           ;I2C.c: 98: TRISCbits.RC1 = 1;
  4653                           
  4654                           ;incstack = 0
  4655  000C02  8294               	bsf	3988,1,c	;volatile
  4656                           
  4657                           ;I2C.c: 99: _delay((unsigned long)((2)*(8000000/4000000.0)));
  4658  000C04  D000               	nop2		;2 cycle nop
  4659  000C06  D000               	nop2		;2 cycle nop
  4660  000C08  0012               	return		;funcret
  4661  000C0A                     __end_of_i2cHighSda:
  4662                           	opt stack 0
  4663                           tblptru	equ	0xFF8
  4664                           tblptrh	equ	0xFF7
  4665                           tblptrl	equ	0xFF6
  4666                           tablat	equ	0xFF5
  4667                           prodh	equ	0xFF4
  4668                           prodl	equ	0xFF3
  4669                           intcon	equ	0xFF2
  4670                           intcon2	equ	0xFF1
  4671                           postinc0	equ	0xFEE
  4672                           wreg	equ	0xFE8
  4673                           postdec1	equ	0xFE5
  4674                           fsr1l	equ	0xFE1
  4675                           postinc2	equ	0xFDE
  4676                           postdec2	equ	0xFDD
  4677                           fsr2h	equ	0xFDA
  4678                           fsr2l	equ	0xFD9
  4679                           status	equ	0xFD8
  4680                           
  4681 ;; *************** function _i2cHighScl *****************
  4682 ;; Defined at:
  4683 ;;		line 109 in file "I2C.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;		None
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;		None               void
  4690 ;; Registers used:
  4691 ;;		wreg
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;Total ram usage:        0 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:    3
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_I2C_Init
  4708 ;;		_I2C_Read
  4709 ;;		_I2C_Write
  4710 ;;		_i2cNack
  4711 ;;		_i2cAck
  4712 ;;		_I2C_Start
  4713 ;;		_I2C_ReStart
  4714 ;;		_I2C_Stop
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           	psect	text28
  4719  000BC4                     __ptext28:
  4720                           	opt stack 0
  4721  000BC4                     _i2cHighScl:
  4722                           	opt stack 25
  4723                           
  4724                           ;I2C.c: 111: TRISCbits.RC2 = 1;
  4725                           
  4726                           ;incstack = 0
  4727  000BC4  8494               	bsf	3988,2,c	;volatile
  4728                           
  4729                           ;I2C.c: 112: _delay((unsigned long)((10)*(8000000/4000000.0)));
  4730  000BC6  0E06               	movlw	6
  4731  000BC8                     u2537:
  4732  000BC8  2EE8               	decfsz	wreg,f,c
  4733  000BCA  D7FE               	goto	u2537
  4734  000BCC  D000               	nop2		;nop
  4735  000BCE  0012               	return		;funcret
  4736  000BD0                     __end_of_i2cHighScl:
  4737                           	opt stack 0
  4738                           tblptru	equ	0xFF8
  4739                           tblptrh	equ	0xFF7
  4740                           tblptrl	equ	0xFF6
  4741                           tablat	equ	0xFF5
  4742                           prodh	equ	0xFF4
  4743                           prodl	equ	0xFF3
  4744                           intcon	equ	0xFF2
  4745                           intcon2	equ	0xFF1
  4746                           postinc0	equ	0xFEE
  4747                           wreg	equ	0xFE8
  4748                           postdec1	equ	0xFE5
  4749                           fsr1l	equ	0xFE1
  4750                           postinc2	equ	0xFDE
  4751                           postdec2	equ	0xFDD
  4752                           fsr2h	equ	0xFDA
  4753                           fsr2l	equ	0xFD9
  4754                           status	equ	0xFD8
  4755                           
  4756 ;; *************** function _chkisr *****************
  4757 ;; Defined at:
  4758 ;;		line 28 in file "Interrupt.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;		None
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;		None
  4763 ;; Return value:  Size  Location     Type
  4764 ;;		None               void
  4765 ;; Registers used:
  4766 ;;		wreg, status,2, status,0, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;Total ram usage:       14 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:    2
  4779 ;; This function calls:
  4780 ;;		_INT0_isr
  4781 ;;		_TIMER1_isr
  4782 ;; This function is called by:
  4783 ;;		Interrupt level 2
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	intcode
  4788  000008                     __pintcode:
  4789                           	opt stack 0
  4790  000008                     _chkisr:
  4791                           	opt stack 23
  4792                           
  4793                           ;incstack = 0
  4794  000008  CFFA F003          	movff	pclath,??_chkisr
  4795  00000C  CFFB F004          	movff	pclatu,??_chkisr+1
  4796  000010  CFE9 F005          	movff	fsr0l,??_chkisr+2
  4797  000014  ED8A  F003         	call	int_func,f	;refresh shadow registers
  4798                           pclatu	equ	0xFFB
  4799                           pclath	equ	0xFFA
  4800                           tblptru	equ	0xFF8
  4801                           tblptrh	equ	0xFF7
  4802                           tblptrl	equ	0xFF6
  4803                           tablat	equ	0xFF5
  4804                           prodh	equ	0xFF4
  4805                           prodl	equ	0xFF3
  4806                           intcon	equ	0xFF2
  4807                           intcon2	equ	0xFF1
  4808                           postinc0	equ	0xFEE
  4809                           fsr0l	equ	0xFE9
  4810                           wreg	equ	0xFE8
  4811                           postdec1	equ	0xFE5
  4812                           fsr1l	equ	0xFE1
  4813                           postinc2	equ	0xFDE
  4814                           postdec2	equ	0xFDD
  4815                           fsr2h	equ	0xFDA
  4816                           fsr2l	equ	0xFD9
  4817                           status	equ	0xFD8
  4818                           
  4819                           	psect	intcode_body
  4820  000714                     __pintcode_body:
  4821                           	opt stack 23
  4822  000714                     int_func:
  4823                           	opt stack 23
  4824  000714  0006               	pop		; remove dummy address from shadow register refresh
  4825  000716  CFEA F006          	movff	fsr0h,??_chkisr+3
  4826  00071A  CFE1 F007          	movff	fsr1l,??_chkisr+4
  4827  00071E  CFE2 F008          	movff	fsr1h,??_chkisr+5
  4828  000722  CFD9 F009          	movff	fsr2l,??_chkisr+6
  4829  000726  CFDA F00A          	movff	fsr2h,??_chkisr+7
  4830  00072A  CFF3 F00B          	movff	prodl,??_chkisr+8
  4831  00072E  CFF4 F00C          	movff	prodh,??_chkisr+9
  4832  000732  CFF6 F00D          	movff	tblptrl,??_chkisr+10
  4833  000736  CFF7 F00E          	movff	tblptrh,??_chkisr+11
  4834  00073A  CFF8 F00F          	movff	tblptru,??_chkisr+12
  4835  00073E  CFF5 F010          	movff	tablat,??_chkisr+13
  4836                           
  4837                           ;Interrupt.c: 30: if (PIR1bits.TMR1IF == 1) TIMER1_isr();
  4838  000742  A09E               	btfss	3998,0,c	;volatile
  4839  000744  D003               	goto	i2l2181
  4840  000746  ECE8  F005         	call	_TIMER1_isr	;wreg free
  4841  00074A  D000               	goto	i2l2181
  4842  00074C                     i2l2181:
  4843                           
  4844                           ;Interrupt.c: 31: if (INTCONbits.INT0IF == 1) INT0_isr();
  4845  00074C  A2F2               	btfss	intcon,1,c	;volatile
  4846  00074E  D003               	goto	i2l189
  4847  000750  ECFB  F001         	call	_INT0_isr	;wreg free
  4848  000754  D000               	goto	i2l189
  4849  000756                     i2l189:
  4850  000756  C010  FFF5         	movff	??_chkisr+13,tablat
  4851  00075A  C00F  FFF8         	movff	??_chkisr+12,tblptru
  4852  00075E  C00E  FFF7         	movff	??_chkisr+11,tblptrh
  4853  000762  C00D  FFF6         	movff	??_chkisr+10,tblptrl
  4854  000766  C00C  FFF4         	movff	??_chkisr+9,prodh
  4855  00076A  C00B  FFF3         	movff	??_chkisr+8,prodl
  4856  00076E  C00A  FFDA         	movff	??_chkisr+7,fsr2h
  4857  000772  C009  FFD9         	movff	??_chkisr+6,fsr2l
  4858  000776  C008  FFE2         	movff	??_chkisr+5,fsr1h
  4859  00077A  C007  FFE1         	movff	??_chkisr+4,fsr1l
  4860  00077E  C006  FFEA         	movff	??_chkisr+3,fsr0h
  4861  000782  C005  FFE9         	movff	??_chkisr+2,fsr0l
  4862  000786  C004  FFFB         	movff	??_chkisr+1,pclatu
  4863  00078A  C003  FFFA         	movff	??_chkisr,pclath
  4864  00078E  0011               	retfie		f
  4865  000790                     __end_of_chkisr:
  4866                           	opt stack 0
  4867                           pclatu	equ	0xFFB
  4868                           pclath	equ	0xFFA
  4869                           tblptru	equ	0xFF8
  4870                           tblptrh	equ	0xFF7
  4871                           tblptrl	equ	0xFF6
  4872                           tablat	equ	0xFF5
  4873                           prodh	equ	0xFF4
  4874                           prodl	equ	0xFF3
  4875                           intcon	equ	0xFF2
  4876                           intcon2	equ	0xFF1
  4877                           postinc0	equ	0xFEE
  4878                           fsr0h	equ	0xFEA
  4879                           fsr0l	equ	0xFE9
  4880                           wreg	equ	0xFE8
  4881                           postdec1	equ	0xFE5
  4882                           fsr1h	equ	0xFE2
  4883                           fsr1l	equ	0xFE1
  4884                           postinc2	equ	0xFDE
  4885                           postdec2	equ	0xFDD
  4886                           fsr2h	equ	0xFDA
  4887                           fsr2l	equ	0xFD9
  4888                           status	equ	0xFD8
  4889                           
  4890 ;; *************** function _TIMER1_isr *****************
  4891 ;; Defined at:
  4892 ;;		line 34 in file "Interrupt.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;		None
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;		None
  4897 ;; Return value:  Size  Location     Type
  4898 ;;		None               void
  4899 ;; Registers used:
  4900 ;;		wreg, status,2
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;Total ram usage:        0 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_chkisr
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text30
  4920  000BD0                     __ptext30:
  4921                           	opt stack 0
  4922  000BD0                     _TIMER1_isr:
  4923                           	opt stack 24
  4924                           
  4925                           ;Interrupt.c: 36: Nec_state = 0;
  4926                           
  4927                           ;incstack = 0
  4928  000BD0  0E00               	movlw	0
  4929  000BD2  6E41               	movwf	_Nec_state,c
  4930                           
  4931                           ;Interrupt.c: 37: INTCON2bits.INTEDG0 = 0;
  4932  000BD4  9CF1               	bcf	intcon2,6,c	;volatile
  4933                           
  4934                           ;Interrupt.c: 38: T1CONbits.TMR1ON = 0;
  4935  000BD6  90CD               	bcf	4045,0,c	;volatile
  4936                           
  4937                           ;Interrupt.c: 39: PIR1bits.TMR1IF = 0;
  4938  000BD8  909E               	bcf	3998,0,c	;volatile
  4939  000BDA  0012               	return		;funcret
  4940  000BDC                     __end_of_TIMER1_isr:
  4941                           	opt stack 0
  4942                           pclatu	equ	0xFFB
  4943                           pclath	equ	0xFFA
  4944                           tblptru	equ	0xFF8
  4945                           tblptrh	equ	0xFF7
  4946                           tblptrl	equ	0xFF6
  4947                           tablat	equ	0xFF5
  4948                           prodh	equ	0xFF4
  4949                           prodl	equ	0xFF3
  4950                           intcon	equ	0xFF2
  4951                           intcon2	equ	0xFF1
  4952                           postinc0	equ	0xFEE
  4953                           fsr0h	equ	0xFEA
  4954                           fsr0l	equ	0xFE9
  4955                           wreg	equ	0xFE8
  4956                           postdec1	equ	0xFE5
  4957                           fsr1h	equ	0xFE2
  4958                           fsr1l	equ	0xFE1
  4959                           postinc2	equ	0xFDE
  4960                           postdec2	equ	0xFDD
  4961                           fsr2h	equ	0xFDA
  4962                           fsr2l	equ	0xFD9
  4963                           status	equ	0xFD8
  4964                           
  4965 ;; *************** function _INT0_isr *****************
  4966 ;; Defined at:
  4967 ;;		line 48 in file "Interrupt.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;		None
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;		None               void
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;Total ram usage:        2 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    1
  4988 ;; This function calls:
  4989 ;;		_force_nec_state0
  4990 ;; This function is called by:
  4991 ;;		_chkisr
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text31
  4996  0003F6                     __ptext31:
  4997                           	opt stack 0
  4998  0003F6                     _INT0_isr:
  4999                           	opt stack 23
  5000                           
  5001                           ;Interrupt.c: 51: INTCONbits.INT0IF = 0;
  5002                           
  5003                           ;incstack = 0
  5004  0003F6  92F2               	bcf	intcon,1,c	;volatile
  5005                           
  5006                           ;Interrupt.c: 52: if (Nec_state != 0)
  5007  0003F8  5041               	movf	_Nec_state,w,c
  5008  0003FA  B4D8               	btfsc	status,2,c
  5009  0003FC  D09A               	goto	i2l1645
  5010                           
  5011                           ;Interrupt.c: 53: {
  5012                           ;Interrupt.c: 54: Time_Elapsed = (TMR1H << 8) | TMR1L;
  5013  0003FE  50CE               	movf	4046,w,c	;volatile
  5014  000400  CFCF F001          	movff	4047,??_INT0_isr	;volatile
  5015  000404  6A02               	clrf	(??_INT0_isr+1)& (0+255),c
  5016  000406  C001  F002         	movff	??_INT0_isr,??_INT0_isr+1
  5017  00040A  6A01               	clrf	??_INT0_isr,c
  5018  00040C  1001               	iorwf	??_INT0_isr,w,c
  5019  00040E  6E35               	movwf	_Time_Elapsed,c
  5020  000410  5002               	movf	??_INT0_isr+1,w,c
  5021  000412  6E36               	movwf	_Time_Elapsed+1,c
  5022                           
  5023                           ;Interrupt.c: 55: TMR1H = 0;
  5024  000414  0E00               	movlw	0
  5025  000416  6ECF               	movwf	4047,c	;volatile
  5026                           
  5027                           ;Interrupt.c: 56: TMR1L = 0;
  5028  000418  0E00               	movlw	0
  5029  00041A  6ECE               	movwf	4046,c	;volatile
  5030                           
  5031                           ;Interrupt.c: 57: }
  5032                           ;Interrupt.c: 59: switch(Nec_state)
  5033  00041C  D08A               	goto	i2l1645
  5034  00041E                     i2l1579:
  5035                           
  5036                           ;Interrupt.c: 62: {
  5037                           ;Interrupt.c: 63: TMR1H = 0;
  5038  00041E  0E00               	movlw	0
  5039  000420  6ECF               	movwf	4047,c	;volatile
  5040                           
  5041                           ;Interrupt.c: 64: TMR1L = 0;
  5042  000422  0E00               	movlw	0
  5043  000424  6ECE               	movwf	4046,c	;volatile
  5044                           
  5045                           ;Interrupt.c: 65: PIR1bits.TMR1IF = 0;
  5046  000426  909E               	bcf	3998,0,c	;volatile
  5047                           
  5048                           ;Interrupt.c: 66: T1CON= 0x90;
  5049  000428  0E90               	movlw	144
  5050  00042A  6ECD               	movwf	4045,c	;volatile
  5051                           
  5052                           ;Interrupt.c: 67: T1CONbits.TMR1ON = 1;
  5053  00042C  80CD               	bsf	4045,0,c	;volatile
  5054                           
  5055                           ;Interrupt.c: 68: bit_count = 0;
  5056  00042E  0E00               	movlw	0
  5057  000430  6E48               	movwf	_bit_count,c
  5058                           
  5059                           ;Interrupt.c: 69: Nec_code = 0;
  5060  000432  0E00               	movlw	0
  5061  000434  6E31               	movwf	_Nec_code,c
  5062  000436  0E00               	movlw	0
  5063  000438  6E32               	movwf	_Nec_code+1,c
  5064  00043A  0E00               	movlw	0
  5065  00043C  6E33               	movwf	_Nec_code+2,c
  5066  00043E  0E00               	movlw	0
  5067  000440  6E34               	movwf	_Nec_code+3,c
  5068                           
  5069                           ;Interrupt.c: 70: Nec_state = 1;
  5070  000442  0E01               	movlw	1
  5071  000444  6E41               	movwf	_Nec_state,c
  5072  000446  D073               	goto	i2l1639
  5073                           
  5074                           ;Interrupt.c: 72: return;
  5075                           
  5076                           ;Interrupt.c: 71: INTCON2bits.INTEDG0 = 1;
  5077  000448  D085               	goto	i2l201
  5078  00044A                     i2l1589:
  5079                           
  5080                           ;Interrupt.c: 76: {
  5081                           ;Interrupt.c: 77: if (Time_Elapsed > 8500 && Time_Elapsed < 9500)
  5082  00044A  0E35               	movlw	53
  5083  00044C  5C35               	subwf	_Time_Elapsed,w,c
  5084  00044E  0E21               	movlw	33
  5085  000450  5836               	subwfb	_Time_Elapsed+1,w,c
  5086  000452  A0D8               	btfss	status,0,c
  5087  000454  D009               	goto	i2l1595
  5088  000456  0E1C               	movlw	28
  5089  000458  5C35               	subwf	_Time_Elapsed,w,c
  5090  00045A  0E25               	movlw	37
  5091  00045C  5836               	subwfb	_Time_Elapsed+1,w,c
  5092  00045E  B0D8               	btfsc	status,0,c
  5093  000460  D003               	goto	i2l1595
  5094                           
  5095                           ;Interrupt.c: 78: {
  5096                           ;Interrupt.c: 79: Nec_state = 2;
  5097  000462  0E02               	movlw	2
  5098  000464  6E41               	movwf	_Nec_state,c
  5099                           
  5100                           ;Interrupt.c: 80: }
  5101  000466  D02A               	goto	i2l1621
  5102  000468                     i2l1595:
  5103                           
  5104                           ;Interrupt.c: 81: else
  5105                           ;Interrupt.c: 82: {
  5106                           ;Interrupt.c: 83: force_nec_state0();
  5107  000468  EC05  F006         	call	_force_nec_state0	;wreg free
  5108  00046C  D027               	goto	i2l1621
  5109  00046E  D026               	goto	i2l1621
  5110                           
  5111                           ;Interrupt.c: 86: return;
  5112                           
  5113                           ;Interrupt.c: 84: }
  5114                           ;Interrupt.c: 85: INTCON2bits.INTEDG0 = 0;
  5115  000470  D071               	goto	i2l201
  5116  000472                     i2l1601:
  5117                           
  5118                           ;Interrupt.c: 90: {
  5119                           ;Interrupt.c: 91: if (Time_Elapsed > 4000 && Time_Elapsed < 5000 )
  5120  000472  0EA1               	movlw	161
  5121  000474  5C35               	subwf	_Time_Elapsed,w,c
  5122  000476  0E0F               	movlw	15
  5123  000478  5836               	subwfb	_Time_Elapsed+1,w,c
  5124  00047A  A0D8               	btfss	status,0,c
  5125  00047C  D009               	goto	i2l1607
  5126  00047E  0E88               	movlw	136
  5127  000480  5C35               	subwf	_Time_Elapsed,w,c
  5128  000482  0E13               	movlw	19
  5129  000484  5836               	subwfb	_Time_Elapsed+1,w,c
  5130  000486  B0D8               	btfsc	status,0,c
  5131  000488  D003               	goto	i2l1607
  5132  00048A                     
  5133                           ;Interrupt.c: 92: {
  5134                           ;Interrupt.c: 93: Nec_state = 3;
  5135  00048A  0E03               	movlw	3
  5136  00048C  6E41               	movwf	_Nec_state,c
  5137                           
  5138                           ;Interrupt.c: 94: }
  5139  00048E  D04F               	goto	i2l1639
  5140  000490                     i2l1607:
  5141                           
  5142                           ;Interrupt.c: 95: else
  5143                           ;Interrupt.c: 96: {
  5144                           ;Interrupt.c: 97: force_nec_state0();
  5145  000490  EC05  F006         	call	_force_nec_state0	;wreg free
  5146  000494  D04C               	goto	i2l1639
  5147  000496  D04B               	goto	i2l1639
  5148                           
  5149                           ;Interrupt.c: 100: return;
  5150                           
  5151                           ;Interrupt.c: 98: }
  5152                           ;Interrupt.c: 99: INTCON2bits.INTEDG0 = 1;
  5153  000498  D05D               	goto	i2l201
  5154  00049A                     i2l1613:
  5155                           
  5156                           ;Interrupt.c: 104: {
  5157                           ;Interrupt.c: 105: if (Time_Elapsed > 400 && Time_Elapsed < 700)
  5158  00049A  0E91               	movlw	145
  5159  00049C  5C35               	subwf	_Time_Elapsed,w,c
  5160  00049E  0E01               	movlw	1
  5161  0004A0  5836               	subwfb	_Time_Elapsed+1,w,c
  5162  0004A2  A0D8               	btfss	status,0,c
  5163  0004A4  D008               	goto	i2l1619
  5164  0004A6  0EBC               	movlw	188
  5165  0004A8  5C35               	subwf	_Time_Elapsed,w,c
  5166  0004AA  0E02               	movlw	2
  5167  0004AC  5836               	subwfb	_Time_Elapsed+1,w,c
  5168  0004AE  B0D8               	btfsc	status,0,c
  5169  0004B0  D002               	goto	i2l1619
  5170                           
  5171                           ;Interrupt.c: 106: {
  5172                           ;Interrupt.c: 107: Nec_state = 4;
  5173  0004B2  0E04               	movlw	4
  5174  0004B4  D7D7               	goto	L1
  5175  0004B6                     i2l1619:
  5176                           
  5177                           ;Interrupt.c: 109: else
  5178                           ;Interrupt.c: 110: {
  5179                           ;Interrupt.c: 111: force_nec_state0();
  5180  0004B6  EC05  F006         	call	_force_nec_state0	;wreg free
  5181  0004BA  D000               	goto	i2l1621
  5182  0004BC                     i2l1621:
  5183                           
  5184                           ;Interrupt.c: 112: }
  5185                           ;Interrupt.c: 113: INTCON2bits.INTEDG0 = 0;
  5186  0004BC  9CF1               	bcf	intcon2,6,c	;volatile
  5187                           
  5188                           ;Interrupt.c: 114: return;
  5189  0004BE  D04A               	goto	i2l201
  5190  0004C0                     i2l1625:
  5191                           
  5192                           ;Interrupt.c: 118: {
  5193                           ;Interrupt.c: 119: if (Time_Elapsed > 400 && Time_Elapsed < 1800)
  5194  0004C0  0E91               	movlw	145
  5195  0004C2  5C35               	subwf	_Time_Elapsed,w,c
  5196  0004C4  0E01               	movlw	1
  5197  0004C6  5836               	subwfb	_Time_Elapsed+1,w,c
  5198  0004C8  A0D8               	btfss	status,0,c
  5199  0004CA  D02E               	goto	i2l1637
  5200  0004CC  0E08               	movlw	8
  5201  0004CE  5C35               	subwf	_Time_Elapsed,w,c
  5202  0004D0  0E07               	movlw	7
  5203  0004D2  5836               	subwfb	_Time_Elapsed+1,w,c
  5204  0004D4  B0D8               	btfsc	status,0,c
  5205  0004D6  D028               	goto	i2l1637
  5206                           
  5207                           ;Interrupt.c: 120: {
  5208                           ;Interrupt.c: 121: Nec_code = Nec_code << 1;
  5209  0004D8  90D8               	bcf	status,0,c
  5210  0004DA  3431               	rlcf	_Nec_code,w,c
  5211  0004DC  6E31               	movwf	_Nec_code,c
  5212  0004DE  3432               	rlcf	_Nec_code+1,w,c
  5213  0004E0  6E32               	movwf	_Nec_code+1,c
  5214  0004E2  3433               	rlcf	_Nec_code+2,w,c
  5215  0004E4  6E33               	movwf	_Nec_code+2,c
  5216  0004E6  3434               	rlcf	_Nec_code+3,w,c
  5217  0004E8  6E34               	movwf	_Nec_code+3,c
  5218                           
  5219                           ;Interrupt.c: 122: if (Time_Elapsed > 1000)
  5220  0004EA  0EE9               	movlw	233
  5221  0004EC  5C35               	subwf	_Time_Elapsed,w,c
  5222  0004EE  0E03               	movlw	3
  5223  0004F0  5836               	subwfb	_Time_Elapsed+1,w,c
  5224  0004F2  A0D8               	btfss	status,0,c
  5225  0004F4  D00C               	goto	i2l213
  5226                           
  5227                           ;Interrupt.c: 123: {
  5228                           ;Interrupt.c: 124: Nec_code = Nec_code + 1;
  5229  0004F6  0E01               	movlw	1
  5230  0004F8  2431               	addwf	_Nec_code,w,c
  5231  0004FA  6E31               	movwf	_Nec_code,c
  5232  0004FC  0E00               	movlw	0
  5233  0004FE  2032               	addwfc	_Nec_code+1,w,c
  5234  000500  6E32               	movwf	_Nec_code+1,c
  5235  000502  0E00               	movlw	0
  5236  000504  2033               	addwfc	_Nec_code+2,w,c
  5237  000506  6E33               	movwf	_Nec_code+2,c
  5238  000508  0E00               	movlw	0
  5239  00050A  2034               	addwfc	_Nec_code+3,w,c
  5240  00050C  6E34               	movwf	_Nec_code+3,c
  5241  00050E                     i2l213:
  5242                           
  5243                           ;Interrupt.c: 125: }
  5244                           ;Interrupt.c: 126: bit_count = bit_count + 1;
  5245  00050E  2848               	incf	_bit_count,w,c
  5246  000510  6E48               	movwf	_bit_count,c
  5247                           
  5248                           ;Interrupt.c: 127: if (bit_count > 31)
  5249  000512  0E1F               	movlw	31
  5250  000514  6448               	cpfsgt	_bit_count,c
  5251  000516  D7B9               	goto	L2
  5252                           
  5253                           ;Interrupt.c: 128: {
  5254                           ;Interrupt.c: 129: nec_ok = 1;
  5255  000518  0E00               	movlw	0
  5256  00051A  6E3A               	movwf	_nec_ok+1,c
  5257  00051C  0E01               	movlw	1
  5258  00051E  6E39               	movwf	_nec_ok,c
  5259                           
  5260                           ;Interrupt.c: 130: INTCONbits.INT0IE = 0;
  5261  000520  98F2               	bcf	intcon,4,c	;volatile
  5262                           
  5263                           ;Interrupt.c: 131: Nec_state = 0;
  5264  000522  0E00               	movlw	0
  5265  000524  6E41               	movwf	_Nec_state,c
  5266  000526  D7B1               	goto	L2
  5267  000528                     i2l1637:
  5268                           
  5269                           ;Interrupt.c: 135: else
  5270                           ;Interrupt.c: 136: {
  5271                           ;Interrupt.c: 137: force_nec_state0();
  5272  000528  EC05  F006         	call	_force_nec_state0	;wreg free
  5273  00052C  D000               	goto	i2l1639
  5274  00052E                     i2l1639:
  5275                           
  5276                           ;Interrupt.c: 138: }
  5277                           ;Interrupt.c: 139: INTCON2bits.INTEDG0 = 1;
  5278  00052E  8CF1               	bsf	intcon2,6,c	;volatile
  5279                           
  5280                           ;Interrupt.c: 141: }
  5281                           ;Interrupt.c: 142: }
  5282                           
  5283                           ;Interrupt.c: 140: return;
  5284  000530  D011               	goto	i2l201
  5285  000532                     i2l1645:
  5286  000532  5041               	movf	_Nec_state,w,c
  5287                           
  5288                           ; Switch size 1, requested type "space"
  5289                           ; Number of cases is 5, Range of values is 0 to 4
  5290                           ; switch strategies available:
  5291                           ; Name         Instructions Cycles
  5292                           ; simple_byte           16     9 (average)
  5293                           ;	Chosen strategy is simple_byte
  5294  000534  0A00               	xorlw	0	; case 0
  5295  000536  B4D8               	btfsc	status,2,c
  5296  000538  D772               	goto	i2l1579
  5297  00053A  0A01               	xorlw	1	; case 1
  5298  00053C  B4D8               	btfsc	status,2,c
  5299  00053E  D785               	goto	i2l1589
  5300  000540  0A03               	xorlw	3	; case 2
  5301  000542  B4D8               	btfsc	status,2,c
  5302  000544  D796               	goto	i2l1601
  5303  000546  0A01               	xorlw	1	; case 3
  5304  000548  B4D8               	btfsc	status,2,c
  5305  00054A  D7A7               	goto	i2l1613
  5306  00054C  0A07               	xorlw	7	; case 4
  5307  00054E  B4D8               	btfsc	status,2,c
  5308  000550  D7B7               	goto	i2l1625
  5309  000552  D000               	goto	i2l201
  5310  000554                     i2l201:
  5311  000554  0012               	return		;funcret
  5312  000556                     __end_of_INT0_isr:
  5313                           	opt stack 0
  5314                           pclatu	equ	0xFFB
  5315                           pclath	equ	0xFFA
  5316                           tblptru	equ	0xFF8
  5317                           tblptrh	equ	0xFF7
  5318                           tblptrl	equ	0xFF6
  5319                           tablat	equ	0xFF5
  5320                           prodh	equ	0xFF4
  5321                           prodl	equ	0xFF3
  5322                           intcon	equ	0xFF2
  5323                           intcon2	equ	0xFF1
  5324                           postinc0	equ	0xFEE
  5325                           fsr0h	equ	0xFEA
  5326                           fsr0l	equ	0xFE9
  5327                           wreg	equ	0xFE8
  5328                           postdec1	equ	0xFE5
  5329                           fsr1h	equ	0xFE2
  5330                           fsr1l	equ	0xFE1
  5331                           postinc2	equ	0xFDE
  5332                           postdec2	equ	0xFDD
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function _force_nec_state0 *****************
  5338 ;; Defined at:
  5339 ;;		line 42 in file "Interrupt.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;		None               void
  5346 ;; Registers used:
  5347 ;;		wreg, status,2
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;Total ram usage:        0 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_INT0_isr
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text32
  5367  000C0A                     __ptext32:
  5368                           	opt stack 0
  5369  000C0A                     _force_nec_state0:
  5370                           	opt stack 23
  5371                           
  5372                           ;Interrupt.c: 44: Nec_state=0;
  5373                           
  5374                           ;incstack = 0
  5375  000C0A  0E00               	movlw	0
  5376  000C0C  6E41               	movwf	_Nec_state,c
  5377                           
  5378                           ;Interrupt.c: 45: T1CONbits.TMR1ON = 0;
  5379  000C0E  90CD               	bcf	4045,0,c	;volatile
  5380  000C10  0012               	return		;funcret
  5381  000C12                     __end_of_force_nec_state0:
  5382                           	opt stack 0
  5383                           pclatu	equ	0xFFB
  5384                           pclath	equ	0xFFA
  5385                           tblptru	equ	0xFF8
  5386                           tblptrh	equ	0xFF7
  5387                           tblptrl	equ	0xFF6
  5388                           tablat	equ	0xFF5
  5389                           prodh	equ	0xFF4
  5390                           prodl	equ	0xFF3
  5391                           intcon	equ	0xFF2
  5392                           intcon2	equ	0xFF1
  5393                           postinc0	equ	0xFEE
  5394                           fsr0h	equ	0xFEA
  5395                           fsr0l	equ	0xFE9
  5396                           wreg	equ	0xFE8
  5397                           postdec1	equ	0xFE5
  5398                           fsr1h	equ	0xFE2
  5399                           fsr1l	equ	0xFE1
  5400                           postinc2	equ	0xFDE
  5401                           postdec2	equ	0xFDD
  5402                           fsr2h	equ	0xFDA
  5403                           fsr2l	equ	0xFD9
  5404                           status	equ	0xFD8
  5405                           pclatu	equ	0xFFB
  5406                           pclath	equ	0xFFA
  5407                           tblptru	equ	0xFF8
  5408                           tblptrh	equ	0xFF7
  5409                           tblptrl	equ	0xFF6
  5410                           tablat	equ	0xFF5
  5411                           prodh	equ	0xFF4
  5412                           prodl	equ	0xFF3
  5413                           intcon	equ	0xFF2
  5414                           intcon2	equ	0xFF1
  5415                           postinc0	equ	0xFEE
  5416                           fsr0h	equ	0xFEA
  5417                           fsr0l	equ	0xFE9
  5418                           wreg	equ	0xFE8
  5419                           postdec1	equ	0xFE5
  5420                           fsr1h	equ	0xFE2
  5421                           fsr1l	equ	0xFE1
  5422                           postinc2	equ	0xFDE
  5423                           postdec2	equ	0xFDD
  5424                           fsr2h	equ	0xFDA
  5425                           fsr2l	equ	0xFD9
  5426                           status	equ	0xFD8
  5427                           
  5428                           	psect	rparam
  5429  0000                     pclatu	equ	0xFFB
  5430                           pclath	equ	0xFFA
  5431                           tblptru	equ	0xFF8
  5432                           tblptrh	equ	0xFF7
  5433                           tblptrl	equ	0xFF6
  5434                           tablat	equ	0xFF5
  5435                           prodh	equ	0xFF4
  5436                           prodl	equ	0xFF3
  5437                           intcon	equ	0xFF2
  5438                           intcon2	equ	0xFF1
  5439                           postinc0	equ	0xFEE
  5440                           fsr0h	equ	0xFEA
  5441                           fsr0l	equ	0xFE9
  5442                           wreg	equ	0xFE8
  5443                           postdec1	equ	0xFE5
  5444                           fsr1h	equ	0xFE2
  5445                           fsr1l	equ	0xFE1
  5446                           postinc2	equ	0xFDE
  5447                           postdec2	equ	0xFDD
  5448                           fsr2h	equ	0xFDA
  5449                           fsr2l	equ	0xFD9
  5450                           status	equ	0xFD8


Data Sizes:
    Strings     90
    Constant    493
    Data        117
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     48     107
    BANK0           128     10      62
    BANK1           256      0      84
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    txt	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    nbr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_2(CODE[43]), STR_1(CODE[30]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    ___awdiv->___wmul
    _Do_Init->_DS1621_Init
    _init_UART->_OpenUSART
    _DS1621_Init->_I2C_Write_Cmd_Write_Data
    _I2C_Write_Cmd_Write_Data->_I2C_Write
    _I2C_Write_Cmd_Only->_I2C_Write
    _DS3231_Read_Time->_I2C_Read
    _DS1621_Read_Temp->_I2C_Read

Critical Paths under _chkisr in COMRAM

    _chkisr->_INT0_isr

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _chkisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _chkisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _chkisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chkisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chkisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chkisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _chkisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _chkisr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _chkisr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _chkisr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _chkisr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _chkisr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _chkisr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _chkisr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _chkisr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _chkisr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6030
                                             46 COMRAM     2     2      0
                   _DS1621_Read_Temp
                   _DS3231_Read_Time
                            _Do_Init
                            ___awdiv
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              37    23     14    3447
                                             28 COMRAM    18     4     14
                                              0 BANK0     10    10      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             16 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     882
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     362
                                             23 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     501
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     406
                                             22 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Do_Init                                              0     0      0     760
                        _DS1621_Init
                           _I2C_Init
                     _init_INTERRUPT
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     273
                                             16 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _init_INTERRUPT                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             4     0      4      53
                                             16 COMRAM     4     0      4
                         _i2cHighScl
                         _i2cHighSda
 ---------------------------------------------------------------------------------
 (2) _DS1621_Init                                          1     1      0     434
                                             21 COMRAM     1     1      0
                 _I2C_Write_Cmd_Only
           _I2C_Write_Cmd_Write_Data
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Write_Data                             3     1      2     232
                                             18 COMRAM     3     1      2
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Only                                   2     1      1     157
                                             18 COMRAM     2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS3231_Read_Time                                     3     3      0     195
                                             19 COMRAM     2     2      0
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS1621_Read_Temp                                     5     3      2     241
                                             19 COMRAM     5     3      2
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            2     2      0      60
                                             16 COMRAM     2     2      0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      90
                                             16 COMRAM     3     3      0
                             _i2cAck
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                            _i2cNack
 ---------------------------------------------------------------------------------
 (3) _i2cNack                                              0     0      0       0
                         _i2cHighScl
                          _i2cLowScl
 ---------------------------------------------------------------------------------
 (3) _i2cAck                                               0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (5) _i2cLowSda                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2cLowScl                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2cHighSda                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2cHighScl                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _chkisr                                              14    14      0       0
                                              2 COMRAM    14    14      0
                           _INT0_isr
                         _TIMER1_isr
 ---------------------------------------------------------------------------------
 (7) _TIMER1_isr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT0_isr                                             2     2      0       0
                                              0 COMRAM     2     2      0
                   _force_nec_state0
 ---------------------------------------------------------------------------------
 (8) _force_nec_state0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1621_Read_Temp
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Read_Time
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _Do_Init
     _DS1621_Init
       _I2C_Write_Cmd_Only
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _I2C_Write_Cmd_Write_Data
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
     _I2C_Init
       _i2cHighScl
       _i2cHighSda
     _init_INTERRUPT
     _init_UART
       _OpenUSART
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch

 _chkisr (ROOT)
   _INT0_isr
     _force_nec_state0
   _TIMER1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      54       7       32.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      A      3E       5       48.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     30      6B       1       84.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FD      34        0.0%
DATA                 0      0      FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Nov 01 14:38:39 2021

                                _i 004E                 __size_of_I2C_Start 0012  
                      _SSPSTATbits 000FC7                 __size_of_I2C_Write 003E  
                     ___awdiv@sign 001C                ___wmul@multiplicand 0013  
                              l116 09A6                                l119 09F6  
                              l171 0A60                                l600 07E4  
                              l602 07FE                                l532 0134  
                              l605 0AB8                                l484 0BAE  
                              l496 055E                                l593 07BC  
                              l569 03F4                                l597 07D6  
                              l598 07D8                                l599 07E2  
                              l798 0690                                _Cmd 003E  
                              _day 004A               __size_of_I2C_ReStart 0016  
                              _dow 004B                                _nbr 0037  
                              _txt 003B                                wreg 000FE8  
                     __CFG_LVP$OFF 000000                       __CFG_WDT$OFF 000000  
                             l1036 0ADA                               l1221 0A00  
                             l1223 0A06                               l1215 09EE  
                             l1128 08B6                               l1233 0A18  
                             l1138 0956                               l3023 0612  
                             l1355 096A                               l3035 063A  
                             l3051 0676                               l1365 0980  
                             l1373 0990                               l3037 0644  
                             l3029 0624                               l1367 0988  
                             l1359 0972                               l3055 0686  
                             l3047 066A                               l3039 064C  
                             l1377 099C                               l1379 09A2  
                             l3323 087A                               l3307 0AD2  
                             l3325 0884                               l3501 002A  
                             l3335 08AA                               l3327 088C  
                             l3351 094A                               l3343 0922  
                             l3511 005C                               l3345 092C  
                             l3601 02CE                               l3513 0072  
                             l3505 003E                               l3347 0934  
                             l3603 02DA                               l3611 030C  
                             l3507 0050                               l2581 07C0  
                             l2573 07AC                               l3613 0314  
                             l3621 03A8                               l3541 016C  
                             l3525 00FA                               l3517 0092  
                             l3615 035C                               l3623 03BC  
                             l3607 02F8                               l3551 019C  
                             l2577 07B4                               l2569 07A2  
                             l3625 03C6                               l3561 01D4  
                             l3545 0188                               l3529 0104  
                             l3555 01C6                               l3547 018E  
                             l3627 03D6                               l2589 07CE  
                             l3565 01E2                               l3583 024A  
                             l3559 01CE                               l3575 0214  
                             l3569 020C                               l3577 0228  
                             l3595 02A4                               l3587 027E  
                             l3597 02B0                               l3589 028A  
   I2C_Write_Cmd_Write_Data@Device 0015                               STR_1 FFCF  
                             STR_2 FFA4                               STR_3 FFED  
                             u2537 0BC8                               _RBPU 007F8F  
                             _TRMT 007D61                               _main 0556  
                             _font FDB7                               _hour 004D  
                 __end_of_I2C_Init 0BE6                   __end_of_I2C_Read 09A8  
                             _year 005F                               fsr0h 000FEA  
                             _txt1 0100                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             fsr1l 000FE1                               fsr2l 000FD9  
                             _wrap 006B                   __end_of_I2C_Stop 0B86  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 0018  
      __size_of_I2C_Write_Cmd_Only 001A                    __end_of_Do_Init 09E8  
                  __end_of_i2cNack 0BF0                       ___param_bank 000010  
                      ?_TIMER1_isr 0001                   __end_of_INT0_isr 0556  
                            ?_main 0001                    __end_of___awdiv 0692  
                  ___awdiv@divisor 0019                              _T1CON 000FCD  
                            _T3CON 000FB1                    __end_of___lwdiv 08C0  
                            i2l201 0554                    __end_of___lwmod 0960  
                            i2l213 050E                              i2l189 0756  
                  ___awdiv@counter 001B                              _RCSTA 000FAB  
                            _TMR1H 000FCF                              _TMR3H 000FB3  
                            _TMR1L 000FCE                              _TMR3L 000FB2  
                            _SPBRG 000FAF                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                            _TXREG 000FAD                              _TXSTA 000FAC  
                       _Display_D1 0060                         _i2cHighSda 0C02  
                       _i2cHighScl 0BC4                    __end_of_dpowers FF9C  
                            _font2 FEB6                              _found 004C  
                  __end_of_isdigit 0ADC                              _tempC 005D  
                            _tempF 005E                              _month 0050  
                            _putch 0BAA                  __end_of_I2C_Start 0B98  
                __end_of_I2C_Write 0A26                     __CFG_BOREN$OFF 000000  
                            tablat 000FF5                              status 000FD8  
                ?_DS1621_Read_Temp 0014                 ??_DS1621_Read_Temp 0016  
                  __initialization 0692                       __end_of_main 05FC  
                     __end_of_font FEB6                             ??_main 002F  
                    __activetblptr 000002                  ?_DS3231_Read_Time 0001  
               ??_DS3231_Read_Time 0014            __size_of_init_INTERRUPT 0030  
                        I2C_Init@c 0011                          I2C_Read@n 0012  
                           _ADCON1 000FC1                DS1621_Read_Temp@Cmd 0016  
                 ___awdiv@dividend 0017                 __size_of_i2cLowSda 000A  
               __size_of_i2cLowScl 0008                             ?_putch 0001  
                           i2l1601 0472                             i2l1621 04BC  
                           i2l1613 049A                             i2l2181 074C  
                           i2l1607 0490                             i2l1625 04C0  
                           i2l1619 04B6                             i2l1637 0528  
                           i2l1645 0532                             i2l1639 052E  
                           i2l1595 0468                             i2l1579 041E  
                           i2l1589 044A                          ??_Do_Init 0017  
                           _OSCCON 000FD3                __size_of_TIMER1_isr 000C  
                           _SPBRGH 000FB0                             _SSPBUF 000FC9  
                        ??_i2cNack 0011                   _force_nec_state0 0C0A  
                           _Device 003F                             _i2cAck 0B98  
                       _TempSecond 0042                 __size_of_OpenUSART 0070  
                           ___wmul 0A92                          ??___awdiv 001B  
                           _chkisr 0008                          ??___lwdiv 0015  
                           _array1 009F                          ??___lwmod 001C  
                           _buffer 0080                             _nec_ok 0039  
                           clear_0 0698                             clear_1 06A4  
                 ___awdiv@quotient 001D                             _minute 004F  
                           _second 0053                             _printf 001C  
                     __pdataCOMRAM 0060                          ??_isdigit 0011  
                        ?_I2C_Init 0011                          ?_I2C_Read 0001  
                        ?_I2C_Stop 0001                       __mediumconst FDB6  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8   __end_of_I2C_Write_Cmd_Write_Data 0AFC  
                      ?_i2cHighSda 0001                        ?_i2cHighScl 0001  
                           putch@c 0011                         __accesstop 0080  
          __end_of__initialization 070A                          ?_INT0_isr 0001  
               _setup_alarm_minute 0055                 _setup_alarm_second 0056  
                    ___rparam_used 000001                     __pcstackCOMRAM 0001  
                     __pidataBANK0 0B4A                       __pidataBANK1 08C0  
                    __end_of_font2 FF92                  __end_of_i2cLowSda 0BFA  
                __end_of_i2cLowScl 0C02                      __end_of_putch 0BB8  
                       ??_I2C_Init 0015                         ??_I2C_Read 0011  
                     _alarm_minute 0046                       _alarm_second 0047  
                       ??_I2C_Stop 0011                  __end_of_OpenUSART 0800  
                          ??_putch 0011                         __pbssBANK0 0080  
                 _setup_alarm_hour 0054                      ??_DS1621_Init 0016  
               __size_of_init_UART 0014                         _alarm_date 0044  
                       ??_INT0_isr 0001                         _alarm_hour 0045  
                          ?_i2cAck 0001                 __CFG_CCP2MX$PORTBE 000000  
                   I2C_Read@inByte 0013                            ?___wmul 0011  
              __size_of_i2cHighSda 0008                __size_of_i2cHighScl 000C  
                          ?_chkisr 0001   I2C_Write_Cmd_Write_Data@Data_Out 0014  
                     ??_TIMER1_isr 0001                      ??_I2C_ReStart 0011  
                       I2C_Write@n 0012                            ?_printf 001D  
                   _init_INTERRUPT 0A62                            _SSPCON1 000FC6  
                          _SSPSTAT 000FC7                            _Address 003D  
                          _Do_Init 09A8           _I2C_Write_Cmd_Write_Data 0ADC  
       __end_of_I2C_Write_Cmd_Only 0B34             DS1621_Read_Temp@Device 0018  
                          _i2cNack 0BE6                 __end_of_TIMER1_isr 0BDC  
                        _I2C_Start 0B86                          _I2C_Write 09E8  
                  __size_of_i2cAck 0012                            __Hparam 0000  
                          __Lparam 0000                __end_of_DS1621_Init 0B1A  
                          ___awdiv 05FC                    __size_of___wmul 0028  
                          ___lwdiv 0864                            ___lwmod 0914  
                  __size_of_chkisr 0788                            __pcinit 0692  
                          __ramtop 1000                            __ptext0 0556  
                          __ptext1 001C                            __ptext2 0BAA  
                          __ptext3 0ABA                            __ptext4 0A92  
                          __ptext5 0914          __size_of_DS1621_Read_Temp 003C  
                          __ptext6 0864                            __ptext7 05FC  
                          __ptext8 09A8                            __ptext9 0B60  
                  __size_of_printf 03DA                  __end_of_init_UART 0B74  
           __end_of_init_INTERRUPT 0A92                  __end_of_hexpowers FFA4  
         __end_of_force_nec_state0 0C12                          _T1CONbits 000FCD  
                          _dpowers FF92                            _isdigit 0ABA  
                        _T3CONbits 000FB1                __end_of_I2C_ReStart 0B4A  
                   __pintcode_body 0714               end_of_initialization 070A  
                    __Lmediumconst FDB6          __size_of_DS3231_Read_Time 0064  
                          int_func 0714            DS3231_Read_Time@Address 0014  
                       ?_I2C_Start 0001                         ?_I2C_Write 0001  
                       _tempSecond 006A                          _RCSTAbits 000FAB  
                          printf@c 00BD                            printf@f 001D  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
      I2C_Write_Cmd_Write_Data@Cmd 0013                          _PORTCbits 000F82  
                        _PORTDbits 000F83                   I2C_Write@outByte 0011  
                  ?_init_INTERRUPT 0001                         _setup_hour 0058  
                       _setup_year 005C                          _TRISCbits 000F94  
                     ??_i2cHighSda 0011                       ??_i2cHighScl 0011  
                __size_of_I2C_Init 000A                  __size_of_I2C_Read 0048  
                __size_of_I2C_Stop 0012                        _DS1621_Init 0AFC  
                      printf@width 00BB                          _TXSTAbits 000FAC  
                __size_of_INT0_isr 0160                     __end_of_i2cAck 0BAA  
         DS1621_Read_Temp@Data_Ret 0017                 __end_of_i2cHighSda 0C0A  
               __end_of_i2cHighScl 0BD0                     __end_of___wmul 0ABA  
                    __pidataCOMRAM 0BB8                     __end_of_chkisr 0790  
                      _I2C_ReStart 0B34                          _Nec_code1 0040  
                        _i2cLowSda 0BF0                          _i2cLowScl 0BFA  
                   __end_of_printf 03F6                          _Nec_state 0041  
              start_initialization 0692                          _OpenUSART 0790  
                 __CFG_OSC$INTIO67 000000                        ??_I2C_Start 0011  
                      ??_I2C_Write 0011                           ??_i2cAck 0011  
                         ??___wmul 0015                           ??_chkisr 0003  
                      __pdataBANK0 009F                        __pdataBANK1 0100  
                         ??_printf 002B                   _DS1621_Read_Temp 0A26  
                       ?_i2cLowSda 0001                         ?_i2cLowScl 0001  
                      __pbssCOMRAM 0031         ??_I2C_Write_Cmd_Write_Data 0015  
                    __pcstackBANK0 00B4                       _isdigit$1685 0012  
                         ?_Do_Init 0001                         ?_OpenUSART 0011  
                 _DS3231_Read_Time 0800                           ?_i2cNack 0001  
                 ___lwdiv@dividend 0011                        I2C_Read@ack 0011  
                        _bit_count 0048                          __pintcode 0008  
                    __pmediumconst FDB6                           ?___awdiv 0017  
                        __tft_type 0043                           ?___lwdiv 0011  
               _I2C_Write_Cmd_Only 0B1A                           ?___lwmod 0018  
              ?_I2C_Write_Cmd_Only 0013                  ?_force_nec_state0 0001  
                         ?_isdigit 0001                           _I2C_Init 0BDC  
                         _I2C_Read 0960                           _I2C_Stop 0B74  
                        _init_UART 0B60                 ??_force_nec_state0 0001  
         I2C_Write_Cmd_Only@Device 0014                          _hexpowers FF9C  
                 ___lwdiv@quotient 0016                     __size_of_putch 000E  
                   ___wmul@product 0015                           _INT0_isr 03F6  
             ??_I2C_Write_Cmd_Only 0014                           _PIE1bits 000F9D  
           DS3231_Read_Time@Device 0015                           _PIR1bits 000F9E  
                         _PIR2bits 000FA1                   ??_init_INTERRUPT 0011  
                        _setup_day 0057                  DS1621_Init@Device 0016  
                ___wmul@multiplier 0011                        ??_i2cLowSda 0011  
                      ??_i2cLowScl 0011                         printf@flag 00BA  
                       printf@prec 00B7                          main@tempC 0030  
                        main@tempF 002F                         ?_init_UART 0001  
                      _INTCON2bits 000FF1                          copy_data0 06BE  
                        copy_data1 06DE                          copy_data2 06FE  
                         _Nec_code 0031                        ??_OpenUSART 0013  
                     ?_DS1621_Init 0001                   __size_of_Do_Init 0040  
                  OpenUSART@config 0013                       _Time_Elapsed 0035  
                 __size_of_i2cNack 000A                           __Hrparam 0000  
                         __Lrparam 0000                   __size_of___awdiv 0096  
                 __size_of___lwdiv 005C                   __size_of___lwmod 004C  
                     ?_I2C_ReStart 0001                   __size_of_isdigit 0022  
                  ___lwdiv@divisor 0013                    ___lwdiv@counter 0015  
                         __ptext10 0790                           __ptext11 0A62  
                         __ptext20 0B86                           __ptext12 0BDC  
                         __ptext21 0960                           __ptext13 0AFC  
                         __ptext30 0BD0                           __ptext22 0BE6  
                         __ptext14 0ADC                           __ptext31 03F6  
                         __ptext23 0B98                           __ptext15 0B1A  
                         __ptext32 0C0A                           __ptext24 0B34  
                         __ptext16 0800                           __ptext25 0BF0  
                         __ptext17 0A26                           __ptext26 0BFA  
                         __ptext18 09E8                           __ptext27 0C02  
                         __ptext19 0B74                           __ptext28 0BC4  
                         _colstart 0049           __end_of_DS1621_Read_Temp 0A62  
                    __size_of_main 00A6                          printf@idx 00B4  
                        printf@val 00B8                           _rowstart 0052  
         __end_of_DS3231_Read_Time 0864                         _INTCONbits 000FF2  
                   OpenUSART@spbrg 0011                        ??_init_UART 0014  
                         isdigit@c 0013                           intlevel2 0000  
                 ___lwmod@dividend 0018                           printf@ap 00B5  
                       _TIMER1_isr 0BD0                    ___lwmod@divisor 001A  
            I2C_Write_Cmd_Only@Cmd 0013                    ___lwmod@counter 001C  
                     _setup_minute 0059                       _setup_second 005B  
                      _prev_second 0051                        _setup_month 005A  
        __size_of_force_nec_state0 0008  __size_of_I2C_Write_Cmd_Write_Data 0020  
             __size_of_DS1621_Init 001E          ?_I2C_Write_Cmd_Write_Data 0013  
