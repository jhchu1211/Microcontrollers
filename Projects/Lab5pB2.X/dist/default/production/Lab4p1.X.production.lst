

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Sep 22 16:14:42 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataBANK0
    54  002E1C                     __pidataBANK0:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _array
    58  002E1C  0040               	dw	64
    59  002E1E  0079               	dw	121
    60  002E20  0024               	dw	36
    61  002E22  0030               	dw	48
    62  002E24  0019               	dw	25
    63  002E26  0012               	dw	18
    64  002E28  0002               	dw	2
    65  002E2A  0078               	dw	120
    66  002E2C  0000               	dw	0
    67  002E2E  0010               	dw	16
    68                           
    69                           	psect	smallconst
    70  001000                     __psmallconst:
    71                           	opt stack 0
    72  001000  00                 	db	0
    73  001001                     _dpowers:
    74                           	opt stack 0
    75  001001  0001               	dw	1
    76  001003  0000               	dw	0
    77  001005  000A               	dw	10
    78  001007  0000               	dw	0
    79  001009  0064               	dw	100
    80  00100B  0000               	dw	0
    81  00100D  03E8               	dw	1000
    82  00100F  0000               	dw	0
    83  001011  2710               	dw	10000
    84  001013  0000               	dw	0
    85  001015  86A0               	dw	34464
    86  001017  0001               	dw	1
    87  001019  4240               	dw	16960
    88  00101B  000F               	dw	15
    89  00101D  9680               	dw	38528
    90  00101F  0098               	dw	152
    91  001021  E100               	dw	57600
    92  001023  05F5               	dw	1525
    93  001025  CA00               	dw	51712
    94  001027  3B9A               	dw	15258
    95  001029                     __end_of_dpowers:
    96                           	opt stack 0
    97  001029                     __npowers_:
    98                           	opt stack 0
    99  001029  00                 	db	0
   100  00102A  80                 	db	128
   101  00102B  3F                 	db	63
   102  00102C  CD                 	db	205
   103  00102D  CC                 	db	204
   104  00102E  3D                 	db	61
   105  00102F  D7                 	db	215
   106  001030  23                 	db	35
   107  001031  3C                 	db	60
   108  001032  12                 	db	18
   109  001033  83                 	db	131
   110  001034  3A                 	db	58
   111  001035  B7                 	db	183
   112  001036  D1                 	db	209
   113  001037  38                 	db	56
   114  001038  C6                 	db	198
   115  001039  27                 	db	39
   116  00103A  37                 	db	55
   117  00103B  38                 	db	56
   118  00103C  86                 	db	134
   119  00103D  35                 	db	53
   120  00103E  C0                 	db	192
   121  00103F  D6                 	db	214
   122  001040  33                 	db	51
   123  001041  CC                 	db	204
   124  001042  2B                 	db	43
   125  001043  32                 	db	50
   126  001044  70                 	db	112
   127  001045  89                 	db	137
   128  001046  30                 	db	48
   129  001047  E7                 	db	231
   130  001048  DB                 	db	219
   131  001049  2E                 	db	46
   132  00104A  E5                 	db	229
   133  00104B  3C                 	db	60
   134  00104C  1E                 	db	30
   135  00104D  42                 	db	66
   136  00104E  A2                 	db	162
   137  00104F  0D                 	db	13
   138  001050                     __end_of__npowers_:
   139                           	opt stack 0
   140  001050                     __powers_:
   141                           	opt stack 0
   142  001050  00                 	db	0
   143  001051  80                 	db	128
   144  001052  3F                 	db	63
   145  001053  00                 	db	0
   146  001054  20                 	db	32
   147  001055  41                 	db	65
   148  001056  00                 	db	0
   149  001057  C8                 	db	200
   150  001058  42                 	db	66
   151  001059  00                 	db	0
   152  00105A  7A                 	db	122
   153  00105B  44                 	db	68
   154  00105C  40                 	db	64
   155  00105D  1C                 	db	28
   156  00105E  46                 	db	70
   157  00105F  50                 	db	80
   158  001060  C3                 	db	195
   159  001061  47                 	db	71
   160  001062  24                 	db	36
   161  001063  74                 	db	116
   162  001064  49                 	db	73
   163  001065  97                 	db	151
   164  001066  18                 	db	24
   165  001067  4B                 	db	75
   166  001068  BC                 	db	188
   167  001069  BE                 	db	190
   168  00106A  4C                 	db	76
   169  00106B  6B                 	db	107
   170  00106C  6E                 	db	110
   171  00106D  4E                 	db	78
   172  00106E  03                 	db	3
   173  00106F  15                 	db	21
   174  001070  50                 	db	80
   175  001071  79                 	db	121
   176  001072  AD                 	db	173
   177  001073  60                 	db	96
   178  001074  F3                 	db	243
   179  001075  49                 	db	73
   180  001076  71                 	db	113
   181  001077                     __end_of__powers_:
   182                           	opt stack 0
   183  0000                     _ADCON0	set	4034
   184  0000                     _ADCON0bits	set	4034
   185  0000                     _ADCON1	set	4033
   186  0000                     _ADCON2	set	4032
   187  0000                     _ADRESH	set	4036
   188  0000                     _ADRESL	set	4035
   189  0000                     _OSCCON	set	4051
   190  0000                     _PIE1bits	set	3997
   191  0000                     _PIR1bits	set	3998
   192  0000                     _PORTA	set	3968
   193  0000                     _PORTB	set	3969
   194  0000                     _PORTBbits	set	3969
   195  0000                     _PORTC	set	3970
   196  0000                     _PORTD	set	3971
   197  0000                     _PORTE	set	3972
   198  0000                     _RCSTA	set	4011
   199  0000                     _RCSTAbits	set	4011
   200  0000                     _SPBRG	set	4015
   201  0000                     _SPBRGH	set	4016
   202  0000                     _TRISA	set	3986
   203  0000                     _TRISB	set	3987
   204  0000                     _TRISC	set	3988
   205  0000                     _TRISCbits	set	3988
   206  0000                     _TRISD	set	3989
   207  0000                     _TRISE	set	3990
   208  0000                     _TXREG	set	4013
   209  0000                     _TXSTA	set	4012
   210  0000                     _TXSTAbits	set	4012
   211  0000                     _TRMT	set	32097
   212  001077                     STR_3:
   213  001077  20                 	db	32
   214  001078  54                 	db	84	;'T'
   215  001079  65                 	db	101	;'e'
   216  00107A  6D                 	db	109	;'m'
   217  00107B  70                 	db	112	;'p'
   218  00107C  65                 	db	101	;'e'
   219  00107D  72                 	db	114	;'r'
   220  00107E  61                 	db	97	;'a'
   221  00107F  74                 	db	116	;'t'
   222  001080  75                 	db	117	;'u'
   223  001081  72                 	db	114	;'r'
   224  001082  65                 	db	101	;'e'
   225  001083  20                 	db	32
   226  001084  3D                 	db	61	;'='
   227  001085  20                 	db	32
   228  001086  25                 	db	37
   229  001087  64                 	db	100	;'d'
   230  001088  20                 	db	32
   231  001089  46                 	db	70	;'F'
   232  00108A  20                 	db	32
   233  00108B  0D                 	db	13
   234  00108C  20                 	db	32
   235  00108D  0A                 	db	10
   236  00108E  00                 	db	0
   237  00108F                     STR_4:
   238  00108F  4C                 	db	76	;'L'
   239  001090  69                 	db	105	;'i'
   240  001091  67                 	db	103	;'g'
   241  001092  68                 	db	104	;'h'
   242  001093  74                 	db	116	;'t'
   243  001094  20                 	db	32
   244  001095  56                 	db	86	;'V'
   245  001096  6F                 	db	111	;'o'
   246  001097  6C                 	db	108	;'l'
   247  001098  74                 	db	116	;'t'
   248  001099  20                 	db	32
   249  00109A  3D                 	db	61	;'='
   250  00109B  20                 	db	32
   251  00109C  25                 	db	37
   252  00109D  64                 	db	100	;'d'
   253  00109E  20                 	db	32
   254  00109F  6D                 	db	109	;'m'
   255  0010A0  56                 	db	86	;'V'
   256  0010A1  20                 	db	32
   257  0010A2  0D                 	db	13
   258  0010A3  0A                 	db	10
   259  0010A4  0A                 	db	10
   260  0010A5  00                 	db	0
   261  0010A6                     STR_2:
   262  0010A6  56                 	db	86	;'V'
   263  0010A7  6F                 	db	111	;'o'
   264  0010A8  6C                 	db	108	;'l'
   265  0010A9  74                 	db	116	;'t'
   266  0010AA  61                 	db	97	;'a'
   267  0010AB  67                 	db	103	;'g'
   268  0010AC  65                 	db	101	;'e'
   269  0010AD  20                 	db	32
   270  0010AE  3D                 	db	61	;'='
   271  0010AF  20                 	db	32
   272  0010B0  25                 	db	37
   273  0010B1  66                 	db	102	;'f'
   274  0010B2  20                 	db	32
   275  0010B3  28                 	db	40
   276  0010B4  6D                 	db	109	;'m'
   277  0010B5  56                 	db	86	;'V'
   278  0010B6  29                 	db	41
   279  0010B7  0D                 	db	13
   280  0010B8  0A                 	db	10
   281  0010B9  00                 	db	0
   282  0010BA                     STR_1:
   283  0010BA  53                 	db	83	;'S'
   284  0010BB  74                 	db	116	;'t'
   285  0010BC  65                 	db	101	;'e'
   286  0010BD  70                 	db	112	;'p'
   287  0010BE  73                 	db	115	;'s'
   288  0010BF  20                 	db	32
   289  0010C0  2D                 	db	45
   290  0010C1  20                 	db	32
   291  0010C2  25                 	db	37
   292  0010C3  64                 	db	100	;'d'
   293  0010C4  20                 	db	32
   294  0010C5  0D                 	db	13
   295  0010C6  0A                 	db	10
   296  0010C7  00                 	db	0
   297                           
   298                           ; #config settings
   299  0010C8  00                 	db	0	; dummy byte at the end
   300  0000                     
   301                           	psect	cinit
   302  002D0A                     __pcinit:
   303                           	opt stack 0
   304  002D0A                     start_initialization:
   305                           	opt stack 0
   306  002D0A                     __initialization:
   307                           	opt stack 0
   308                           
   309                           ; Clear objects allocated to COMRAM (10 bytes)
   310  002D0A  EE00  F075         	lfsr	0,__pbssCOMRAM
   311  002D0E  0E0A               	movlw	10
   312  002D10                     clear_0:
   313  002D10  6AEE               	clrf	postinc0,c
   314  002D12  06E8               	decf	wreg,f,c
   315  002D14  E1FD               	bnz	clear_0
   316                           
   317                           ; Initialize objects allocated to BANK0 (20 bytes)
   318                           ; load TBLPTR registers with __pidataBANK0
   319  002D16  0E1C               	movlw	low __pidataBANK0
   320  002D18  6EF6               	movwf	tblptrl,c
   321  002D1A  0E2E               	movlw	high __pidataBANK0
   322  002D1C  6EF7               	movwf	tblptrh,c
   323  002D1E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   324  002D20  6EF8               	movwf	tblptru,c
   325  002D22  EE00  F080         	lfsr	0,__pdataBANK0
   326  002D26  EE10 F014          	lfsr	1,20
   327  002D2A                     copy_data0:
   328  002D2A  0009               	tblrd		*+
   329  002D2C  CFF5 FFEE          	movff	tablat,postinc0
   330  002D30  50E5               	movf	postdec1,w,c
   331  002D32  50E1               	movf	fsr1l,w,c
   332  002D34  E1FA               	bnz	copy_data0
   333  002D36                     end_of_initialization:
   334                           	opt stack 0
   335  002D36                     __end_of__initialization:
   336                           	opt stack 0
   337  002D36  0E00               	movlw	low (__Lmediumconst shr (0+16))
   338  002D38  6EF8               	movwf	tblptru,c
   339  002D3A  0100               	movlb	0
   340  002D3C  EF1E  F00F         	goto	_main	;jump to C main() function
   341                           tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           tblptrl	equ	0xFF6
   344                           tablat	equ	0xFF5
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           postdec1	equ	0xFE5
   348                           fsr1l	equ	0xFE1
   349                           
   350                           	psect	bssCOMRAM
   351  000075                     __pbssCOMRAM:
   352                           	opt stack 0
   353  000075                     _F:
   354                           	opt stack 0
   355  000075                     	ds	3
   356  000078                     _Tc:
   357                           	opt stack 0
   358  000078                     	ds	3
   359  00007B                     _nstep:
   360                           	opt stack 0
   361  00007B                     	ds	2
   362  00007D                     _tempF:
   363                           	opt stack 0
   364  00007D                     	ds	2
   365                           tblptru	equ	0xFF8
   366                           tblptrh	equ	0xFF7
   367                           tblptrl	equ	0xFF6
   368                           tablat	equ	0xFF5
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           postdec1	equ	0xFE5
   372                           fsr1l	equ	0xFE1
   373                           
   374                           	psect	dataBANK0
   375  000080                     __pdataBANK0:
   376                           	opt stack 0
   377  000080                     _array:
   378                           	opt stack 0
   379  000080                     	ds	20
   380                           tblptru	equ	0xFF8
   381                           tblptrh	equ	0xFF7
   382                           tblptrl	equ	0xFF6
   383                           tablat	equ	0xFF5
   384                           postinc0	equ	0xFEE
   385                           wreg	equ	0xFE8
   386                           postdec1	equ	0xFE5
   387                           fsr1l	equ	0xFE1
   388                           
   389                           	psect	cstackCOMRAM
   390  000001                     __pcstackCOMRAM:
   391                           	opt stack 0
   392  000001                     ?_Get_Full_ADC:
   393                           	opt stack 0
   394  000001                     ?___awmod:
   395                           	opt stack 0
   396  000001                     ?___ftpack:
   397                           	opt stack 0
   398  000001                     ?___ftneg:
   399                           	opt stack 0
   400  000001                     ?__tdiv_to_l_:
   401                           	opt stack 0
   402  000001                     ?__div_to_l_:
   403                           	opt stack 0
   404  000001                     ?___lldiv:
   405                           	opt stack 0
   406  000001                     putch@c:
   407                           	opt stack 0
   408  000001                     Select_ADC_Channel@channel:
   409                           	opt stack 0
   410  000001                     DO_DISPLAY_7SEG_Lower@digit:
   411                           	opt stack 0
   412  000001                     DO_DISPLAY_7SEG_Upper@digit:
   413                           	opt stack 0
   414  000001                     WAIT_1_SEC@j:
   415                           	opt stack 0
   416  000001                     DO_DISPLAY_D1@T:
   417                           	opt stack 0
   418  000001                     DO_DISPLAY_D3@mv:
   419                           	opt stack 0
   420  000001                     OpenUSART@spbrg:
   421                           	opt stack 0
   422  000001                     ___awmod@dividend:
   423                           	opt stack 0
   424  000001                     __div_to_l_@f1:
   425                           	opt stack 0
   426  000001                     ___ftpack@arg:
   427                           	opt stack 0
   428  000001                     __tdiv_to_l_@f1:
   429                           	opt stack 0
   430  000001                     ___ftge@ff1:
   431                           	opt stack 0
   432  000001                     ___ftneg@f1:
   433                           	opt stack 0
   434  000001                     ___lldiv@dividend:
   435                           	opt stack 0
   436                           
   437                           ; 4 bytes @ 0x0
   438  000001                     	ds	1
   439  000002                     DO_DISPLAY_7SEG_Lower@PC:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x1
   443  000002                     	ds	1
   444  000003                     ??_Get_Full_ADC:
   445  000003                     DO_DISPLAY_7SEG_Lower@PE:
   446                           	opt stack 0
   447  000003                     OpenUSART@config:
   448                           	opt stack 0
   449  000003                     ___awmod@divisor:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x2
   453  000003                     	ds	1
   454  000004                     ___ftpack@exp:
   455                           	opt stack 0
   456  000004                     __div_to_l_@f2:
   457                           	opt stack 0
   458  000004                     __tdiv_to_l_@f2:
   459                           	opt stack 0
   460  000004                     ___ftge@ff2:
   461                           	opt stack 0
   462                           
   463                           ; 3 bytes @ 0x3
   464  000004                     	ds	1
   465  000005                     ___awmod@counter:
   466                           	opt stack 0
   467  000005                     ___ftpack@sign:
   468                           	opt stack 0
   469  000005                     Get_Full_ADC@result:
   470                           	opt stack 0
   471  000005                     ___lldiv@divisor:
   472                           	opt stack 0
   473                           
   474                           ; 4 bytes @ 0x4
   475  000005                     	ds	1
   476  000006                     ??___ftpack:
   477  000006                     ___awmod@sign:
   478                           	opt stack 0
   479                           
   480                           ; 1 bytes @ 0x5
   481  000006                     	ds	1
   482  000007                     ??__tdiv_to_l_:
   483  000007                     ??___ftge:
   484  000007                     ?___awdiv:
   485                           	opt stack 0
   486  000007                     ___awdiv@dividend:
   487                           	opt stack 0
   488  000007                     __div_to_l_@quot:
   489                           	opt stack 0
   490                           
   491                           ; 4 bytes @ 0x6
   492  000007                     	ds	2
   493  000009                     ?___awtoft:
   494                           	opt stack 0
   495  000009                     ?___lltoft:
   496                           	opt stack 0
   497  000009                     ___awdiv@divisor:
   498                           	opt stack 0
   499  000009                     ___awtoft@c:
   500                           	opt stack 0
   501  000009                     ___lldiv@quotient:
   502                           	opt stack 0
   503  000009                     ___lltoft@c:
   504                           	opt stack 0
   505                           
   506                           ; 4 bytes @ 0x8
   507  000009                     	ds	1
   508  00000A                     __tdiv_to_l_@quot:
   509                           	opt stack 0
   510                           
   511                           ; 4 bytes @ 0x9
   512  00000A                     	ds	1
   513  00000B                     ___awdiv@counter:
   514                           	opt stack 0
   515  00000B                     __div_to_l_@cntr:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0xA
   519  00000B                     	ds	1
   520  00000C                     ___awdiv@sign:
   521                           	opt stack 0
   522  00000C                     ___awtoft@sign:
   523                           	opt stack 0
   524  00000C                     __div_to_l_@exp1:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0xB
   528  00000C                     	ds	1
   529  00000D                     ??___lltoft:
   530  00000D                     ___lldiv@counter:
   531                           	opt stack 0
   532  00000D                     ___awdiv@quotient:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0xC
   536  00000D                     	ds	1
   537  00000E                     ?___llmod:
   538                           	opt stack 0
   539  00000E                     __tdiv_to_l_@cntr:
   540                           	opt stack 0
   541  00000E                     ___llmod@dividend:
   542                           	opt stack 0
   543                           
   544                           ; 4 bytes @ 0xD
   545  00000E                     	ds	1
   546  00000F                     ?___wmul:
   547                           	opt stack 0
   548  00000F                     __tdiv_to_l_@exp1:
   549                           	opt stack 0
   550  00000F                     DO_DISPLAY_D2@T:
   551                           	opt stack 0
   552  00000F                     ___wmul@multiplier:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0xE
   556  00000F                     	ds	2
   557  000011                     ___lltoft@exp:
   558                           	opt stack 0
   559  000011                     ___wmul@multiplicand:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x10
   563  000011                     	ds	1
   564  000012                     ___llmod@divisor:
   565                           	opt stack 0
   566                           
   567                           ; 4 bytes @ 0x11
   568  000012                     	ds	1
   569  000013                     ___wmul@product:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x12
   573  000013                     	ds	2
   574  000015                     ?___ftmul:
   575                           	opt stack 0
   576  000015                     ___ftmul@f1:
   577                           	opt stack 0
   578                           
   579                           ; 3 bytes @ 0x14
   580  000015                     	ds	1
   581  000016                     ___llmod@counter:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x15
   585  000016                     	ds	2
   586  000018                     ___ftmul@f2:
   587                           	opt stack 0
   588                           
   589                           ; 3 bytes @ 0x17
   590  000018                     	ds	3
   591  00001B                     ??___ftmul:
   592                           
   593                           ; 0 bytes @ 0x1A
   594  00001B                     	ds	3
   595  00001E                     ___ftmul@exp:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x1D
   599  00001E                     	ds	1
   600  00001F                     ___ftmul@f3_as_product:
   601                           	opt stack 0
   602                           
   603                           ; 3 bytes @ 0x1E
   604  00001F                     	ds	3
   605  000022                     ___ftmul@cntr:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x21
   609  000022                     	ds	1
   610  000023                     ___ftmul@sign:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x22
   614  000023                     	ds	1
   615  000024                     ?_fround:
   616                           	opt stack 0
   617  000024                     ?_scale:
   618                           	opt stack 0
   619                           
   620                           ; 3 bytes @ 0x23
   621  000024                     	ds	3
   622  000027                     _fround$1184:
   623                           	opt stack 0
   624  000027                     _scale$1185:
   625                           	opt stack 0
   626                           
   627                           ; 3 bytes @ 0x26
   628  000027                     	ds	3
   629  00002A                     scale@scl:
   630                           	opt stack 0
   631  00002A                     _fround$1183:
   632                           	opt stack 0
   633                           
   634                           ; 3 bytes @ 0x29
   635  00002A                     	ds	1
   636  00002B                     ?___fttol:
   637                           	opt stack 0
   638  00002B                     ___fttol@f1:
   639                           	opt stack 0
   640                           
   641                           ; 3 bytes @ 0x2A
   642  00002B                     	ds	2
   643  00002D                     fround@prec:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x2C
   647  00002D                     	ds	1
   648  00002E                     ?___ftadd:
   649                           	opt stack 0
   650  00002E                     ___ftadd@f1:
   651                           	opt stack 0
   652                           
   653                           ; 3 bytes @ 0x2D
   654  00002E                     	ds	1
   655  00002F                     ??___fttol:
   656                           
   657                           ; 0 bytes @ 0x2E
   658  00002F                     	ds	2
   659  000031                     ___ftadd@f2:
   660                           	opt stack 0
   661                           
   662                           ; 3 bytes @ 0x30
   663  000031                     	ds	3
   664  000034                     ??___ftadd:
   665  000034                     ___fttol@sign1:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x33
   669  000034                     	ds	1
   670  000035                     ___fttol@lval:
   671                           	opt stack 0
   672                           
   673                           ; 4 bytes @ 0x34
   674  000035                     	ds	2
   675  000037                     ___ftadd@sign:
   676                           	opt stack 0
   677                           
   678                           ; 1 bytes @ 0x36
   679  000037                     	ds	1
   680  000038                     ___ftadd@exp2:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x37
   684  000038                     	ds	1
   685  000039                     ___ftadd@exp1:
   686                           	opt stack 0
   687  000039                     ___fttol@exp1:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x38
   691  000039                     	ds	1
   692  00003A                     ?___ftdiv:
   693                           	opt stack 0
   694  00003A                     ?___ftsub:
   695                           	opt stack 0
   696  00003A                     ___ftdiv@f1:
   697                           	opt stack 0
   698  00003A                     ___ftsub@f1:
   699                           	opt stack 0
   700                           
   701                           ; 3 bytes @ 0x39
   702  00003A                     	ds	3
   703  00003D                     ___ftdiv@f2:
   704                           	opt stack 0
   705  00003D                     ___ftsub@f2:
   706                           	opt stack 0
   707                           
   708                           ; 3 bytes @ 0x3C
   709  00003D                     	ds	3
   710  000040                     ??___ftdiv:
   711  000040                     ?_printf:
   712                           	opt stack 0
   713  000040                     printf@f:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x3F
   717  000040                     	ds	3
   718  000043                     ___ftdiv@cntr:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x42
   722  000043                     	ds	1
   723  000044                     ___ftdiv@f3:
   724                           	opt stack 0
   725                           
   726                           ; 3 bytes @ 0x43
   727  000044                     	ds	1
   728  000045                     ??_printf:
   729                           
   730                           ; 0 bytes @ 0x44
   731  000045                     	ds	2
   732  000047                     ___ftdiv@exp:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0x46
   736  000047                     	ds	1
   737  000048                     ___ftdiv@sign:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x47
   741  000048                     	ds	3
   742  00004B                     _printf$1186:
   743                           	opt stack 0
   744                           
   745                           ; 3 bytes @ 0x4A
   746  00004B                     	ds	3
   747  00004E                     printf@ap:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x4D
   751  00004E                     	ds	2
   752  000050                     printf@flag:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x4F
   756  000050                     	ds	2
   757  000052                     printf@prec:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0x51
   761  000052                     	ds	2
   762  000054                     printf@val:
   763                           	opt stack 0
   764                           
   765                           ; 4 bytes @ 0x53
   766  000054                     	ds	4
   767  000058                     printf@exp:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x57
   771  000058                     	ds	2
   772  00005A                     printf@tmpval:
   773                           	opt stack 0
   774                           
   775                           ; 4 bytes @ 0x59
   776  00005A                     	ds	4
   777  00005E                     printf@fval:
   778                           	opt stack 0
   779                           
   780                           ; 3 bytes @ 0x5D
   781  00005E                     	ds	3
   782  000061                     printf@c:
   783                           	opt stack 0
   784                           
   785                           ; 1 bytes @ 0x60
   786  000061                     	ds	1
   787  000062                     ??_main:
   788                           
   789                           ; 0 bytes @ 0x61
   790  000062                     	ds	2
   791  000064                     main@temperature_C:
   792                           	opt stack 0
   793                           
   794                           ; 3 bytes @ 0x63
   795  000064                     	ds	3
   796  000067                     main@temperature_F:
   797                           	opt stack 0
   798                           
   799                           ; 3 bytes @ 0x66
   800  000067                     	ds	3
   801  00006A                     main@U:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0x69
   805  00006A                     	ds	1
   806  00006B                     main@L:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x6A
   810  00006B                     	ds	1
   811  00006C                     main@voltage_mv:
   812                           	opt stack 0
   813                           
   814                           ; 3 bytes @ 0x6B
   815  00006C                     	ds	3
   816  00006F                     main@voltage_mv1:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x6E
   820  00006F                     	ds	2
   821  000071                     main@num_step:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x70
   825  000071                     	ds	2
   826  000073                     main@tempF:
   827                           	opt stack 0
   828                           
   829                           ; 2 bytes @ 0x72
   830  000073                     	ds	2
   831                           tblptru	equ	0xFF8
   832                           tblptrh	equ	0xFF7
   833                           tblptrl	equ	0xFF6
   834                           tablat	equ	0xFF5
   835                           postinc0	equ	0xFEE
   836                           wreg	equ	0xFE8
   837                           postdec1	equ	0xFE5
   838                           fsr1l	equ	0xFE1
   839                           
   840 ;;
   841 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   842 ;;
   843 ;; *************** function _main *****************
   844 ;; Defined at:
   845 ;;		line 207 in file "Lab4p1.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  voltage_mv      3  107[COMRAM] float 
   850 ;;  temperature_    3  102[COMRAM] float 
   851 ;;  temperature_    3   99[COMRAM] float 
   852 ;;  tempF           2  114[COMRAM] int 
   853 ;;  num_step        2  112[COMRAM] int 
   854 ;;  voltage_mv1     2  110[COMRAM] int 
   855 ;;  L               1  106[COMRAM] unsigned char 
   856 ;;  U               1  105[COMRAM] unsigned char 
   857 ;; Return value:  Size  Location     Type
   858 ;;		None               void
   859 ;; Registers used:
   860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;Total ram usage:       19 bytes
   871 ;; Hardware stack levels required when called:    4
   872 ;; This function calls:
   873 ;;		_DO_DISPLAY_7SEG_Lower
   874 ;;		_DO_DISPLAY_7SEG_Upper
   875 ;;		_DO_DISPLAY_D1
   876 ;;		_DO_DISPLAY_D2
   877 ;;		_DO_DISPLAY_D3
   878 ;;		_Get_Full_ADC
   879 ;;		_Init_ADC
   880 ;;		_Select_ADC_Channel
   881 ;;		_WAIT_1_SEC
   882 ;;		___awdiv
   883 ;;		___awmod
   884 ;;		___awtoft
   885 ;;		___ftadd
   886 ;;		___ftdiv
   887 ;;		___ftmul
   888 ;;		___ftneg
   889 ;;		___fttol
   890 ;;		_init_UART
   891 ;;		_printf
   892 ;; This function is called by:
   893 ;;		Startup code after reset
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text0
   898  001E3C                     __ptext0:
   899                           	opt stack 0
   900  001E3C                     _main:
   901                           	opt stack 27
   902                           
   903                           ;Lab4p1.c: 209: init_UART();
   904                           
   905                           ;incstack = 0
   906  001E3C  EC18  F017         	call	_init_UART	;wreg free
   907                           
   908                           ;Lab4p1.c: 210: Init_ADC();
   909  001E40  EC29  F017         	call	_Init_ADC	;wreg free
   910                           
   911                           ;Lab4p1.c: 211: TRISA = 0x0F;
   912  001E44  0E0F               	movlw	15
   913  001E46  6E92               	movwf	3986,c	;volatile
   914                           
   915                           ;Lab4p1.c: 212: TRISB = 0x00;
   916  001E48  0E00               	movlw	0
   917  001E4A  6E93               	movwf	3987,c	;volatile
   918                           
   919                           ;Lab4p1.c: 213: TRISC = 0x00;
   920  001E4C  0E00               	movlw	0
   921  001E4E  6E94               	movwf	3988,c	;volatile
   922                           
   923                           ;Lab4p1.c: 214: TRISD = 0x00;
   924  001E50  0E00               	movlw	0
   925  001E52  6E95               	movwf	3989,c	;volatile
   926                           
   927                           ;Lab4p1.c: 215: TRISE = 0x00;
   928  001E54  0E00               	movlw	0
   929  001E56  6E96               	movwf	3990,c	;volatile
   930                           
   931                           ;Lab4p1.c: 216: PORTC = 0xFF;
   932  001E58  6882               	setf	3970,c	;volatile
   933                           
   934                           ;Lab4p1.c: 217: PORTD = 0xFF;
   935  001E5A  6883               	setf	3971,c	;volatile
   936                           
   937                           ;Lab4p1.c: 218: PORTB = 0x00;
   938  001E5C  0E00               	movlw	0
   939  001E5E  6E81               	movwf	3969,c	;volatile
   940  001E60  D000               	goto	l2889
   941  001E62                     l2889:
   942                           
   943                           ;Lab4p1.c: 221: {
   944                           ;Lab4p1.c: 222: Select_ADC_Channel(0);
   945  001E62  0E00               	movlw	0
   946  001E64  EC30  F017         	call	_Select_ADC_Channel
   947                           
   948                           ;Lab4p1.c: 223: int num_step = Get_Full_ADC();
   949  001E68  ECCD  F016         	call	_Get_Full_ADC	;wreg free
   950  001E6C  C001  F071         	movff	?_Get_Full_ADC,main@num_step
   951  001E70  C002  F072         	movff	?_Get_Full_ADC+1,main@num_step+1
   952                           
   953                           ;Lab4p1.c: 224: float voltage_mv = num_step * 4.0;
   954  001E74  C071  F009         	movff	main@num_step,___awtoft@c
   955  001E78  C072  F00A         	movff	main@num_step+1,___awtoft@c+1
   956  001E7C  EC67  F016         	call	___awtoft	;wreg free
   957  001E80  C009  F015         	movff	?___awtoft,___ftmul@f1
   958  001E84  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
   959  001E88  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
   960  001E8C  0E00               	movlw	0
   961  001E8E  6E18               	movwf	___ftmul@f2,c
   962  001E90  0E80               	movlw	128
   963  001E92  6E19               	movwf	___ftmul@f2+1,c
   964  001E94  0E40               	movlw	64
   965  001E96  6E1A               	movwf	___ftmul@f2+2,c
   966  001E98  EC11  F012         	call	___ftmul	;wreg free
   967  001E9C  C015  F06C         	movff	?___ftmul,main@voltage_mv
   968  001EA0  C016  F06D         	movff	?___ftmul+1,main@voltage_mv+1
   969  001EA4  C017  F06E         	movff	?___ftmul+2,main@voltage_mv+2
   970                           
   971                           ;Lab4p1.c: 225: float temperature_C = (1035.0 - voltage_mv) / 5.50;
   972  001EA8  0E60               	movlw	96
   973  001EAA  6E31               	movwf	___ftadd@f2,c
   974  001EAC  0E81               	movlw	129
   975  001EAE  6E32               	movwf	___ftadd@f2+1,c
   976  001EB0  0E44               	movlw	68
   977  001EB2  6E33               	movwf	___ftadd@f2+2,c
   978  001EB4  C06C  F001         	movff	main@voltage_mv,___ftneg@f1
   979  001EB8  C06D  F002         	movff	main@voltage_mv+1,___ftneg@f1+1
   980  001EBC  C06E  F003         	movff	main@voltage_mv+2,___ftneg@f1+2
   981  001EC0  ECE0  F016         	call	___ftneg	;wreg free
   982  001EC4  C001  F02E         	movff	?___ftneg,___ftadd@f1
   983  001EC8  C002  F02F         	movff	?___ftneg+1,___ftadd@f1+1
   984  001ECC  C003  F030         	movff	?___ftneg+2,___ftadd@f1+2
   985  001ED0  EC22  F010         	call	___ftadd	;wreg free
   986  001ED4  C02E  F03A         	movff	?___ftadd,___ftdiv@f1
   987  001ED8  C02F  F03B         	movff	?___ftadd+1,___ftdiv@f1+1
   988  001EDC  C030  F03C         	movff	?___ftadd+2,___ftdiv@f1+2
   989  001EE0  0E00               	movlw	0
   990  001EE2  6E3D               	movwf	___ftdiv@f2,c
   991  001EE4  0EB0               	movlw	176
   992  001EE6  6E3E               	movwf	___ftdiv@f2+1,c
   993  001EE8  0E40               	movlw	64
   994  001EEA  6E3F               	movwf	___ftdiv@f2+2,c
   995  001EEC  EC00  F013         	call	___ftdiv	;wreg free
   996  001EF0  C03A  F064         	movff	?___ftdiv,main@temperature_C
   997  001EF4  C03B  F065         	movff	?___ftdiv+1,main@temperature_C+1
   998  001EF8  C03C  F066         	movff	?___ftdiv+2,main@temperature_C+2
   999                           
  1000                           ;Lab4p1.c: 226: float temperature_F = (1.80 * temperature_C) + 32.0;
  1001  001EFC  0E66               	movlw	102
  1002  001EFE  6E18               	movwf	___ftmul@f2,c
  1003  001F00  0EE6               	movlw	230
  1004  001F02  6E19               	movwf	___ftmul@f2+1,c
  1005  001F04  0E3F               	movlw	63
  1006  001F06  6E1A               	movwf	___ftmul@f2+2,c
  1007  001F08  C064  F015         	movff	main@temperature_C,___ftmul@f1
  1008  001F0C  C065  F016         	movff	main@temperature_C+1,___ftmul@f1+1
  1009  001F10  C066  F017         	movff	main@temperature_C+2,___ftmul@f1+2
  1010  001F14  EC11  F012         	call	___ftmul	;wreg free
  1011  001F18  C015  F02E         	movff	?___ftmul,___ftadd@f1
  1012  001F1C  C016  F02F         	movff	?___ftmul+1,___ftadd@f1+1
  1013  001F20  C017  F030         	movff	?___ftmul+2,___ftadd@f1+2
  1014  001F24  0E00               	movlw	0
  1015  001F26  6E31               	movwf	___ftadd@f2,c
  1016  001F28  0E00               	movlw	0
  1017  001F2A  6E32               	movwf	___ftadd@f2+1,c
  1018  001F2C  0E42               	movlw	66
  1019  001F2E  6E33               	movwf	___ftadd@f2+2,c
  1020  001F30  EC22  F010         	call	___ftadd	;wreg free
  1021  001F34  C02E  F067         	movff	?___ftadd,main@temperature_F
  1022  001F38  C02F  F068         	movff	?___ftadd+1,main@temperature_F+1
  1023  001F3C  C030  F069         	movff	?___ftadd+2,main@temperature_F+2
  1024                           
  1025                           ;Lab4p1.c: 227: int tempF = (int) temperature_F;
  1026  001F40  C067  F02B         	movff	main@temperature_F,___fttol@f1
  1027  001F44  C068  F02C         	movff	main@temperature_F+1,___fttol@f1+1
  1028  001F48  C069  F02D         	movff	main@temperature_F+2,___fttol@f1+2
  1029  001F4C  EC8D  F012         	call	___fttol	;wreg free
  1030  001F50  C02B  F073         	movff	?___fttol,main@tempF
  1031  001F54  C02C  F074         	movff	?___fttol+1,main@tempF+1
  1032                           
  1033                           ;Lab4p1.c: 228: char U = tempF / 10;
  1034  001F58  C073  F007         	movff	main@tempF,___awdiv@dividend
  1035  001F5C  C074  F008         	movff	main@tempF+1,___awdiv@dividend+1
  1036  001F60  0E00               	movlw	0
  1037  001F62  6E0A               	movwf	___awdiv@divisor+1,c
  1038  001F64  0E0A               	movlw	10
  1039  001F66  6E09               	movwf	___awdiv@divisor,c
  1040  001F68  EC6F  F014         	call	___awdiv	;wreg free
  1041  001F6C  5007               	movf	?___awdiv,w,c
  1042  001F6E  6E6A               	movwf	main@U,c
  1043                           
  1044                           ;Lab4p1.c: 229: char L = tempF % 10;
  1045  001F70  C073  F001         	movff	main@tempF,___awmod@dividend
  1046  001F74  C074  F002         	movff	main@tempF+1,___awmod@dividend+1
  1047  001F78  0E00               	movlw	0
  1048  001F7A  6E04               	movwf	___awmod@divisor+1,c
  1049  001F7C  0E0A               	movlw	10
  1050  001F7E  6E03               	movwf	___awmod@divisor,c
  1051  001F80  EC44  F015         	call	___awmod	;wreg free
  1052  001F84  5001               	movf	?___awmod,w,c
  1053  001F86  6E6B               	movwf	main@L,c
  1054                           
  1055                           ;Lab4p1.c: 230: DO_DISPLAY_7SEG_Upper(U);
  1056  001F88  506A               	movf	main@U,w,c
  1057  001F8A  EC02  F017         	call	_DO_DISPLAY_7SEG_Upper
  1058                           
  1059                           ;Lab4p1.c: 231: DO_DISPLAY_7SEG_Lower(L);
  1060  001F8E  506B               	movf	main@L,w,c
  1061  001F90  EC00  F015         	call	_DO_DISPLAY_7SEG_Lower
  1062                           
  1063                           ;Lab4p1.c: 233: printf ("Steps - %d \r\n", num_step);
  1064  001F94  0EBA               	movlw	low STR_1
  1065  001F96  6E40               	movwf	printf@f,c
  1066  001F98  0E10               	movlw	high STR_1
  1067  001F9A  6E41               	movwf	printf@f+1,c
  1068  001F9C  C071  F042         	movff	main@num_step,?_printf+2
  1069  001FA0  C072  F043         	movff	main@num_step+1,?_printf+3
  1070  001FA4  EC65  F008         	call	_printf	;wreg free
  1071                           
  1072                           ;Lab4p1.c: 234: printf ("Voltage = %f (mV)\r\n", voltage_mv);
  1073  001FA8  0EA6               	movlw	low STR_2
  1074  001FAA  6E40               	movwf	printf@f,c
  1075  001FAC  0E10               	movlw	high STR_2
  1076  001FAE  6E41               	movwf	printf@f+1,c
  1077  001FB0  C06C  F042         	movff	main@voltage_mv,?_printf+2
  1078  001FB4  C06D  F043         	movff	main@voltage_mv+1,?_printf+3
  1079  001FB8  C06E  F044         	movff	main@voltage_mv+2,?_printf+4
  1080  001FBC  EC65  F008         	call	_printf	;wreg free
  1081                           
  1082                           ;Lab4p1.c: 235: printf (" Temperature = %d F \r \n", tempF);
  1083  001FC0  0E77               	movlw	low STR_3
  1084  001FC2  6E40               	movwf	printf@f,c
  1085  001FC4  0E10               	movlw	high STR_3
  1086  001FC6  6E41               	movwf	printf@f+1,c
  1087  001FC8  C073  F042         	movff	main@tempF,?_printf+2
  1088  001FCC  C074  F043         	movff	main@tempF+1,?_printf+3
  1089  001FD0  EC65  F008         	call	_printf	;wreg free
  1090                           
  1091                           ;Lab4p1.c: 236: DO_DISPLAY_D2(tempF);
  1092  001FD4  C073  F00F         	movff	main@tempF,DO_DISPLAY_D2@T
  1093  001FD8  C074  F010         	movff	main@tempF+1,DO_DISPLAY_D2@T+1
  1094  001FDC  ECA0  F016         	call	_DO_DISPLAY_D2	;wreg free
  1095                           
  1096                           ;Lab4p1.c: 237: DO_DISPLAY_D1(tempF);
  1097  001FE0  C073  F001         	movff	main@tempF,DO_DISPLAY_D1@T
  1098  001FE4  C074  F002         	movff	main@tempF+1,DO_DISPLAY_D1@T+1
  1099  001FE8  ECD4  F013         	call	_DO_DISPLAY_D1	;wreg free
  1100                           
  1101                           ;Lab4p1.c: 239: Select_ADC_Channel(1);
  1102  001FEC  0E01               	movlw	1
  1103  001FEE  EC30  F017         	call	_Select_ADC_Channel
  1104                           
  1105                           ;Lab4p1.c: 240: int num_step = Get_Full_ADC();
  1106  001FF2  ECCD  F016         	call	_Get_Full_ADC	;wreg free
  1107  001FF6  C001  F071         	movff	?_Get_Full_ADC,main@num_step
  1108  001FFA  C002  F072         	movff	?_Get_Full_ADC+1,main@num_step+1
  1109                           
  1110                           ;Lab4p1.c: 241: int voltage_mv1 = num_step * 4;
  1111  001FFE  C071  F062         	movff	main@num_step,??_main
  1112  002002  C072  F063         	movff	main@num_step+1,??_main+1
  1113  002006  90D8               	bcf	status,0,c
  1114  002008  3662               	rlcf	??_main,f,c
  1115  00200A  3663               	rlcf	??_main+1,f,c
  1116  00200C  90D8               	bcf	status,0,c
  1117  00200E  3662               	rlcf	??_main,f,c
  1118  002010  3663               	rlcf	??_main+1,f,c
  1119  002012  C062  F06F         	movff	??_main,main@voltage_mv1
  1120  002016  C063  F070         	movff	??_main+1,main@voltage_mv1+1
  1121                           
  1122                           ;Lab4p1.c: 242: printf ("Light Volt = %d mV \r\n\n", voltage_mv1);
  1123  00201A  0E8F               	movlw	low STR_4
  1124  00201C  6E40               	movwf	printf@f,c
  1125  00201E  0E10               	movlw	high STR_4
  1126  002020  6E41               	movwf	printf@f+1,c
  1127  002022  C06F  F042         	movff	main@voltage_mv1,?_printf+2
  1128  002026  C070  F043         	movff	main@voltage_mv1+1,?_printf+3
  1129  00202A  EC65  F008         	call	_printf	;wreg free
  1130                           
  1131                           ;Lab4p1.c: 243: DO_DISPLAY_D3(voltage_mv1);
  1132  00202E  C06F  F001         	movff	main@voltage_mv1,DO_DISPLAY_D3@mv
  1133  002032  C070  F002         	movff	main@voltage_mv1+1,DO_DISPLAY_D3@mv+1
  1134  002036  EC47  F016         	call	_DO_DISPLAY_D3	;wreg free
  1135                           
  1136                           ;Lab4p1.c: 245: WAIT_1_SEC();
  1137  00203A  ECF2  F016         	call	_WAIT_1_SEC	;wreg free
  1138  00203E  D711               	goto	l2889
  1139  002040  EF00  F000         	goto	start
  1140  002044                     __end_of_main:
  1141                           	opt stack 0
  1142                           tblptru	equ	0xFF8
  1143                           tblptrh	equ	0xFF7
  1144                           tblptrl	equ	0xFF6
  1145                           tablat	equ	0xFF5
  1146                           postinc0	equ	0xFEE
  1147                           wreg	equ	0xFE8
  1148                           postdec1	equ	0xFE5
  1149                           fsr1l	equ	0xFE1
  1150                           status	equ	0xFD8
  1151                           
  1152 ;; *************** function _printf *****************
  1153 ;; Defined at:
  1154 ;;		line 464 in file "E:\XC8\sources\common\doprnt.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  f               2   63[COMRAM] PTR const unsigned char 
  1157 ;;		 -> STR_4(23), STR_3(24), STR_2(20), STR_1(14), 
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;  tmpval          4   89[COMRAM] struct .
  1160 ;;  val             4   83[COMRAM] unsigned long 
  1161 ;;  fval            3   93[COMRAM] unsigned long 
  1162 ;;  cp              3    0        PTR const unsigned char 
  1163 ;;  exp             2   87[COMRAM] int 
  1164 ;;  prec            2   81[COMRAM] int 
  1165 ;;  flag            2   79[COMRAM] unsigned short 
  1166 ;;  ap              2   77[COMRAM] PTR void [1]
  1167 ;;		 -> ?_printf(2), 
  1168 ;;  len             2    0        unsigned int 
  1169 ;;  width           2    0        int 
  1170 ;;  c               1   96[COMRAM] char 
  1171 ;;  d               1    0        unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  2   63[COMRAM] int 
  1174 ;; Registers used:
  1175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1181 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;Total ram usage:       34 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    3
  1188 ;; This function calls:
  1189 ;;		___awdiv
  1190 ;;		___ftadd
  1191 ;;		___ftge
  1192 ;;		___ftmul
  1193 ;;		___ftneg
  1194 ;;		___ftsub
  1195 ;;		___fttol
  1196 ;;		___lldiv
  1197 ;;		___llmod
  1198 ;;		___lltoft
  1199 ;;		___wmul
  1200 ;;		__div_to_l_
  1201 ;;		__tdiv_to_l_
  1202 ;;		_fround
  1203 ;;		_putch
  1204 ;;		_scale
  1205 ;; This function is called by:
  1206 ;;		_main
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text1
  1211  0010CA                     __ptext1:
  1212                           	opt stack 0
  1213  0010CA                     _printf:
  1214                           	opt stack 27
  1215                           
  1216                           ;doprnt.c: 466: va_list ap;
  1217                           ;doprnt.c: 499: signed char c;
  1218                           ;doprnt.c: 501: int width;
  1219                           ;doprnt.c: 504: int prec;
  1220                           ;doprnt.c: 508: unsigned short flag;
  1221                           ;doprnt.c: 515: char d;
  1222                           ;doprnt.c: 516: double fval;
  1223                           ;doprnt.c: 517: int exp;
  1224                           ;doprnt.c: 523: union {
  1225                           ;doprnt.c: 524: unsigned long vd;
  1226                           ;doprnt.c: 525: double integ;
  1227                           ;doprnt.c: 526: } tmpval;
  1228                           ;doprnt.c: 528: unsigned long val;
  1229                           ;doprnt.c: 529: unsigned len;
  1230                           ;doprnt.c: 530: const char * cp;
  1231                           ;doprnt.c: 533: *ap = __va_start();
  1232                           
  1233                           ;incstack = 0
  1234  0010CA  0E42               	movlw	low (?_printf+2)
  1235  0010CC  6E4E               	movwf	printf@ap,c
  1236  0010CE  0E00               	movlw	high (?_printf+2)
  1237  0010D0  6E4F               	movwf	printf@ap+1,c
  1238                           
  1239                           ;doprnt.c: 536: while(c = *f++) {
  1240  0010D2  D393               	goto	l2811
  1241  0010D4                     l2631:
  1242                           
  1243                           ;doprnt.c: 538: if(c != '%')
  1244  0010D4  0E25               	movlw	37
  1245  0010D6  1861               	xorwf	printf@c,w,c
  1246  0010D8  B4D8               	btfsc	status,2,c
  1247  0010DA  D004               	goto	l2635
  1248                           
  1249                           ;doprnt.c: 540: {
  1250                           ;doprnt.c: 541: (putch(c) );
  1251  0010DC  5061               	movf	printf@c,w,c
  1252  0010DE  EC22  F017         	call	_putch
  1253                           
  1254                           ;doprnt.c: 542: continue;
  1255  0010E2  D38B               	goto	l2811
  1256  0010E4                     l2635:
  1257                           
  1258                           ;doprnt.c: 543: }
  1259                           ;doprnt.c: 548: flag = 0;
  1260  0010E4  0E00               	movlw	0
  1261  0010E6  6E51               	movwf	printf@flag+1,c
  1262  0010E8  0E00               	movlw	0
  1263  0010EA  6E50               	movwf	printf@flag,c
  1264                           
  1265                           ;doprnt.c: 635: switch(c = *f++) {
  1266  0010EC  D005               	goto	l2641
  1267                           
  1268                           ;doprnt.c: 638: goto alldone;
  1269                           
  1270                           ;doprnt.c: 637: case 0:
  1271  0010EE  D393               	goto	l254
  1272  0010F0                     l2637:
  1273                           
  1274                           ;doprnt.c: 663: flag |= 0x400;
  1275  0010F0  8451               	bsf	printf@flag+1,2,c
  1276                           
  1277                           ;doprnt.c: 698: case 'i':
  1278                           ;doprnt.c: 699: break;
  1279                           
  1280                           ;doprnt.c: 697: case 'd':
  1281                           
  1282                           ;doprnt.c: 664: break;
  1283  0010F2  D018               	goto	l2643
  1284                           
  1285                           ;doprnt.c: 813: continue;
  1286                           
  1287                           ;doprnt.c: 802: default:
  1288  0010F4  D382               	goto	l2811
  1289                           
  1290                           ;doprnt.c: 822: }
  1291  0010F6  D016               	goto	l2643
  1292  0010F8                     l2641:
  1293  0010F8  C040  FFF6         	movff	printf@f,tblptrl
  1294  0010FC  C041  FFF7         	movff	printf@f+1,tblptrh
  1295  001100  4A40               	infsnz	printf@f,f,c
  1296  001102  2A41               	incf	printf@f+1,f,c
  1297  001104                     	if	0	;tblptru may be non-zero
  1298  001104                     	endif
  1299  001104                     	if	0	;tblptru may be non-zero
  1300  001104                     	endif
  1301  001104  0008               	tblrd		*
  1302  001106  CFF5 F061          	movff	tablat,printf@c
  1303  00110A  5061               	movf	printf@c,w,c
  1304                           
  1305                           ; Switch size 1, requested type "space"
  1306                           ; Number of cases is 4, Range of values is 0 to 105
  1307                           ; switch strategies available:
  1308                           ; Name         Instructions Cycles
  1309                           ; simple_byte           13     7 (average)
  1310                           ;	Chosen strategy is simple_byte
  1311  00110C  0A00               	xorlw	0	; case 0
  1312  00110E  B4D8               	btfsc	status,2,c
  1313  001110  D382               	goto	l254
  1314  001112  0A64               	xorlw	100	; case 100
  1315  001114  B4D8               	btfsc	status,2,c
  1316  001116  D006               	goto	l2643
  1317  001118  0A02               	xorlw	2	; case 102
  1318  00111A  B4D8               	btfsc	status,2,c
  1319  00111C  D7E9               	goto	l2637
  1320  00111E  0A0F               	xorlw	15	; case 105
  1321  001120  A4D8               	btfss	status,2,c
  1322  001122  D36B               	goto	l2811
  1323  001124                     l2643:
  1324                           
  1325                           ;doprnt.c: 825: if(flag & (0x700)) {
  1326  001124  0E07               	movlw	7
  1327  001126  1451               	andwf	printf@flag+1,w,c
  1328  001128  B4D8               	btfsc	status,2,c
  1329  00112A  D2CA               	goto	l2775
  1330                           
  1331                           ;doprnt.c: 829: prec = 6;
  1332  00112C  0E00               	movlw	0
  1333  00112E  6E53               	movwf	printf@prec+1,c
  1334  001130  0E06               	movlw	6
  1335  001132  6E52               	movwf	printf@prec,c
  1336                           
  1337                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1338  001134  C04E  FFD9         	movff	printf@ap,fsr2l
  1339  001138  C04F  FFDA         	movff	printf@ap+1,fsr2h
  1340  00113C  CFDE F05E          	movff	postinc2,printf@fval
  1341  001140  CFDE F05F          	movff	postinc2,printf@fval+1
  1342  001144  CFDD F060          	movff	postdec2,printf@fval+2
  1343  001148  0E03               	movlw	3
  1344  00114A  264E               	addwf	printf@ap,f,c
  1345  00114C  0E00               	movlw	0
  1346  00114E  224F               	addwfc	printf@ap+1,f,c
  1347                           
  1348                           ;doprnt.c: 831: if(fval < 0.0) {
  1349  001150  AE60               	btfss	printf@fval+2,7,c
  1350  001152  D011               	goto	l2657
  1351                           
  1352                           ;doprnt.c: 832: fval = -fval;
  1353  001154  C05E  F001         	movff	printf@fval,___ftneg@f1
  1354  001158  C05F  F002         	movff	printf@fval+1,___ftneg@f1+1
  1355  00115C  C060  F003         	movff	printf@fval+2,___ftneg@f1+2
  1356  001160  ECE0  F016         	call	___ftneg	;wreg free
  1357  001164  C001  F05E         	movff	?___ftneg,printf@fval
  1358  001168  C002  F05F         	movff	?___ftneg+1,printf@fval+1
  1359  00116C  C003  F060         	movff	?___ftneg+2,printf@fval+2
  1360                           
  1361                           ;doprnt.c: 833: flag |= 0x03;
  1362  001170  0E03               	movlw	3
  1363  001172  1250               	iorwf	printf@flag,f,c
  1364  001174  D000               	goto	l2657
  1365  001176                     l2657:
  1366                           
  1367                           ;doprnt.c: 834: }
  1368                           ;doprnt.c: 835: exp = 0;
  1369  001176  0E00               	movlw	0
  1370  001178  6E59               	movwf	printf@exp+1,c
  1371  00117A  0E00               	movlw	0
  1372  00117C  6E58               	movwf	printf@exp,c
  1373                           
  1374                           ;doprnt.c: 836: if( fval!=0) {
  1375  00117E  505E               	movf	printf@fval,w,c
  1376  001180  105F               	iorwf	printf@fval+1,w,c
  1377  001182  1060               	iorwf	printf@fval+2,w,c
  1378  001184  B4D8               	btfsc	status,2,c
  1379  001186  D085               	goto	l2685
  1380                           
  1381                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1382  001188  0E82               	movlw	130
  1383  00118A  6E45               	movwf	??_printf& (0+255),c
  1384  00118C  0EFF               	movlw	255
  1385  00118E  6E46               	movwf	(??_printf+1)& (0+255),c
  1386  001190  C05E  F047         	movff	printf@fval,??_printf+2
  1387  001194  C05F  F048         	movff	printf@fval+1,??_printf+3
  1388  001198  C060  F049         	movff	printf@fval+2,??_printf+4
  1389  00119C  C061  F04A         	movff	printf@fval+3,??_printf+5
  1390  0011A0  0E10               	movlw	16
  1391  0011A2  D005               	goto	u2880
  1392  0011A4                     u2885:
  1393  0011A4  90D8               	bcf	status,0,c
  1394  0011A6  324A               	rrcf	??_printf+5,f,c
  1395  0011A8  3249               	rrcf	??_printf+4,f,c
  1396  0011AA  3248               	rrcf	??_printf+3,f,c
  1397  0011AC  3247               	rrcf	??_printf+2,f,c
  1398  0011AE                     u2880:
  1399  0011AE  2EE8               	decfsz	wreg,f,c
  1400  0011B0  D7F9               	goto	u2885
  1401  0011B2  5047               	movf	??_printf+2,w,c
  1402  0011B4  2445               	addwf	??_printf,w,c
  1403  0011B6  6E58               	movwf	printf@exp,c
  1404  0011B8  0E00               	movlw	0
  1405  0011BA  2046               	addwfc	??_printf+1,w,c
  1406  0011BC  6E59               	movwf	printf@exp+1,c
  1407                           
  1408                           ;doprnt.c: 838: exp--;
  1409  0011BE  0658               	decf	printf@exp,f,c
  1410  0011C0  A0D8               	btfss	status,0,c
  1411  0011C2  0659               	decf	printf@exp+1,f,c
  1412                           
  1413                           ;doprnt.c: 839: exp *= 3;
  1414  0011C4  C058  F00F         	movff	printf@exp,___wmul@multiplier
  1415  0011C8  C059  F010         	movff	printf@exp+1,___wmul@multiplier+1
  1416  0011CC  0E00               	movlw	0
  1417  0011CE  6E12               	movwf	___wmul@multiplicand+1,c
  1418  0011D0  0E03               	movlw	3
  1419  0011D2  6E11               	movwf	___wmul@multiplicand,c
  1420  0011D4  ECB9  F016         	call	___wmul	;wreg free
  1421  0011D8  C00F  F058         	movff	?___wmul,printf@exp
  1422  0011DC  C010  F059         	movff	?___wmul+1,printf@exp+1
  1423                           
  1424                           ;doprnt.c: 840: exp /= 10;
  1425  0011E0  C058  F007         	movff	printf@exp,___awdiv@dividend
  1426  0011E4  C059  F008         	movff	printf@exp+1,___awdiv@dividend+1
  1427  0011E8  0E00               	movlw	0
  1428  0011EA  6E0A               	movwf	___awdiv@divisor+1,c
  1429  0011EC  0E0A               	movlw	10
  1430  0011EE  6E09               	movwf	___awdiv@divisor,c
  1431  0011F0  EC6F  F014         	call	___awdiv	;wreg free
  1432  0011F4  C007  F058         	movff	?___awdiv,printf@exp
  1433  0011F8  C008  F059         	movff	?___awdiv+1,printf@exp+1
  1434                           
  1435                           ;doprnt.c: 841: if(exp < 0)
  1436  0011FC  AE59               	btfss	printf@exp+1,7,c
  1437  0011FE  D004               	goto	l2673
  1438                           
  1439                           ;doprnt.c: 842: exp--;
  1440  001200  0658               	decf	printf@exp,f,c
  1441  001202  A0D8               	btfss	status,0,c
  1442  001204  0659               	decf	printf@exp+1,f,c
  1443  001206  D000               	goto	l2673
  1444  001208                     l2673:
  1445                           
  1446                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1447  001208  5058               	movf	printf@exp,w,c
  1448  00120A  0800               	sublw	0
  1449  00120C  EC0C  F00C         	call	_scale
  1450  001210  C024  F05A         	movff	?_scale,printf@tmpval
  1451  001214  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1452  001218  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1453                           
  1454                           ;doprnt.c: 847: tmpval.integ *= fval;
  1455  00121C  C05A  F015         	movff	printf@tmpval,___ftmul@f1
  1456  001220  C05B  F016         	movff	printf@tmpval+1,___ftmul@f1+1
  1457  001224  C05C  F017         	movff	printf@tmpval+2,___ftmul@f1+2
  1458  001228  C05E  F018         	movff	printf@fval,___ftmul@f2
  1459  00122C  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  1460  001230  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1461  001234  EC11  F012         	call	___ftmul	;wreg free
  1462  001238  C015  F05A         	movff	?___ftmul,printf@tmpval
  1463  00123C  C016  F05B         	movff	?___ftmul+1,printf@tmpval+1
  1464  001240  C017  F05C         	movff	?___ftmul+2,printf@tmpval+2
  1465                           
  1466                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1467  001244  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1468  001248  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1469  00124C  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1470  001250  0E00               	movlw	0
  1471  001252  6E04               	movwf	___ftge@ff2,c
  1472  001254  0E80               	movlw	128
  1473  001256  6E05               	movwf	___ftge@ff2+1,c
  1474  001258  0E3F               	movlw	63
  1475  00125A  6E06               	movwf	___ftge@ff2+2,c
  1476  00125C  EC24  F014         	call	___ftge	;wreg free
  1477  001260  B0D8               	btfsc	status,0,c
  1478  001262  D004               	goto	l2681
  1479                           
  1480                           ;doprnt.c: 849: exp--;
  1481  001264  0658               	decf	printf@exp,f,c
  1482  001266  A0D8               	btfss	status,0,c
  1483  001268  0659               	decf	printf@exp+1,f,c
  1484  00126A  D013               	goto	l2685
  1485  00126C                     l2681:
  1486                           
  1487                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1488  00126C  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1489  001270  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1490  001274  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1491  001278  0E00               	movlw	0
  1492  00127A  6E04               	movwf	___ftge@ff2,c
  1493  00127C  0E20               	movlw	32
  1494  00127E  6E05               	movwf	___ftge@ff2+1,c
  1495  001280  0E41               	movlw	65
  1496  001282  6E06               	movwf	___ftge@ff2+2,c
  1497  001284  EC24  F014         	call	___ftge	;wreg free
  1498  001288  A0D8               	btfss	status,0,c
  1499  00128A  D003               	goto	l2685
  1500                           
  1501                           ;doprnt.c: 851: exp++;
  1502  00128C  4A58               	infsnz	printf@exp,f,c
  1503  00128E  2A59               	incf	printf@exp+1,f,c
  1504  001290  D000               	goto	l2685
  1505  001292                     l2685:
  1506                           
  1507                           ;doprnt.c: 852: }
  1508                           ;doprnt.c: 1112: if(prec <= 12)
  1509  001292  BE53               	btfsc	printf@prec+1,7,c
  1510  001294  D006               	goto	l2687
  1511  001296  5053               	movf	printf@prec+1,w,c
  1512  001298  E11C               	bnz	l2689
  1513  00129A  0E0D               	movlw	13
  1514  00129C  5C52               	subwf	printf@prec,w,c
  1515  00129E  B0D8               	btfsc	status,0,c
  1516  0012A0  D018               	goto	l2689
  1517  0012A2                     l2687:
  1518                           
  1519                           ;doprnt.c: 1113: fval += fround(prec);
  1520  0012A2  C05E  F02E         	movff	printf@fval,___ftadd@f1
  1521  0012A6  C05F  F02F         	movff	printf@fval+1,___ftadd@f1+1
  1522  0012AA  C060  F030         	movff	printf@fval+2,___ftadd@f1+2
  1523  0012AE  5052               	movf	printf@prec,w,c
  1524  0012B0  ECFC  F00D         	call	_fround
  1525  0012B4  C024  F031         	movff	?_fround,___ftadd@f2
  1526  0012B8  C025  F032         	movff	?_fround+1,___ftadd@f2+1
  1527  0012BC  C026  F033         	movff	?_fround+2,___ftadd@f2+2
  1528  0012C0  EC22  F010         	call	___ftadd	;wreg free
  1529  0012C4  C02E  F05E         	movff	?___ftadd,printf@fval
  1530  0012C8  C02F  F05F         	movff	?___ftadd+1,printf@fval+1
  1531  0012CC  C030  F060         	movff	?___ftadd+2,printf@fval+2
  1532  0012D0  D000               	goto	l2689
  1533  0012D2                     l2689:
  1534                           
  1535                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1536  0012D2  BE59               	btfsc	printf@exp+1,7,c
  1537  0012D4  D006               	goto	l2691
  1538  0012D6  5059               	movf	printf@exp+1,w,c
  1539  0012D8  E120               	bnz	l2697
  1540  0012DA  0E0A               	movlw	10
  1541  0012DC  5C58               	subwf	printf@exp,w,c
  1542  0012DE  B0D8               	btfsc	status,0,c
  1543  0012E0  D01C               	goto	l2697
  1544  0012E2                     l2691:
  1545  0012E2  505E               	movf	printf@fval,w,c
  1546  0012E4  105F               	iorwf	printf@fval+1,w,c
  1547  0012E6  1060               	iorwf	printf@fval+2,w,c
  1548  0012E8  B4D8               	btfsc	status,2,c
  1549  0012EA  D06D               	goto	l2711
  1550  0012EC  C05E  F02B         	movff	printf@fval,___fttol@f1
  1551  0012F0  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1552  0012F4  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1553  0012F8  EC8D  F012         	call	___fttol	;wreg free
  1554  0012FC  502B               	movf	?___fttol,w,c
  1555  0012FE  102C               	iorwf	?___fttol+1,w,c
  1556  001300  102D               	iorwf	?___fttol+2,w,c
  1557  001302  102E               	iorwf	?___fttol+3,w,c
  1558  001304  B4D8               	btfsc	status,2,c
  1559  001306  BE59               	btfsc	printf@exp+1,7,c
  1560  001308  D05E               	goto	l2711
  1561  00130A  5059               	movf	printf@exp+1,w,c
  1562  00130C  E106               	bnz	l2697
  1563  00130E  0E02               	movlw	2
  1564  001310  5C58               	subwf	printf@exp,w,c
  1565  001312  B0D8               	btfsc	status,0,c
  1566  001314  D002               	goto	l2697
  1567  001316  D057               	goto	l2711
  1568  001318  D000               	goto	l2697
  1569  00131A                     l2697:
  1570                           
  1571                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1572  00131A  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1573  00131E  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1574  001322  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1575  001326  0E70               	movlw	112
  1576  001328  6E04               	movwf	___ftge@ff2,c
  1577  00132A  0E89               	movlw	137
  1578  00132C  6E05               	movwf	___ftge@ff2+1,c
  1579  00132E  0E40               	movlw	64
  1580  001330  6E06               	movwf	___ftge@ff2+2,c
  1581  001332  EC24  F014         	call	___ftge	;wreg free
  1582  001336  B0D8               	btfsc	status,0,c
  1583  001338  D002               	goto	l2701
  1584                           
  1585                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1586  00133A  0EF7               	movlw	247
  1587  00133C  D001               	goto	L1
  1588  00133E                     l2701:
  1589                           
  1590                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1591  00133E  0EF8               	movlw	248
  1592  001340                     L1:
  1593  001340  2658               	addwf	printf@exp,f,c
  1594  001342  0EFF               	movlw	255
  1595  001344  2259               	addwfc	printf@exp+1,f,c
  1596  001346  D000               	goto	l2703
  1597  001348                     l2703:
  1598                           
  1599                           ;doprnt.c: 1124: }
  1600                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1601  001348  5058               	movf	printf@exp,w,c
  1602  00134A  EC0C  F00C         	call	_scale
  1603  00134E  C024  F05A         	movff	?_scale,printf@tmpval
  1604  001352  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1605  001356  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1606                           
  1607                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1608  00135A  D017               	goto	l2707
  1609  00135C  C05E  F001         	movff	printf@fval,__div_to_l_@f1
  1610  001360  C05F  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1611  001364  C060  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1612  001368  C05A  F004         	movff	printf@tmpval,__div_to_l_@f2
  1613  00136C  C05B  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1614  001370  C05C  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1615  001374  EC8C  F011         	call	__div_to_l_	;wreg free
  1616  001378  C001  F054         	movff	?__div_to_l_,printf@val
  1617  00137C  C002  F055         	movff	?__div_to_l_+1,printf@val+1
  1618  001380  C003  F056         	movff	?__div_to_l_+2,printf@val+2
  1619  001384  C004  F057         	movff	?__div_to_l_+3,printf@val+3
  1620  001388  D017               	goto	l2709
  1621  00138A                     l2707:
  1622  00138A  C05E  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1623  00138E  C05F  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1624  001392  C060  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1625  001396  C05A  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1626  00139A  C05B  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1627  00139E  C05C  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1628  0013A2  EC04  F011         	call	__tdiv_to_l_	;wreg free
  1629  0013A6  C001  F054         	movff	?__tdiv_to_l_,printf@val
  1630  0013AA  C002  F055         	movff	?__tdiv_to_l_+1,printf@val+1
  1631  0013AE  C003  F056         	movff	?__tdiv_to_l_+2,printf@val+2
  1632  0013B2  C004  F057         	movff	?__tdiv_to_l_+3,printf@val+3
  1633  0013B6  D000               	goto	l2709
  1634  0013B8                     l2709:
  1635                           
  1636                           ;doprnt.c: 1129: fval = 0.0;
  1637  0013B8  0E00               	movlw	0
  1638  0013BA  6E5E               	movwf	printf@fval,c
  1639  0013BC  0E00               	movlw	0
  1640  0013BE  6E5F               	movwf	printf@fval+1,c
  1641  0013C0  0E00               	movlw	0
  1642  0013C2  6E60               	movwf	printf@fval+2,c
  1643                           
  1644                           ;doprnt.c: 1130: } else {
  1645  0013C4  D033               	goto	l2715
  1646  0013C6                     l2711:
  1647                           
  1648                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1649  0013C6  C05E  F02B         	movff	printf@fval,___fttol@f1
  1650  0013CA  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1651  0013CE  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1652  0013D2  EC8D  F012         	call	___fttol	;wreg free
  1653  0013D6  C02B  F054         	movff	?___fttol,printf@val
  1654  0013DA  C02C  F055         	movff	?___fttol+1,printf@val+1
  1655  0013DE  C02D  F056         	movff	?___fttol+2,printf@val+2
  1656  0013E2  C02E  F057         	movff	?___fttol+3,printf@val+3
  1657                           
  1658                           ;doprnt.c: 1132: fval -= (double)val;
  1659  0013E6  C05E  F03A         	movff	printf@fval,___ftsub@f1
  1660  0013EA  C05F  F03B         	movff	printf@fval+1,___ftsub@f1+1
  1661  0013EE  C060  F03C         	movff	printf@fval+2,___ftsub@f1+2
  1662  0013F2  C054  F009         	movff	printf@val,___lltoft@c
  1663  0013F6  C055  F00A         	movff	printf@val+1,___lltoft@c+1
  1664  0013FA  C056  F00B         	movff	printf@val+2,___lltoft@c+2
  1665  0013FE  C057  F00C         	movff	printf@val+3,___lltoft@c+3
  1666  001402  ECF5  F015         	call	___lltoft	;wreg free
  1667  001406  C009  F03D         	movff	?___lltoft,___ftsub@f2
  1668  00140A  C00A  F03E         	movff	?___lltoft+1,___ftsub@f2+1
  1669  00140E  C00B  F03F         	movff	?___lltoft+2,___ftsub@f2+2
  1670  001412  EC25  F016         	call	___ftsub	;wreg free
  1671  001416  C03A  F05E         	movff	?___ftsub,printf@fval
  1672  00141A  C03B  F05F         	movff	?___ftsub+1,printf@fval+1
  1673  00141E  C03C  F060         	movff	?___ftsub+2,printf@fval+2
  1674                           
  1675                           ;doprnt.c: 1133: exp = 0;
  1676  001422  0E00               	movlw	0
  1677  001424  6E59               	movwf	printf@exp+1,c
  1678  001426  0E00               	movlw	0
  1679  001428  6E58               	movwf	printf@exp,c
  1680  00142A  D000               	goto	l2715
  1681  00142C                     l2715:
  1682                           
  1683                           ;doprnt.c: 1134: }
  1684                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1685  00142C  0E01               	movlw	1
  1686  00142E  6E61               	movwf	printf@c,c
  1687  001430                     l2717:
  1688  001430  0E0A               	movlw	10
  1689  001432  1861               	xorwf	printf@c,w,c
  1690  001434  B4D8               	btfsc	status,2,c
  1691  001436  D01C               	goto	l2729
  1692  001438  D001               	goto	l2721
  1693  00143A  D01A               	goto	l2729
  1694  00143C                     l2721:
  1695                           
  1696                           ;doprnt.c: 1137: if(val < dpowers[c])
  1697  00143C  5061               	movf	printf@c,w,c
  1698  00143E  0D04               	mullw	4
  1699  001440  0E01               	movlw	low _dpowers
  1700  001442  24F3               	addwf	prodl,w,c
  1701  001444  6EF6               	movwf	tblptrl,c
  1702  001446  0E10               	movlw	high _dpowers
  1703  001448  20F4               	addwfc	prodh,w,c
  1704  00144A  6EF7               	movwf	tblptrh,c
  1705  00144C                     	if	0	;There are less than 3 active tblptr bytes
  1706  00144C                     	endif
  1707  00144C  0009               	tblrd		*+
  1708  00144E  50F5               	movf	tablat,w,c
  1709  001450  5C54               	subwf	printf@val,w,c
  1710  001452  0009               	tblrd		*+
  1711  001454  50F5               	movf	tablat,w,c
  1712  001456  5855               	subwfb	printf@val+1,w,c
  1713  001458  0009               	tblrd		*+
  1714  00145A  50F5               	movf	tablat,w,c
  1715  00145C  5856               	subwfb	printf@val+2,w,c
  1716  00145E  0009               	tblrd		*+
  1717  001460  50F5               	movf	tablat,w,c
  1718  001462  5857               	subwfb	printf@val+3,w,c
  1719  001464  A0D8               	btfss	status,0,c
  1720  001466  D004               	goto	l2729
  1721  001468  D001               	goto	l2725
  1722                           
  1723                           ;doprnt.c: 1138: break;
  1724  00146A  D002               	goto	l2729
  1725  00146C                     l2725:
  1726  00146C  2A61               	incf	printf@c,f,c
  1727  00146E  D7E0               	goto	l2717
  1728  001470                     l2729:
  1729                           
  1730                           ;doprnt.c: 1175: {
  1731                           ;doprnt.c: 1188: if(flag & 0x03)
  1732  001470  0E03               	movlw	3
  1733  001472  1450               	andwf	printf@flag,w,c
  1734  001474  6E45               	movwf	??_printf& (0+255),c
  1735  001476  0E00               	movlw	0
  1736  001478  1451               	andwf	printf@flag+1,w,c
  1737  00147A  6E46               	movwf	(??_printf+1)& (0+255),c
  1738  00147C  5045               	movf	??_printf,w,c
  1739  00147E  1046               	iorwf	??_printf+1,w,c
  1740  001480  B4D8               	btfsc	status,2,c
  1741  001482  D049               	goto	l2739
  1742                           
  1743                           ;doprnt.c: 1190: (putch('-') );
  1744  001484  0E2D               	movlw	45
  1745  001486  EC22  F017         	call	_putch
  1746                           
  1747                           ;doprnt.c: 1195: }
  1748                           ;doprnt.c: 1196: while(c--) {
  1749  00148A  D045               	goto	l2739
  1750  00148C                     l2733:
  1751                           
  1752                           ;doprnt.c: 1200: {
  1753                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1754  00148C  C054  F001         	movff	printf@val,___lldiv@dividend
  1755  001490  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  1756  001494  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  1757  001498  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  1758  00149C  5061               	movf	printf@c,w,c
  1759  00149E  0D04               	mullw	4
  1760  0014A0  0E01               	movlw	low _dpowers
  1761  0014A2  24F3               	addwf	prodl,w,c
  1762  0014A4  6EF6               	movwf	tblptrl,c
  1763  0014A6  0E10               	movlw	high _dpowers
  1764  0014A8  20F4               	addwfc	prodh,w,c
  1765  0014AA  6EF7               	movwf	tblptrh,c
  1766  0014AC                     	if	0	;There are less than 3 active tblptr bytes
  1767  0014AC                     	endif
  1768  0014AC  0009               	tblrd		*+
  1769  0014AE  CFF5 F005          	movff	tablat,___lldiv@divisor
  1770  0014B2  0009               	tblrd		*+
  1771  0014B4  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1772  0014B8  0009               	tblrd		*+
  1773  0014BA  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1774  0014BE  000A               	tblrd		*-
  1775  0014C0  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1776  0014C4  ECBA  F014         	call	___lldiv	;wreg free
  1777  0014C8  C001  F05A         	movff	?___lldiv,printf@tmpval
  1778  0014CC  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  1779  0014D0  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  1780  0014D4  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  1781                           
  1782                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1783  0014D8  C05A  F00E         	movff	printf@tmpval,___llmod@dividend
  1784  0014DC  C05B  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  1785  0014E0  C05C  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  1786  0014E4  C05D  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  1787  0014E8  0E0A               	movlw	10
  1788  0014EA  6E12               	movwf	___llmod@divisor,c
  1789  0014EC  0E00               	movlw	0
  1790  0014EE  6E13               	movwf	___llmod@divisor+1,c
  1791  0014F0  0E00               	movlw	0
  1792  0014F2  6E14               	movwf	___llmod@divisor+2,c
  1793  0014F4  0E00               	movlw	0
  1794  0014F6  6E15               	movwf	___llmod@divisor+3,c
  1795  0014F8  EC85  F015         	call	___llmod	;wreg free
  1796  0014FC  C00E  F05A         	movff	?___llmod,printf@tmpval
  1797  001500  C00F  F05B         	movff	?___llmod+1,printf@tmpval+1
  1798  001504  C010  F05C         	movff	?___llmod+2,printf@tmpval+2
  1799  001508  C011  F05D         	movff	?___llmod+3,printf@tmpval+3
  1800                           
  1801                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1802  00150C  505A               	movf	printf@tmpval,w,c
  1803  00150E  0F30               	addlw	48
  1804  001510  EC22  F017         	call	_putch
  1805  001514  D000               	goto	l2739
  1806  001516                     l2739:
  1807  001516  0661               	decf	printf@c,f,c
  1808  001518  2861               	incf	printf@c,w,c
  1809  00151A  B4D8               	btfsc	status,2,c
  1810  00151C  D009               	goto	l2745
  1811  00151E  D7B6               	goto	l2733
  1812                           
  1813                           ;doprnt.c: 1204: }
  1814                           ;doprnt.c: 1206: }
  1815                           ;doprnt.c: 1207: while(exp > 0) {
  1816  001520  D007               	goto	l2745
  1817  001522                     l2741:
  1818                           
  1819                           ;doprnt.c: 1208: (putch('0') );
  1820  001522  0E30               	movlw	48
  1821  001524  EC22  F017         	call	_putch
  1822                           
  1823                           ;doprnt.c: 1209: exp--;
  1824  001528  0658               	decf	printf@exp,f,c
  1825  00152A  A0D8               	btfss	status,0,c
  1826  00152C  0659               	decf	printf@exp+1,f,c
  1827  00152E  D000               	goto	l2745
  1828  001530                     l2745:
  1829  001530  BE59               	btfsc	printf@exp+1,7,c
  1830  001532  D005               	goto	l2747
  1831  001534  5059               	movf	printf@exp+1,w,c
  1832  001536  E1F5               	bnz	l2741
  1833  001538  0458               	decf	printf@exp,w,c
  1834  00153A  B0D8               	btfsc	status,0,c
  1835  00153C  D7F2               	goto	l2741
  1836  00153E                     l2747:
  1837                           
  1838                           ;doprnt.c: 1210: }
  1839                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1840  00153E  BE53               	btfsc	printf@prec+1,7,c
  1841  001540  D009               	goto	l236
  1842  001542  5053               	movf	printf@prec+1,w,c
  1843  001544  E104               	bnz	u3040
  1844  001546  0E09               	movlw	9
  1845  001548  5C52               	subwf	printf@prec,w,c
  1846  00154A  A0D8               	btfss	status,0,c
  1847  00154C  D003               	goto	l236
  1848  00154E                     u3040:
  1849                           
  1850                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1851  00154E  0E08               	movlw	8
  1852  001550  6E61               	movwf	printf@c,c
  1853  001552  D003               	goto	l2751
  1854  001554                     l236:
  1855                           
  1856                           ;doprnt.c: 1213: else
  1857                           ;doprnt.c: 1214: c = prec;
  1858  001554  C052  F061         	movff	printf@prec,printf@c
  1859  001558  D000               	goto	l2751
  1860  00155A                     l2751:
  1861                           
  1862                           ;doprnt.c: 1215: prec -= c;
  1863  00155A  5061               	movf	printf@c,w,c
  1864  00155C  5E52               	subwf	printf@prec,f,c
  1865  00155E  0E00               	movlw	0
  1866  001560  BE61               	btfsc	printf@c,7,c
  1867  001562  0EFF               	movlw	255
  1868  001564  5A53               	subwfb	printf@prec+1,f,c
  1869                           
  1870                           ;doprnt.c: 1219: if(c)
  1871  001566  5061               	movf	printf@c,w,c
  1872  001568  B4D8               	btfsc	status,2,c
  1873  00156A  D004               	goto	l2757
  1874                           
  1875                           ;doprnt.c: 1221: (putch('.') );
  1876  00156C  0E2E               	movlw	46
  1877  00156E  EC22  F017         	call	_putch
  1878  001572  D000               	goto	l2757
  1879  001574                     l2757:
  1880                           
  1881                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1882  001574  5061               	movf	printf@c,w,c
  1883  001576  EC0C  F00C         	call	_scale
  1884  00157A  C024  F04B         	movff	?_scale,_printf$1186
  1885  00157E  C025  F04C         	movff	?_scale+1,_printf$1186+1
  1886  001582  C026  F04D         	movff	?_scale+2,_printf$1186+2
  1887                           
  1888                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1889  001586  C05E  F018         	movff	printf@fval,___ftmul@f2
  1890  00158A  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  1891  00158E  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1892  001592  C04B  F015         	movff	_printf$1186,___ftmul@f1
  1893  001596  C04C  F016         	movff	_printf$1186+1,___ftmul@f1+1
  1894  00159A  C04D  F017         	movff	_printf$1186+2,___ftmul@f1+2
  1895  00159E  EC11  F012         	call	___ftmul	;wreg free
  1896  0015A2  C015  F02B         	movff	?___ftmul,___fttol@f1
  1897  0015A6  C016  F02C         	movff	?___ftmul+1,___fttol@f1+1
  1898  0015AA  C017  F02D         	movff	?___ftmul+2,___fttol@f1+2
  1899  0015AE  EC8D  F012         	call	___fttol	;wreg free
  1900  0015B2  C02B  F054         	movff	?___fttol,printf@val
  1901  0015B6  C02C  F055         	movff	?___fttol+1,printf@val+1
  1902  0015BA  C02D  F056         	movff	?___fttol+2,printf@val+2
  1903  0015BE  C02E  F057         	movff	?___fttol+3,printf@val+3
  1904                           
  1905                           ;doprnt.c: 1228: while(c--) {
  1906  0015C2  D06B               	goto	l2767
  1907  0015C4                     l2761:
  1908                           
  1909                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  1910  0015C4  C054  F001         	movff	printf@val,___lldiv@dividend
  1911  0015C8  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  1912  0015CC  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  1913  0015D0  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  1914  0015D4  5061               	movf	printf@c,w,c
  1915  0015D6  0D04               	mullw	4
  1916  0015D8  0E01               	movlw	low _dpowers
  1917  0015DA  24F3               	addwf	prodl,w,c
  1918  0015DC  6EF6               	movwf	tblptrl,c
  1919  0015DE  0E10               	movlw	high _dpowers
  1920  0015E0  20F4               	addwfc	prodh,w,c
  1921  0015E2  6EF7               	movwf	tblptrh,c
  1922  0015E4                     	if	0	;There are less than 3 active tblptr bytes
  1923  0015E4                     	endif
  1924  0015E4  0009               	tblrd		*+
  1925  0015E6  CFF5 F005          	movff	tablat,___lldiv@divisor
  1926  0015EA  0009               	tblrd		*+
  1927  0015EC  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1928  0015F0  0009               	tblrd		*+
  1929  0015F2  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1930  0015F6  000A               	tblrd		*-
  1931  0015F8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1932  0015FC  ECBA  F014         	call	___lldiv	;wreg free
  1933  001600  C001  F05A         	movff	?___lldiv,printf@tmpval
  1934  001604  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  1935  001608  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  1936  00160C  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  1937                           
  1938                           ;doprnt.c: 1230: tmpval.vd %= 10;
  1939  001610  C05A  F00E         	movff	printf@tmpval,___llmod@dividend
  1940  001614  C05B  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  1941  001618  C05C  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  1942  00161C  C05D  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  1943  001620  0E0A               	movlw	10
  1944  001622  6E12               	movwf	___llmod@divisor,c
  1945  001624  0E00               	movlw	0
  1946  001626  6E13               	movwf	___llmod@divisor+1,c
  1947  001628  0E00               	movlw	0
  1948  00162A  6E14               	movwf	___llmod@divisor+2,c
  1949  00162C  0E00               	movlw	0
  1950  00162E  6E15               	movwf	___llmod@divisor+3,c
  1951  001630  EC85  F015         	call	___llmod	;wreg free
  1952  001634  C00E  F05A         	movff	?___llmod,printf@tmpval
  1953  001638  C00F  F05B         	movff	?___llmod+1,printf@tmpval+1
  1954  00163C  C010  F05C         	movff	?___llmod+2,printf@tmpval+2
  1955  001640  C011  F05D         	movff	?___llmod+3,printf@tmpval+3
  1956                           
  1957                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  1958  001644  505A               	movf	printf@tmpval,w,c
  1959  001646  0F30               	addlw	48
  1960  001648  EC22  F017         	call	_putch
  1961                           
  1962                           ;doprnt.c: 1232: val %= dpowers[c];
  1963  00164C  C054  F00E         	movff	printf@val,___llmod@dividend
  1964  001650  C055  F00F         	movff	printf@val+1,___llmod@dividend+1
  1965  001654  C056  F010         	movff	printf@val+2,___llmod@dividend+2
  1966  001658  C057  F011         	movff	printf@val+3,___llmod@dividend+3
  1967  00165C  5061               	movf	printf@c,w,c
  1968  00165E  0D04               	mullw	4
  1969  001660  0E01               	movlw	low _dpowers
  1970  001662  24F3               	addwf	prodl,w,c
  1971  001664  6EF6               	movwf	tblptrl,c
  1972  001666  0E10               	movlw	high _dpowers
  1973  001668  20F4               	addwfc	prodh,w,c
  1974  00166A  6EF7               	movwf	tblptrh,c
  1975  00166C                     	if	0	;There are less than 3 active tblptr bytes
  1976  00166C                     	endif
  1977  00166C  0009               	tblrd		*+
  1978  00166E  CFF5 F012          	movff	tablat,___llmod@divisor
  1979  001672  0009               	tblrd		*+
  1980  001674  CFF5 F013          	movff	tablat,___llmod@divisor+1
  1981  001678  0009               	tblrd		*+
  1982  00167A  CFF5 F014          	movff	tablat,___llmod@divisor+2
  1983  00167E  000A               	tblrd		*-
  1984  001680  CFF5 F015          	movff	tablat,___llmod@divisor+3
  1985  001684  EC85  F015         	call	___llmod	;wreg free
  1986  001688  C00E  F054         	movff	?___llmod,printf@val
  1987  00168C  C00F  F055         	movff	?___llmod+1,printf@val+1
  1988  001690  C010  F056         	movff	?___llmod+2,printf@val+2
  1989  001694  C011  F057         	movff	?___llmod+3,printf@val+3
  1990  001698  D000               	goto	l2767
  1991  00169A                     l2767:
  1992  00169A  0661               	decf	printf@c,f,c
  1993  00169C  2861               	incf	printf@c,w,c
  1994  00169E  B4D8               	btfsc	status,2,c
  1995  0016A0  D009               	goto	l2773
  1996  0016A2  D790               	goto	l2761
  1997                           
  1998                           ;doprnt.c: 1233: }
  1999                           ;doprnt.c: 1235: while(prec) {
  2000  0016A4  D007               	goto	l2773
  2001  0016A6                     l2769:
  2002                           
  2003                           ;doprnt.c: 1236: (putch('0') );
  2004  0016A6  0E30               	movlw	48
  2005  0016A8  EC22  F017         	call	_putch
  2006                           
  2007                           ;doprnt.c: 1237: prec--;
  2008  0016AC  0652               	decf	printf@prec,f,c
  2009  0016AE  A0D8               	btfss	status,0,c
  2010  0016B0  0653               	decf	printf@prec+1,f,c
  2011  0016B2  D000               	goto	l2773
  2012  0016B4                     l2773:
  2013  0016B4  5052               	movf	printf@prec,w,c
  2014  0016B6  1053               	iorwf	printf@prec+1,w,c
  2015  0016B8  B4D8               	btfsc	status,2,c
  2016  0016BA  D09F               	goto	l2811
  2017  0016BC  D7F4               	goto	l2769
  2018                           
  2019                           ;doprnt.c: 1238: }
  2020                           ;doprnt.c: 1245: continue;
  2021  0016BE  D09D               	goto	l2811
  2022  0016C0                     l2775:
  2023                           
  2024                           ;doprnt.c: 1246: }
  2025                           ;doprnt.c: 1253: {
  2026                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  2027  0016C0  C04E  FFD9         	movff	printf@ap,fsr2l
  2028  0016C4  C04F  FFDA         	movff	printf@ap+1,fsr2h
  2029  0016C8  CFDE F054          	movff	postinc2,printf@val
  2030  0016CC  CFDD F055          	movff	postdec2,printf@val+1
  2031  0016D0  0E00               	movlw	0
  2032  0016D2  BE55               	btfsc	printf@val+1,7,c
  2033  0016D4  0EFF               	movlw	-1
  2034  0016D6  6E56               	movwf	printf@val+2,c
  2035  0016D8  6E57               	movwf	printf@val+3,c
  2036  0016DA  0E02               	movlw	2
  2037  0016DC  264E               	addwf	printf@ap,f,c
  2038  0016DE  0E00               	movlw	0
  2039  0016E0  224F               	addwfc	printf@ap+1,f,c
  2040                           
  2041                           ;doprnt.c: 1261: if((long)val < 0) {
  2042  0016E2  AE57               	btfss	printf@val+3,7,c
  2043  0016E4  D00B               	goto	l2785
  2044                           
  2045                           ;doprnt.c: 1262: flag |= 0x03;
  2046  0016E6  0E03               	movlw	3
  2047  0016E8  1250               	iorwf	printf@flag,f,c
  2048                           
  2049                           ;doprnt.c: 1263: val = -val;
  2050  0016EA  1E57               	comf	printf@val+3,f,c
  2051  0016EC  1E56               	comf	printf@val+2,f,c
  2052  0016EE  1E55               	comf	printf@val+1,f,c
  2053  0016F0  6C54               	negf	printf@val,c
  2054  0016F2  0E00               	movlw	0
  2055  0016F4  2255               	addwfc	printf@val+1,f,c
  2056  0016F6  2256               	addwfc	printf@val+2,f,c
  2057  0016F8  2257               	addwfc	printf@val+3,f,c
  2058  0016FA  D000               	goto	l2785
  2059  0016FC                     l2785:
  2060                           
  2061                           ;doprnt.c: 1264: }
  2062                           ;doprnt.c: 1266: }
  2063                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2064  0016FC  0E01               	movlw	1
  2065  0016FE  6E61               	movwf	printf@c,c
  2066  001700                     l2787:
  2067  001700  0E0A               	movlw	10
  2068  001702  1861               	xorwf	printf@c,w,c
  2069  001704  B4D8               	btfsc	status,2,c
  2070  001706  D01C               	goto	l2799
  2071  001708  D001               	goto	l2791
  2072  00170A  D01A               	goto	l2799
  2073  00170C                     l2791:
  2074                           
  2075                           ;doprnt.c: 1306: if(val < dpowers[c])
  2076  00170C  5061               	movf	printf@c,w,c
  2077  00170E  0D04               	mullw	4
  2078  001710  0E01               	movlw	low _dpowers
  2079  001712  24F3               	addwf	prodl,w,c
  2080  001714  6EF6               	movwf	tblptrl,c
  2081  001716  0E10               	movlw	high _dpowers
  2082  001718  20F4               	addwfc	prodh,w,c
  2083  00171A  6EF7               	movwf	tblptrh,c
  2084  00171C                     	if	0	;There are less than 3 active tblptr bytes
  2085  00171C                     	endif
  2086  00171C  0009               	tblrd		*+
  2087  00171E  50F5               	movf	tablat,w,c
  2088  001720  5C54               	subwf	printf@val,w,c
  2089  001722  0009               	tblrd		*+
  2090  001724  50F5               	movf	tablat,w,c
  2091  001726  5855               	subwfb	printf@val+1,w,c
  2092  001728  0009               	tblrd		*+
  2093  00172A  50F5               	movf	tablat,w,c
  2094  00172C  5856               	subwfb	printf@val+2,w,c
  2095  00172E  0009               	tblrd		*+
  2096  001730  50F5               	movf	tablat,w,c
  2097  001732  5857               	subwfb	printf@val+3,w,c
  2098  001734  A0D8               	btfss	status,0,c
  2099  001736  D004               	goto	l2799
  2100  001738  D001               	goto	l2795
  2101                           
  2102                           ;doprnt.c: 1307: break;
  2103  00173A  D002               	goto	l2799
  2104  00173C                     l2795:
  2105  00173C  2A61               	incf	printf@c,f,c
  2106  00173E  D7E0               	goto	l2787
  2107  001740                     l2799:
  2108                           
  2109                           ;doprnt.c: 1422: {
  2110                           ;doprnt.c: 1438: if(flag & 0x03)
  2111  001740  0E03               	movlw	3
  2112  001742  1450               	andwf	printf@flag,w,c
  2113  001744  6E45               	movwf	??_printf& (0+255),c
  2114  001746  0E00               	movlw	0
  2115  001748  1451               	andwf	printf@flag+1,w,c
  2116  00174A  6E46               	movwf	(??_printf+1)& (0+255),c
  2117  00174C  5045               	movf	??_printf,w,c
  2118  00174E  1046               	iorwf	??_printf+1,w,c
  2119  001750  B4D8               	btfsc	status,2,c
  2120  001752  D004               	goto	l2803
  2121                           
  2122                           ;doprnt.c: 1439: (putch('-') );
  2123  001754  0E2D               	movlw	45
  2124  001756  EC22  F017         	call	_putch
  2125  00175A  D000               	goto	l2803
  2126  00175C                     l2803:
  2127                           
  2128                           ;doprnt.c: 1469: }
  2129                           ;doprnt.c: 1472: prec = c;
  2130  00175C  5061               	movf	printf@c,w,c
  2131  00175E  6E52               	movwf	printf@prec,c
  2132  001760  6A53               	clrf	printf@prec+1,c
  2133  001762  BE52               	btfsc	printf@prec,7,c
  2134  001764  0653               	decf	printf@prec+1,f,c
  2135                           
  2136                           ;doprnt.c: 1474: while(prec--) {
  2137  001766  D03F               	goto	l2809
  2138  001768                     l2805:
  2139                           
  2140                           ;doprnt.c: 1478: {
  2141                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2142  001768  C052  F045         	movff	printf@prec,??_printf
  2143  00176C  C053  F046         	movff	printf@prec+1,??_printf+1
  2144  001770  90D8               	bcf	status,0,c
  2145  001772  3645               	rlcf	??_printf,f,c
  2146  001774  3646               	rlcf	??_printf+1,f,c
  2147  001776  90D8               	bcf	status,0,c
  2148  001778  3645               	rlcf	??_printf,f,c
  2149  00177A  3646               	rlcf	??_printf+1,f,c
  2150  00177C  0E01               	movlw	low _dpowers
  2151  00177E  2445               	addwf	??_printf,w,c
  2152  001780  6EF6               	movwf	tblptrl,c
  2153  001782  0E10               	movlw	high _dpowers
  2154  001784  2046               	addwfc	??_printf+1,w,c
  2155  001786  6EF7               	movwf	tblptrh,c
  2156  001788                     	if	0	;There are less than 3 active tblptr bytes
  2157  001788                     	endif
  2158  001788  0009               	tblrd		*+
  2159  00178A  CFF5 F005          	movff	tablat,___lldiv@divisor
  2160  00178E  0009               	tblrd		*+
  2161  001790  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2162  001794  0009               	tblrd		*+
  2163  001796  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2164  00179A  000A               	tblrd		*-
  2165  00179C  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2166  0017A0  C054  F001         	movff	printf@val,___lldiv@dividend
  2167  0017A4  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  2168  0017A8  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  2169  0017AC  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  2170  0017B0  ECBA  F014         	call	___lldiv	;wreg free
  2171  0017B4  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2172  0017B8  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2173  0017BC  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2174  0017C0  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2175  0017C4  0E0A               	movlw	10
  2176  0017C6  6E12               	movwf	___llmod@divisor,c
  2177  0017C8  0E00               	movlw	0
  2178  0017CA  6E13               	movwf	___llmod@divisor+1,c
  2179  0017CC  0E00               	movlw	0
  2180  0017CE  6E14               	movwf	___llmod@divisor+2,c
  2181  0017D0  0E00               	movlw	0
  2182  0017D2  6E15               	movwf	___llmod@divisor+3,c
  2183  0017D4  EC85  F015         	call	___llmod	;wreg free
  2184  0017D8  500E               	movf	?___llmod,w,c
  2185  0017DA  0F30               	addlw	48
  2186  0017DC  6E61               	movwf	printf@c,c
  2187                           
  2188                           ;doprnt.c: 1523: }
  2189                           ;doprnt.c: 1524: (putch(c) );
  2190  0017DE  5061               	movf	printf@c,w,c
  2191  0017E0  EC22  F017         	call	_putch
  2192  0017E4  D000               	goto	l2809
  2193  0017E6                     l2809:
  2194  0017E6  0652               	decf	printf@prec,f,c
  2195  0017E8  A0D8               	btfss	status,0,c
  2196  0017EA  0653               	decf	printf@prec+1,f,c
  2197  0017EC  2852               	incf	printf@prec,w,c
  2198  0017EE  E1BC               	bnz	l2805
  2199  0017F0  2853               	incf	printf@prec+1,w,c
  2200  0017F2  B4D8               	btfsc	status,2,c
  2201  0017F4  D002               	goto	l2811
  2202  0017F6  D7B8               	goto	l2805
  2203  0017F8  D000               	goto	l2811
  2204  0017FA                     l2811:
  2205  0017FA  C040  FFF6         	movff	printf@f,tblptrl
  2206  0017FE  C041  FFF7         	movff	printf@f+1,tblptrh
  2207  001802  4A40               	infsnz	printf@f,f,c
  2208  001804  2A41               	incf	printf@f+1,f,c
  2209  001806                     	if	0	;tblptru may be non-zero
  2210  001806                     	endif
  2211  001806                     	if	0	;tblptru may be non-zero
  2212  001806                     	endif
  2213  001806  0008               	tblrd		*
  2214  001808  CFF5 F061          	movff	tablat,printf@c
  2215  00180C  5061               	movf	printf@c,w,c
  2216  00180E  B4D8               	btfsc	status,2,c
  2217  001810  D002               	goto	l254
  2218  001812  D460               	goto	l2631
  2219  001814  D000               	goto	l254
  2220  001816                     l254:
  2221  001816  0012               	return		;funcret
  2222  001818                     __end_of_printf:
  2223                           	opt stack 0
  2224                           tblptru	equ	0xFF8
  2225                           tblptrh	equ	0xFF7
  2226                           tblptrl	equ	0xFF6
  2227                           tablat	equ	0xFF5
  2228                           prodh	equ	0xFF4
  2229                           prodl	equ	0xFF3
  2230                           postinc0	equ	0xFEE
  2231                           wreg	equ	0xFE8
  2232                           postdec1	equ	0xFE5
  2233                           fsr1l	equ	0xFE1
  2234                           postinc2	equ	0xFDE
  2235                           postdec2	equ	0xFDD
  2236                           fsr2h	equ	0xFDA
  2237                           fsr2l	equ	0xFD9
  2238                           status	equ	0xFD8
  2239                           
  2240 ;; *************** function _scale *****************
  2241 ;; Defined at:
  2242 ;;		line 425 in file "E:\XC8\sources\common\doprnt.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  scl             1    wreg     char 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  scl             1   41[COMRAM] char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  3   35[COMRAM] char 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2256 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;Total ram usage:        7 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    2
  2263 ;; This function calls:
  2264 ;;		___awdiv
  2265 ;;		___awmod
  2266 ;;		___ftmul
  2267 ;;		___wmul
  2268 ;; This function is called by:
  2269 ;;		_printf
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           	psect	text2
  2274  001818                     __ptext2:
  2275                           	opt stack 0
  2276  001818                     _scale:
  2277                           	opt stack 27
  2278                           
  2279                           ;incstack = 0
  2280                           ;scale@scl stored from wreg
  2281  001818  6E2A               	movwf	scale@scl,c
  2282                           
  2283                           ;doprnt.c: 428: if(scl < 0) {
  2284  00181A  AE2A               	btfss	scale@scl,7,c
  2285  00181C  D0EF               	goto	l2287
  2286                           
  2287                           ;doprnt.c: 429: scl = -scl;
  2288  00181E  6C2A               	negf	scale@scl,c
  2289                           
  2290                           ;doprnt.c: 430: if(scl>=110)
  2291  001820  502A               	movf	scale@scl,w,c
  2292  001822  0A80               	xorlw	128
  2293  001824  0F12               	addlw	-238
  2294  001826  A0D8               	btfss	status,0,c
  2295  001828  D08D               	goto	l2277
  2296                           
  2297                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2298  00182A  0E00               	movlw	0
  2299  00182C  6E12               	movwf	___wmul@multiplicand+1,c
  2300  00182E  0E03               	movlw	3
  2301  001830  6E11               	movwf	___wmul@multiplicand,c
  2302  001832  0E00               	movlw	0
  2303  001834  6E0A               	movwf	___awdiv@divisor+1,c
  2304  001836  0E0A               	movlw	10
  2305  001838  6E09               	movwf	___awdiv@divisor,c
  2306  00183A  0E00               	movlw	0
  2307  00183C  6E04               	movwf	___awmod@divisor+1,c
  2308  00183E  0E64               	movlw	100
  2309  001840  6E03               	movwf	___awmod@divisor,c
  2310  001842  502A               	movf	scale@scl,w,c
  2311  001844  6E01               	movwf	___awmod@dividend,c
  2312  001846  6A02               	clrf	___awmod@dividend+1,c
  2313  001848  BE01               	btfsc	___awmod@dividend,7,c
  2314  00184A  0602               	decf	___awmod@dividend+1,f,c
  2315  00184C  EC44  F015         	call	___awmod	;wreg free
  2316  001850  C001  F007         	movff	?___awmod,___awdiv@dividend
  2317  001854  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2318  001858  EC6F  F014         	call	___awdiv	;wreg free
  2319  00185C  0E09               	movlw	9
  2320  00185E  2407               	addwf	?___awdiv,w,c
  2321  001860  6E0F               	movwf	___wmul@multiplier,c
  2322  001862  0E00               	movlw	0
  2323  001864  2008               	addwfc	?___awdiv+1,w,c
  2324  001866  6E10               	movwf	___wmul@multiplier+1,c
  2325  001868  ECB9  F016         	call	___wmul	;wreg free
  2326  00186C  0E29               	movlw	low __npowers_
  2327  00186E  240F               	addwf	?___wmul,w,c
  2328  001870  6EF6               	movwf	tblptrl,c
  2329  001872  0E10               	movlw	high __npowers_
  2330  001874  2010               	addwfc	?___wmul+1,w,c
  2331  001876  6EF7               	movwf	tblptrh,c
  2332  001878                     	if	0	;There are less than 3 active tblptr bytes
  2333  001878                     	endif
  2334  001878  0009               	tblrd		*+
  2335  00187A  CFF5 F018          	movff	tablat,___ftmul@f2
  2336  00187E  0009               	tblrd		*+
  2337  001880  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2338  001884  000A               	tblrd		*-
  2339  001886  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2340  00188A  0E00               	movlw	0
  2341  00188C  6E0A               	movwf	___awdiv@divisor+1,c
  2342  00188E  0E64               	movlw	100
  2343  001890  6E09               	movwf	___awdiv@divisor,c
  2344  001892  502A               	movf	scale@scl,w,c
  2345  001894  6E07               	movwf	___awdiv@dividend,c
  2346  001896  6A08               	clrf	___awdiv@dividend+1,c
  2347  001898  BE07               	btfsc	___awdiv@dividend,7,c
  2348  00189A  0608               	decf	___awdiv@dividend+1,f,c
  2349  00189C  EC6F  F014         	call	___awdiv	;wreg free
  2350  0018A0  0E12               	movlw	18
  2351  0018A2  2407               	addwf	?___awdiv,w,c
  2352  0018A4  6E0F               	movwf	___wmul@multiplier,c
  2353  0018A6  0E00               	movlw	0
  2354  0018A8  2008               	addwfc	?___awdiv+1,w,c
  2355  0018AA  6E10               	movwf	___wmul@multiplier+1,c
  2356  0018AC  0E00               	movlw	0
  2357  0018AE  6E12               	movwf	___wmul@multiplicand+1,c
  2358  0018B0  0E03               	movlw	3
  2359  0018B2  6E11               	movwf	___wmul@multiplicand,c
  2360  0018B4  ECB9  F016         	call	___wmul	;wreg free
  2361  0018B8  0E29               	movlw	low __npowers_
  2362  0018BA  240F               	addwf	?___wmul,w,c
  2363  0018BC  6EF6               	movwf	tblptrl,c
  2364  0018BE  0E10               	movlw	high __npowers_
  2365  0018C0  2010               	addwfc	?___wmul+1,w,c
  2366  0018C2  6EF7               	movwf	tblptrh,c
  2367  0018C4                     	if	0	;There are less than 3 active tblptr bytes
  2368  0018C4                     	endif
  2369  0018C4  0009               	tblrd		*+
  2370  0018C6  CFF5 F015          	movff	tablat,___ftmul@f1
  2371  0018CA  0009               	tblrd		*+
  2372  0018CC  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2373  0018D0  000A               	tblrd		*-
  2374  0018D2  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2375  0018D6  EC11  F012         	call	___ftmul	;wreg free
  2376  0018DA  C015  F027         	movff	?___ftmul,_scale$1185
  2377  0018DE  C016  F028         	movff	?___ftmul+1,_scale$1185+1
  2378  0018E2  C017  F029         	movff	?___ftmul+2,_scale$1185+2
  2379                           
  2380                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2381  0018E6  C027  F015         	movff	_scale$1185,___ftmul@f1
  2382  0018EA  C028  F016         	movff	_scale$1185+1,___ftmul@f1+1
  2383  0018EE  C029  F017         	movff	_scale$1185+2,___ftmul@f1+2
  2384  0018F2  0E00               	movlw	0
  2385  0018F4  6E12               	movwf	___wmul@multiplicand+1,c
  2386  0018F6  0E03               	movlw	3
  2387  0018F8  6E11               	movwf	___wmul@multiplicand,c
  2388  0018FA  0E00               	movlw	0
  2389  0018FC  6E04               	movwf	___awmod@divisor+1,c
  2390  0018FE  0E0A               	movlw	10
  2391  001900  6E03               	movwf	___awmod@divisor,c
  2392  001902  502A               	movf	scale@scl,w,c
  2393  001904  6E01               	movwf	___awmod@dividend,c
  2394  001906  6A02               	clrf	___awmod@dividend+1,c
  2395  001908  BE01               	btfsc	___awmod@dividend,7,c
  2396  00190A  0602               	decf	___awmod@dividend+1,f,c
  2397  00190C  EC44  F015         	call	___awmod	;wreg free
  2398  001910  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2399  001914  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2400  001918  ECB9  F016         	call	___wmul	;wreg free
  2401  00191C  0E29               	movlw	low __npowers_
  2402  00191E  240F               	addwf	?___wmul,w,c
  2403  001920  6EF6               	movwf	tblptrl,c
  2404  001922  0E10               	movlw	high __npowers_
  2405  001924  2010               	addwfc	?___wmul+1,w,c
  2406  001926  6EF7               	movwf	tblptrh,c
  2407  001928                     	if	0	;There are less than 3 active tblptr bytes
  2408  001928                     	endif
  2409  001928  0009               	tblrd		*+
  2410  00192A  CFF5 F018          	movff	tablat,___ftmul@f2
  2411  00192E  0009               	tblrd		*+
  2412  001930  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2413  001934  000A               	tblrd		*-
  2414  001936  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2415  00193A  EC11  F012         	call	___ftmul	;wreg free
  2416  00193E  D141               	goto	L5
  2417  001940  D15A               	goto	l189
  2418  001942  D054               	goto	l2283
  2419  001944                     l2277:
  2420                           
  2421                           ;doprnt.c: 432: else if(scl > 10)
  2422  001944  502A               	movf	scale@scl,w,c
  2423  001946  0A80               	xorlw	128
  2424  001948  0F75               	addlw	-139
  2425  00194A  A0D8               	btfss	status,0,c
  2426  00194C  D04F               	goto	l2283
  2427                           
  2428                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2429  00194E  0E00               	movlw	0
  2430  001950  6E0A               	movwf	___awdiv@divisor+1,c
  2431  001952  0E0A               	movlw	10
  2432  001954  6E09               	movwf	___awdiv@divisor,c
  2433  001956  502A               	movf	scale@scl,w,c
  2434  001958  6E07               	movwf	___awdiv@dividend,c
  2435  00195A  6A08               	clrf	___awdiv@dividend+1,c
  2436  00195C  BE07               	btfsc	___awdiv@dividend,7,c
  2437  00195E  0608               	decf	___awdiv@dividend+1,f,c
  2438  001960  EC6F  F014         	call	___awdiv	;wreg free
  2439  001964  0E09               	movlw	9
  2440  001966  2407               	addwf	?___awdiv,w,c
  2441  001968  6E0F               	movwf	___wmul@multiplier,c
  2442  00196A  0E00               	movlw	0
  2443  00196C  2008               	addwfc	?___awdiv+1,w,c
  2444  00196E  6E10               	movwf	___wmul@multiplier+1,c
  2445  001970  0E00               	movlw	0
  2446  001972  6E12               	movwf	___wmul@multiplicand+1,c
  2447  001974  0E03               	movlw	3
  2448  001976  6E11               	movwf	___wmul@multiplicand,c
  2449  001978  ECB9  F016         	call	___wmul	;wreg free
  2450  00197C  0E29               	movlw	low __npowers_
  2451  00197E  240F               	addwf	?___wmul,w,c
  2452  001980  6EF6               	movwf	tblptrl,c
  2453  001982  0E10               	movlw	high __npowers_
  2454  001984  2010               	addwfc	?___wmul+1,w,c
  2455  001986  6EF7               	movwf	tblptrh,c
  2456  001988                     	if	0	;There are less than 3 active tblptr bytes
  2457  001988                     	endif
  2458  001988  0009               	tblrd		*+
  2459  00198A  CFF5 F015          	movff	tablat,___ftmul@f1
  2460  00198E  0009               	tblrd		*+
  2461  001990  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2462  001994  000A               	tblrd		*-
  2463  001996  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2464  00199A  0E00               	movlw	0
  2465  00199C  6E12               	movwf	___wmul@multiplicand+1,c
  2466  00199E  0E03               	movlw	3
  2467  0019A0  6E11               	movwf	___wmul@multiplicand,c
  2468  0019A2  0E00               	movlw	0
  2469  0019A4  6E04               	movwf	___awmod@divisor+1,c
  2470  0019A6  0E0A               	movlw	10
  2471  0019A8  6E03               	movwf	___awmod@divisor,c
  2472  0019AA  502A               	movf	scale@scl,w,c
  2473  0019AC  6E01               	movwf	___awmod@dividend,c
  2474  0019AE  6A02               	clrf	___awmod@dividend+1,c
  2475  0019B0  BE01               	btfsc	___awmod@dividend,7,c
  2476  0019B2  0602               	decf	___awmod@dividend+1,f,c
  2477  0019B4  EC44  F015         	call	___awmod	;wreg free
  2478  0019B8  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2479  0019BC  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2480  0019C0  ECB9  F016         	call	___wmul	;wreg free
  2481  0019C4  0E29               	movlw	low __npowers_
  2482  0019C6  240F               	addwf	?___wmul,w,c
  2483  0019C8  6EF6               	movwf	tblptrl,c
  2484  0019CA  0E10               	movlw	high __npowers_
  2485  0019CC  2010               	addwfc	?___wmul+1,w,c
  2486  0019CE  6EF7               	movwf	tblptrh,c
  2487  0019D0                     	if	0	;There are less than 3 active tblptr bytes
  2488  0019D0                     	endif
  2489  0019D0  0009               	tblrd		*+
  2490  0019D2  CFF5 F018          	movff	tablat,___ftmul@f2
  2491  0019D6  0009               	tblrd		*+
  2492  0019D8  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2493  0019DC  000A               	tblrd		*-
  2494  0019DE  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2495  0019E2  EC11  F012         	call	___ftmul	;wreg free
  2496  0019E6  D0ED               	goto	L5
  2497  0019E8  D106               	goto	l189
  2498  0019EA  D000               	goto	l2283
  2499  0019EC                     l2283:
  2500                           
  2501                           ;doprnt.c: 434: return _npowers_[scl];
  2502  0019EC  502A               	movf	scale@scl,w,c
  2503  0019EE  0D03               	mullw	3
  2504  0019F0  0E29               	movlw	low __npowers_
  2505  0019F2  24F3               	addwf	prodl,w,c
  2506  0019F4  6EF6               	movwf	tblptrl,c
  2507  0019F6  0E10               	movlw	high __npowers_
  2508  0019F8  D0F2               	goto	L4
  2509  0019FA  D0FD               	goto	l189
  2510  0019FC                     l2287:
  2511                           
  2512                           ;doprnt.c: 435: }
  2513                           ;doprnt.c: 436: if(scl>=110)
  2514  0019FC  502A               	movf	scale@scl,w,c
  2515  0019FE  0A80               	xorlw	128
  2516  001A00  0F12               	addlw	-238
  2517  001A02  A0D8               	btfss	status,0,c
  2518  001A04  D08D               	goto	l2295
  2519                           
  2520                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2521  001A06  0E00               	movlw	0
  2522  001A08  6E12               	movwf	___wmul@multiplicand+1,c
  2523  001A0A  0E03               	movlw	3
  2524  001A0C  6E11               	movwf	___wmul@multiplicand,c
  2525  001A0E  0E00               	movlw	0
  2526  001A10  6E0A               	movwf	___awdiv@divisor+1,c
  2527  001A12  0E0A               	movlw	10
  2528  001A14  6E09               	movwf	___awdiv@divisor,c
  2529  001A16  0E00               	movlw	0
  2530  001A18  6E04               	movwf	___awmod@divisor+1,c
  2531  001A1A  0E64               	movlw	100
  2532  001A1C  6E03               	movwf	___awmod@divisor,c
  2533  001A1E  502A               	movf	scale@scl,w,c
  2534  001A20  6E01               	movwf	___awmod@dividend,c
  2535  001A22  6A02               	clrf	___awmod@dividend+1,c
  2536  001A24  BE01               	btfsc	___awmod@dividend,7,c
  2537  001A26  0602               	decf	___awmod@dividend+1,f,c
  2538  001A28  EC44  F015         	call	___awmod	;wreg free
  2539  001A2C  C001  F007         	movff	?___awmod,___awdiv@dividend
  2540  001A30  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2541  001A34  EC6F  F014         	call	___awdiv	;wreg free
  2542  001A38  0E09               	movlw	9
  2543  001A3A  2407               	addwf	?___awdiv,w,c
  2544  001A3C  6E0F               	movwf	___wmul@multiplier,c
  2545  001A3E  0E00               	movlw	0
  2546  001A40  2008               	addwfc	?___awdiv+1,w,c
  2547  001A42  6E10               	movwf	___wmul@multiplier+1,c
  2548  001A44  ECB9  F016         	call	___wmul	;wreg free
  2549  001A48  0E50               	movlw	low __powers_
  2550  001A4A  240F               	addwf	?___wmul,w,c
  2551  001A4C  6EF6               	movwf	tblptrl,c
  2552  001A4E  0E10               	movlw	high __powers_
  2553  001A50  2010               	addwfc	?___wmul+1,w,c
  2554  001A52  6EF7               	movwf	tblptrh,c
  2555  001A54                     	if	0	;There are less than 3 active tblptr bytes
  2556  001A54                     	endif
  2557  001A54  0009               	tblrd		*+
  2558  001A56  CFF5 F018          	movff	tablat,___ftmul@f2
  2559  001A5A  0009               	tblrd		*+
  2560  001A5C  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2561  001A60  000A               	tblrd		*-
  2562  001A62  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2563  001A66  0E00               	movlw	0
  2564  001A68  6E0A               	movwf	___awdiv@divisor+1,c
  2565  001A6A  0E64               	movlw	100
  2566  001A6C  6E09               	movwf	___awdiv@divisor,c
  2567  001A6E  502A               	movf	scale@scl,w,c
  2568  001A70  6E07               	movwf	___awdiv@dividend,c
  2569  001A72  6A08               	clrf	___awdiv@dividend+1,c
  2570  001A74  BE07               	btfsc	___awdiv@dividend,7,c
  2571  001A76  0608               	decf	___awdiv@dividend+1,f,c
  2572  001A78  EC6F  F014         	call	___awdiv	;wreg free
  2573  001A7C  0E12               	movlw	18
  2574  001A7E  2407               	addwf	?___awdiv,w,c
  2575  001A80  6E0F               	movwf	___wmul@multiplier,c
  2576  001A82  0E00               	movlw	0
  2577  001A84  2008               	addwfc	?___awdiv+1,w,c
  2578  001A86  6E10               	movwf	___wmul@multiplier+1,c
  2579  001A88  0E00               	movlw	0
  2580  001A8A  6E12               	movwf	___wmul@multiplicand+1,c
  2581  001A8C  0E03               	movlw	3
  2582  001A8E  6E11               	movwf	___wmul@multiplicand,c
  2583  001A90  ECB9  F016         	call	___wmul	;wreg free
  2584  001A94  0E50               	movlw	low __powers_
  2585  001A96  240F               	addwf	?___wmul,w,c
  2586  001A98  6EF6               	movwf	tblptrl,c
  2587  001A9A  0E10               	movlw	high __powers_
  2588  001A9C  2010               	addwfc	?___wmul+1,w,c
  2589  001A9E  6EF7               	movwf	tblptrh,c
  2590  001AA0                     	if	0	;There are less than 3 active tblptr bytes
  2591  001AA0                     	endif
  2592  001AA0  0009               	tblrd		*+
  2593  001AA2  CFF5 F015          	movff	tablat,___ftmul@f1
  2594  001AA6  0009               	tblrd		*+
  2595  001AA8  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2596  001AAC  000A               	tblrd		*-
  2597  001AAE  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2598  001AB2  EC11  F012         	call	___ftmul	;wreg free
  2599  001AB6  C015  F027         	movff	?___ftmul,_scale$1185
  2600  001ABA  C016  F028         	movff	?___ftmul+1,_scale$1185+1
  2601  001ABE  C017  F029         	movff	?___ftmul+2,_scale$1185+2
  2602                           
  2603                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2604  001AC2  C027  F015         	movff	_scale$1185,___ftmul@f1
  2605  001AC6  C028  F016         	movff	_scale$1185+1,___ftmul@f1+1
  2606  001ACA  C029  F017         	movff	_scale$1185+2,___ftmul@f1+2
  2607  001ACE  0E00               	movlw	0
  2608  001AD0  6E12               	movwf	___wmul@multiplicand+1,c
  2609  001AD2  0E03               	movlw	3
  2610  001AD4  6E11               	movwf	___wmul@multiplicand,c
  2611  001AD6  0E00               	movlw	0
  2612  001AD8  6E04               	movwf	___awmod@divisor+1,c
  2613  001ADA  0E0A               	movlw	10
  2614  001ADC  6E03               	movwf	___awmod@divisor,c
  2615  001ADE  502A               	movf	scale@scl,w,c
  2616  001AE0  6E01               	movwf	___awmod@dividend,c
  2617  001AE2  6A02               	clrf	___awmod@dividend+1,c
  2618  001AE4  BE01               	btfsc	___awmod@dividend,7,c
  2619  001AE6  0602               	decf	___awmod@dividend+1,f,c
  2620  001AE8  EC44  F015         	call	___awmod	;wreg free
  2621  001AEC  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2622  001AF0  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2623  001AF4  ECB9  F016         	call	___wmul	;wreg free
  2624  001AF8  0E50               	movlw	low __powers_
  2625  001AFA  240F               	addwf	?___wmul,w,c
  2626  001AFC  6EF6               	movwf	tblptrl,c
  2627  001AFE  0E10               	movlw	high __powers_
  2628  001B00  2010               	addwfc	?___wmul+1,w,c
  2629  001B02  6EF7               	movwf	tblptrh,c
  2630  001B04                     	if	0	;There are less than 3 active tblptr bytes
  2631  001B04                     	endif
  2632  001B04  0009               	tblrd		*+
  2633  001B06  CFF5 F018          	movff	tablat,___ftmul@f2
  2634  001B0A  0009               	tblrd		*+
  2635  001B0C  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2636  001B10  000A               	tblrd		*-
  2637  001B12  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2638  001B16  EC11  F012         	call	___ftmul	;wreg free
  2639  001B1A  D053               	goto	L5
  2640  001B1C  D06C               	goto	l189
  2641  001B1E  D059               	goto	l2301
  2642  001B20                     l2295:
  2643                           
  2644                           ;doprnt.c: 438: else if(scl > 10)
  2645  001B20  502A               	movf	scale@scl,w,c
  2646  001B22  0A80               	xorlw	128
  2647  001B24  0F75               	addlw	-139
  2648  001B26  A0D8               	btfss	status,0,c
  2649  001B28  D054               	goto	l2301
  2650                           
  2651                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2652  001B2A  0E00               	movlw	0
  2653  001B2C  6E0A               	movwf	___awdiv@divisor+1,c
  2654  001B2E  0E0A               	movlw	10
  2655  001B30  6E09               	movwf	___awdiv@divisor,c
  2656  001B32  502A               	movf	scale@scl,w,c
  2657  001B34  6E07               	movwf	___awdiv@dividend,c
  2658  001B36  6A08               	clrf	___awdiv@dividend+1,c
  2659  001B38  BE07               	btfsc	___awdiv@dividend,7,c
  2660  001B3A  0608               	decf	___awdiv@dividend+1,f,c
  2661  001B3C  EC6F  F014         	call	___awdiv	;wreg free
  2662  001B40  0E09               	movlw	9
  2663  001B42  2407               	addwf	?___awdiv,w,c
  2664  001B44  6E0F               	movwf	___wmul@multiplier,c
  2665  001B46  0E00               	movlw	0
  2666  001B48  2008               	addwfc	?___awdiv+1,w,c
  2667  001B4A  6E10               	movwf	___wmul@multiplier+1,c
  2668  001B4C  0E00               	movlw	0
  2669  001B4E  6E12               	movwf	___wmul@multiplicand+1,c
  2670  001B50  0E03               	movlw	3
  2671  001B52  6E11               	movwf	___wmul@multiplicand,c
  2672  001B54  ECB9  F016         	call	___wmul	;wreg free
  2673  001B58  0E50               	movlw	low __powers_
  2674  001B5A  240F               	addwf	?___wmul,w,c
  2675  001B5C  6EF6               	movwf	tblptrl,c
  2676  001B5E  0E10               	movlw	high __powers_
  2677  001B60  2010               	addwfc	?___wmul+1,w,c
  2678  001B62  6EF7               	movwf	tblptrh,c
  2679  001B64                     	if	0	;There are less than 3 active tblptr bytes
  2680  001B64                     	endif
  2681  001B64  0009               	tblrd		*+
  2682  001B66  CFF5 F015          	movff	tablat,___ftmul@f1
  2683  001B6A  0009               	tblrd		*+
  2684  001B6C  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2685  001B70  000A               	tblrd		*-
  2686  001B72  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2687  001B76  0E00               	movlw	0
  2688  001B78  6E12               	movwf	___wmul@multiplicand+1,c
  2689  001B7A  0E03               	movlw	3
  2690  001B7C  6E11               	movwf	___wmul@multiplicand,c
  2691  001B7E  0E00               	movlw	0
  2692  001B80  6E04               	movwf	___awmod@divisor+1,c
  2693  001B82  0E0A               	movlw	10
  2694  001B84  6E03               	movwf	___awmod@divisor,c
  2695  001B86  502A               	movf	scale@scl,w,c
  2696  001B88  6E01               	movwf	___awmod@dividend,c
  2697  001B8A  6A02               	clrf	___awmod@dividend+1,c
  2698  001B8C  BE01               	btfsc	___awmod@dividend,7,c
  2699  001B8E  0602               	decf	___awmod@dividend+1,f,c
  2700  001B90  EC44  F015         	call	___awmod	;wreg free
  2701  001B94  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2702  001B98  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2703  001B9C  ECB9  F016         	call	___wmul	;wreg free
  2704  001BA0  0E50               	movlw	low __powers_
  2705  001BA2  240F               	addwf	?___wmul,w,c
  2706  001BA4  6EF6               	movwf	tblptrl,c
  2707  001BA6  0E10               	movlw	high __powers_
  2708  001BA8  2010               	addwfc	?___wmul+1,w,c
  2709  001BAA  6EF7               	movwf	tblptrh,c
  2710  001BAC                     	if	0	;There are less than 3 active tblptr bytes
  2711  001BAC                     	endif
  2712  001BAC  0009               	tblrd		*+
  2713  001BAE  CFF5 F018          	movff	tablat,___ftmul@f2
  2714  001BB2  0009               	tblrd		*+
  2715  001BB4  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2716  001BB8  000A               	tblrd		*-
  2717  001BBA  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2718  001BBE  EC11  F012         	call	___ftmul	;wreg free
  2719  001BC2                     L5:
  2720  001BC2  C015  F024         	movff	?___ftmul,?_scale
  2721  001BC6  C016  F025         	movff	?___ftmul+1,?_scale+1
  2722  001BCA  C017  F026         	movff	?___ftmul+2,?_scale+2
  2723  001BCE  D013               	goto	l189
  2724  001BD0  D000               	goto	l2301
  2725  001BD2                     l2301:
  2726                           
  2727                           ;doprnt.c: 440: return _powers_[scl];
  2728  001BD2  502A               	movf	scale@scl,w,c
  2729  001BD4  0D03               	mullw	3
  2730  001BD6  0E50               	movlw	low __powers_
  2731  001BD8  24F3               	addwf	prodl,w,c
  2732  001BDA  6EF6               	movwf	tblptrl,c
  2733  001BDC  0E10               	movlw	high __powers_
  2734  001BDE                     L4:
  2735  001BDE  20F4               	addwfc	prodh,w,c
  2736  001BE0  6EF7               	movwf	tblptrh,c
  2737  001BE2                     	if	0	;There are less than 3 active tblptr bytes
  2738  001BE2                     	endif
  2739  001BE2  0009               	tblrd		*+
  2740  001BE4  CFF5 F024          	movff	tablat,?_scale
  2741  001BE8  0009               	tblrd		*+
  2742  001BEA  CFF5 F025          	movff	tablat,?_scale+1
  2743  001BEE  000A               	tblrd		*-
  2744  001BF0  CFF5 F026          	movff	tablat,?_scale+2
  2745  001BF4  D000               	goto	l189
  2746  001BF6                     l189:
  2747  001BF6  0012               	return		;funcret
  2748  001BF8                     __end_of_scale:
  2749                           	opt stack 0
  2750                           tblptru	equ	0xFF8
  2751                           tblptrh	equ	0xFF7
  2752                           tblptrl	equ	0xFF6
  2753                           tablat	equ	0xFF5
  2754                           prodh	equ	0xFF4
  2755                           prodl	equ	0xFF3
  2756                           postinc0	equ	0xFEE
  2757                           wreg	equ	0xFE8
  2758                           postdec1	equ	0xFE5
  2759                           fsr1l	equ	0xFE1
  2760                           postinc2	equ	0xFDE
  2761                           postdec2	equ	0xFDD
  2762                           fsr2h	equ	0xFDA
  2763                           fsr2l	equ	0xFD9
  2764                           status	equ	0xFD8
  2765                           
  2766 ;; *************** function _putch *****************
  2767 ;; Defined at:
  2768 ;;		line 33 in file "Lab4p1.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  c               1    wreg     unsigned char 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  c               1    0[COMRAM] unsigned char 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;		None               void
  2775 ;; Registers used:
  2776 ;;		wreg
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;Total ram usage:        1 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_printf
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text3
  2796  002E44                     __ptext3:
  2797                           	opt stack 0
  2798  002E44                     _putch:
  2799                           	opt stack 29
  2800                           
  2801                           ;incstack = 0
  2802                           ;putch@c stored from wreg
  2803  002E44  6E01               	movwf	putch@c,c
  2804                           
  2805                           ;Lab4p1.c: 35: while(!TRMT);
  2806  002E46  D000               	goto	l62
  2807  002E48                     l62:
  2808  002E48  A2AC               	btfss	4012,1,c	;volatile
  2809  002E4A  D7FE               	goto	l62
  2810                           
  2811                           ;Lab4p1.c: 36: TXREG = c;
  2812  002E4C  C001  FFAD         	movff	putch@c,4013	;volatile
  2813  002E50  0012               	return		;funcret
  2814  002E52                     __end_of_putch:
  2815                           	opt stack 0
  2816                           tblptru	equ	0xFF8
  2817                           tblptrh	equ	0xFF7
  2818                           tblptrl	equ	0xFF6
  2819                           tablat	equ	0xFF5
  2820                           prodh	equ	0xFF4
  2821                           prodl	equ	0xFF3
  2822                           postinc0	equ	0xFEE
  2823                           wreg	equ	0xFE8
  2824                           postdec1	equ	0xFE5
  2825                           fsr1l	equ	0xFE1
  2826                           postinc2	equ	0xFDE
  2827                           postdec2	equ	0xFDD
  2828                           fsr2h	equ	0xFDA
  2829                           fsr2l	equ	0xFD9
  2830                           status	equ	0xFD8
  2831                           
  2832 ;; *************** function _fround *****************
  2833 ;; Defined at:
  2834 ;;		line 409 in file "E:\XC8\sources\common\doprnt.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  prec            1    wreg     unsigned char 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  prec            1   44[COMRAM] unsigned char 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  3   35[COMRAM] unsigned char 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2848 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;Total ram usage:       10 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    2
  2855 ;; This function calls:
  2856 ;;		___awdiv
  2857 ;;		___awmod
  2858 ;;		___ftmul
  2859 ;;		___wmul
  2860 ;; This function is called by:
  2861 ;;		_printf
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text4
  2866  001BF8                     __ptext4:
  2867                           	opt stack 0
  2868  001BF8                     _fround:
  2869                           	opt stack 27
  2870                           
  2871                           ;incstack = 0
  2872                           ;fround@prec stored from wreg
  2873  001BF8  6E2D               	movwf	fround@prec,c
  2874                           
  2875                           ;doprnt.c: 413: if(prec>=110)
  2876  001BFA  0E6D               	movlw	109
  2877  001BFC  642D               	cpfsgt	fround@prec,c
  2878  001BFE  D09B               	goto	l2255
  2879                           
  2880                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2881  001C00  0E00               	movlw	0
  2882  001C02  6E12               	movwf	___wmul@multiplicand+1,c
  2883  001C04  0E03               	movlw	3
  2884  001C06  6E11               	movwf	___wmul@multiplicand,c
  2885  001C08  0E00               	movlw	0
  2886  001C0A  6E0A               	movwf	___awdiv@divisor+1,c
  2887  001C0C  0E0A               	movlw	10
  2888  001C0E  6E09               	movwf	___awdiv@divisor,c
  2889  001C10  0E00               	movlw	0
  2890  001C12  6E04               	movwf	___awmod@divisor+1,c
  2891  001C14  0E64               	movlw	100
  2892  001C16  6E03               	movwf	___awmod@divisor,c
  2893  001C18  C02D  F001         	movff	fround@prec,___awmod@dividend
  2894  001C1C  6A02               	clrf	___awmod@dividend+1,c
  2895  001C1E  EC44  F015         	call	___awmod	;wreg free
  2896  001C22  C001  F007         	movff	?___awmod,___awdiv@dividend
  2897  001C26  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2898  001C2A  EC6F  F014         	call	___awdiv	;wreg free
  2899  001C2E  0E09               	movlw	9
  2900  001C30  2407               	addwf	?___awdiv,w,c
  2901  001C32  6E0F               	movwf	___wmul@multiplier,c
  2902  001C34  0E00               	movlw	0
  2903  001C36  2008               	addwfc	?___awdiv+1,w,c
  2904  001C38  6E10               	movwf	___wmul@multiplier+1,c
  2905  001C3A  ECB9  F016         	call	___wmul	;wreg free
  2906  001C3E  0E29               	movlw	low __npowers_
  2907  001C40  240F               	addwf	?___wmul,w,c
  2908  001C42  6EF6               	movwf	tblptrl,c
  2909  001C44  0E10               	movlw	high __npowers_
  2910  001C46  2010               	addwfc	?___wmul+1,w,c
  2911  001C48  6EF7               	movwf	tblptrh,c
  2912  001C4A                     	if	0	;There are less than 3 active tblptr bytes
  2913  001C4A                     	endif
  2914  001C4A  0009               	tblrd		*+
  2915  001C4C  CFF5 F018          	movff	tablat,___ftmul@f2
  2916  001C50  0009               	tblrd		*+
  2917  001C52  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2918  001C56  000A               	tblrd		*-
  2919  001C58  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2920  001C5C  0E00               	movlw	0
  2921  001C5E  6E0A               	movwf	___awdiv@divisor+1,c
  2922  001C60  0E64               	movlw	100
  2923  001C62  6E09               	movwf	___awdiv@divisor,c
  2924  001C64  C02D  F007         	movff	fround@prec,___awdiv@dividend
  2925  001C68  6A08               	clrf	___awdiv@dividend+1,c
  2926  001C6A  EC6F  F014         	call	___awdiv	;wreg free
  2927  001C6E  0E12               	movlw	18
  2928  001C70  2407               	addwf	?___awdiv,w,c
  2929  001C72  6E0F               	movwf	___wmul@multiplier,c
  2930  001C74  0E00               	movlw	0
  2931  001C76  2008               	addwfc	?___awdiv+1,w,c
  2932  001C78  6E10               	movwf	___wmul@multiplier+1,c
  2933  001C7A  0E00               	movlw	0
  2934  001C7C  6E12               	movwf	___wmul@multiplicand+1,c
  2935  001C7E  0E03               	movlw	3
  2936  001C80  6E11               	movwf	___wmul@multiplicand,c
  2937  001C82  ECB9  F016         	call	___wmul	;wreg free
  2938  001C86  0E29               	movlw	low __npowers_
  2939  001C88  240F               	addwf	?___wmul,w,c
  2940  001C8A  6EF6               	movwf	tblptrl,c
  2941  001C8C  0E10               	movlw	high __npowers_
  2942  001C8E  2010               	addwfc	?___wmul+1,w,c
  2943  001C90  6EF7               	movwf	tblptrh,c
  2944  001C92                     	if	0	;There are less than 3 active tblptr bytes
  2945  001C92                     	endif
  2946  001C92  0009               	tblrd		*+
  2947  001C94  CFF5 F015          	movff	tablat,___ftmul@f1
  2948  001C98  0009               	tblrd		*+
  2949  001C9A  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2950  001C9E  000A               	tblrd		*-
  2951  001CA0  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2952  001CA4  EC11  F012         	call	___ftmul	;wreg free
  2953  001CA8  C015  F02A         	movff	?___ftmul,_fround$1183
  2954  001CAC  C016  F02B         	movff	?___ftmul+1,_fround$1183+1
  2955  001CB0  C017  F02C         	movff	?___ftmul+2,_fround$1183+2
  2956                           
  2957                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2958  001CB4  0E00               	movlw	0
  2959  001CB6  6E12               	movwf	___wmul@multiplicand+1,c
  2960  001CB8  0E03               	movlw	3
  2961  001CBA  6E11               	movwf	___wmul@multiplicand,c
  2962  001CBC  0E00               	movlw	0
  2963  001CBE  6E04               	movwf	___awmod@divisor+1,c
  2964  001CC0  0E0A               	movlw	10
  2965  001CC2  6E03               	movwf	___awmod@divisor,c
  2966  001CC4  C02D  F001         	movff	fround@prec,___awmod@dividend
  2967  001CC8  6A02               	clrf	___awmod@dividend+1,c
  2968  001CCA  EC44  F015         	call	___awmod	;wreg free
  2969  001CCE  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2970  001CD2  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2971  001CD6  ECB9  F016         	call	___wmul	;wreg free
  2972  001CDA  0E29               	movlw	low __npowers_
  2973  001CDC  240F               	addwf	?___wmul,w,c
  2974  001CDE  6EF6               	movwf	tblptrl,c
  2975  001CE0  0E10               	movlw	high __npowers_
  2976  001CE2  2010               	addwfc	?___wmul+1,w,c
  2977  001CE4  6EF7               	movwf	tblptrh,c
  2978  001CE6                     	if	0	;There are less than 3 active tblptr bytes
  2979  001CE6                     	endif
  2980  001CE6  0009               	tblrd		*+
  2981  001CE8  CFF5 F018          	movff	tablat,___ftmul@f2
  2982  001CEC  0009               	tblrd		*+
  2983  001CEE  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2984  001CF2  000A               	tblrd		*-
  2985  001CF4  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2986  001CF8  C02A  F015         	movff	_fround$1183,___ftmul@f1
  2987  001CFC  C02B  F016         	movff	_fround$1183+1,___ftmul@f1+1
  2988  001D00  C02C  F017         	movff	_fround$1183+2,___ftmul@f1+2
  2989  001D04  EC11  F012         	call	___ftmul	;wreg free
  2990  001D08  C015  F027         	movff	?___ftmul,_fround$1184
  2991  001D0C  C016  F028         	movff	?___ftmul+1,_fround$1184+1
  2992  001D10  C017  F029         	movff	?___ftmul+2,_fround$1184+2
  2993                           
  2994                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2995  001D14  C027  F015         	movff	_fround$1184,___ftmul@f1
  2996  001D18  C028  F016         	movff	_fround$1184+1,___ftmul@f1+1
  2997  001D1C  C029  F017         	movff	_fround$1184+2,___ftmul@f1+2
  2998  001D20  0E00               	movlw	0
  2999  001D22  6E18               	movwf	___ftmul@f2,c
  3000  001D24  0E00               	movlw	0
  3001  001D26  6E19               	movwf	___ftmul@f2+1,c
  3002  001D28  0E3F               	movlw	63
  3003  001D2A  6E1A               	movwf	___ftmul@f2+2,c
  3004  001D2C  EC11  F012         	call	___ftmul	;wreg free
  3005  001D30  D07D               	goto	L7
  3006  001D32  D083               	goto	l182
  3007  001D34  D062               	goto	l2263
  3008  001D36                     l2255:
  3009                           
  3010                           ;doprnt.c: 415: else if(prec > 10)
  3011  001D36  0E0A               	movlw	10
  3012  001D38  642D               	cpfsgt	fround@prec,c
  3013  001D3A  D05F               	goto	l2263
  3014                           
  3015                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3016  001D3C  0E00               	movlw	0
  3017  001D3E  6E12               	movwf	___wmul@multiplicand+1,c
  3018  001D40  0E03               	movlw	3
  3019  001D42  6E11               	movwf	___wmul@multiplicand,c
  3020  001D44  0E00               	movlw	0
  3021  001D46  6E04               	movwf	___awmod@divisor+1,c
  3022  001D48  0E0A               	movlw	10
  3023  001D4A  6E03               	movwf	___awmod@divisor,c
  3024  001D4C  C02D  F001         	movff	fround@prec,___awmod@dividend
  3025  001D50  6A02               	clrf	___awmod@dividend+1,c
  3026  001D52  EC44  F015         	call	___awmod	;wreg free
  3027  001D56  C001  F00F         	movff	?___awmod,___wmul@multiplier
  3028  001D5A  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  3029  001D5E  ECB9  F016         	call	___wmul	;wreg free
  3030  001D62  0E29               	movlw	low __npowers_
  3031  001D64  240F               	addwf	?___wmul,w,c
  3032  001D66  6EF6               	movwf	tblptrl,c
  3033  001D68  0E10               	movlw	high __npowers_
  3034  001D6A  2010               	addwfc	?___wmul+1,w,c
  3035  001D6C  6EF7               	movwf	tblptrh,c
  3036  001D6E                     	if	0	;There are less than 3 active tblptr bytes
  3037  001D6E                     	endif
  3038  001D6E  0009               	tblrd		*+
  3039  001D70  CFF5 F018          	movff	tablat,___ftmul@f2
  3040  001D74  0009               	tblrd		*+
  3041  001D76  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3042  001D7A  000A               	tblrd		*-
  3043  001D7C  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3044  001D80  0E00               	movlw	0
  3045  001D82  6E0A               	movwf	___awdiv@divisor+1,c
  3046  001D84  0E0A               	movlw	10
  3047  001D86  6E09               	movwf	___awdiv@divisor,c
  3048  001D88  C02D  F007         	movff	fround@prec,___awdiv@dividend
  3049  001D8C  6A08               	clrf	___awdiv@dividend+1,c
  3050  001D8E  EC6F  F014         	call	___awdiv	;wreg free
  3051  001D92  0E09               	movlw	9
  3052  001D94  2407               	addwf	?___awdiv,w,c
  3053  001D96  6E0F               	movwf	___wmul@multiplier,c
  3054  001D98  0E00               	movlw	0
  3055  001D9A  2008               	addwfc	?___awdiv+1,w,c
  3056  001D9C  6E10               	movwf	___wmul@multiplier+1,c
  3057  001D9E  0E00               	movlw	0
  3058  001DA0  6E12               	movwf	___wmul@multiplicand+1,c
  3059  001DA2  0E03               	movlw	3
  3060  001DA4  6E11               	movwf	___wmul@multiplicand,c
  3061  001DA6  ECB9  F016         	call	___wmul	;wreg free
  3062  001DAA  0E29               	movlw	low __npowers_
  3063  001DAC  240F               	addwf	?___wmul,w,c
  3064  001DAE  6EF6               	movwf	tblptrl,c
  3065  001DB0  0E10               	movlw	high __npowers_
  3066  001DB2  2010               	addwfc	?___wmul+1,w,c
  3067  001DB4  6EF7               	movwf	tblptrh,c
  3068  001DB6                     	if	0	;There are less than 3 active tblptr bytes
  3069  001DB6                     	endif
  3070  001DB6  0009               	tblrd		*+
  3071  001DB8  CFF5 F015          	movff	tablat,___ftmul@f1
  3072  001DBC  0009               	tblrd		*+
  3073  001DBE  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3074  001DC2  000A               	tblrd		*-
  3075  001DC4  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3076  001DC8  EC11  F012         	call	___ftmul	;wreg free
  3077  001DCC  C015  F02A         	movff	?___ftmul,_fround$1183
  3078  001DD0  C016  F02B         	movff	?___ftmul+1,_fround$1183+1
  3079  001DD4  C017  F02C         	movff	?___ftmul+2,_fround$1183+2
  3080                           
  3081                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3082  001DD8  C02A  F015         	movff	_fround$1183,___ftmul@f1
  3083  001DDC  C02B  F016         	movff	_fround$1183+1,___ftmul@f1+1
  3084  001DE0  C02C  F017         	movff	_fround$1183+2,___ftmul@f1+2
  3085  001DE4  0E00               	movlw	0
  3086  001DE6  6E18               	movwf	___ftmul@f2,c
  3087  001DE8  0E00               	movlw	0
  3088  001DEA  6E19               	movwf	___ftmul@f2+1,c
  3089  001DEC  0E3F               	movlw	63
  3090  001DEE  6E1A               	movwf	___ftmul@f2+2,c
  3091  001DF0  EC11  F012         	call	___ftmul	;wreg free
  3092  001DF4  D01B               	goto	L7
  3093  001DF6  D021               	goto	l182
  3094  001DF8  D000               	goto	l2263
  3095  001DFA                     l2263:
  3096                           
  3097                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3098  001DFA  502D               	movf	fround@prec,w,c
  3099  001DFC  0D03               	mullw	3
  3100  001DFE  0E29               	movlw	low __npowers_
  3101  001E00  24F3               	addwf	prodl,w,c
  3102  001E02  6EF6               	movwf	tblptrl,c
  3103  001E04  0E10               	movlw	high __npowers_
  3104  001E06  20F4               	addwfc	prodh,w,c
  3105  001E08  6EF7               	movwf	tblptrh,c
  3106  001E0A                     	if	0	;There are less than 3 active tblptr bytes
  3107  001E0A                     	endif
  3108  001E0A  0009               	tblrd		*+
  3109  001E0C  CFF5 F015          	movff	tablat,___ftmul@f1
  3110  001E10  0009               	tblrd		*+
  3111  001E12  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3112  001E16  000A               	tblrd		*-
  3113  001E18  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3114  001E1C  0E00               	movlw	0
  3115  001E1E  6E18               	movwf	___ftmul@f2,c
  3116  001E20  0E00               	movlw	0
  3117  001E22  6E19               	movwf	___ftmul@f2+1,c
  3118  001E24  0E3F               	movlw	63
  3119  001E26  6E1A               	movwf	___ftmul@f2+2,c
  3120  001E28  EC11  F012         	call	___ftmul	;wreg free
  3121  001E2C                     L7:
  3122  001E2C  C015  F024         	movff	?___ftmul,?_fround
  3123  001E30  C016  F025         	movff	?___ftmul+1,?_fround+1
  3124  001E34  C017  F026         	movff	?___ftmul+2,?_fround+2
  3125  001E38  D000               	goto	l182
  3126  001E3A                     l182:
  3127  001E3A  0012               	return		;funcret
  3128  001E3C                     __end_of_fround:
  3129                           	opt stack 0
  3130                           tblptru	equ	0xFF8
  3131                           tblptrh	equ	0xFF7
  3132                           tblptrl	equ	0xFF6
  3133                           tablat	equ	0xFF5
  3134                           prodh	equ	0xFF4
  3135                           prodl	equ	0xFF3
  3136                           postinc0	equ	0xFEE
  3137                           wreg	equ	0xFE8
  3138                           postdec1	equ	0xFE5
  3139                           fsr1l	equ	0xFE1
  3140                           postinc2	equ	0xFDE
  3141                           postdec2	equ	0xFDD
  3142                           fsr2h	equ	0xFDA
  3143                           fsr2l	equ	0xFD9
  3144                           status	equ	0xFD8
  3145                           
  3146 ;; *************** function ___wmul *****************
  3147 ;; Defined at:
  3148 ;;		line 15 in file "E:\XC8\sources\common\Umul16.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  multiplier      2   14[COMRAM] unsigned int 
  3151 ;;  multiplicand    2   16[COMRAM] unsigned int 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  product         2   18[COMRAM] unsigned int 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  2   14[COMRAM] unsigned int 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0, prodl, prodh
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3163 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;Total ram usage:        6 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_fround
  3173 ;;		_scale
  3174 ;;		_printf
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text5
  3179  002D72                     __ptext5:
  3180                           	opt stack 0
  3181  002D72                     ___wmul:
  3182                           	opt stack 28
  3183                           
  3184                           ;incstack = 0
  3185  002D72  500F               	movf	___wmul@multiplier,w,c
  3186  002D74  0211               	mulwf	___wmul@multiplicand,c
  3187  002D76  CFF3 F013          	movff	prodl,___wmul@product
  3188  002D7A  CFF4 F014          	movff	prodh,___wmul@product+1
  3189  002D7E  500F               	movf	___wmul@multiplier,w,c
  3190  002D80  0212               	mulwf	___wmul@multiplicand+1,c
  3191  002D82  50F3               	movf	prodl,w,c
  3192  002D84  2614               	addwf	___wmul@product+1,f,c
  3193  002D86  5010               	movf	___wmul@multiplier+1,w,c
  3194  002D88  0211               	mulwf	___wmul@multiplicand,c
  3195  002D8A  50F3               	movf	prodl,w,c
  3196  002D8C  2614               	addwf	___wmul@product+1,f,c
  3197  002D8E  C013  F00F         	movff	___wmul@product,?___wmul
  3198  002D92  C014  F010         	movff	___wmul@product+1,?___wmul+1
  3199  002D96  D000               	goto	l290
  3200  002D98                     l290:
  3201  002D98  0012               	return		;funcret
  3202  002D9A                     __end_of___wmul:
  3203                           	opt stack 0
  3204                           tblptru	equ	0xFF8
  3205                           tblptrh	equ	0xFF7
  3206                           tblptrl	equ	0xFF6
  3207                           tablat	equ	0xFF5
  3208                           prodh	equ	0xFF4
  3209                           prodl	equ	0xFF3
  3210                           postinc0	equ	0xFEE
  3211                           wreg	equ	0xFE8
  3212                           postdec1	equ	0xFE5
  3213                           fsr1l	equ	0xFE1
  3214                           postinc2	equ	0xFDE
  3215                           postdec2	equ	0xFDD
  3216                           fsr2h	equ	0xFDA
  3217                           fsr2l	equ	0xFD9
  3218                           status	equ	0xFD8
  3219                           
  3220 ;; *************** function ___ftmul *****************
  3221 ;; Defined at:
  3222 ;;		line 62 in file "E:\XC8\sources\common\ftmul.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  f1              3   20[COMRAM] float 
  3225 ;;  f2              3   23[COMRAM] float 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  f3_as_produc    3   30[COMRAM] unsigned um
  3228 ;;  sign            1   34[COMRAM] unsigned char 
  3229 ;;  cntr            1   33[COMRAM] unsigned char 
  3230 ;;  exp             1   29[COMRAM] unsigned char 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  3   20[COMRAM] float 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3240 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;Total ram usage:       15 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    1
  3247 ;; This function calls:
  3248 ;;		___ftpack
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;;		_fround
  3252 ;;		_scale
  3253 ;;		_printf
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           	psect	text6
  3258  002422                     __ptext6:
  3259                           	opt stack 0
  3260  002422                     ___ftmul:
  3261                           	opt stack 27
  3262                           
  3263                           ;incstack = 0
  3264  002422  C017  F01B         	movff	___ftmul@f1+2,??___ftmul
  3265  002426  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3266  002428  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3267  00242A  3416               	rlcf	___ftmul@f1+1,w,c
  3268  00242C  361B               	rlcf	??___ftmul& (0+255),f,c
  3269  00242E  E301               	bnc	u1911
  3270  002430  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3271  002432                     u1911:
  3272  002432  501B               	movf	??___ftmul,w,c
  3273  002434  6E1E               	movwf	___ftmul@exp,c
  3274  002436  501E               	movf	___ftmul@exp,w,c
  3275  002438  A4D8               	btfss	status,2,c
  3276  00243A  D002               	goto	l2069
  3277  00243C  D00E               	goto	l2071
  3278  00243E  D06C               	goto	l719
  3279  002440                     l2069:
  3280  002440  C01A  F01B         	movff	___ftmul@f2+2,??___ftmul
  3281  002444  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3282  002446  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3283  002448  3419               	rlcf	___ftmul@f2+1,w,c
  3284  00244A  361B               	rlcf	??___ftmul& (0+255),f,c
  3285  00244C  E301               	bnc	u1931
  3286  00244E  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3287  002450                     u1931:
  3288  002450  501B               	movf	??___ftmul,w,c
  3289  002452  6E23               	movwf	___ftmul@sign,c
  3290  002454  5023               	movf	___ftmul@sign,w,c
  3291  002456  A4D8               	btfss	status,2,c
  3292  002458  D007               	goto	l2075
  3293  00245A                     l2071:
  3294  00245A  0E00               	movlw	0
  3295  00245C  6E15               	movwf	?___ftmul,c
  3296  00245E  0E00               	movlw	0
  3297  002460  6E16               	movwf	?___ftmul+1,c
  3298  002462  0E00               	movlw	0
  3299  002464  6E17               	movwf	?___ftmul+2,c
  3300  002466  D058               	goto	l719
  3301  002468                     l2075:
  3302  002468  5023               	movf	___ftmul@sign,w,c
  3303  00246A  0F7B               	addlw	123
  3304  00246C  261E               	addwf	___ftmul@exp,f,c
  3305  00246E  C017  F023         	movff	___ftmul@f1+2,___ftmul@sign
  3306  002472  501A               	movf	___ftmul@f2+2,w,c
  3307  002474  1A23               	xorwf	___ftmul@sign,f,c
  3308  002476  0E80               	movlw	128
  3309  002478  1623               	andwf	___ftmul@sign,f,c
  3310  00247A  8E16               	bsf	___ftmul@f1+1,7,c
  3311  00247C  8E19               	bsf	___ftmul@f2+1,7,c
  3312  00247E  0EFF               	movlw	255
  3313  002480  1618               	andwf	___ftmul@f2,f,c
  3314  002482  0EFF               	movlw	255
  3315  002484  1619               	andwf	___ftmul@f2+1,f,c
  3316  002486  0E00               	movlw	0
  3317  002488  161A               	andwf	___ftmul@f2+2,f,c
  3318  00248A  0E00               	movlw	0
  3319  00248C  6E1F               	movwf	___ftmul@f3_as_product,c
  3320  00248E  0E00               	movlw	0
  3321  002490  6E20               	movwf	___ftmul@f3_as_product+1,c
  3322  002492  0E00               	movlw	0
  3323  002494  6E21               	movwf	___ftmul@f3_as_product+2,c
  3324  002496  0E07               	movlw	7
  3325  002498  6E22               	movwf	___ftmul@cntr,c
  3326  00249A  D000               	goto	l2089
  3327  00249C                     l2089:
  3328  00249C  A015               	btfss	___ftmul@f1,0,c
  3329  00249E  D007               	goto	l2093
  3330  0024A0  5018               	movf	___ftmul@f2,w,c
  3331  0024A2  261F               	addwf	___ftmul@f3_as_product,f,c
  3332  0024A4  5019               	movf	___ftmul@f2+1,w,c
  3333  0024A6  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3334  0024A8  501A               	movf	___ftmul@f2+2,w,c
  3335  0024AA  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3336  0024AC  D000               	goto	l2093
  3337  0024AE                     l2093:
  3338  0024AE  90D8               	bcf	status,0,c
  3339  0024B0  3217               	rrcf	___ftmul@f1+2,f,c
  3340  0024B2  3216               	rrcf	___ftmul@f1+1,f,c
  3341  0024B4  3215               	rrcf	___ftmul@f1,f,c
  3342  0024B6  90D8               	bcf	status,0,c
  3343  0024B8  3618               	rlcf	___ftmul@f2,f,c
  3344  0024BA  3619               	rlcf	___ftmul@f2+1,f,c
  3345  0024BC  361A               	rlcf	___ftmul@f2+2,f,c
  3346  0024BE  2E22               	decfsz	___ftmul@cntr,f,c
  3347  0024C0  D7ED               	goto	l2089
  3348  0024C2  D000               	goto	l2097
  3349  0024C4                     l2097:
  3350  0024C4  0E09               	movlw	9
  3351  0024C6  6E22               	movwf	___ftmul@cntr,c
  3352  0024C8  D000               	goto	l2099
  3353  0024CA                     l2099:
  3354  0024CA  A015               	btfss	___ftmul@f1,0,c
  3355  0024CC  D007               	goto	l2103
  3356  0024CE  5018               	movf	___ftmul@f2,w,c
  3357  0024D0  261F               	addwf	___ftmul@f3_as_product,f,c
  3358  0024D2  5019               	movf	___ftmul@f2+1,w,c
  3359  0024D4  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3360  0024D6  501A               	movf	___ftmul@f2+2,w,c
  3361  0024D8  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3362  0024DA  D000               	goto	l2103
  3363  0024DC                     l2103:
  3364  0024DC  90D8               	bcf	status,0,c
  3365  0024DE  3217               	rrcf	___ftmul@f1+2,f,c
  3366  0024E0  3216               	rrcf	___ftmul@f1+1,f,c
  3367  0024E2  3215               	rrcf	___ftmul@f1,f,c
  3368  0024E4  90D8               	bcf	status,0,c
  3369  0024E6  3221               	rrcf	___ftmul@f3_as_product+2,f,c
  3370  0024E8  3220               	rrcf	___ftmul@f3_as_product+1,f,c
  3371  0024EA  321F               	rrcf	___ftmul@f3_as_product,f,c
  3372  0024EC  2E22               	decfsz	___ftmul@cntr,f,c
  3373  0024EE  D7ED               	goto	l2099
  3374  0024F0  D000               	goto	l2107
  3375  0024F2                     l2107:
  3376  0024F2  C01F  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3377  0024F6  C020  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3378  0024FA  C021  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3379  0024FE  C01E  F004         	movff	___ftmul@exp,___ftpack@exp
  3380  002502  C023  F005         	movff	___ftmul@sign,___ftpack@sign
  3381  002506  EC71  F013         	call	___ftpack	;wreg free
  3382  00250A  C001  F015         	movff	?___ftpack,?___ftmul
  3383  00250E  C002  F016         	movff	?___ftpack+1,?___ftmul+1
  3384  002512  C003  F017         	movff	?___ftpack+2,?___ftmul+2
  3385  002516  D000               	goto	l719
  3386  002518                     l719:
  3387  002518  0012               	return		;funcret
  3388  00251A                     __end_of___ftmul:
  3389                           	opt stack 0
  3390                           tblptru	equ	0xFF8
  3391                           tblptrh	equ	0xFF7
  3392                           tblptrl	equ	0xFF6
  3393                           tablat	equ	0xFF5
  3394                           prodh	equ	0xFF4
  3395                           prodl	equ	0xFF3
  3396                           postinc0	equ	0xFEE
  3397                           wreg	equ	0xFE8
  3398                           postdec1	equ	0xFE5
  3399                           fsr1l	equ	0xFE1
  3400                           postinc2	equ	0xFDE
  3401                           postdec2	equ	0xFDD
  3402                           fsr2h	equ	0xFDA
  3403                           fsr2l	equ	0xFD9
  3404                           status	equ	0xFD8
  3405                           
  3406 ;; *************** function ___awmod *****************
  3407 ;; Defined at:
  3408 ;;		line 8 in file "E:\XC8\sources\common\awmod.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  dividend        2    0[COMRAM] int 
  3411 ;;  divisor         2    2[COMRAM] int 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  sign            1    5[COMRAM] unsigned char 
  3414 ;;  counter         1    4[COMRAM] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  2    0[COMRAM] int 
  3417 ;; Registers used:
  3418 ;;		wreg, status,2, status,0
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;Total ram usage:        6 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_main
  3434 ;;		_fround
  3435 ;;		_scale
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text7
  3440  002A88                     __ptext7:
  3441                           	opt stack 0
  3442  002A88                     ___awmod:
  3443                           	opt stack 28
  3444                           
  3445                           ;incstack = 0
  3446  002A88  0E00               	movlw	0
  3447  002A8A  6E06               	movwf	___awmod@sign,c
  3448  002A8C  AE02               	btfss	___awmod@dividend+1,7,c
  3449  002A8E  D007               	goto	l2163
  3450  002A90  6C01               	negf	___awmod@dividend,c
  3451  002A92  1E02               	comf	___awmod@dividend+1,f,c
  3452  002A94  B0D8               	btfsc	status,0,c
  3453  002A96  2A02               	incf	___awmod@dividend+1,f,c
  3454  002A98  0E01               	movlw	1
  3455  002A9A  6E06               	movwf	___awmod@sign,c
  3456  002A9C  D000               	goto	l2163
  3457  002A9E                     l2163:
  3458  002A9E  AE04               	btfss	___awmod@divisor+1,7,c
  3459  002AA0  D005               	goto	l2167
  3460  002AA2  6C03               	negf	___awmod@divisor,c
  3461  002AA4  1E04               	comf	___awmod@divisor+1,f,c
  3462  002AA6  B0D8               	btfsc	status,0,c
  3463  002AA8  2A04               	incf	___awmod@divisor+1,f,c
  3464  002AAA  D000               	goto	l2167
  3465  002AAC                     l2167:
  3466  002AAC  5003               	movf	___awmod@divisor,w,c
  3467  002AAE  1004               	iorwf	___awmod@divisor+1,w,c
  3468  002AB0  B4D8               	btfsc	status,2,c
  3469  002AB2  D01D               	goto	l2183
  3470  002AB4  0E01               	movlw	1
  3471  002AB6  6E05               	movwf	___awmod@counter,c
  3472  002AB8  D005               	goto	l2173
  3473  002ABA                     l2171:
  3474  002ABA  90D8               	bcf	status,0,c
  3475  002ABC  3603               	rlcf	___awmod@divisor,f,c
  3476  002ABE  3604               	rlcf	___awmod@divisor+1,f,c
  3477  002AC0  2A05               	incf	___awmod@counter,f,c
  3478  002AC2  D000               	goto	l2173
  3479  002AC4                     l2173:
  3480  002AC4  BE04               	btfsc	___awmod@divisor+1,7,c
  3481  002AC6  D002               	goto	l2175
  3482  002AC8  D7F8               	goto	l2171
  3483  002ACA  D000               	goto	l2175
  3484  002ACC                     l2175:
  3485  002ACC  5003               	movf	___awmod@divisor,w,c
  3486  002ACE  5C01               	subwf	___awmod@dividend,w,c
  3487  002AD0  5004               	movf	___awmod@divisor+1,w,c
  3488  002AD2  5802               	subwfb	___awmod@dividend+1,w,c
  3489  002AD4  A0D8               	btfss	status,0,c
  3490  002AD6  D005               	goto	l2179
  3491  002AD8  5003               	movf	___awmod@divisor,w,c
  3492  002ADA  5E01               	subwf	___awmod@dividend,f,c
  3493  002ADC  5004               	movf	___awmod@divisor+1,w,c
  3494  002ADE  5A02               	subwfb	___awmod@dividend+1,f,c
  3495  002AE0  D000               	goto	l2179
  3496  002AE2                     l2179:
  3497  002AE2  90D8               	bcf	status,0,c
  3498  002AE4  3204               	rrcf	___awmod@divisor+1,f,c
  3499  002AE6  3203               	rrcf	___awmod@divisor,f,c
  3500  002AE8  2E05               	decfsz	___awmod@counter,f,c
  3501  002AEA  D7F0               	goto	l2175
  3502  002AEC  D000               	goto	l2183
  3503  002AEE                     l2183:
  3504  002AEE  5006               	movf	___awmod@sign,w,c
  3505  002AF0  B4D8               	btfsc	status,2,c
  3506  002AF2  D005               	goto	l2187
  3507  002AF4  6C01               	negf	___awmod@dividend,c
  3508  002AF6  1E02               	comf	___awmod@dividend+1,f,c
  3509  002AF8  B0D8               	btfsc	status,0,c
  3510  002AFA  2A02               	incf	___awmod@dividend+1,f,c
  3511  002AFC  D000               	goto	l2187
  3512  002AFE                     l2187:
  3513  002AFE  C001  F001         	movff	___awmod@dividend,?___awmod
  3514  002B02  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3515  002B06  D000               	goto	l496
  3516  002B08                     l496:
  3517  002B08  0012               	return		;funcret
  3518  002B0A                     __end_of___awmod:
  3519                           	opt stack 0
  3520                           tblptru	equ	0xFF8
  3521                           tblptrh	equ	0xFF7
  3522                           tblptrl	equ	0xFF6
  3523                           tablat	equ	0xFF5
  3524                           prodh	equ	0xFF4
  3525                           prodl	equ	0xFF3
  3526                           postinc0	equ	0xFEE
  3527                           wreg	equ	0xFE8
  3528                           postdec1	equ	0xFE5
  3529                           fsr1l	equ	0xFE1
  3530                           postinc2	equ	0xFDE
  3531                           postdec2	equ	0xFDD
  3532                           fsr2h	equ	0xFDA
  3533                           fsr2l	equ	0xFD9
  3534                           status	equ	0xFD8
  3535                           
  3536 ;; *************** function __tdiv_to_l_ *****************
  3537 ;; Defined at:
  3538 ;;		line 60 in file "E:\XC8\sources\common\ftdivl.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  f1              3    0[COMRAM] float 
  3541 ;;  f2              3    3[COMRAM] float 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  quot            4    9[COMRAM] unsigned long 
  3544 ;;  exp1            1   14[COMRAM] unsigned char 
  3545 ;;  cntr            1   13[COMRAM] unsigned char 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  4    0[COMRAM] unsigned long 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3555 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3556 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3557 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;Total ram usage:       15 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_printf
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text8
  3569  002208                     __ptext8:
  3570                           	opt stack 0
  3571  002208                     __tdiv_to_l_:
  3572                           	opt stack 29
  3573                           
  3574                           ;incstack = 0
  3575  002208  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3576  00220C  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3577  00220E  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3578  002210  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3579  002212  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3580  002214  E301               	bnc	u2271
  3581  002216  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3582  002218                     u2271:
  3583  002218  5007               	movf	??__tdiv_to_l_,w,c
  3584  00221A  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3585  00221C  500F               	movf	__tdiv_to_l_@exp1,w,c
  3586  00221E  A4D8               	btfss	status,2,c
  3587  002220  D002               	goto	l2311
  3588  002222  D05D               	goto	l2353
  3589  002224  D078               	goto	l695
  3590  002226                     l2311:
  3591  002226  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3592  00222A  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3593  00222C  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3594  00222E  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3595  002230  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3596  002232  E301               	bnc	u2291
  3597  002234  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3598  002236                     u2291:
  3599  002236  5007               	movf	??__tdiv_to_l_,w,c
  3600  002238  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3601  00223A  500E               	movf	__tdiv_to_l_@cntr,w,c
  3602  00223C  A4D8               	btfss	status,2,c
  3603  00223E  D002               	goto	l2317
  3604  002240  D04E               	goto	l2353
  3605  002242  D069               	goto	l695
  3606  002244                     l2317:
  3607  002244  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3608  002246  0EFF               	movlw	255
  3609  002248  1601               	andwf	__tdiv_to_l_@f1,f,c
  3610  00224A  0EFF               	movlw	255
  3611  00224C  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3612  00224E  0E00               	movlw	0
  3613  002250  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3614  002252  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3615  002254  0EFF               	movlw	255
  3616  002256  1604               	andwf	__tdiv_to_l_@f2,f,c
  3617  002258  0EFF               	movlw	255
  3618  00225A  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3619  00225C  0E00               	movlw	0
  3620  00225E  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3621  002260  0E00               	movlw	0
  3622  002262  6E0A               	movwf	__tdiv_to_l_@quot,c
  3623  002264  0E00               	movlw	0
  3624  002266  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3625  002268  0E00               	movlw	0
  3626  00226A  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3627  00226C  0E00               	movlw	0
  3628  00226E  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3629  002270  0E7F               	movlw	127
  3630  002272  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3631  002274  500E               	movf	__tdiv_to_l_@cntr,w,c
  3632  002276  0F98               	addlw	152
  3633  002278  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3634  00227A  0E18               	movlw	24
  3635  00227C  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3636  00227E                     l697:
  3637  00227E  90D8               	bcf	status,0,c
  3638  002280  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3639  002282  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3640  002284  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3641  002286  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3642  002288  5004               	movf	__tdiv_to_l_@f2,w,c
  3643  00228A  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3644  00228C  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3645  00228E  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3646  002290  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3647  002292  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3648  002294  A0D8               	btfss	status,0,c
  3649  002296  D007               	goto	l698
  3650  002298  5004               	movf	__tdiv_to_l_@f2,w,c
  3651  00229A  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3652  00229C  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3653  00229E  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3654  0022A0  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3655  0022A2  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3656  0022A4  800A               	bsf	__tdiv_to_l_@quot,0,c
  3657  0022A6                     l698:
  3658  0022A6  90D8               	bcf	status,0,c
  3659  0022A8  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3660  0022AA  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3661  0022AC  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3662  0022AE  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3663  0022B0  D7E6               	goto	l697
  3664  0022B2  D000               	goto	l2339
  3665  0022B4                     l2339:
  3666  0022B4  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3667  0022B6  D010               	goto	l2351
  3668  0022B8  500F               	movf	__tdiv_to_l_@exp1,w,c
  3669  0022BA  0A80               	xorlw	128
  3670  0022BC  0F97               	addlw	151
  3671  0022BE  B0D8               	btfsc	status,0,c
  3672  0022C0  D003               	goto	l2347
  3673  0022C2  D00D               	goto	l2353
  3674  0022C4  D028               	goto	l695
  3675  0022C6  D000               	goto	l2347
  3676  0022C8                     l2347:
  3677  0022C8  90D8               	bcf	status,0,c
  3678  0022CA  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3679  0022CC  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3680  0022CE  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3681  0022D0  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3682  0022D2  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3683  0022D4  D7F9               	goto	l2347
  3684  0022D6  D017               	goto	l704
  3685  0022D8                     l2351:
  3686  0022D8  0E17               	movlw	23
  3687  0022DA  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3688  0022DC  D011               	goto	l2359
  3689  0022DE                     l2353:
  3690  0022DE  0E00               	movlw	0
  3691  0022E0  6E01               	movwf	?__tdiv_to_l_,c
  3692  0022E2  0E00               	movlw	0
  3693  0022E4  6E02               	movwf	?__tdiv_to_l_+1,c
  3694  0022E6  0E00               	movlw	0
  3695  0022E8  6E03               	movwf	?__tdiv_to_l_+2,c
  3696  0022EA  0E00               	movlw	0
  3697  0022EC  6E04               	movwf	?__tdiv_to_l_+3,c
  3698  0022EE  D013               	goto	l695
  3699  0022F0  D007               	goto	l2359
  3700  0022F2                     l2357:
  3701  0022F2  90D8               	bcf	status,0,c
  3702  0022F4  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3703  0022F6  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3704  0022F8  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3705  0022FA  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3706  0022FC  060F               	decf	__tdiv_to_l_@exp1,f,c
  3707  0022FE  D000               	goto	l2359
  3708  002300                     l2359:
  3709  002300  500F               	movf	__tdiv_to_l_@exp1,w,c
  3710  002302  A4D8               	btfss	status,2,c
  3711  002304  D7F6               	goto	l2357
  3712  002306                     l704:
  3713  002306  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3714  00230A  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3715  00230E  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3716  002312  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3717  002316                     l695:
  3718  002316  0012               	return		;funcret
  3719  002318                     __end_of__tdiv_to_l_:
  3720                           	opt stack 0
  3721                           tblptru	equ	0xFF8
  3722                           tblptrh	equ	0xFF7
  3723                           tblptrl	equ	0xFF6
  3724                           tablat	equ	0xFF5
  3725                           prodh	equ	0xFF4
  3726                           prodl	equ	0xFF3
  3727                           postinc0	equ	0xFEE
  3728                           wreg	equ	0xFE8
  3729                           postdec1	equ	0xFE5
  3730                           fsr1l	equ	0xFE1
  3731                           postinc2	equ	0xFDE
  3732                           postdec2	equ	0xFDD
  3733                           fsr2h	equ	0xFDA
  3734                           fsr2l	equ	0xFD9
  3735                           status	equ	0xFD8
  3736                           
  3737 ;; *************** function __div_to_l_ *****************
  3738 ;; Defined at:
  3739 ;;		line 60 in file "E:\XC8\sources\common\fldivl.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;  f1              3    0[COMRAM] unsigned long 
  3742 ;;  f2              3    3[COMRAM] unsigned long 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  quot            4    6[COMRAM] unsigned long 
  3745 ;;  exp1            1   11[COMRAM] unsigned char 
  3746 ;;  cntr            1   10[COMRAM] unsigned char 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  4    0[COMRAM] unsigned long 
  3749 ;; Registers used:
  3750 ;;		wreg, status,2, status,0
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3756 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;Total ram usage:       12 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; This function calls:
  3763 ;;		Nothing
  3764 ;; This function is called by:
  3765 ;;		_printf
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text9
  3770  002318                     __ptext9:
  3771                           	opt stack 0
  3772  002318                     __div_to_l_:
  3773                           	opt stack 29
  3774                           
  3775                           ;incstack = 0
  3776  002318  3403               	rlcf	__div_to_l_@f1+2,w,c
  3777  00231A  3404               	rlcf	__div_to_l_@f1+3,w,c
  3778  00231C  6E0C               	movwf	__div_to_l_@exp1,c
  3779  00231E  500C               	movf	__div_to_l_@exp1,w,c
  3780  002320  A4D8               	btfss	status,2,c
  3781  002322  D002               	goto	l2367
  3782  002324  D061               	goto	l2413
  3783  002326  D07C               	goto	l574
  3784  002328                     l2367:
  3785  002328  3406               	rlcf	__div_to_l_@f2+2,w,c
  3786  00232A  3407               	rlcf	__div_to_l_@f2+3,w,c
  3787  00232C  6E0B               	movwf	__div_to_l_@cntr,c
  3788  00232E  500B               	movf	__div_to_l_@cntr,w,c
  3789  002330  A4D8               	btfss	status,2,c
  3790  002332  D002               	goto	l2373
  3791  002334  D059               	goto	l2413
  3792  002336  D074               	goto	l574
  3793  002338                     l2373:
  3794  002338  8E03               	bsf	__div_to_l_@f1+2,7,c
  3795  00233A  0EFF               	movlw	255
  3796  00233C  1601               	andwf	__div_to_l_@f1,f,c
  3797  00233E  0EFF               	movlw	255
  3798  002340  1602               	andwf	__div_to_l_@f1+1,f,c
  3799  002342  0EFF               	movlw	255
  3800  002344  1603               	andwf	__div_to_l_@f1+2,f,c
  3801  002346  0E00               	movlw	0
  3802  002348  1604               	andwf	__div_to_l_@f1+3,f,c
  3803  00234A  8E06               	bsf	__div_to_l_@f2+2,7,c
  3804  00234C  0EFF               	movlw	255
  3805  00234E  1604               	andwf	__div_to_l_@f2,f,c
  3806  002350  0EFF               	movlw	255
  3807  002352  1605               	andwf	__div_to_l_@f2+1,f,c
  3808  002354  0EFF               	movlw	255
  3809  002356  1606               	andwf	__div_to_l_@f2+2,f,c
  3810  002358  0E00               	movlw	0
  3811  00235A  1607               	andwf	__div_to_l_@f2+3,f,c
  3812  00235C  0E00               	movlw	0
  3813  00235E  6E07               	movwf	__div_to_l_@quot,c
  3814  002360  0E00               	movlw	0
  3815  002362  6E08               	movwf	__div_to_l_@quot+1,c
  3816  002364  0E00               	movlw	0
  3817  002366  6E09               	movwf	__div_to_l_@quot+2,c
  3818  002368  0E00               	movlw	0
  3819  00236A  6E0A               	movwf	__div_to_l_@quot+3,c
  3820  00236C  0E7F               	movlw	127
  3821  00236E  5E0C               	subwf	__div_to_l_@exp1,f,c
  3822  002370  500B               	movf	__div_to_l_@cntr,w,c
  3823  002372  0FA0               	addlw	160
  3824  002374  5E0C               	subwf	__div_to_l_@exp1,f,c
  3825  002376  0E20               	movlw	32
  3826  002378  6E0B               	movwf	__div_to_l_@cntr,c
  3827  00237A  D000               	goto	l2387
  3828  00237C                     l2387:
  3829  00237C  90D8               	bcf	status,0,c
  3830  00237E  3607               	rlcf	__div_to_l_@quot,f,c
  3831  002380  3608               	rlcf	__div_to_l_@quot+1,f,c
  3832  002382  3609               	rlcf	__div_to_l_@quot+2,f,c
  3833  002384  360A               	rlcf	__div_to_l_@quot+3,f,c
  3834  002386  5004               	movf	__div_to_l_@f2,w,c
  3835  002388  5C01               	subwf	__div_to_l_@f1,w,c
  3836  00238A  5005               	movf	__div_to_l_@f2+1,w,c
  3837  00238C  5802               	subwfb	__div_to_l_@f1+1,w,c
  3838  00238E  5006               	movf	__div_to_l_@f2+2,w,c
  3839  002390  5803               	subwfb	__div_to_l_@f1+2,w,c
  3840  002392  5007               	movf	__div_to_l_@f2+3,w,c
  3841  002394  5804               	subwfb	__div_to_l_@f1+3,w,c
  3842  002396  A0D8               	btfss	status,0,c
  3843  002398  D00A               	goto	l2395
  3844  00239A  5004               	movf	__div_to_l_@f2,w,c
  3845  00239C  5E01               	subwf	__div_to_l_@f1,f,c
  3846  00239E  5005               	movf	__div_to_l_@f2+1,w,c
  3847  0023A0  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3848  0023A2  5006               	movf	__div_to_l_@f2+2,w,c
  3849  0023A4  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3850  0023A6  5007               	movf	__div_to_l_@f2+3,w,c
  3851  0023A8  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3852  0023AA  8007               	bsf	__div_to_l_@quot,0,c
  3853  0023AC  D000               	goto	l2395
  3854  0023AE                     l2395:
  3855  0023AE  90D8               	bcf	status,0,c
  3856  0023B0  3601               	rlcf	__div_to_l_@f1,f,c
  3857  0023B2  3602               	rlcf	__div_to_l_@f1+1,f,c
  3858  0023B4  3603               	rlcf	__div_to_l_@f1+2,f,c
  3859  0023B6  3604               	rlcf	__div_to_l_@f1+3,f,c
  3860  0023B8  2E0B               	decfsz	__div_to_l_@cntr,f,c
  3861  0023BA  D7E0               	goto	l2387
  3862  0023BC  D000               	goto	l2399
  3863  0023BE                     l2399:
  3864  0023BE  AE0C               	btfss	__div_to_l_@exp1,7,c
  3865  0023C0  D010               	goto	l2411
  3866  0023C2  500C               	movf	__div_to_l_@exp1,w,c
  3867  0023C4  0A80               	xorlw	128
  3868  0023C6  0F9F               	addlw	159
  3869  0023C8  B0D8               	btfsc	status,0,c
  3870  0023CA  D003               	goto	l2407
  3871  0023CC  D00D               	goto	l2413
  3872  0023CE  D028               	goto	l574
  3873  0023D0  D000               	goto	l2407
  3874  0023D2                     l2407:
  3875  0023D2  90D8               	bcf	status,0,c
  3876  0023D4  320A               	rrcf	__div_to_l_@quot+3,f,c
  3877  0023D6  3209               	rrcf	__div_to_l_@quot+2,f,c
  3878  0023D8  3208               	rrcf	__div_to_l_@quot+1,f,c
  3879  0023DA  3207               	rrcf	__div_to_l_@quot,f,c
  3880  0023DC  3E0C               	incfsz	__div_to_l_@exp1,f,c
  3881  0023DE  D7F9               	goto	l2407
  3882  0023E0  D017               	goto	l583
  3883  0023E2                     l2411:
  3884  0023E2  0E1F               	movlw	31
  3885  0023E4  640C               	cpfsgt	__div_to_l_@exp1,c
  3886  0023E6  D011               	goto	l2419
  3887  0023E8                     l2413:
  3888  0023E8  0E00               	movlw	0
  3889  0023EA  6E01               	movwf	?__div_to_l_,c
  3890  0023EC  0E00               	movlw	0
  3891  0023EE  6E02               	movwf	?__div_to_l_+1,c
  3892  0023F0  0E00               	movlw	0
  3893  0023F2  6E03               	movwf	?__div_to_l_+2,c
  3894  0023F4  0E00               	movlw	0
  3895  0023F6  6E04               	movwf	?__div_to_l_+3,c
  3896  0023F8  D013               	goto	l574
  3897  0023FA  D007               	goto	l2419
  3898  0023FC                     l2417:
  3899  0023FC  90D8               	bcf	status,0,c
  3900  0023FE  3607               	rlcf	__div_to_l_@quot,f,c
  3901  002400  3608               	rlcf	__div_to_l_@quot+1,f,c
  3902  002402  3609               	rlcf	__div_to_l_@quot+2,f,c
  3903  002404  360A               	rlcf	__div_to_l_@quot+3,f,c
  3904  002406  060C               	decf	__div_to_l_@exp1,f,c
  3905  002408  D000               	goto	l2419
  3906  00240A                     l2419:
  3907  00240A  500C               	movf	__div_to_l_@exp1,w,c
  3908  00240C  A4D8               	btfss	status,2,c
  3909  00240E  D7F6               	goto	l2417
  3910  002410                     l583:
  3911  002410  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3912  002414  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3913  002418  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3914  00241C  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3915  002420                     l574:
  3916  002420  0012               	return		;funcret
  3917  002422                     __end_of__div_to_l_:
  3918                           	opt stack 0
  3919                           tblptru	equ	0xFF8
  3920                           tblptrh	equ	0xFF7
  3921                           tblptrl	equ	0xFF6
  3922                           tablat	equ	0xFF5
  3923                           prodh	equ	0xFF4
  3924                           prodl	equ	0xFF3
  3925                           postinc0	equ	0xFEE
  3926                           wreg	equ	0xFE8
  3927                           postdec1	equ	0xFE5
  3928                           fsr1l	equ	0xFE1
  3929                           postinc2	equ	0xFDE
  3930                           postdec2	equ	0xFDD
  3931                           fsr2h	equ	0xFDA
  3932                           fsr2l	equ	0xFD9
  3933                           status	equ	0xFD8
  3934                           
  3935 ;; *************** function ___lltoft *****************
  3936 ;; Defined at:
  3937 ;;		line 35 in file "E:\XC8\sources\common\lltoft.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;  c               4    8[COMRAM] unsigned long 
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;  exp             1   16[COMRAM] unsigned char 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  3    8[COMRAM] float 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0, cstack
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3951 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;Total ram usage:        9 bytes
  3956 ;; Hardware stack levels used:    1
  3957 ;; Hardware stack levels required when called:    1
  3958 ;; This function calls:
  3959 ;;		___ftpack
  3960 ;; This function is called by:
  3961 ;;		_printf
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text10
  3966  002BEA                     __ptext10:
  3967                           	opt stack 0
  3968  002BEA                     ___lltoft:
  3969                           	opt stack 28
  3970                           
  3971                           ;incstack = 0
  3972  002BEA  0E8E               	movlw	142
  3973  002BEC  6E11               	movwf	___lltoft@exp,c
  3974  002BEE  D007               	goto	l2539
  3975  002BF0                     l2537:
  3976  002BF0  90D8               	bcf	status,0,c
  3977  002BF2  320C               	rrcf	___lltoft@c+3,f,c
  3978  002BF4  320B               	rrcf	___lltoft@c+2,f,c
  3979  002BF6  320A               	rrcf	___lltoft@c+1,f,c
  3980  002BF8  3209               	rrcf	___lltoft@c,f,c
  3981  002BFA  2A11               	incf	___lltoft@exp,f,c
  3982  002BFC  D000               	goto	l2539
  3983  002BFE                     l2539:
  3984  002BFE  0E00               	movlw	0
  3985  002C00  1409               	andwf	___lltoft@c,w,c
  3986  002C02  6E0D               	movwf	??___lltoft& (0+255),c
  3987  002C04  0E00               	movlw	0
  3988  002C06  140A               	andwf	___lltoft@c+1,w,c
  3989  002C08  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  3990  002C0A  0E00               	movlw	0
  3991  002C0C  140B               	andwf	___lltoft@c+2,w,c
  3992  002C0E  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  3993  002C10  0EFF               	movlw	255
  3994  002C12  140C               	andwf	___lltoft@c+3,w,c
  3995  002C14  6E10               	movwf	(??___lltoft+3)& (0+255),c
  3996  002C16  500D               	movf	??___lltoft,w,c
  3997  002C18  100E               	iorwf	??___lltoft+1,w,c
  3998  002C1A  100F               	iorwf	??___lltoft+2,w,c
  3999  002C1C  1010               	iorwf	??___lltoft+3,w,c
  4000  002C1E  A4D8               	btfss	status,2,c
  4001  002C20  D7E7               	goto	l2537
  4002  002C22  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4003  002C26  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4004  002C2A  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4005  002C2E  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4006  002C32  0E00               	movlw	0
  4007  002C34  6E05               	movwf	___ftpack@sign,c
  4008  002C36  EC71  F013         	call	___ftpack	;wreg free
  4009  002C3A  C001  F009         	movff	?___ftpack,?___lltoft
  4010  002C3E  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4011  002C42  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4012  002C46  D000               	goto	l809
  4013  002C48                     l809:
  4014  002C48  0012               	return		;funcret
  4015  002C4A                     __end_of___lltoft:
  4016                           	opt stack 0
  4017                           tblptru	equ	0xFF8
  4018                           tblptrh	equ	0xFF7
  4019                           tblptrl	equ	0xFF6
  4020                           tablat	equ	0xFF5
  4021                           prodh	equ	0xFF4
  4022                           prodl	equ	0xFF3
  4023                           postinc0	equ	0xFEE
  4024                           wreg	equ	0xFE8
  4025                           postdec1	equ	0xFE5
  4026                           fsr1l	equ	0xFE1
  4027                           postinc2	equ	0xFDE
  4028                           postdec2	equ	0xFDD
  4029                           fsr2h	equ	0xFDA
  4030                           fsr2l	equ	0xFD9
  4031                           status	equ	0xFD8
  4032                           
  4033 ;; *************** function ___llmod *****************
  4034 ;; Defined at:
  4035 ;;		line 8 in file "E:\XC8\sources\common\llmod.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  dividend        4   13[COMRAM] unsigned long 
  4038 ;;  divisor         4   17[COMRAM] unsigned long 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  counter         1   21[COMRAM] unsigned char 
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  4   13[COMRAM] unsigned long 
  4043 ;; Registers used:
  4044 ;;		wreg, status,2, status,0
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4050 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4053 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;Total ram usage:        9 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; This function calls:
  4057 ;;		Nothing
  4058 ;; This function is called by:
  4059 ;;		_printf
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text11
  4064  002B0A                     __ptext11:
  4065                           	opt stack 0
  4066  002B0A                     ___llmod:
  4067                           	opt stack 29
  4068                           
  4069                           ;incstack = 0
  4070  002B0A  5012               	movf	___llmod@divisor,w,c
  4071  002B0C  1013               	iorwf	___llmod@divisor+1,w,c
  4072  002B0E  1014               	iorwf	___llmod@divisor+2,w,c
  4073  002B10  1015               	iorwf	___llmod@divisor+3,w,c
  4074  002B12  B4D8               	btfsc	status,2,c
  4075  002B14  D029               	goto	l789
  4076  002B16  0E01               	movlw	1
  4077  002B18  6E16               	movwf	___llmod@counter,c
  4078  002B1A  D007               	goto	l2525
  4079  002B1C                     l2523:
  4080  002B1C  90D8               	bcf	status,0,c
  4081  002B1E  3612               	rlcf	___llmod@divisor,f,c
  4082  002B20  3613               	rlcf	___llmod@divisor+1,f,c
  4083  002B22  3614               	rlcf	___llmod@divisor+2,f,c
  4084  002B24  3615               	rlcf	___llmod@divisor+3,f,c
  4085  002B26  2A16               	incf	___llmod@counter,f,c
  4086  002B28  D000               	goto	l2525
  4087  002B2A                     l2525:
  4088  002B2A  BE15               	btfsc	___llmod@divisor+3,7,c
  4089  002B2C  D002               	goto	l2527
  4090  002B2E  D7F6               	goto	l2523
  4091  002B30  D000               	goto	l2527
  4092  002B32                     l2527:
  4093  002B32  5012               	movf	___llmod@divisor,w,c
  4094  002B34  5C0E               	subwf	___llmod@dividend,w,c
  4095  002B36  5013               	movf	___llmod@divisor+1,w,c
  4096  002B38  580F               	subwfb	___llmod@dividend+1,w,c
  4097  002B3A  5014               	movf	___llmod@divisor+2,w,c
  4098  002B3C  5810               	subwfb	___llmod@dividend+2,w,c
  4099  002B3E  5015               	movf	___llmod@divisor+3,w,c
  4100  002B40  5811               	subwfb	___llmod@dividend+3,w,c
  4101  002B42  A0D8               	btfss	status,0,c
  4102  002B44  D009               	goto	l2531
  4103  002B46  5012               	movf	___llmod@divisor,w,c
  4104  002B48  5E0E               	subwf	___llmod@dividend,f,c
  4105  002B4A  5013               	movf	___llmod@divisor+1,w,c
  4106  002B4C  5A0F               	subwfb	___llmod@dividend+1,f,c
  4107  002B4E  5014               	movf	___llmod@divisor+2,w,c
  4108  002B50  5A10               	subwfb	___llmod@dividend+2,f,c
  4109  002B52  5015               	movf	___llmod@divisor+3,w,c
  4110  002B54  5A11               	subwfb	___llmod@dividend+3,f,c
  4111  002B56  D000               	goto	l2531
  4112  002B58                     l2531:
  4113  002B58  90D8               	bcf	status,0,c
  4114  002B5A  3215               	rrcf	___llmod@divisor+3,f,c
  4115  002B5C  3214               	rrcf	___llmod@divisor+2,f,c
  4116  002B5E  3213               	rrcf	___llmod@divisor+1,f,c
  4117  002B60  3212               	rrcf	___llmod@divisor,f,c
  4118  002B62  2E16               	decfsz	___llmod@counter,f,c
  4119  002B64  D7E6               	goto	l2527
  4120  002B66  D000               	goto	l789
  4121  002B68                     l789:
  4122  002B68  C00E  F00E         	movff	___llmod@dividend,?___llmod
  4123  002B6C  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  4124  002B70  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  4125  002B74  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  4126  002B78  0012               	return		;funcret
  4127  002B7A                     __end_of___llmod:
  4128                           	opt stack 0
  4129                           tblptru	equ	0xFF8
  4130                           tblptrh	equ	0xFF7
  4131                           tblptrl	equ	0xFF6
  4132                           tablat	equ	0xFF5
  4133                           prodh	equ	0xFF4
  4134                           prodl	equ	0xFF3
  4135                           postinc0	equ	0xFEE
  4136                           wreg	equ	0xFE8
  4137                           postdec1	equ	0xFE5
  4138                           fsr1l	equ	0xFE1
  4139                           postinc2	equ	0xFDE
  4140                           postdec2	equ	0xFDD
  4141                           fsr2h	equ	0xFDA
  4142                           fsr2l	equ	0xFD9
  4143                           status	equ	0xFD8
  4144                           
  4145 ;; *************** function ___lldiv *****************
  4146 ;; Defined at:
  4147 ;;		line 8 in file "E:\XC8\sources\common\lldiv.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  dividend        4    0[COMRAM] unsigned long 
  4150 ;;  divisor         4    4[COMRAM] unsigned long 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  quotient        4    8[COMRAM] unsigned long 
  4153 ;;  counter         1   12[COMRAM] unsigned char 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  4    0[COMRAM] unsigned long 
  4156 ;; Registers used:
  4157 ;;		wreg, status,2, status,0
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4163 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4166 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4167 ;;Total ram usage:       13 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; This function calls:
  4170 ;;		Nothing
  4171 ;; This function is called by:
  4172 ;;		_printf
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text12
  4177  002974                     __ptext12:
  4178                           	opt stack 0
  4179  002974                     ___lldiv:
  4180                           	opt stack 29
  4181                           
  4182                           ;incstack = 0
  4183  002974  0E00               	movlw	0
  4184  002976  6E09               	movwf	___lldiv@quotient,c
  4185  002978  0E00               	movlw	0
  4186  00297A  6E0A               	movwf	___lldiv@quotient+1,c
  4187  00297C  0E00               	movlw	0
  4188  00297E  6E0B               	movwf	___lldiv@quotient+2,c
  4189  002980  0E00               	movlw	0
  4190  002982  6E0C               	movwf	___lldiv@quotient+3,c
  4191  002984  5005               	movf	___lldiv@divisor,w,c
  4192  002986  1006               	iorwf	___lldiv@divisor+1,w,c
  4193  002988  1007               	iorwf	___lldiv@divisor+2,w,c
  4194  00298A  1008               	iorwf	___lldiv@divisor+3,w,c
  4195  00298C  B4D8               	btfsc	status,2,c
  4196  00298E  D02F               	goto	l779
  4197  002990  0E01               	movlw	1
  4198  002992  6E0D               	movwf	___lldiv@counter,c
  4199  002994  D007               	goto	l2505
  4200  002996                     l2503:
  4201  002996  90D8               	bcf	status,0,c
  4202  002998  3605               	rlcf	___lldiv@divisor,f,c
  4203  00299A  3606               	rlcf	___lldiv@divisor+1,f,c
  4204  00299C  3607               	rlcf	___lldiv@divisor+2,f,c
  4205  00299E  3608               	rlcf	___lldiv@divisor+3,f,c
  4206  0029A0  2A0D               	incf	___lldiv@counter,f,c
  4207  0029A2  D000               	goto	l2505
  4208  0029A4                     l2505:
  4209  0029A4  BE08               	btfsc	___lldiv@divisor+3,7,c
  4210  0029A6  D002               	goto	l2507
  4211  0029A8  D7F6               	goto	l2503
  4212  0029AA  D000               	goto	l2507
  4213  0029AC                     l2507:
  4214  0029AC  90D8               	bcf	status,0,c
  4215  0029AE  3609               	rlcf	___lldiv@quotient,f,c
  4216  0029B0  360A               	rlcf	___lldiv@quotient+1,f,c
  4217  0029B2  360B               	rlcf	___lldiv@quotient+2,f,c
  4218  0029B4  360C               	rlcf	___lldiv@quotient+3,f,c
  4219  0029B6  5005               	movf	___lldiv@divisor,w,c
  4220  0029B8  5C01               	subwf	___lldiv@dividend,w,c
  4221  0029BA  5006               	movf	___lldiv@divisor+1,w,c
  4222  0029BC  5802               	subwfb	___lldiv@dividend+1,w,c
  4223  0029BE  5007               	movf	___lldiv@divisor+2,w,c
  4224  0029C0  5803               	subwfb	___lldiv@dividend+2,w,c
  4225  0029C2  5008               	movf	___lldiv@divisor+3,w,c
  4226  0029C4  5804               	subwfb	___lldiv@dividend+3,w,c
  4227  0029C6  A0D8               	btfss	status,0,c
  4228  0029C8  D00A               	goto	l2515
  4229  0029CA  5005               	movf	___lldiv@divisor,w,c
  4230  0029CC  5E01               	subwf	___lldiv@dividend,f,c
  4231  0029CE  5006               	movf	___lldiv@divisor+1,w,c
  4232  0029D0  5A02               	subwfb	___lldiv@dividend+1,f,c
  4233  0029D2  5007               	movf	___lldiv@divisor+2,w,c
  4234  0029D4  5A03               	subwfb	___lldiv@dividend+2,f,c
  4235  0029D6  5008               	movf	___lldiv@divisor+3,w,c
  4236  0029D8  5A04               	subwfb	___lldiv@dividend+3,f,c
  4237  0029DA  8009               	bsf	___lldiv@quotient,0,c
  4238  0029DC  D000               	goto	l2515
  4239  0029DE                     l2515:
  4240  0029DE  90D8               	bcf	status,0,c
  4241  0029E0  3208               	rrcf	___lldiv@divisor+3,f,c
  4242  0029E2  3207               	rrcf	___lldiv@divisor+2,f,c
  4243  0029E4  3206               	rrcf	___lldiv@divisor+1,f,c
  4244  0029E6  3205               	rrcf	___lldiv@divisor,f,c
  4245  0029E8  2E0D               	decfsz	___lldiv@counter,f,c
  4246  0029EA  D7E0               	goto	l2507
  4247  0029EC  D000               	goto	l779
  4248  0029EE                     l779:
  4249  0029EE  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4250  0029F2  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4251  0029F6  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4252  0029FA  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4253  0029FE  0012               	return		;funcret
  4254  002A00                     __end_of___lldiv:
  4255                           	opt stack 0
  4256                           tblptru	equ	0xFF8
  4257                           tblptrh	equ	0xFF7
  4258                           tblptrl	equ	0xFF6
  4259                           tablat	equ	0xFF5
  4260                           prodh	equ	0xFF4
  4261                           prodl	equ	0xFF3
  4262                           postinc0	equ	0xFEE
  4263                           wreg	equ	0xFE8
  4264                           postdec1	equ	0xFE5
  4265                           fsr1l	equ	0xFE1
  4266                           postinc2	equ	0xFDE
  4267                           postdec2	equ	0xFDD
  4268                           fsr2h	equ	0xFDA
  4269                           fsr2l	equ	0xFD9
  4270                           status	equ	0xFD8
  4271                           
  4272 ;; *************** function ___fttol *****************
  4273 ;; Defined at:
  4274 ;;		line 44 in file "E:\XC8\sources\common\fttol.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  f1              3   42[COMRAM] float 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  lval            4   52[COMRAM] unsigned long 
  4279 ;;  exp1            1   56[COMRAM] unsigned char 
  4280 ;;  sign1           1   51[COMRAM] unsigned char 
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  4   42[COMRAM] long 
  4283 ;; Registers used:
  4284 ;;		wreg, status,2, status,0
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4291 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;Total ram usage:       15 bytes
  4295 ;; Hardware stack levels used:    1
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_main
  4300 ;;		_printf
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text13
  4305  00251A                     __ptext13:
  4306                           	opt stack 0
  4307  00251A                     ___fttol:
  4308                           	opt stack 29
  4309                           
  4310                           ;incstack = 0
  4311  00251A  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4312  00251E  6A30               	clrf	(??___fttol+1)& (0+255),c
  4313  002520  6A31               	clrf	(??___fttol+2)& (0+255),c
  4314  002522  342C               	rlcf	___fttol@f1+1,w,c
  4315  002524  362F               	rlcf	??___fttol& (0+255),f,c
  4316  002526  E301               	bnc	u2481
  4317  002528  8030               	bsf	(??___fttol+1)& (0+255),0,c
  4318  00252A                     u2481:
  4319  00252A  502F               	movf	??___fttol,w,c
  4320  00252C  6E39               	movwf	___fttol@exp1,c
  4321  00252E  5039               	movf	___fttol@exp1,w,c
  4322  002530  A4D8               	btfss	status,2,c
  4323  002532  D002               	goto	l2457
  4324  002534  D039               	goto	l2481
  4325  002536  D063               	goto	l740
  4326  002538                     l2457:
  4327  002538  0E17               	movlw	23
  4328  00253A  6E2F               	movwf	??___fttol& (0+255),c
  4329  00253C  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4330  002540  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4331  002544  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4332  002548  282F               	incf	??___fttol,w,c
  4333  00254A  6E33               	movwf	(??___fttol+4)& (0+255),c
  4334  00254C  D004               	goto	u2500
  4335  00254E                     u2505:
  4336  00254E  90D8               	bcf	status,0,c
  4337  002550  3232               	rrcf	??___fttol+3,f,c
  4338  002552  3231               	rrcf	??___fttol+2,f,c
  4339  002554  3230               	rrcf	??___fttol+1,f,c
  4340  002556                     u2500:
  4341  002556  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  4342  002558  D7FA               	goto	u2505
  4343  00255A  5030               	movf	??___fttol+1,w,c
  4344  00255C  6E34               	movwf	___fttol@sign1,c
  4345  00255E  8E2C               	bsf	___fttol@f1+1,7,c
  4346  002560  0EFF               	movlw	255
  4347  002562  162B               	andwf	___fttol@f1,f,c
  4348  002564  0EFF               	movlw	255
  4349  002566  162C               	andwf	___fttol@f1+1,f,c
  4350  002568  0E00               	movlw	0
  4351  00256A  162D               	andwf	___fttol@f1+2,f,c
  4352  00256C  502B               	movf	___fttol@f1,w,c
  4353  00256E  6E35               	movwf	___fttol@lval,c
  4354  002570  502C               	movf	___fttol@f1+1,w,c
  4355  002572  6E36               	movwf	___fttol@lval+1,c
  4356  002574  502D               	movf	___fttol@f1+2,w,c
  4357  002576  6E37               	movwf	___fttol@lval+2,c
  4358  002578  6A38               	clrf	___fttol@lval+3,c
  4359  00257A  0E8E               	movlw	142
  4360  00257C  5E39               	subwf	___fttol@exp1,f,c
  4361  00257E  AE39               	btfss	___fttol@exp1,7,c
  4362  002580  D010               	goto	l2479
  4363  002582  5039               	movf	___fttol@exp1,w,c
  4364  002584  0A80               	xorlw	128
  4365  002586  0F8F               	addlw	143
  4366  002588  B0D8               	btfsc	status,0,c
  4367  00258A  D003               	goto	l2475
  4368  00258C  D00D               	goto	l2481
  4369  00258E  D037               	goto	l740
  4370  002590  D000               	goto	l2475
  4371  002592                     l2475:
  4372  002592  90D8               	bcf	status,0,c
  4373  002594  3238               	rrcf	___fttol@lval+3,f,c
  4374  002596  3237               	rrcf	___fttol@lval+2,f,c
  4375  002598  3236               	rrcf	___fttol@lval+1,f,c
  4376  00259A  3235               	rrcf	___fttol@lval,f,c
  4377  00259C  3E39               	incfsz	___fttol@exp1,f,c
  4378  00259E  D7F9               	goto	l2475
  4379  0025A0  D019               	goto	l2489
  4380  0025A2                     l2479:
  4381  0025A2  0E17               	movlw	23
  4382  0025A4  6439               	cpfsgt	___fttol@exp1,c
  4383  0025A6  D011               	goto	l2487
  4384  0025A8                     l2481:
  4385  0025A8  0E00               	movlw	0
  4386  0025AA  6E2B               	movwf	?___fttol,c
  4387  0025AC  0E00               	movlw	0
  4388  0025AE  6E2C               	movwf	?___fttol+1,c
  4389  0025B0  0E00               	movlw	0
  4390  0025B2  6E2D               	movwf	?___fttol+2,c
  4391  0025B4  0E00               	movlw	0
  4392  0025B6  6E2E               	movwf	?___fttol+3,c
  4393  0025B8  D022               	goto	l740
  4394  0025BA  D007               	goto	l2487
  4395  0025BC                     l2485:
  4396  0025BC  90D8               	bcf	status,0,c
  4397  0025BE  3635               	rlcf	___fttol@lval,f,c
  4398  0025C0  3636               	rlcf	___fttol@lval+1,f,c
  4399  0025C2  3637               	rlcf	___fttol@lval+2,f,c
  4400  0025C4  3638               	rlcf	___fttol@lval+3,f,c
  4401  0025C6  0639               	decf	___fttol@exp1,f,c
  4402  0025C8  D000               	goto	l2487
  4403  0025CA                     l2487:
  4404  0025CA  5039               	movf	___fttol@exp1,w,c
  4405  0025CC  B4D8               	btfsc	status,2,c
  4406  0025CE  D002               	goto	l2489
  4407  0025D0  D7F5               	goto	l2485
  4408  0025D2  D000               	goto	l2489
  4409  0025D4                     l2489:
  4410  0025D4  5034               	movf	___fttol@sign1,w,c
  4411  0025D6  B4D8               	btfsc	status,2,c
  4412  0025D8  D009               	goto	l2493
  4413  0025DA  1E38               	comf	___fttol@lval+3,f,c
  4414  0025DC  1E37               	comf	___fttol@lval+2,f,c
  4415  0025DE  1E36               	comf	___fttol@lval+1,f,c
  4416  0025E0  6C35               	negf	___fttol@lval,c
  4417  0025E2  0E00               	movlw	0
  4418  0025E4  2236               	addwfc	___fttol@lval+1,f,c
  4419  0025E6  2237               	addwfc	___fttol@lval+2,f,c
  4420  0025E8  2238               	addwfc	___fttol@lval+3,f,c
  4421  0025EA  D000               	goto	l2493
  4422  0025EC                     l2493:
  4423  0025EC  C035  F02B         	movff	___fttol@lval,?___fttol
  4424  0025F0  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4425  0025F4  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4426  0025F8  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4427  0025FC  D000               	goto	l740
  4428  0025FE                     l740:
  4429  0025FE  0012               	return		;funcret
  4430  002600                     __end_of___fttol:
  4431                           	opt stack 0
  4432                           tblptru	equ	0xFF8
  4433                           tblptrh	equ	0xFF7
  4434                           tblptrl	equ	0xFF6
  4435                           tablat	equ	0xFF5
  4436                           prodh	equ	0xFF4
  4437                           prodl	equ	0xFF3
  4438                           postinc0	equ	0xFEE
  4439                           wreg	equ	0xFE8
  4440                           postdec1	equ	0xFE5
  4441                           fsr1l	equ	0xFE1
  4442                           postinc2	equ	0xFDE
  4443                           postdec2	equ	0xFDD
  4444                           fsr2h	equ	0xFDA
  4445                           fsr2l	equ	0xFD9
  4446                           status	equ	0xFD8
  4447                           
  4448 ;; *************** function ___ftsub *****************
  4449 ;; Defined at:
  4450 ;;		line 20 in file "E:\XC8\sources\common\ftsub.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;  f1              3   57[COMRAM] float 
  4453 ;;  f2              3   60[COMRAM] float 
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  3   57[COMRAM] float 
  4458 ;; Registers used:
  4459 ;;		wreg, status,2, status,0, cstack
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4465 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4468 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;Total ram usage:        6 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; Hardware stack levels required when called:    2
  4472 ;; This function calls:
  4473 ;;		___ftadd
  4474 ;; This function is called by:
  4475 ;;		_printf
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text14
  4480  002C4A                     __ptext14:
  4481                           	opt stack 0
  4482  002C4A                     ___ftsub:
  4483                           	opt stack 27
  4484                           
  4485                           ;incstack = 0
  4486  002C4A  503D               	movf	___ftsub@f2,w,c
  4487  002C4C  103E               	iorwf	___ftsub@f2+1,w,c
  4488  002C4E  103F               	iorwf	___ftsub@f2+2,w,c
  4489  002C50  B4D8               	btfsc	status,2,c
  4490  002C52  D007               	goto	l2425
  4491  002C54  0E00               	movlw	0
  4492  002C56  1A3D               	xorwf	___ftsub@f2,f,c
  4493  002C58  0E00               	movlw	0
  4494  002C5A  1A3E               	xorwf	___ftsub@f2+1,f,c
  4495  002C5C  0E80               	movlw	128
  4496  002C5E  1A3F               	xorwf	___ftsub@f2+2,f,c
  4497  002C60  D000               	goto	l2425
  4498  002C62                     l2425:
  4499  002C62  C03A  F02E         	movff	___ftsub@f1,___ftadd@f1
  4500  002C66  C03B  F02F         	movff	___ftsub@f1+1,___ftadd@f1+1
  4501  002C6A  C03C  F030         	movff	___ftsub@f1+2,___ftadd@f1+2
  4502  002C6E  C03D  F031         	movff	___ftsub@f2,___ftadd@f2
  4503  002C72  C03E  F032         	movff	___ftsub@f2+1,___ftadd@f2+1
  4504  002C76  C03F  F033         	movff	___ftsub@f2+2,___ftadd@f2+2
  4505  002C7A  EC22  F010         	call	___ftadd	;wreg free
  4506  002C7E  C02E  F03A         	movff	?___ftadd,?___ftsub
  4507  002C82  C02F  F03B         	movff	?___ftadd+1,?___ftsub+1
  4508  002C86  C030  F03C         	movff	?___ftadd+2,?___ftsub+2
  4509  002C8A  D000               	goto	l736
  4510  002C8C                     l736:
  4511  002C8C  0012               	return		;funcret
  4512  002C8E                     __end_of___ftsub:
  4513                           	opt stack 0
  4514                           tblptru	equ	0xFF8
  4515                           tblptrh	equ	0xFF7
  4516                           tblptrl	equ	0xFF6
  4517                           tablat	equ	0xFF5
  4518                           prodh	equ	0xFF4
  4519                           prodl	equ	0xFF3
  4520                           postinc0	equ	0xFEE
  4521                           wreg	equ	0xFE8
  4522                           postdec1	equ	0xFE5
  4523                           fsr1l	equ	0xFE1
  4524                           postinc2	equ	0xFDE
  4525                           postdec2	equ	0xFDD
  4526                           fsr2h	equ	0xFDA
  4527                           fsr2l	equ	0xFD9
  4528                           status	equ	0xFD8
  4529                           
  4530 ;; *************** function ___ftadd *****************
  4531 ;; Defined at:
  4532 ;;		line 86 in file "E:\XC8\sources\common\ftadd.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  f1              3   45[COMRAM] float 
  4535 ;;  f2              3   48[COMRAM] float 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  exp1            1   56[COMRAM] unsigned char 
  4538 ;;  exp2            1   55[COMRAM] unsigned char 
  4539 ;;  sign            1   54[COMRAM] unsigned char 
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  3   45[COMRAM] float 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0, cstack
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4549 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4553 ;;Total ram usage:       12 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:    1
  4556 ;; This function calls:
  4557 ;;		___ftpack
  4558 ;; This function is called by:
  4559 ;;		_main
  4560 ;;		_printf
  4561 ;;		___ftsub
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text15
  4566  002044                     __ptext15:
  4567                           	opt stack 0
  4568  002044                     ___ftadd:
  4569                           	opt stack 27
  4570                           
  4571                           ;incstack = 0
  4572  002044  C030  F034         	movff	___ftadd@f1+2,??___ftadd
  4573  002048  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4574  00204A  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4575  00204C  342F               	rlcf	___ftadd@f1+1,w,c
  4576  00204E  3634               	rlcf	??___ftadd& (0+255),f,c
  4577  002050  E301               	bnc	u1701
  4578  002052  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4579  002054                     u1701:
  4580  002054  5034               	movf	??___ftadd,w,c
  4581  002056  6E39               	movwf	___ftadd@exp1,c
  4582  002058  C033  F034         	movff	___ftadd@f2+2,??___ftadd
  4583  00205C  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4584  00205E  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4585  002060  3432               	rlcf	___ftadd@f2+1,w,c
  4586  002062  3634               	rlcf	??___ftadd& (0+255),f,c
  4587  002064  E301               	bnc	u1711
  4588  002066  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4589  002068                     u1711:
  4590  002068  5034               	movf	??___ftadd,w,c
  4591  00206A  6E38               	movwf	___ftadd@exp2,c
  4592  00206C  5039               	movf	___ftadd@exp1,w,c
  4593  00206E  B4D8               	btfsc	status,2,c
  4594  002070  D00B               	goto	l655
  4595  002072  5038               	movf	___ftadd@exp2,w,c
  4596  002074  5C39               	subwf	___ftadd@exp1,w,c
  4597  002076  B0D8               	btfsc	status,0,c
  4598  002078  D00E               	goto	l2001
  4599  00207A  5039               	movf	___ftadd@exp1,w,c
  4600  00207C  0800               	sublw	0
  4601  00207E  2438               	addwf	___ftadd@exp2,w,c
  4602  002080  6E34               	movwf	??___ftadd& (0+255),c
  4603  002082  0E18               	movlw	24
  4604  002084  6434               	cpfsgt	??___ftadd,c
  4605  002086  D007               	goto	l2001
  4606  002088                     l655:
  4607  002088  C031  F02E         	movff	___ftadd@f2,?___ftadd
  4608  00208C  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
  4609  002090  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
  4610  002094  D0B8               	goto	l656
  4611  002096                     l2001:
  4612  002096  5038               	movf	___ftadd@exp2,w,c
  4613  002098  B4D8               	btfsc	status,2,c
  4614  00209A  D00B               	goto	l659
  4615  00209C  5039               	movf	___ftadd@exp1,w,c
  4616  00209E  5C38               	subwf	___ftadd@exp2,w,c
  4617  0020A0  B0D8               	btfsc	status,0,c
  4618  0020A2  D00E               	goto	l2007
  4619  0020A4  5038               	movf	___ftadd@exp2,w,c
  4620  0020A6  0800               	sublw	0
  4621  0020A8  2439               	addwf	___ftadd@exp1,w,c
  4622  0020AA  6E34               	movwf	??___ftadd& (0+255),c
  4623  0020AC  0E18               	movlw	24
  4624  0020AE  6434               	cpfsgt	??___ftadd,c
  4625  0020B0  D007               	goto	l2007
  4626  0020B2                     l659:
  4627  0020B2  C02E  F02E         	movff	___ftadd@f1,?___ftadd
  4628  0020B6  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
  4629  0020BA  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
  4630  0020BE  D0A3               	goto	l656
  4631  0020C0                     l2007:
  4632  0020C0  0E06               	movlw	6
  4633  0020C2  6E37               	movwf	___ftadd@sign,c
  4634  0020C4  AE30               	btfss	___ftadd@f1+2,7,c
  4635  0020C6  D002               	goto	l2013
  4636  0020C8  8E37               	bsf	___ftadd@sign,7,c
  4637  0020CA  D000               	goto	l2013
  4638  0020CC                     l2013:
  4639  0020CC  BE33               	btfsc	___ftadd@f2+2,7,c
  4640  0020CE  8C37               	bsf	___ftadd@sign,6,c
  4641  0020D0  8E2F               	bsf	___ftadd@f1+1,7,c
  4642  0020D2  0EFF               	movlw	255
  4643  0020D4  162E               	andwf	___ftadd@f1,f,c
  4644  0020D6  0EFF               	movlw	255
  4645  0020D8  162F               	andwf	___ftadd@f1+1,f,c
  4646  0020DA  0E00               	movlw	0
  4647  0020DC  1630               	andwf	___ftadd@f1+2,f,c
  4648  0020DE  8E32               	bsf	___ftadd@f2+1,7,c
  4649  0020E0  0EFF               	movlw	255
  4650  0020E2  1631               	andwf	___ftadd@f2,f,c
  4651  0020E4  0EFF               	movlw	255
  4652  0020E6  1632               	andwf	___ftadd@f2+1,f,c
  4653  0020E8  0E00               	movlw	0
  4654  0020EA  1633               	andwf	___ftadd@f2+2,f,c
  4655  0020EC  5038               	movf	___ftadd@exp2,w,c
  4656  0020EE  5C39               	subwf	___ftadd@exp1,w,c
  4657  0020F0  B0D8               	btfsc	status,0,c
  4658  0020F2  D01E               	goto	l2033
  4659  0020F4                     l2023:
  4660  0020F4  90D8               	bcf	status,0,c
  4661  0020F6  3631               	rlcf	___ftadd@f2,f,c
  4662  0020F8  3632               	rlcf	___ftadd@f2+1,f,c
  4663  0020FA  3633               	rlcf	___ftadd@f2+2,f,c
  4664  0020FC  0638               	decf	___ftadd@exp2,f,c
  4665  0020FE  5039               	movf	___ftadd@exp1,w,c
  4666  002100  1838               	xorwf	___ftadd@exp2,w,c
  4667  002102  B4D8               	btfsc	status,2,c
  4668  002104  D00F               	goto	l2031
  4669  002106  0637               	decf	___ftadd@sign,f,c
  4670  002108  C037  F034         	movff	___ftadd@sign,??___ftadd
  4671  00210C  0E07               	movlw	7
  4672  00210E  1634               	andwf	??___ftadd,f,c
  4673  002110  B4D8               	btfsc	status,2,c
  4674  002112  D008               	goto	l2031
  4675  002114  D7EF               	goto	l2023
  4676  002116  D006               	goto	l2031
  4677  002118                     l2029:
  4678  002118  90D8               	bcf	status,0,c
  4679  00211A  3230               	rrcf	___ftadd@f1+2,f,c
  4680  00211C  322F               	rrcf	___ftadd@f1+1,f,c
  4681  00211E  322E               	rrcf	___ftadd@f1,f,c
  4682  002120  2A39               	incf	___ftadd@exp1,f,c
  4683  002122  D000               	goto	l2031
  4684  002124                     l2031:
  4685  002124  5038               	movf	___ftadd@exp2,w,c
  4686  002126  1839               	xorwf	___ftadd@exp1,w,c
  4687  002128  B4D8               	btfsc	status,2,c
  4688  00212A  D024               	goto	l670
  4689  00212C  D7F5               	goto	l2029
  4690  00212E  D022               	goto	l670
  4691  002130                     l2033:
  4692  002130  5039               	movf	___ftadd@exp1,w,c
  4693  002132  5C38               	subwf	___ftadd@exp2,w,c
  4694  002134  B0D8               	btfsc	status,0,c
  4695  002136  D01E               	goto	l670
  4696  002138                     l2035:
  4697  002138  90D8               	bcf	status,0,c
  4698  00213A  362E               	rlcf	___ftadd@f1,f,c
  4699  00213C  362F               	rlcf	___ftadd@f1+1,f,c
  4700  00213E  3630               	rlcf	___ftadd@f1+2,f,c
  4701  002140  0639               	decf	___ftadd@exp1,f,c
  4702  002142  5039               	movf	___ftadd@exp1,w,c
  4703  002144  1838               	xorwf	___ftadd@exp2,w,c
  4704  002146  B4D8               	btfsc	status,2,c
  4705  002148  D00F               	goto	l2043
  4706  00214A  0637               	decf	___ftadd@sign,f,c
  4707  00214C  C037  F034         	movff	___ftadd@sign,??___ftadd
  4708  002150  0E07               	movlw	7
  4709  002152  1634               	andwf	??___ftadd,f,c
  4710  002154  B4D8               	btfsc	status,2,c
  4711  002156  D008               	goto	l2043
  4712  002158  D7EF               	goto	l2035
  4713  00215A  D006               	goto	l2043
  4714  00215C                     l2041:
  4715  00215C  90D8               	bcf	status,0,c
  4716  00215E  3233               	rrcf	___ftadd@f2+2,f,c
  4717  002160  3232               	rrcf	___ftadd@f2+1,f,c
  4718  002162  3231               	rrcf	___ftadd@f2,f,c
  4719  002164  2A38               	incf	___ftadd@exp2,f,c
  4720  002166  D000               	goto	l2043
  4721  002168                     l2043:
  4722  002168  5038               	movf	___ftadd@exp2,w,c
  4723  00216A  1839               	xorwf	___ftadd@exp1,w,c
  4724  00216C  B4D8               	btfsc	status,2,c
  4725  00216E  D002               	goto	l670
  4726  002170  D7F5               	goto	l2041
  4727  002172  D000               	goto	l670
  4728  002174                     l670:
  4729  002174  AE37               	btfss	___ftadd@sign,7,c
  4730  002176  D00C               	goto	l679
  4731  002178  0EFF               	movlw	255
  4732  00217A  1A2E               	xorwf	___ftadd@f1,f,c
  4733  00217C  0EFF               	movlw	255
  4734  00217E  1A2F               	xorwf	___ftadd@f1+1,f,c
  4735  002180  0EFF               	movlw	255
  4736  002182  1A30               	xorwf	___ftadd@f1+2,f,c
  4737  002184  0E01               	movlw	1
  4738  002186  262E               	addwf	___ftadd@f1,f,c
  4739  002188  0E00               	movlw	0
  4740  00218A  222F               	addwfc	___ftadd@f1+1,f,c
  4741  00218C  0E00               	movlw	0
  4742  00218E  2230               	addwfc	___ftadd@f1+2,f,c
  4743  002190                     l679:
  4744  002190  AC37               	btfss	___ftadd@sign,6,c
  4745  002192  D00D               	goto	l2049
  4746  002194  0EFF               	movlw	255
  4747  002196  1A31               	xorwf	___ftadd@f2,f,c
  4748  002198  0EFF               	movlw	255
  4749  00219A  1A32               	xorwf	___ftadd@f2+1,f,c
  4750  00219C  0EFF               	movlw	255
  4751  00219E  1A33               	xorwf	___ftadd@f2+2,f,c
  4752  0021A0  0E01               	movlw	1
  4753  0021A2  2631               	addwf	___ftadd@f2,f,c
  4754  0021A4  0E00               	movlw	0
  4755  0021A6  2232               	addwfc	___ftadd@f2+1,f,c
  4756  0021A8  0E00               	movlw	0
  4757  0021AA  2233               	addwfc	___ftadd@f2+2,f,c
  4758  0021AC  D000               	goto	l2049
  4759  0021AE                     l2049:
  4760  0021AE  0E00               	movlw	0
  4761  0021B0  6E37               	movwf	___ftadd@sign,c
  4762  0021B2  502E               	movf	___ftadd@f1,w,c
  4763  0021B4  2631               	addwf	___ftadd@f2,f,c
  4764  0021B6  502F               	movf	___ftadd@f1+1,w,c
  4765  0021B8  2232               	addwfc	___ftadd@f2+1,f,c
  4766  0021BA  5030               	movf	___ftadd@f1+2,w,c
  4767  0021BC  2233               	addwfc	___ftadd@f2+2,f,c
  4768  0021BE  AE33               	btfss	___ftadd@f2+2,7,c
  4769  0021C0  D00F               	goto	l2059
  4770  0021C2  0EFF               	movlw	255
  4771  0021C4  1A31               	xorwf	___ftadd@f2,f,c
  4772  0021C6  0EFF               	movlw	255
  4773  0021C8  1A32               	xorwf	___ftadd@f2+1,f,c
  4774  0021CA  0EFF               	movlw	255
  4775  0021CC  1A33               	xorwf	___ftadd@f2+2,f,c
  4776  0021CE  0E01               	movlw	1
  4777  0021D0  2631               	addwf	___ftadd@f2,f,c
  4778  0021D2  0E00               	movlw	0
  4779  0021D4  2232               	addwfc	___ftadd@f2+1,f,c
  4780  0021D6  0E00               	movlw	0
  4781  0021D8  2233               	addwfc	___ftadd@f2+2,f,c
  4782  0021DA  0E01               	movlw	1
  4783  0021DC  6E37               	movwf	___ftadd@sign,c
  4784  0021DE  D000               	goto	l2059
  4785  0021E0                     l2059:
  4786  0021E0  C031  F001         	movff	___ftadd@f2,___ftpack@arg
  4787  0021E4  C032  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4788  0021E8  C033  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4789  0021EC  C039  F004         	movff	___ftadd@exp1,___ftpack@exp
  4790  0021F0  C037  F005         	movff	___ftadd@sign,___ftpack@sign
  4791  0021F4  EC71  F013         	call	___ftpack	;wreg free
  4792  0021F8  C001  F02E         	movff	?___ftpack,?___ftadd
  4793  0021FC  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
  4794  002200  C003  F030         	movff	?___ftpack+2,?___ftadd+2
  4795  002204  D000               	goto	l656
  4796  002206                     l656:
  4797  002206  0012               	return		;funcret
  4798  002208                     __end_of___ftadd:
  4799                           	opt stack 0
  4800                           tblptru	equ	0xFF8
  4801                           tblptrh	equ	0xFF7
  4802                           tblptrl	equ	0xFF6
  4803                           tablat	equ	0xFF5
  4804                           prodh	equ	0xFF4
  4805                           prodl	equ	0xFF3
  4806                           postinc0	equ	0xFEE
  4807                           wreg	equ	0xFE8
  4808                           postdec1	equ	0xFE5
  4809                           fsr1l	equ	0xFE1
  4810                           postinc2	equ	0xFDE
  4811                           postdec2	equ	0xFDD
  4812                           fsr2h	equ	0xFDA
  4813                           fsr2l	equ	0xFD9
  4814                           status	equ	0xFD8
  4815                           
  4816 ;; *************** function ___ftneg *****************
  4817 ;; Defined at:
  4818 ;;		line 15 in file "E:\XC8\sources\common\ftneg.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  f1              3    0[COMRAM] float 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;		None
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  3    0[COMRAM] float 
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, status,0
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4832 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;Total ram usage:        3 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; This function calls:
  4839 ;;		Nothing
  4840 ;; This function is called by:
  4841 ;;		_main
  4842 ;;		_printf
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text16
  4847  002DC0                     __ptext16:
  4848                           	opt stack 0
  4849  002DC0                     ___ftneg:
  4850                           	opt stack 29
  4851                           
  4852                           ;incstack = 0
  4853  002DC0  5001               	movf	___ftneg@f1,w,c
  4854  002DC2  1002               	iorwf	___ftneg@f1+1,w,c
  4855  002DC4  1003               	iorwf	___ftneg@f1+2,w,c
  4856  002DC6  B4D8               	btfsc	status,2,c
  4857  002DC8  D006               	goto	l729
  4858  002DCA  0E00               	movlw	0
  4859  002DCC  1A01               	xorwf	___ftneg@f1,f,c
  4860  002DCE  0E00               	movlw	0
  4861  002DD0  1A02               	xorwf	___ftneg@f1+1,f,c
  4862  002DD2  0E80               	movlw	128
  4863  002DD4  1A03               	xorwf	___ftneg@f1+2,f,c
  4864  002DD6                     l729:
  4865  002DD6  C001  F001         	movff	___ftneg@f1,?___ftneg
  4866  002DDA  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4867  002DDE  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4868  002DE2  0012               	return		;funcret
  4869  002DE4                     __end_of___ftneg:
  4870                           	opt stack 0
  4871                           tblptru	equ	0xFF8
  4872                           tblptrh	equ	0xFF7
  4873                           tblptrl	equ	0xFF6
  4874                           tablat	equ	0xFF5
  4875                           prodh	equ	0xFF4
  4876                           prodl	equ	0xFF3
  4877                           postinc0	equ	0xFEE
  4878                           wreg	equ	0xFE8
  4879                           postdec1	equ	0xFE5
  4880                           fsr1l	equ	0xFE1
  4881                           postinc2	equ	0xFDE
  4882                           postdec2	equ	0xFDD
  4883                           fsr2h	equ	0xFDA
  4884                           fsr2l	equ	0xFD9
  4885                           status	equ	0xFD8
  4886                           
  4887 ;; *************** function ___ftge *****************
  4888 ;; Defined at:
  4889 ;;		line 4 in file "E:\XC8\sources\common\ftge.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;  ff1             3    0[COMRAM] float 
  4892 ;;  ff2             3    3[COMRAM] float 
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;		None
  4895 ;; Return value:  Size  Location     Type
  4896 ;;		None               void
  4897 ;; Registers used:
  4898 ;;		wreg, status,2, status,0
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4904 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;Total ram usage:        9 bytes
  4909 ;; Hardware stack levels used:    1
  4910 ;; This function calls:
  4911 ;;		Nothing
  4912 ;; This function is called by:
  4913 ;;		_printf
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           	psect	text17
  4918  002848                     __ptext17:
  4919                           	opt stack 0
  4920  002848                     ___ftge:
  4921                           	opt stack 29
  4922                           
  4923                           ;incstack = 0
  4924  002848  AE03               	btfss	___ftge@ff1+2,7,c
  4925  00284A  D017               	goto	l2433
  4926  00284C  C001  F007         	movff	___ftge@ff1,??___ftge
  4927  002850  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4928  002854  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4929  002858  1E07               	comf	??___ftge,f,c
  4930  00285A  1E08               	comf	??___ftge+1,f,c
  4931  00285C  1E09               	comf	??___ftge+2,f,c
  4932  00285E  2A07               	incf	??___ftge,f,c
  4933  002860  0E00               	movlw	0
  4934  002862  2208               	addwfc	??___ftge+1,f,c
  4935  002864  2209               	addwfc	??___ftge+2,f,c
  4936  002866  0E00               	movlw	0
  4937  002868  2407               	addwf	??___ftge,w,c
  4938  00286A  6E01               	movwf	___ftge@ff1,c
  4939  00286C  0E00               	movlw	0
  4940  00286E  2008               	addwfc	??___ftge+1,w,c
  4941  002870  6E02               	movwf	___ftge@ff1+1,c
  4942  002872  0E80               	movlw	128
  4943  002874  2009               	addwfc	??___ftge+2,w,c
  4944  002876  6E03               	movwf	___ftge@ff1+2,c
  4945  002878  D000               	goto	l2433
  4946  00287A                     l2433:
  4947  00287A  AE06               	btfss	___ftge@ff2+2,7,c
  4948  00287C  D017               	goto	l2437
  4949  00287E  C004  F007         	movff	___ftge@ff2,??___ftge
  4950  002882  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4951  002886  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4952  00288A  1E07               	comf	??___ftge,f,c
  4953  00288C  1E08               	comf	??___ftge+1,f,c
  4954  00288E  1E09               	comf	??___ftge+2,f,c
  4955  002890  2A07               	incf	??___ftge,f,c
  4956  002892  0E00               	movlw	0
  4957  002894  2208               	addwfc	??___ftge+1,f,c
  4958  002896  2209               	addwfc	??___ftge+2,f,c
  4959  002898  0E00               	movlw	0
  4960  00289A  2407               	addwf	??___ftge,w,c
  4961  00289C  6E04               	movwf	___ftge@ff2,c
  4962  00289E  0E00               	movlw	0
  4963  0028A0  2008               	addwfc	??___ftge+1,w,c
  4964  0028A2  6E05               	movwf	___ftge@ff2+1,c
  4965  0028A4  0E80               	movlw	128
  4966  0028A6  2009               	addwfc	??___ftge+2,w,c
  4967  0028A8  6E06               	movwf	___ftge@ff2+2,c
  4968  0028AA  D000               	goto	l2437
  4969  0028AC                     l2437:
  4970  0028AC  0E00               	movlw	0
  4971  0028AE  1A01               	xorwf	___ftge@ff1,f,c
  4972  0028B0  0E00               	movlw	0
  4973  0028B2  1A02               	xorwf	___ftge@ff1+1,f,c
  4974  0028B4  0E80               	movlw	128
  4975  0028B6  1A03               	xorwf	___ftge@ff1+2,f,c
  4976  0028B8  0E00               	movlw	0
  4977  0028BA  1A04               	xorwf	___ftge@ff2,f,c
  4978  0028BC  0E00               	movlw	0
  4979  0028BE  1A05               	xorwf	___ftge@ff2+1,f,c
  4980  0028C0  0E80               	movlw	128
  4981  0028C2  1A06               	xorwf	___ftge@ff2+2,f,c
  4982  0028C4  5004               	movf	___ftge@ff2,w,c
  4983  0028C6  5C01               	subwf	___ftge@ff1,w,c
  4984  0028C8  5005               	movf	___ftge@ff2+1,w,c
  4985  0028CA  5802               	subwfb	___ftge@ff1+1,w,c
  4986  0028CC  5006               	movf	___ftge@ff2+2,w,c
  4987  0028CE  5803               	subwfb	___ftge@ff1+2,w,c
  4988  0028D0  B0D8               	btfsc	status,0,c
  4989  0028D2  D002               	goto	l2443
  4990  0028D4  90D8               	bcf	status,0,c
  4991  0028D6  D002               	goto	l713
  4992  0028D8                     l2443:
  4993  0028D8  80D8               	bsf	status,0,c
  4994  0028DA  D000               	goto	l713
  4995  0028DC                     l713:
  4996  0028DC  0012               	return		;funcret
  4997  0028DE                     __end_of___ftge:
  4998                           	opt stack 0
  4999                           tblptru	equ	0xFF8
  5000                           tblptrh	equ	0xFF7
  5001                           tblptrl	equ	0xFF6
  5002                           tablat	equ	0xFF5
  5003                           prodh	equ	0xFF4
  5004                           prodl	equ	0xFF3
  5005                           postinc0	equ	0xFEE
  5006                           wreg	equ	0xFE8
  5007                           postdec1	equ	0xFE5
  5008                           fsr1l	equ	0xFE1
  5009                           postinc2	equ	0xFDE
  5010                           postdec2	equ	0xFDD
  5011                           fsr2h	equ	0xFDA
  5012                           fsr2l	equ	0xFD9
  5013                           status	equ	0xFD8
  5014                           
  5015 ;; *************** function _init_UART *****************
  5016 ;; Defined at:
  5017 ;;		line 56 in file "Lab4p1.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;		None
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;		None
  5022 ;; Return value:  Size  Location     Type
  5023 ;;		None               void
  5024 ;; Registers used:
  5025 ;;		wreg, status,2, cstack
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;Total ram usage:        0 bytes
  5036 ;; Hardware stack levels used:    1
  5037 ;; Hardware stack levels required when called:    1
  5038 ;; This function calls:
  5039 ;;		_OpenUSART
  5040 ;; This function is called by:
  5041 ;;		_main
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           	psect	text18
  5046  002E30                     __ptext18:
  5047                           	opt stack 0
  5048  002E30                     _init_UART:
  5049                           	opt stack 29
  5050                           
  5051                           ;Lab4p1.c: 58: OpenUSART (0b01111111 & 0b10111111 &
  5052                           ;Lab4p1.c: 59: 0b11111110 & 0b11111101 & 0b11111111 &
  5053                           ;Lab4p1.c: 60: 0b11111111, 25);
  5054                           
  5055                           ;incstack = 0
  5056  002E30  0E00               	movlw	0
  5057  002E32  6E02               	movwf	OpenUSART@spbrg+1,c
  5058  002E34  0E19               	movlw	25
  5059  002E36  6E01               	movwf	OpenUSART@spbrg,c
  5060  002E38  0E3C               	movlw	60
  5061  002E3A  ECBD  F015         	call	_OpenUSART
  5062                           
  5063                           ;Lab4p1.c: 61: OSCCON = 0x60;
  5064  002E3E  0E60               	movlw	96
  5065  002E40  6ED3               	movwf	4051,c	;volatile
  5066  002E42  0012               	return		;funcret
  5067  002E44                     __end_of_init_UART:
  5068                           	opt stack 0
  5069                           tblptru	equ	0xFF8
  5070                           tblptrh	equ	0xFF7
  5071                           tblptrl	equ	0xFF6
  5072                           tablat	equ	0xFF5
  5073                           prodh	equ	0xFF4
  5074                           prodl	equ	0xFF3
  5075                           postinc0	equ	0xFEE
  5076                           wreg	equ	0xFE8
  5077                           postdec1	equ	0xFE5
  5078                           fsr1l	equ	0xFE1
  5079                           postinc2	equ	0xFDE
  5080                           postdec2	equ	0xFDD
  5081                           fsr2h	equ	0xFDA
  5082                           fsr2l	equ	0xFD9
  5083                           status	equ	0xFD8
  5084                           
  5085 ;; *************** function _OpenUSART *****************
  5086 ;; Defined at:
  5087 ;;		line 73 in file "E:\XC8\sources\pic18\plib\USART\uopen.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  config          1    wreg     unsigned char 
  5090 ;;  spbrg           2    0[COMRAM] unsigned int 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  config          1    2[COMRAM] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;		None               void
  5095 ;; Registers used:
  5096 ;;		wreg, status,2
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5102 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;Total ram usage:        3 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_init_UART
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           	psect	text19
  5116  002B7A                     __ptext19:
  5117                           	opt stack 0
  5118  002B7A                     _OpenUSART:
  5119                           	opt stack 29
  5120                           
  5121                           ;incstack = 0
  5122                           ;OpenUSART@config stored from wreg
  5123  002B7A  6E03               	movwf	OpenUSART@config,c
  5124  002B7C  0E00               	movlw	0
  5125  002B7E  6EAC               	movwf	4012,c	;volatile
  5126  002B80  0E00               	movlw	0
  5127  002B82  6EAB               	movwf	4011,c	;volatile
  5128  002B84  A003               	btfss	OpenUSART@config,0,c
  5129  002B86  D002               	goto	l2201
  5130  002B88  88AC               	bsf	4012,4,c	;volatile
  5131  002B8A  D000               	goto	l2201
  5132  002B8C                     l2201:
  5133  002B8C  A203               	btfss	OpenUSART@config,1,c
  5134  002B8E  D003               	goto	l2205
  5135  002B90  8CAC               	bsf	4012,6,c	;volatile
  5136  002B92  8CAB               	bsf	4011,6,c	;volatile
  5137  002B94  D000               	goto	l2205
  5138  002B96                     l2205:
  5139  002B96  A403               	btfss	OpenUSART@config,2,c
  5140  002B98  D002               	goto	l2209
  5141  002B9A  8EAC               	bsf	4012,7,c	;volatile
  5142  002B9C  D000               	goto	l2209
  5143  002B9E                     l2209:
  5144  002B9E  A603               	btfss	OpenUSART@config,3,c
  5145  002BA0  D002               	goto	l278
  5146  002BA2  88AB               	bsf	4011,4,c	;volatile
  5147  002BA4  D002               	goto	l2213
  5148  002BA6                     l278:
  5149  002BA6  8AAB               	bsf	4011,5,c	;volatile
  5150  002BA8  D000               	goto	l2213
  5151  002BAA                     l2213:
  5152  002BAA  B803               	btfsc	OpenUSART@config,4,c
  5153  002BAC  84AC               	bsf	4012,2,c	;volatile
  5154  002BAE  989E               	bcf	3998,4,c	;volatile
  5155  002BB0  AA03               	btfss	OpenUSART@config,5,c
  5156  002BB2  D002               	goto	l2221
  5157  002BB4  86AB               	bsf	4011,3,c	;volatile
  5158  002BB6  D000               	goto	l2221
  5159  002BB8                     l2221:
  5160  002BB8  AC03               	btfss	OpenUSART@config,6,c
  5161  002BBA  D002               	goto	l282
  5162  002BBC  8A9D               	bsf	3997,5,c	;volatile
  5163  002BBE  D001               	goto	l283
  5164  002BC0                     l282:
  5165  002BC0  9A9D               	bcf	3997,5,c	;volatile
  5166  002BC2                     l283:
  5167  002BC2  9A9E               	bcf	3998,5,c	;volatile
  5168  002BC4  AE03               	btfss	OpenUSART@config,7,c
  5169  002BC6  D002               	goto	l284
  5170  002BC8  889D               	bsf	3997,4,c	;volatile
  5171  002BCA  D001               	goto	l285
  5172  002BCC                     l284:
  5173  002BCC  989D               	bcf	3997,4,c	;volatile
  5174  002BCE                     l285:
  5175  002BCE  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5176  002BD2  5002               	movf	OpenUSART@spbrg+1,w,c
  5177  002BD4  6EB0               	movwf	4016,c	;volatile
  5178  002BD6  8AAC               	bsf	4012,5,c	;volatile
  5179  002BD8  8EAB               	bsf	4011,7,c	;volatile
  5180  002BDA  9C94               	bcf	3988,6,c	;volatile
  5181  002BDC  8E94               	bsf	3988,7,c	;volatile
  5182  002BDE  B8AC               	btfsc	4012,4,c	;volatile
  5183  002BE0  BEAC               	btfsc	4012,7,c	;volatile
  5184  002BE2  D002               	goto	l287
  5185  002BE4  8C94               	bsf	3988,6,c	;volatile
  5186  002BE6  D000               	goto	l287
  5187  002BE8                     l287:
  5188  002BE8  0012               	return		;funcret
  5189  002BEA                     __end_of_OpenUSART:
  5190                           	opt stack 0
  5191                           tblptru	equ	0xFF8
  5192                           tblptrh	equ	0xFF7
  5193                           tblptrl	equ	0xFF6
  5194                           tablat	equ	0xFF5
  5195                           prodh	equ	0xFF4
  5196                           prodl	equ	0xFF3
  5197                           postinc0	equ	0xFEE
  5198                           wreg	equ	0xFE8
  5199                           postdec1	equ	0xFE5
  5200                           fsr1l	equ	0xFE1
  5201                           postinc2	equ	0xFDE
  5202                           postdec2	equ	0xFDD
  5203                           fsr2h	equ	0xFDA
  5204                           fsr2l	equ	0xFD9
  5205                           status	equ	0xFD8
  5206                           
  5207 ;; *************** function ___ftdiv *****************
  5208 ;; Defined at:
  5209 ;;		line 54 in file "E:\XC8\sources\common\ftdiv.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  f1              3   57[COMRAM] float 
  5212 ;;  f2              3   60[COMRAM] float 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  f3              3   67[COMRAM] float 
  5215 ;;  sign            1   71[COMRAM] unsigned char 
  5216 ;;  exp             1   70[COMRAM] unsigned char 
  5217 ;;  cntr            1   66[COMRAM] unsigned char 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  3   57[COMRAM] float 
  5220 ;; Registers used:
  5221 ;;		wreg, status,2, status,0, cstack
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5227 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5228 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5229 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;Total ram usage:       15 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    1
  5234 ;; This function calls:
  5235 ;;		___ftpack
  5236 ;; This function is called by:
  5237 ;;		_main
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text20
  5242  002600                     __ptext20:
  5243                           	opt stack 0
  5244  002600                     ___ftdiv:
  5245                           	opt stack 29
  5246                           
  5247                           ;incstack = 0
  5248  002600  C03C  F040         	movff	___ftdiv@f1+2,??___ftdiv
  5249  002604  6A41               	clrf	(??___ftdiv+1)& (0+255),c
  5250  002606  6A42               	clrf	(??___ftdiv+2)& (0+255),c
  5251  002608  343B               	rlcf	___ftdiv@f1+1,w,c
  5252  00260A  3640               	rlcf	??___ftdiv& (0+255),f,c
  5253  00260C  E301               	bnc	u3151
  5254  00260E  8041               	bsf	(??___ftdiv+1)& (0+255),0,c
  5255  002610                     u3151:
  5256  002610  5040               	movf	??___ftdiv,w,c
  5257  002612  6E47               	movwf	___ftdiv@exp,c
  5258  002614  5047               	movf	___ftdiv@exp,w,c
  5259  002616  A4D8               	btfss	status,2,c
  5260  002618  D002               	goto	l2819
  5261  00261A  D00E               	goto	l2821
  5262  00261C  D061               	goto	l687
  5263  00261E                     l2819:
  5264  00261E  C03F  F040         	movff	___ftdiv@f2+2,??___ftdiv
  5265  002622  6A41               	clrf	(??___ftdiv+1)& (0+255),c
  5266  002624  6A42               	clrf	(??___ftdiv+2)& (0+255),c
  5267  002626  343E               	rlcf	___ftdiv@f2+1,w,c
  5268  002628  3640               	rlcf	??___ftdiv& (0+255),f,c
  5269  00262A  E301               	bnc	u3171
  5270  00262C  8041               	bsf	(??___ftdiv+1)& (0+255),0,c
  5271  00262E                     u3171:
  5272  00262E  5040               	movf	??___ftdiv,w,c
  5273  002630  6E48               	movwf	___ftdiv@sign,c
  5274  002632  5048               	movf	___ftdiv@sign,w,c
  5275  002634  A4D8               	btfss	status,2,c
  5276  002636  D007               	goto	l2825
  5277  002638                     l2821:
  5278  002638  0E00               	movlw	0
  5279  00263A  6E3A               	movwf	?___ftdiv,c
  5280  00263C  0E00               	movlw	0
  5281  00263E  6E3B               	movwf	?___ftdiv+1,c
  5282  002640  0E00               	movlw	0
  5283  002642  6E3C               	movwf	?___ftdiv+2,c
  5284  002644  D04D               	goto	l687
  5285  002646                     l2825:
  5286  002646  0E00               	movlw	0
  5287  002648  6E44               	movwf	___ftdiv@f3,c
  5288  00264A  0E00               	movlw	0
  5289  00264C  6E45               	movwf	___ftdiv@f3+1,c
  5290  00264E  0E00               	movlw	0
  5291  002650  6E46               	movwf	___ftdiv@f3+2,c
  5292  002652  5048               	movf	___ftdiv@sign,w,c
  5293  002654  0F89               	addlw	137
  5294  002656  5E47               	subwf	___ftdiv@exp,f,c
  5295  002658  C03C  F048         	movff	___ftdiv@f1+2,___ftdiv@sign
  5296  00265C  503F               	movf	___ftdiv@f2+2,w,c
  5297  00265E  1A48               	xorwf	___ftdiv@sign,f,c
  5298  002660  0E80               	movlw	128
  5299  002662  1648               	andwf	___ftdiv@sign,f,c
  5300  002664  8E3B               	bsf	___ftdiv@f1+1,7,c
  5301  002666  0EFF               	movlw	255
  5302  002668  163A               	andwf	___ftdiv@f1,f,c
  5303  00266A  0EFF               	movlw	255
  5304  00266C  163B               	andwf	___ftdiv@f1+1,f,c
  5305  00266E  0E00               	movlw	0
  5306  002670  163C               	andwf	___ftdiv@f1+2,f,c
  5307  002672  8E3E               	bsf	___ftdiv@f2+1,7,c
  5308  002674  0EFF               	movlw	255
  5309  002676  163D               	andwf	___ftdiv@f2,f,c
  5310  002678  0EFF               	movlw	255
  5311  00267A  163E               	andwf	___ftdiv@f2+1,f,c
  5312  00267C  0E00               	movlw	0
  5313  00267E  163F               	andwf	___ftdiv@f2+2,f,c
  5314  002680  0E18               	movlw	24
  5315  002682  6E43               	movwf	___ftdiv@cntr,c
  5316  002684  D000               	goto	l2845
  5317  002686                     l2845:
  5318  002686  90D8               	bcf	status,0,c
  5319  002688  3644               	rlcf	___ftdiv@f3,f,c
  5320  00268A  3645               	rlcf	___ftdiv@f3+1,f,c
  5321  00268C  3646               	rlcf	___ftdiv@f3+2,f,c
  5322  00268E  503D               	movf	___ftdiv@f2,w,c
  5323  002690  5C3A               	subwf	___ftdiv@f1,w,c
  5324  002692  503E               	movf	___ftdiv@f2+1,w,c
  5325  002694  583B               	subwfb	___ftdiv@f1+1,w,c
  5326  002696  503F               	movf	___ftdiv@f2+2,w,c
  5327  002698  583C               	subwfb	___ftdiv@f1+2,w,c
  5328  00269A  A0D8               	btfss	status,0,c
  5329  00269C  D007               	goto	l690
  5330  00269E  503D               	movf	___ftdiv@f2,w,c
  5331  0026A0  5E3A               	subwf	___ftdiv@f1,f,c
  5332  0026A2  503E               	movf	___ftdiv@f2+1,w,c
  5333  0026A4  5A3B               	subwfb	___ftdiv@f1+1,f,c
  5334  0026A6  503F               	movf	___ftdiv@f2+2,w,c
  5335  0026A8  5A3C               	subwfb	___ftdiv@f1+2,f,c
  5336  0026AA  8044               	bsf	___ftdiv@f3,0,c
  5337  0026AC                     l690:
  5338  0026AC  90D8               	bcf	status,0,c
  5339  0026AE  363A               	rlcf	___ftdiv@f1,f,c
  5340  0026B0  363B               	rlcf	___ftdiv@f1+1,f,c
  5341  0026B2  363C               	rlcf	___ftdiv@f1+2,f,c
  5342  0026B4  2E43               	decfsz	___ftdiv@cntr,f,c
  5343  0026B6  D7E7               	goto	l2845
  5344  0026B8  D000               	goto	l2855
  5345  0026BA                     l2855:
  5346  0026BA  C044  F001         	movff	___ftdiv@f3,___ftpack@arg
  5347  0026BE  C045  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5348  0026C2  C046  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5349  0026C6  C047  F004         	movff	___ftdiv@exp,___ftpack@exp
  5350  0026CA  C048  F005         	movff	___ftdiv@sign,___ftpack@sign
  5351  0026CE  EC71  F013         	call	___ftpack	;wreg free
  5352  0026D2  C001  F03A         	movff	?___ftpack,?___ftdiv
  5353  0026D6  C002  F03B         	movff	?___ftpack+1,?___ftdiv+1
  5354  0026DA  C003  F03C         	movff	?___ftpack+2,?___ftdiv+2
  5355  0026DE  D000               	goto	l687
  5356  0026E0                     l687:
  5357  0026E0  0012               	return		;funcret
  5358  0026E2                     __end_of___ftdiv:
  5359                           	opt stack 0
  5360                           tblptru	equ	0xFF8
  5361                           tblptrh	equ	0xFF7
  5362                           tblptrl	equ	0xFF6
  5363                           tablat	equ	0xFF5
  5364                           prodh	equ	0xFF4
  5365                           prodl	equ	0xFF3
  5366                           postinc0	equ	0xFEE
  5367                           wreg	equ	0xFE8
  5368                           postdec1	equ	0xFE5
  5369                           fsr1l	equ	0xFE1
  5370                           postinc2	equ	0xFDE
  5371                           postdec2	equ	0xFDD
  5372                           fsr2h	equ	0xFDA
  5373                           fsr2l	equ	0xFD9
  5374                           status	equ	0xFD8
  5375                           
  5376 ;; *************** function ___awtoft *****************
  5377 ;; Defined at:
  5378 ;;		line 32 in file "E:\XC8\sources\common\awtoft.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;  c               2    8[COMRAM] int 
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;  sign            1   11[COMRAM] unsigned char 
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  3    8[COMRAM] float 
  5385 ;; Registers used:
  5386 ;;		wreg, status,2, status,0, cstack
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5392 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;Total ram usage:        4 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:    1
  5399 ;; This function calls:
  5400 ;;		___ftpack
  5401 ;; This function is called by:
  5402 ;;		_main
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text21
  5407  002CCE                     __ptext21:
  5408                           	opt stack 0
  5409  002CCE                     ___awtoft:
  5410                           	opt stack 29
  5411                           
  5412                           ;incstack = 0
  5413  002CCE  0E00               	movlw	0
  5414  002CD0  6E0C               	movwf	___awtoft@sign,c
  5415  002CD2  AE0A               	btfss	___awtoft@c+1,7,c
  5416  002CD4  D007               	goto	l2867
  5417  002CD6  6C09               	negf	___awtoft@c,c
  5418  002CD8  1E0A               	comf	___awtoft@c+1,f,c
  5419  002CDA  B0D8               	btfsc	status,0,c
  5420  002CDC  2A0A               	incf	___awtoft@c+1,f,c
  5421  002CDE  0E01               	movlw	1
  5422  002CE0  6E0C               	movwf	___awtoft@sign,c
  5423  002CE2  D000               	goto	l2867
  5424  002CE4                     l2867:
  5425  002CE4  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5426  002CE8  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5427  002CEC  6A03               	clrf	___ftpack@arg+2,c
  5428  002CEE  0E8E               	movlw	142
  5429  002CF0  6E04               	movwf	___ftpack@exp,c
  5430  002CF2  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5431  002CF6  EC71  F013         	call	___ftpack	;wreg free
  5432  002CFA  C001  F009         	movff	?___ftpack,?___awtoft
  5433  002CFE  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5434  002D02  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5435  002D06  D000               	goto	l508
  5436  002D08                     l508:
  5437  002D08  0012               	return		;funcret
  5438  002D0A                     __end_of___awtoft:
  5439                           	opt stack 0
  5440                           tblptru	equ	0xFF8
  5441                           tblptrh	equ	0xFF7
  5442                           tblptrl	equ	0xFF6
  5443                           tablat	equ	0xFF5
  5444                           prodh	equ	0xFF4
  5445                           prodl	equ	0xFF3
  5446                           postinc0	equ	0xFEE
  5447                           wreg	equ	0xFE8
  5448                           postdec1	equ	0xFE5
  5449                           fsr1l	equ	0xFE1
  5450                           postinc2	equ	0xFDE
  5451                           postdec2	equ	0xFDD
  5452                           fsr2h	equ	0xFDA
  5453                           fsr2l	equ	0xFD9
  5454                           status	equ	0xFD8
  5455                           
  5456 ;; *************** function ___ftpack *****************
  5457 ;; Defined at:
  5458 ;;		line 62 in file "E:\XC8\sources\common\float.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  arg             3    0[COMRAM] unsigned um
  5461 ;;  exp             1    3[COMRAM] unsigned char 
  5462 ;;  sign            1    4[COMRAM] unsigned char 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;		None
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  3    0[COMRAM] float 
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5474 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5476 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5477 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;Total ram usage:        8 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; This function calls:
  5481 ;;		Nothing
  5482 ;; This function is called by:
  5483 ;;		___awtoft
  5484 ;;		___ftadd
  5485 ;;		___ftdiv
  5486 ;;		___ftmul
  5487 ;;		___lltoft
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           	psect	text22
  5492  0026E2                     __ptext22:
  5493                           	opt stack 0
  5494  0026E2                     ___ftpack:
  5495                           	opt stack 27
  5496                           
  5497                           ;incstack = 0
  5498  0026E2  5004               	movf	___ftpack@exp,w,c
  5499  0026E4  B4D8               	btfsc	status,2,c
  5500  0026E6  D005               	goto	l1955
  5501  0026E8  5001               	movf	___ftpack@arg,w,c
  5502  0026EA  1002               	iorwf	___ftpack@arg+1,w,c
  5503  0026EC  1003               	iorwf	___ftpack@arg+2,w,c
  5504  0026EE  A4D8               	btfss	status,2,c
  5505  0026F0  D00E               	goto	l1961
  5506  0026F2                     l1955:
  5507  0026F2  0E00               	movlw	0
  5508  0026F4  6E01               	movwf	?___ftpack,c
  5509  0026F6  0E00               	movlw	0
  5510  0026F8  6E02               	movwf	?___ftpack+1,c
  5511  0026FA  0E00               	movlw	0
  5512  0026FC  6E03               	movwf	?___ftpack+2,c
  5513  0026FE  D053               	goto	l615
  5514  002700  D006               	goto	l1961
  5515  002702                     l1959:
  5516  002702  2A04               	incf	___ftpack@exp,f,c
  5517  002704  90D8               	bcf	status,0,c
  5518  002706  3203               	rrcf	___ftpack@arg+2,f,c
  5519  002708  3202               	rrcf	___ftpack@arg+1,f,c
  5520  00270A  3201               	rrcf	___ftpack@arg,f,c
  5521  00270C  D000               	goto	l1961
  5522  00270E                     l1961:
  5523  00270E  0E00               	movlw	0
  5524  002710  1401               	andwf	___ftpack@arg,w,c
  5525  002712  6E06               	movwf	??___ftpack& (0+255),c
  5526  002714  0E00               	movlw	0
  5527  002716  1402               	andwf	___ftpack@arg+1,w,c
  5528  002718  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5529  00271A  0EFE               	movlw	254
  5530  00271C  1403               	andwf	___ftpack@arg+2,w,c
  5531  00271E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5532  002720  5006               	movf	??___ftpack,w,c
  5533  002722  1007               	iorwf	??___ftpack+1,w,c
  5534  002724  1008               	iorwf	??___ftpack+2,w,c
  5535  002726  B4D8               	btfsc	status,2,c
  5536  002728  D00E               	goto	l1967
  5537  00272A  D7EB               	goto	l1959
  5538  00272C  D00C               	goto	l1967
  5539  00272E                     l1963:
  5540  00272E  2A04               	incf	___ftpack@exp,f,c
  5541  002730  0E01               	movlw	1
  5542  002732  2601               	addwf	___ftpack@arg,f,c
  5543  002734  0E00               	movlw	0
  5544  002736  2202               	addwfc	___ftpack@arg+1,f,c
  5545  002738  0E00               	movlw	0
  5546  00273A  2203               	addwfc	___ftpack@arg+2,f,c
  5547  00273C  90D8               	bcf	status,0,c
  5548  00273E  3203               	rrcf	___ftpack@arg+2,f,c
  5549  002740  3202               	rrcf	___ftpack@arg+1,f,c
  5550  002742  3201               	rrcf	___ftpack@arg,f,c
  5551  002744  D000               	goto	l1967
  5552  002746                     l1967:
  5553  002746  0E00               	movlw	0
  5554  002748  1401               	andwf	___ftpack@arg,w,c
  5555  00274A  6E06               	movwf	??___ftpack& (0+255),c
  5556  00274C  0E00               	movlw	0
  5557  00274E  1402               	andwf	___ftpack@arg+1,w,c
  5558  002750  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5559  002752  0EFF               	movlw	255
  5560  002754  1403               	andwf	___ftpack@arg+2,w,c
  5561  002756  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5562  002758  5006               	movf	??___ftpack,w,c
  5563  00275A  1007               	iorwf	??___ftpack+1,w,c
  5564  00275C  1008               	iorwf	??___ftpack+2,w,c
  5565  00275E  B4D8               	btfsc	status,2,c
  5566  002760  D008               	goto	l1971
  5567  002762  D7E5               	goto	l1963
  5568  002764  D006               	goto	l1971
  5569  002766                     l1969:
  5570  002766  0604               	decf	___ftpack@exp,f,c
  5571  002768  90D8               	bcf	status,0,c
  5572  00276A  3601               	rlcf	___ftpack@arg,f,c
  5573  00276C  3602               	rlcf	___ftpack@arg+1,f,c
  5574  00276E  3603               	rlcf	___ftpack@arg+2,f,c
  5575  002770  D000               	goto	l1971
  5576  002772                     l1971:
  5577  002772  BE02               	btfsc	___ftpack@arg+1,7,c
  5578  002774  D004               	goto	l626
  5579  002776  0E02               	movlw	2
  5580  002778  6004               	cpfslt	___ftpack@exp,c
  5581  00277A  D7F5               	goto	l1969
  5582  00277C  D000               	goto	l626
  5583  00277E                     l626:
  5584  00277E  B004               	btfsc	___ftpack@exp,0,c
  5585  002780  D002               	goto	l1977
  5586  002782  9E02               	bcf	___ftpack@arg+1,7,c
  5587  002784  D000               	goto	l1977
  5588  002786                     l1977:
  5589  002786  90D8               	bcf	status,0,c
  5590  002788  3204               	rrcf	___ftpack@exp,f,c
  5591  00278A  5004               	movf	___ftpack@exp,w,c
  5592  00278C  1203               	iorwf	___ftpack@arg+2,f,c
  5593  00278E  5005               	movf	___ftpack@sign,w,c
  5594  002790  B4D8               	btfsc	status,2,c
  5595  002792  D002               	goto	l1983
  5596  002794  8E03               	bsf	___ftpack@arg+2,7,c
  5597  002796  D000               	goto	l1983
  5598  002798                     l1983:
  5599  002798  C001  F001         	movff	___ftpack@arg,?___ftpack
  5600  00279C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5601  0027A0  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5602  0027A4  D000               	goto	l615
  5603  0027A6                     l615:
  5604  0027A6  0012               	return		;funcret
  5605  0027A8                     __end_of___ftpack:
  5606                           	opt stack 0
  5607                           tblptru	equ	0xFF8
  5608                           tblptrh	equ	0xFF7
  5609                           tblptrl	equ	0xFF6
  5610                           tablat	equ	0xFF5
  5611                           prodh	equ	0xFF4
  5612                           prodl	equ	0xFF3
  5613                           postinc0	equ	0xFEE
  5614                           wreg	equ	0xFE8
  5615                           postdec1	equ	0xFE5
  5616                           fsr1l	equ	0xFE1
  5617                           postinc2	equ	0xFDE
  5618                           postdec2	equ	0xFDD
  5619                           fsr2h	equ	0xFDA
  5620                           fsr2l	equ	0xFD9
  5621                           status	equ	0xFD8
  5622                           
  5623 ;; *************** function _WAIT_1_SEC *****************
  5624 ;; Defined at:
  5625 ;;		line 28 in file "Lab4p1.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;		None
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  j               2    0[COMRAM] int 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;		None               void
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;Total ram usage:        2 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_main
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text23
  5653  002DE4                     __ptext23:
  5654                           	opt stack 0
  5655  002DE4                     _WAIT_1_SEC:
  5656                           	opt stack 30
  5657                           
  5658                           ;Lab4p1.c: 30: for (int j=0; j<0xffff; j++);
  5659                           
  5660                           ;incstack = 0
  5661  002DE4  0E00               	movlw	0
  5662  002DE6  6E02               	movwf	WAIT_1_SEC@j+1,c
  5663  002DE8  0E00               	movlw	0
  5664  002DEA  6E01               	movwf	WAIT_1_SEC@j,c
  5665  002DEC                     l1535:
  5666  002DEC  2801               	incf	WAIT_1_SEC@j,w,c
  5667  002DEE  E105               	bnz	l1539
  5668  002DF0  2802               	incf	WAIT_1_SEC@j+1,w,c
  5669  002DF2  B4D8               	btfsc	status,2,c
  5670  002DF4  D006               	goto	l59
  5671  002DF6  D001               	goto	l1539
  5672  002DF8  D004               	goto	l59
  5673  002DFA                     l1539:
  5674  002DFA  4A01               	infsnz	WAIT_1_SEC@j,f,c
  5675  002DFC  2A02               	incf	WAIT_1_SEC@j+1,f,c
  5676  002DFE  D7F6               	goto	l1535
  5677  002E00  D7FC               	goto	l1539
  5678  002E02                     l59:
  5679  002E02  0012               	return		;funcret
  5680  002E04                     __end_of_WAIT_1_SEC:
  5681                           	opt stack 0
  5682                           tblptru	equ	0xFF8
  5683                           tblptrh	equ	0xFF7
  5684                           tblptrl	equ	0xFF6
  5685                           tablat	equ	0xFF5
  5686                           prodh	equ	0xFF4
  5687                           prodl	equ	0xFF3
  5688                           postinc0	equ	0xFEE
  5689                           wreg	equ	0xFE8
  5690                           postdec1	equ	0xFE5
  5691                           fsr1l	equ	0xFE1
  5692                           postinc2	equ	0xFDE
  5693                           postdec2	equ	0xFDD
  5694                           fsr2h	equ	0xFDA
  5695                           fsr2l	equ	0xFD9
  5696                           status	equ	0xFD8
  5697                           
  5698 ;; *************** function _Select_ADC_Channel *****************
  5699 ;; Defined at:
  5700 ;;		line 64 in file "Lab4p1.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;  channel         1    wreg     unsigned char 
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  channel         1    0[COMRAM] unsigned char 
  5705 ;; Return value:  Size  Location     Type
  5706 ;;		None               void
  5707 ;; Registers used:
  5708 ;;		wreg, status,2, status,0, prodl, prodh
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5718 ;;Total ram usage:        1 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_main
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text24
  5728  002E60                     __ptext24:
  5729                           	opt stack 0
  5730  002E60                     _Select_ADC_Channel:
  5731                           	opt stack 30
  5732                           
  5733                           ;incstack = 0
  5734                           ;Select_ADC_Channel@channel stored from wreg
  5735  002E60  6E01               	movwf	Select_ADC_Channel@channel,c
  5736                           
  5737                           ;Lab4p1.c: 66: ADCON0 = (channel*4) + 1;
  5738  002E62  5001               	movf	Select_ADC_Channel@channel,w,c
  5739  002E64  0D04               	mullw	4
  5740  002E66  28F3               	incf	prodl,w,c
  5741  002E68  6EC2               	movwf	4034,c	;volatile
  5742  002E6A  0012               	return		;funcret
  5743  002E6C                     __end_of_Select_ADC_Channel:
  5744                           	opt stack 0
  5745                           tblptru	equ	0xFF8
  5746                           tblptrh	equ	0xFF7
  5747                           tblptrl	equ	0xFF6
  5748                           tablat	equ	0xFF5
  5749                           prodh	equ	0xFF4
  5750                           prodl	equ	0xFF3
  5751                           postinc0	equ	0xFEE
  5752                           wreg	equ	0xFE8
  5753                           postdec1	equ	0xFE5
  5754                           fsr1l	equ	0xFE1
  5755                           postinc2	equ	0xFDE
  5756                           postdec2	equ	0xFDD
  5757                           fsr2h	equ	0xFDA
  5758                           fsr2l	equ	0xFD9
  5759                           status	equ	0xFD8
  5760                           
  5761 ;; *************** function _Init_ADC *****************
  5762 ;; Defined at:
  5763 ;;		line 49 in file "Lab4p1.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;		None
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;		None
  5768 ;; Return value:  Size  Location     Type
  5769 ;;		None               void
  5770 ;; Registers used:
  5771 ;;		wreg, status,2
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5781 ;;Total ram usage:        0 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_main
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text25
  5791  002E52                     __ptext25:
  5792                           	opt stack 0
  5793  002E52                     _Init_ADC:
  5794                           	opt stack 30
  5795                           
  5796                           ;Lab4p1.c: 51: ADCON0 = 0x01;
  5797                           
  5798                           ;incstack = 0
  5799  002E52  0E01               	movlw	1
  5800  002E54  6EC2               	movwf	4034,c	;volatile
  5801                           
  5802                           ;Lab4p1.c: 52: ADCON1 = 0x1B;
  5803  002E56  0E1B               	movlw	27
  5804  002E58  6EC1               	movwf	4033,c	;volatile
  5805                           
  5806                           ;Lab4p1.c: 53: ADCON2 = 0xA9;
  5807  002E5A  0EA9               	movlw	169
  5808  002E5C  6EC0               	movwf	4032,c	;volatile
  5809  002E5E  0012               	return		;funcret
  5810  002E60                     __end_of_Init_ADC:
  5811                           	opt stack 0
  5812                           tblptru	equ	0xFF8
  5813                           tblptrh	equ	0xFF7
  5814                           tblptrl	equ	0xFF6
  5815                           tablat	equ	0xFF5
  5816                           prodh	equ	0xFF4
  5817                           prodl	equ	0xFF3
  5818                           postinc0	equ	0xFEE
  5819                           wreg	equ	0xFE8
  5820                           postdec1	equ	0xFE5
  5821                           fsr1l	equ	0xFE1
  5822                           postinc2	equ	0xFDE
  5823                           postdec2	equ	0xFDD
  5824                           fsr2h	equ	0xFDA
  5825                           fsr2l	equ	0xFD9
  5826                           status	equ	0xFD8
  5827                           
  5828 ;; *************** function _Get_Full_ADC *****************
  5829 ;; Defined at:
  5830 ;;		line 39 in file "Lab4p1.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;		None
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  result          2    4[COMRAM] int 
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  2    0[COMRAM] unsigned int 
  5837 ;; Registers used:
  5838 ;;		wreg, status,2, status,0
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5845 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5846 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5847 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5848 ;;Total ram usage:        6 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; This function calls:
  5851 ;;		Nothing
  5852 ;; This function is called by:
  5853 ;;		_main
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           	psect	text26
  5858  002D9A                     __ptext26:
  5859                           	opt stack 0
  5860  002D9A                     _Get_Full_ADC:
  5861                           	opt stack 30
  5862                           
  5863                           ;Lab4p1.c: 41: int result;
  5864                           ;Lab4p1.c: 42: ADCON0bits.GO = 1;
  5865                           
  5866                           ;incstack = 0
  5867  002D9A  82C2               	bsf	4034,1,c	;volatile
  5868                           
  5869                           ;Lab4p1.c: 43: while(ADCON0bits.DONE==1);
  5870  002D9C  D000               	goto	l68
  5871  002D9E                     l68:
  5872  002D9E  B2C2               	btfsc	4034,1,c	;volatile
  5873  002DA0  D7FE               	goto	l68
  5874                           
  5875                           ;Lab4p1.c: 44: result = (ADRESH * 0x100) + ADRESL;
  5876  002DA2  50C4               	movf	4036,w,c	;volatile
  5877  002DA4  6E04               	movwf	(??_Get_Full_ADC+1)& (0+255),c
  5878  002DA6  6A03               	clrf	??_Get_Full_ADC& (0+255),c
  5879  002DA8  50C3               	movf	4035,w,c	;volatile
  5880  002DAA  2403               	addwf	??_Get_Full_ADC,w,c
  5881  002DAC  6E05               	movwf	Get_Full_ADC@result,c
  5882  002DAE  0E00               	movlw	0
  5883  002DB0  2004               	addwfc	??_Get_Full_ADC+1,w,c
  5884  002DB2  6E06               	movwf	Get_Full_ADC@result+1,c
  5885                           
  5886                           ;Lab4p1.c: 46: return result;
  5887  002DB4  C005  F001         	movff	Get_Full_ADC@result,?_Get_Full_ADC
  5888  002DB8  C006  F002         	movff	Get_Full_ADC@result+1,?_Get_Full_ADC+1
  5889  002DBC  D000               	goto	l71
  5890  002DBE                     l71:
  5891  002DBE  0012               	return		;funcret
  5892  002DC0                     __end_of_Get_Full_ADC:
  5893                           	opt stack 0
  5894                           tblptru	equ	0xFF8
  5895                           tblptrh	equ	0xFF7
  5896                           tblptrl	equ	0xFF6
  5897                           tablat	equ	0xFF5
  5898                           prodh	equ	0xFF4
  5899                           prodl	equ	0xFF3
  5900                           postinc0	equ	0xFEE
  5901                           wreg	equ	0xFE8
  5902                           postdec1	equ	0xFE5
  5903                           fsr1l	equ	0xFE1
  5904                           postinc2	equ	0xFDE
  5905                           postdec2	equ	0xFDD
  5906                           fsr2h	equ	0xFDA
  5907                           fsr2l	equ	0xFD9
  5908                           status	equ	0xFD8
  5909                           
  5910 ;; *************** function _DO_DISPLAY_D3 *****************
  5911 ;; Defined at:
  5912 ;;		line 191 in file "Lab4p1.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  mv              2    0[COMRAM] int 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;		None
  5917 ;; Return value:  Size  Location     Type
  5918 ;;		None               void
  5919 ;; Registers used:
  5920 ;;		wreg, status,2, status,0
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;Total ram usage:        2 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		_main
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text27
  5940  002C8E                     __ptext27:
  5941                           	opt stack 0
  5942  002C8E                     _DO_DISPLAY_D3:
  5943                           	opt stack 30
  5944                           
  5945                           ;Lab4p1.c: 193: if (mv < 2500)
  5946                           
  5947                           ;incstack = 0
  5948  002C8E  BE02               	btfsc	DO_DISPLAY_D3@mv+1,7,c
  5949  002C90  D006               	goto	l2619
  5950  002C92  0EC4               	movlw	196
  5951  002C94  5C01               	subwf	DO_DISPLAY_D3@mv,w,c
  5952  002C96  0E09               	movlw	9
  5953  002C98  5802               	subwfb	DO_DISPLAY_D3@mv+1,w,c
  5954  002C9A  B0D8               	btfsc	status,0,c
  5955  002C9C  D002               	goto	l2621
  5956  002C9E                     l2619:
  5957                           
  5958                           ;Lab4p1.c: 194: {
  5959                           ;Lab4p1.c: 195: PORTA = 0x01<<4;
  5960  002C9E  0E10               	movlw	16
  5961  002CA0  D013               	goto	L9
  5962  002CA2                     l2621:
  5963                           
  5964                           ;Lab4p1.c: 197: else if (mv >= 2500 && mv < 3400)
  5965  002CA2  BE02               	btfsc	DO_DISPLAY_D3@mv+1,7,c
  5966  002CA4  D010               	goto	l2627
  5967  002CA6  0EC4               	movlw	196
  5968  002CA8  5C01               	subwf	DO_DISPLAY_D3@mv,w,c
  5969  002CAA  0E09               	movlw	9
  5970  002CAC  5802               	subwfb	DO_DISPLAY_D3@mv+1,w,c
  5971  002CAE  A0D8               	btfss	status,0,c
  5972  002CB0  D00A               	goto	l2627
  5973  002CB2  BE02               	btfsc	DO_DISPLAY_D3@mv+1,7,c
  5974  002CB4  D006               	goto	l2625
  5975  002CB6  0E48               	movlw	72
  5976  002CB8  5C01               	subwf	DO_DISPLAY_D3@mv,w,c
  5977  002CBA  0E0D               	movlw	13
  5978  002CBC  5802               	subwfb	DO_DISPLAY_D3@mv+1,w,c
  5979  002CBE  B0D8               	btfsc	status,0,c
  5980  002CC0  D002               	goto	l2627
  5981  002CC2                     l2625:
  5982                           
  5983                           ;Lab4p1.c: 198: {
  5984                           ;Lab4p1.c: 199: PORTA = 0x02<<4;
  5985  002CC2  0E20               	movlw	32
  5986  002CC4  D001               	goto	L9
  5987  002CC6                     l2627:
  5988                           
  5989                           ;Lab4p1.c: 201: else
  5990                           ;Lab4p1.c: 202: {
  5991                           ;Lab4p1.c: 203: PORTA = 0x03<<4;
  5992  002CC6  0E30               	movlw	48
  5993  002CC8                     L9:
  5994  002CC8  6E80               	movwf	3968,c	;volatile
  5995  002CCA  D000               	goto	l156
  5996  002CCC                     l156:
  5997  002CCC  0012               	return		;funcret
  5998  002CCE                     __end_of_DO_DISPLAY_D3:
  5999                           	opt stack 0
  6000                           tblptru	equ	0xFF8
  6001                           tblptrh	equ	0xFF7
  6002                           tblptrl	equ	0xFF6
  6003                           tablat	equ	0xFF5
  6004                           prodh	equ	0xFF4
  6005                           prodl	equ	0xFF3
  6006                           postinc0	equ	0xFEE
  6007                           wreg	equ	0xFE8
  6008                           postdec1	equ	0xFE5
  6009                           fsr1l	equ	0xFE1
  6010                           postinc2	equ	0xFDE
  6011                           postdec2	equ	0xFDD
  6012                           fsr2h	equ	0xFDA
  6013                           fsr2l	equ	0xFD9
  6014                           status	equ	0xFD8
  6015                           
  6016 ;; *************** function _DO_DISPLAY_D2 *****************
  6017 ;; Defined at:
  6018 ;;		line 182 in file "Lab4p1.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  T               2   14[COMRAM] int 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;		None
  6023 ;; Return value:  Size  Location     Type
  6024 ;;		None               void
  6025 ;; Registers used:
  6026 ;;		wreg, status,2, status,0, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;Total ram usage:        2 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; Hardware stack levels required when called:    1
  6039 ;; This function calls:
  6040 ;;		_D2_White
  6041 ;;		___awdiv
  6042 ;; This function is called by:
  6043 ;;		_main
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           	psect	text28
  6048  002D40                     __ptext28:
  6049                           	opt stack 0
  6050  002D40                     _DO_DISPLAY_D2:
  6051                           	opt stack 29
  6052                           
  6053                           ;Lab4p1.c: 184: if (T > 70)
  6054                           
  6055                           ;incstack = 0
  6056  002D40  BE10               	btfsc	DO_DISPLAY_D2@T+1,7,c
  6057  002D42  D009               	goto	l2615
  6058  002D44  5010               	movf	DO_DISPLAY_D2@T+1,w,c
  6059  002D46  E104               	bnz	u2800
  6060  002D48  0E47               	movlw	71
  6061  002D4A  5C0F               	subwf	DO_DISPLAY_D2@T,w,c
  6062  002D4C  A0D8               	btfss	status,0,c
  6063  002D4E  D003               	goto	l2615
  6064  002D50                     u2800:
  6065                           
  6066                           ;Lab4p1.c: 185: D2_White();
  6067  002D50  EC36  F017         	call	_D2_White	;wreg free
  6068  002D54  D00D               	goto	l149
  6069  002D56                     l2615:
  6070                           
  6071                           ;Lab4p1.c: 186: else
  6072                           ;Lab4p1.c: 187: PORTB = T/10;
  6073  002D56  C00F  F007         	movff	DO_DISPLAY_D2@T,___awdiv@dividend
  6074  002D5A  C010  F008         	movff	DO_DISPLAY_D2@T+1,___awdiv@dividend+1
  6075  002D5E  0E00               	movlw	0
  6076  002D60  6E0A               	movwf	___awdiv@divisor+1,c
  6077  002D62  0E0A               	movlw	10
  6078  002D64  6E09               	movwf	___awdiv@divisor,c
  6079  002D66  EC6F  F014         	call	___awdiv	;wreg free
  6080  002D6A  5007               	movf	?___awdiv,w,c
  6081  002D6C  6E81               	movwf	3969,c	;volatile
  6082  002D6E  D000               	goto	l149
  6083  002D70                     l149:
  6084  002D70  0012               	return		;funcret
  6085  002D72                     __end_of_DO_DISPLAY_D2:
  6086                           	opt stack 0
  6087                           tblptru	equ	0xFF8
  6088                           tblptrh	equ	0xFF7
  6089                           tblptrl	equ	0xFF6
  6090                           tablat	equ	0xFF5
  6091                           prodh	equ	0xFF4
  6092                           prodl	equ	0xFF3
  6093                           postinc0	equ	0xFEE
  6094                           wreg	equ	0xFE8
  6095                           postdec1	equ	0xFE5
  6096                           fsr1l	equ	0xFE1
  6097                           postinc2	equ	0xFDE
  6098                           postdec2	equ	0xFDD
  6099                           fsr2h	equ	0xFDA
  6100                           fsr2l	equ	0xFD9
  6101                           status	equ	0xFD8
  6102                           
  6103 ;; *************** function ___awdiv *****************
  6104 ;; Defined at:
  6105 ;;		line 8 in file "E:\XC8\sources\common\awdiv.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  dividend        2    6[COMRAM] int 
  6108 ;;  divisor         2    8[COMRAM] int 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;  quotient        2   12[COMRAM] int 
  6111 ;;  sign            1   11[COMRAM] unsigned char 
  6112 ;;  counter         1   10[COMRAM] unsigned char 
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  2    6[COMRAM] int 
  6115 ;; Registers used:
  6116 ;;		wreg, status,2, status,0
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6125 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6126 ;;Total ram usage:        8 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_DO_DISPLAY_D2
  6132 ;;		_main
  6133 ;;		_fround
  6134 ;;		_scale
  6135 ;;		_printf
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text29
  6140  0028DE                     __ptext29:
  6141                           	opt stack 0
  6142  0028DE                     ___awdiv:
  6143                           	opt stack 28
  6144                           
  6145                           ;incstack = 0
  6146  0028DE  0E00               	movlw	0
  6147  0028E0  6E0C               	movwf	___awdiv@sign,c
  6148  0028E2  AE0A               	btfss	___awdiv@divisor+1,7,c
  6149  0028E4  D007               	goto	l2119
  6150  0028E6  6C09               	negf	___awdiv@divisor,c
  6151  0028E8  1E0A               	comf	___awdiv@divisor+1,f,c
  6152  0028EA  B0D8               	btfsc	status,0,c
  6153  0028EC  2A0A               	incf	___awdiv@divisor+1,f,c
  6154  0028EE  0E01               	movlw	1
  6155  0028F0  6E0C               	movwf	___awdiv@sign,c
  6156  0028F2  D000               	goto	l2119
  6157  0028F4                     l2119:
  6158  0028F4  AE08               	btfss	___awdiv@dividend+1,7,c
  6159  0028F6  D007               	goto	l2125
  6160  0028F8  6C07               	negf	___awdiv@dividend,c
  6161  0028FA  1E08               	comf	___awdiv@dividend+1,f,c
  6162  0028FC  B0D8               	btfsc	status,0,c
  6163  0028FE  2A08               	incf	___awdiv@dividend+1,f,c
  6164  002900  0E01               	movlw	1
  6165  002902  1A0C               	xorwf	___awdiv@sign,f,c
  6166  002904  D000               	goto	l2125
  6167  002906                     l2125:
  6168  002906  0E00               	movlw	0
  6169  002908  6E0E               	movwf	___awdiv@quotient+1,c
  6170  00290A  0E00               	movlw	0
  6171  00290C  6E0D               	movwf	___awdiv@quotient,c
  6172  00290E  5009               	movf	___awdiv@divisor,w,c
  6173  002910  100A               	iorwf	___awdiv@divisor+1,w,c
  6174  002912  B4D8               	btfsc	status,2,c
  6175  002914  D021               	goto	l2147
  6176  002916  0E01               	movlw	1
  6177  002918  6E0B               	movwf	___awdiv@counter,c
  6178  00291A  D005               	goto	l2133
  6179  00291C                     l2131:
  6180  00291C  90D8               	bcf	status,0,c
  6181  00291E  3609               	rlcf	___awdiv@divisor,f,c
  6182  002920  360A               	rlcf	___awdiv@divisor+1,f,c
  6183  002922  2A0B               	incf	___awdiv@counter,f,c
  6184  002924  D000               	goto	l2133
  6185  002926                     l2133:
  6186  002926  BE0A               	btfsc	___awdiv@divisor+1,7,c
  6187  002928  D002               	goto	l2135
  6188  00292A  D7F8               	goto	l2131
  6189  00292C  D000               	goto	l2135
  6190  00292E                     l2135:
  6191  00292E  90D8               	bcf	status,0,c
  6192  002930  360D               	rlcf	___awdiv@quotient,f,c
  6193  002932  360E               	rlcf	___awdiv@quotient+1,f,c
  6194  002934  5009               	movf	___awdiv@divisor,w,c
  6195  002936  5C07               	subwf	___awdiv@dividend,w,c
  6196  002938  500A               	movf	___awdiv@divisor+1,w,c
  6197  00293A  5808               	subwfb	___awdiv@dividend+1,w,c
  6198  00293C  A0D8               	btfss	status,0,c
  6199  00293E  D006               	goto	l2143
  6200  002940  5009               	movf	___awdiv@divisor,w,c
  6201  002942  5E07               	subwf	___awdiv@dividend,f,c
  6202  002944  500A               	movf	___awdiv@divisor+1,w,c
  6203  002946  5A08               	subwfb	___awdiv@dividend+1,f,c
  6204  002948  800D               	bsf	___awdiv@quotient,0,c
  6205  00294A  D000               	goto	l2143
  6206  00294C                     l2143:
  6207  00294C  90D8               	bcf	status,0,c
  6208  00294E  320A               	rrcf	___awdiv@divisor+1,f,c
  6209  002950  3209               	rrcf	___awdiv@divisor,f,c
  6210  002952  2E0B               	decfsz	___awdiv@counter,f,c
  6211  002954  D7EC               	goto	l2135
  6212  002956  D000               	goto	l2147
  6213  002958                     l2147:
  6214  002958  500C               	movf	___awdiv@sign,w,c
  6215  00295A  B4D8               	btfsc	status,2,c
  6216  00295C  D005               	goto	l2151
  6217  00295E  6C0D               	negf	___awdiv@quotient,c
  6218  002960  1E0E               	comf	___awdiv@quotient+1,f,c
  6219  002962  B0D8               	btfsc	status,0,c
  6220  002964  2A0E               	incf	___awdiv@quotient+1,f,c
  6221  002966  D000               	goto	l2151
  6222  002968                     l2151:
  6223  002968  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  6224  00296C  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  6225  002970  D000               	goto	l483
  6226  002972                     l483:
  6227  002972  0012               	return		;funcret
  6228  002974                     __end_of___awdiv:
  6229                           	opt stack 0
  6230                           tblptru	equ	0xFF8
  6231                           tblptrh	equ	0xFF7
  6232                           tblptrl	equ	0xFF6
  6233                           tablat	equ	0xFF5
  6234                           prodh	equ	0xFF4
  6235                           prodl	equ	0xFF3
  6236                           postinc0	equ	0xFEE
  6237                           wreg	equ	0xFE8
  6238                           postdec1	equ	0xFE5
  6239                           fsr1l	equ	0xFE1
  6240                           postinc2	equ	0xFDE
  6241                           postdec2	equ	0xFDD
  6242                           fsr2h	equ	0xFDA
  6243                           fsr2l	equ	0xFD9
  6244                           status	equ	0xFD8
  6245                           
  6246 ;; *************** function _D2_White *****************
  6247 ;; Defined at:
  6248 ;;		line 165 in file "Lab4p1.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;		None
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;		None               void
  6255 ;; Registers used:
  6256 ;;		None
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;Total ram usage:        0 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_DO_DISPLAY_D2
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text30
  6276  002E6C                     __ptext30:
  6277                           	opt stack 0
  6278  002E6C                     _D2_White:
  6279                           	opt stack 29
  6280                           
  6281                           ;Lab4p1.c: 167: PORTBbits.RB2 = 1;
  6282                           
  6283                           ;incstack = 0
  6284  002E6C  8481               	bsf	3969,2,c	;volatile
  6285                           
  6286                           ;Lab4p1.c: 168: PORTBbits.RB1 = 1;
  6287  002E6E  8281               	bsf	3969,1,c	;volatile
  6288                           
  6289                           ;Lab4p1.c: 169: PORTBbits.RB0 = 1;
  6290  002E70  8081               	bsf	3969,0,c	;volatile
  6291  002E72  0012               	return		;funcret
  6292  002E74                     __end_of_D2_White:
  6293                           	opt stack 0
  6294                           tblptru	equ	0xFF8
  6295                           tblptrh	equ	0xFF7
  6296                           tblptrl	equ	0xFF6
  6297                           tablat	equ	0xFF5
  6298                           prodh	equ	0xFF4
  6299                           prodl	equ	0xFF3
  6300                           postinc0	equ	0xFEE
  6301                           wreg	equ	0xFE8
  6302                           postdec1	equ	0xFE5
  6303                           fsr1l	equ	0xFE1
  6304                           postinc2	equ	0xFDE
  6305                           postdec2	equ	0xFDD
  6306                           fsr2h	equ	0xFDA
  6307                           fsr2l	equ	0xFD9
  6308                           status	equ	0xFD8
  6309                           
  6310 ;; *************** function _DO_DISPLAY_D1 *****************
  6311 ;; Defined at:
  6312 ;;		line 173 in file "Lab4p1.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;  T               2    0[COMRAM] int 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;		None
  6317 ;; Return value:  Size  Location     Type
  6318 ;;		None               void
  6319 ;; Registers used:
  6320 ;;		wreg, status,2, status,0, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;Total ram usage:        2 bytes
  6331 ;; Hardware stack levels used:    1
  6332 ;; Hardware stack levels required when called:    1
  6333 ;; This function calls:
  6334 ;;		_D1_Blue
  6335 ;;		_D1_Green
  6336 ;;		_D1_None
  6337 ;;		_D1_Red
  6338 ;;		_D1_White
  6339 ;; This function is called by:
  6340 ;;		_main
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text31
  6345  0027A8                     __ptext31:
  6346                           	opt stack 0
  6347  0027A8                     _DO_DISPLAY_D1:
  6348                           	opt stack 29
  6349                           
  6350                           ;Lab4p1.c: 175: if(T < 45) D1_None();
  6351                           
  6352                           ;incstack = 0
  6353  0027A8  BE02               	btfsc	DO_DISPLAY_D1@T+1,7,c
  6354  0027AA  D006               	goto	l2587
  6355  0027AC  5002               	movf	DO_DISPLAY_D1@T+1,w,c
  6356  0027AE  E107               	bnz	l2589
  6357  0027B0  0E2D               	movlw	45
  6358  0027B2  5C01               	subwf	DO_DISPLAY_D1@T,w,c
  6359  0027B4  B0D8               	btfsc	status,0,c
  6360  0027B6  D003               	goto	l2589
  6361  0027B8                     l2587:
  6362  0027B8  EC42  F017         	call	_D1_None	;wreg free
  6363  0027BC  D044               	goto	l144
  6364  0027BE                     l2589:
  6365                           
  6366                           ;Lab4p1.c: 176: else if (T >= 46 && T < 56) D1_Red();
  6367  0027BE  BE02               	btfsc	DO_DISPLAY_D1@T+1,7,c
  6368  0027C0  D011               	goto	l2595
  6369  0027C2  5002               	movf	DO_DISPLAY_D1@T+1,w,c
  6370  0027C4  E104               	bnz	u2730
  6371  0027C6  0E2E               	movlw	46
  6372  0027C8  5C01               	subwf	DO_DISPLAY_D1@T,w,c
  6373  0027CA  A0D8               	btfss	status,0,c
  6374  0027CC  D00B               	goto	l2595
  6375  0027CE                     u2730:
  6376  0027CE  BE02               	btfsc	DO_DISPLAY_D1@T+1,7,c
  6377  0027D0  D006               	goto	l2593
  6378  0027D2  5002               	movf	DO_DISPLAY_D1@T+1,w,c
  6379  0027D4  E107               	bnz	l2595
  6380  0027D6  0E38               	movlw	56
  6381  0027D8  5C01               	subwf	DO_DISPLAY_D1@T,w,c
  6382  0027DA  B0D8               	btfsc	status,0,c
  6383  0027DC  D003               	goto	l2595
  6384  0027DE                     l2593:
  6385  0027DE  EC3E  F017         	call	_D1_Red	;wreg free
  6386  0027E2  D031               	goto	l144
  6387  0027E4                     l2595:
  6388                           
  6389                           ;Lab4p1.c: 177: else if (T >= 56 && T < 66) D1_Green();
  6390  0027E4  BE02               	btfsc	DO_DISPLAY_D1@T+1,7,c
  6391  0027E6  D011               	goto	l2601
  6392  0027E8  5002               	movf	DO_DISPLAY_D1@T+1,w,c
  6393  0027EA  E104               	bnz	u2750
  6394  0027EC  0E38               	movlw	56
  6395  0027EE  5C01               	subwf	DO_DISPLAY_D1@T,w,c
  6396  0027F0  A0D8               	btfss	status,0,c
  6397  0027F2  D00B               	goto	l2601
  6398  0027F4                     u2750:
  6399  0027F4  BE02               	btfsc	DO_DISPLAY_D1@T+1,7,c
  6400  0027F6  D006               	goto	l2599
  6401  0027F8  5002               	movf	DO_DISPLAY_D1@T+1,w,c
  6402  0027FA  E107               	bnz	l2601
  6403  0027FC  0E42               	movlw	66
  6404  0027FE  5C01               	subwf	DO_DISPLAY_D1@T,w,c
  6405  002800  B0D8               	btfsc	status,0,c
  6406  002802  D003               	goto	l2601
  6407  002804                     l2599:
  6408  002804  EC46  F017         	call	_D1_Green	;wreg free
  6409  002808  D01E               	goto	l144
  6410  00280A                     l2601:
  6411                           
  6412                           ;Lab4p1.c: 178: else if (T >= 66 && T < 76) D1_Blue();
  6413  00280A  BE02               	btfsc	DO_DISPLAY_D1@T+1,7,c
  6414  00280C  D011               	goto	l2607
  6415  00280E  5002               	movf	DO_DISPLAY_D1@T+1,w,c
  6416  002810  E104               	bnz	u2770
  6417  002812  0E42               	movlw	66
  6418  002814  5C01               	subwf	DO_DISPLAY_D1@T,w,c
  6419  002816  A0D8               	btfss	status,0,c
  6420  002818  D00B               	goto	l2607
  6421  00281A                     u2770:
  6422  00281A  BE02               	btfsc	DO_DISPLAY_D1@T+1,7,c
  6423  00281C  D006               	goto	l2605
  6424  00281E  5002               	movf	DO_DISPLAY_D1@T+1,w,c
  6425  002820  E107               	bnz	l2607
  6426  002822  0E4C               	movlw	76
  6427  002824  5C01               	subwf	DO_DISPLAY_D1@T,w,c
  6428  002826  B0D8               	btfsc	status,0,c
  6429  002828  D003               	goto	l2607
  6430  00282A                     l2605:
  6431  00282A  EC4A  F017         	call	_D1_Blue	;wreg free
  6432  00282E  D00B               	goto	l144
  6433  002830                     l2607:
  6434                           
  6435                           ;Lab4p1.c: 179: else if (T >= 76) D1_White();
  6436  002830  BE02               	btfsc	DO_DISPLAY_D1@T+1,7,c
  6437  002832  D009               	goto	l144
  6438  002834  5002               	movf	DO_DISPLAY_D1@T+1,w,c
  6439  002836  E104               	bnz	u2790
  6440  002838  0E4C               	movlw	76
  6441  00283A  5C01               	subwf	DO_DISPLAY_D1@T,w,c
  6442  00283C  A0D8               	btfss	status,0,c
  6443  00283E  D003               	goto	l144
  6444  002840                     u2790:
  6445  002840  EC3A  F017         	call	_D1_White	;wreg free
  6446  002844  D000               	goto	l144
  6447  002846                     l144:
  6448  002846  0012               	return		;funcret
  6449  002848                     __end_of_DO_DISPLAY_D1:
  6450                           	opt stack 0
  6451                           tblptru	equ	0xFF8
  6452                           tblptrh	equ	0xFF7
  6453                           tblptrl	equ	0xFF6
  6454                           tablat	equ	0xFF5
  6455                           prodh	equ	0xFF4
  6456                           prodl	equ	0xFF3
  6457                           postinc0	equ	0xFEE
  6458                           wreg	equ	0xFE8
  6459                           postdec1	equ	0xFE5
  6460                           fsr1l	equ	0xFE1
  6461                           postinc2	equ	0xFDE
  6462                           postdec2	equ	0xFDD
  6463                           fsr2h	equ	0xFDA
  6464                           fsr2l	equ	0xFD9
  6465                           status	equ	0xFD8
  6466                           
  6467 ;; *************** function _D1_White *****************
  6468 ;; Defined at:
  6469 ;;		line 116 in file "Lab4p1.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;		None
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;		None
  6474 ;; Return value:  Size  Location     Type
  6475 ;;		None               void
  6476 ;; Registers used:
  6477 ;;		None
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6487 ;;Total ram usage:        0 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; This function calls:
  6490 ;;		Nothing
  6491 ;; This function is called by:
  6492 ;;		_DO_DISPLAY_D1
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text32
  6497  002E74                     __ptext32:
  6498                           	opt stack 0
  6499  002E74                     _D1_White:
  6500                           	opt stack 29
  6501                           
  6502                           ;Lab4p1.c: 118: PORTBbits.RB5 = 1;
  6503                           
  6504                           ;incstack = 0
  6505  002E74  8A81               	bsf	3969,5,c	;volatile
  6506                           
  6507                           ;Lab4p1.c: 119: PORTBbits.RB4 = 1;
  6508  002E76  8881               	bsf	3969,4,c	;volatile
  6509                           
  6510                           ;Lab4p1.c: 120: PORTBbits.RB3 = 1;
  6511  002E78  8681               	bsf	3969,3,c	;volatile
  6512  002E7A  0012               	return		;funcret
  6513  002E7C                     __end_of_D1_White:
  6514                           	opt stack 0
  6515                           tblptru	equ	0xFF8
  6516                           tblptrh	equ	0xFF7
  6517                           tblptrl	equ	0xFF6
  6518                           tablat	equ	0xFF5
  6519                           prodh	equ	0xFF4
  6520                           prodl	equ	0xFF3
  6521                           postinc0	equ	0xFEE
  6522                           wreg	equ	0xFE8
  6523                           postdec1	equ	0xFE5
  6524                           fsr1l	equ	0xFE1
  6525                           postinc2	equ	0xFDE
  6526                           postdec2	equ	0xFDD
  6527                           fsr2h	equ	0xFDA
  6528                           fsr2l	equ	0xFD9
  6529                           status	equ	0xFD8
  6530                           
  6531 ;; *************** function _D1_Red *****************
  6532 ;; Defined at:
  6533 ;;		line 98 in file "Lab4p1.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;		None
  6536 ;; Auto vars:     Size  Location     Type
  6537 ;;		None
  6538 ;; Return value:  Size  Location     Type
  6539 ;;		None               void
  6540 ;; Registers used:
  6541 ;;		None
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6551 ;;Total ram usage:        0 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; This function calls:
  6554 ;;		Nothing
  6555 ;; This function is called by:
  6556 ;;		_DO_DISPLAY_D1
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           
  6560                           	psect	text33
  6561  002E7C                     __ptext33:
  6562                           	opt stack 0
  6563  002E7C                     _D1_Red:
  6564                           	opt stack 29
  6565                           
  6566                           ;Lab4p1.c: 100: PORTBbits.RB5 = 0;
  6567                           
  6568                           ;incstack = 0
  6569  002E7C  9A81               	bcf	3969,5,c	;volatile
  6570                           
  6571                           ;Lab4p1.c: 101: PORTBbits.RB4 = 0;
  6572  002E7E  9881               	bcf	3969,4,c	;volatile
  6573                           
  6574                           ;Lab4p1.c: 102: PORTBbits.RB3 = 1;
  6575  002E80  8681               	bsf	3969,3,c	;volatile
  6576  002E82  0012               	return		;funcret
  6577  002E84                     __end_of_D1_Red:
  6578                           	opt stack 0
  6579                           tblptru	equ	0xFF8
  6580                           tblptrh	equ	0xFF7
  6581                           tblptrl	equ	0xFF6
  6582                           tablat	equ	0xFF5
  6583                           prodh	equ	0xFF4
  6584                           prodl	equ	0xFF3
  6585                           postinc0	equ	0xFEE
  6586                           wreg	equ	0xFE8
  6587                           postdec1	equ	0xFE5
  6588                           fsr1l	equ	0xFE1
  6589                           postinc2	equ	0xFDE
  6590                           postdec2	equ	0xFDD
  6591                           fsr2h	equ	0xFDA
  6592                           fsr2l	equ	0xFD9
  6593                           status	equ	0xFD8
  6594                           
  6595 ;; *************** function _D1_None *****************
  6596 ;; Defined at:
  6597 ;;		line 91 in file "Lab4p1.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;		None
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;		None
  6602 ;; Return value:  Size  Location     Type
  6603 ;;		None               void
  6604 ;; Registers used:
  6605 ;;		None
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6615 ;;Total ram usage:        0 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; This function calls:
  6618 ;;		Nothing
  6619 ;; This function is called by:
  6620 ;;		_DO_DISPLAY_D1
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text34
  6625  002E84                     __ptext34:
  6626                           	opt stack 0
  6627  002E84                     _D1_None:
  6628                           	opt stack 29
  6629                           
  6630                           ;Lab4p1.c: 93: PORTBbits.RB5 = 0;
  6631                           
  6632                           ;incstack = 0
  6633  002E84  9A81               	bcf	3969,5,c	;volatile
  6634                           
  6635                           ;Lab4p1.c: 94: PORTBbits.RB4 = 0;
  6636  002E86  9881               	bcf	3969,4,c	;volatile
  6637                           
  6638                           ;Lab4p1.c: 95: PORTBbits.RB3 = 0;
  6639  002E88  9681               	bcf	3969,3,c	;volatile
  6640  002E8A  0012               	return		;funcret
  6641  002E8C                     __end_of_D1_None:
  6642                           	opt stack 0
  6643                           tblptru	equ	0xFF8
  6644                           tblptrh	equ	0xFF7
  6645                           tblptrl	equ	0xFF6
  6646                           tablat	equ	0xFF5
  6647                           prodh	equ	0xFF4
  6648                           prodl	equ	0xFF3
  6649                           postinc0	equ	0xFEE
  6650                           wreg	equ	0xFE8
  6651                           postdec1	equ	0xFE5
  6652                           fsr1l	equ	0xFE1
  6653                           postinc2	equ	0xFDE
  6654                           postdec2	equ	0xFDD
  6655                           fsr2h	equ	0xFDA
  6656                           fsr2l	equ	0xFD9
  6657                           status	equ	0xFD8
  6658                           
  6659 ;; *************** function _D1_Green *****************
  6660 ;; Defined at:
  6661 ;;		line 104 in file "Lab4p1.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;		None
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;		None
  6666 ;; Return value:  Size  Location     Type
  6667 ;;		None               void
  6668 ;; Registers used:
  6669 ;;		None
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6679 ;;Total ram usage:        0 bytes
  6680 ;; Hardware stack levels used:    1
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_DO_DISPLAY_D1
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text35
  6689  002E8C                     __ptext35:
  6690                           	opt stack 0
  6691  002E8C                     _D1_Green:
  6692                           	opt stack 29
  6693                           
  6694                           ;Lab4p1.c: 106: PORTBbits.RB5 = 0;
  6695                           
  6696                           ;incstack = 0
  6697  002E8C  9A81               	bcf	3969,5,c	;volatile
  6698                           
  6699                           ;Lab4p1.c: 107: PORTBbits.RB4 = 1;
  6700  002E8E  8881               	bsf	3969,4,c	;volatile
  6701                           
  6702                           ;Lab4p1.c: 108: PORTBbits.RB3 = 0;
  6703  002E90  9681               	bcf	3969,3,c	;volatile
  6704  002E92  0012               	return		;funcret
  6705  002E94                     __end_of_D1_Green:
  6706                           	opt stack 0
  6707                           tblptru	equ	0xFF8
  6708                           tblptrh	equ	0xFF7
  6709                           tblptrl	equ	0xFF6
  6710                           tablat	equ	0xFF5
  6711                           prodh	equ	0xFF4
  6712                           prodl	equ	0xFF3
  6713                           postinc0	equ	0xFEE
  6714                           wreg	equ	0xFE8
  6715                           postdec1	equ	0xFE5
  6716                           fsr1l	equ	0xFE1
  6717                           postinc2	equ	0xFDE
  6718                           postdec2	equ	0xFDD
  6719                           fsr2h	equ	0xFDA
  6720                           fsr2l	equ	0xFD9
  6721                           status	equ	0xFD8
  6722                           
  6723 ;; *************** function _D1_Blue *****************
  6724 ;; Defined at:
  6725 ;;		line 110 in file "Lab4p1.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;		None
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;		None
  6730 ;; Return value:  Size  Location     Type
  6731 ;;		None               void
  6732 ;; Registers used:
  6733 ;;		None
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6743 ;;Total ram usage:        0 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_DO_DISPLAY_D1
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           	psect	text36
  6753  002E94                     __ptext36:
  6754                           	opt stack 0
  6755  002E94                     _D1_Blue:
  6756                           	opt stack 29
  6757                           
  6758                           ;Lab4p1.c: 112: PORTBbits.RB5 = 1;
  6759                           
  6760                           ;incstack = 0
  6761  002E94  8A81               	bsf	3969,5,c	;volatile
  6762                           
  6763                           ;Lab4p1.c: 113: PORTBbits.RB4 = 0;
  6764  002E96  9881               	bcf	3969,4,c	;volatile
  6765                           
  6766                           ;Lab4p1.c: 114: PORTBbits.RB3 = 0;
  6767  002E98  9681               	bcf	3969,3,c	;volatile
  6768  002E9A  0012               	return		;funcret
  6769  002E9C                     __end_of_D1_Blue:
  6770                           	opt stack 0
  6771                           tblptru	equ	0xFF8
  6772                           tblptrh	equ	0xFF7
  6773                           tblptrl	equ	0xFF6
  6774                           tablat	equ	0xFF5
  6775                           prodh	equ	0xFF4
  6776                           prodl	equ	0xFF3
  6777                           postinc0	equ	0xFEE
  6778                           wreg	equ	0xFE8
  6779                           postdec1	equ	0xFE5
  6780                           fsr1l	equ	0xFE1
  6781                           postinc2	equ	0xFDE
  6782                           postdec2	equ	0xFDD
  6783                           fsr2h	equ	0xFDA
  6784                           fsr2l	equ	0xFD9
  6785                           status	equ	0xFD8
  6786                           
  6787 ;; *************** function _DO_DISPLAY_7SEG_Upper *****************
  6788 ;; Defined at:
  6789 ;;		line 86 in file "Lab4p1.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;  digit           1    wreg     unsigned char 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;  digit           1    0[COMRAM] unsigned char 
  6794 ;; Return value:  Size  Location     Type
  6795 ;;		None               void
  6796 ;; Registers used:
  6797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;Total ram usage:        1 bytes
  6808 ;; Hardware stack levels used:    1
  6809 ;; This function calls:
  6810 ;;		Nothing
  6811 ;; This function is called by:
  6812 ;;		_main
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text37
  6817  002E04                     __ptext37:
  6818                           	opt stack 0
  6819  002E04                     _DO_DISPLAY_7SEG_Upper:
  6820                           	opt stack 30
  6821                           
  6822                           ;incstack = 0
  6823                           ;DO_DISPLAY_7SEG_Upper@digit stored from wreg
  6824  002E04  6E01               	movwf	DO_DISPLAY_7SEG_Upper@digit,c
  6825                           
  6826                           ;Lab4p1.c: 88: PORTD = array[digit];
  6827  002E06  5001               	movf	DO_DISPLAY_7SEG_Upper@digit,w,c
  6828  002E08  0D02               	mullw	2
  6829  002E0A  0E80               	movlw	low _array
  6830  002E0C  24F3               	addwf	prodl,w,c
  6831  002E0E  6ED9               	movwf	fsr2l,c
  6832  002E10  0E00               	movlw	high _array
  6833  002E12  20F4               	addwfc	prodh,w,c
  6834  002E14  6EDA               	movwf	fsr2h,c
  6835  002E16  50DF               	movf	indf2,w,c
  6836  002E18  6E83               	movwf	3971,c	;volatile
  6837  002E1A  0012               	return		;funcret
  6838  002E1C                     __end_of_DO_DISPLAY_7SEG_Upper:
  6839                           	opt stack 0
  6840                           tblptru	equ	0xFF8
  6841                           tblptrh	equ	0xFF7
  6842                           tblptrl	equ	0xFF6
  6843                           tablat	equ	0xFF5
  6844                           prodh	equ	0xFF4
  6845                           prodl	equ	0xFF3
  6846                           postinc0	equ	0xFEE
  6847                           wreg	equ	0xFE8
  6848                           postdec1	equ	0xFE5
  6849                           fsr1l	equ	0xFE1
  6850                           indf2	equ	0xFDF
  6851                           postinc2	equ	0xFDE
  6852                           postdec2	equ	0xFDD
  6853                           fsr2h	equ	0xFDA
  6854                           fsr2l	equ	0xFD9
  6855                           status	equ	0xFD8
  6856                           
  6857 ;; *************** function _DO_DISPLAY_7SEG_Lower *****************
  6858 ;; Defined at:
  6859 ;;		line 69 in file "Lab4p1.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  digit           1    wreg     unsigned char 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;  digit           1    0[COMRAM] unsigned char 
  6864 ;;  PE              1    2[COMRAM] unsigned char 
  6865 ;;  PC              1    1[COMRAM] unsigned char 
  6866 ;; Return value:  Size  Location     Type
  6867 ;;		None               void
  6868 ;; Registers used:
  6869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6876 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;Total ram usage:        3 bytes
  6880 ;; Hardware stack levels used:    1
  6881 ;; This function calls:
  6882 ;;		Nothing
  6883 ;; This function is called by:
  6884 ;;		_main
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           	psect	text38
  6889  002A00                     __ptext38:
  6890                           	opt stack 0
  6891  002A00                     _DO_DISPLAY_7SEG_Lower:
  6892                           	opt stack 30
  6893                           
  6894                           ;incstack = 0
  6895                           ;DO_DISPLAY_7SEG_Lower@digit stored from wreg
  6896  002A00  6E01               	movwf	DO_DISPLAY_7SEG_Lower@digit,c
  6897                           
  6898                           ;Lab4p1.c: 71: PORTC = array[digit] & 0x3F;
  6899  002A02  5001               	movf	DO_DISPLAY_7SEG_Lower@digit,w,c
  6900  002A04  0D02               	mullw	2
  6901  002A06  0E80               	movlw	low _array
  6902  002A08  24F3               	addwf	prodl,w,c
  6903  002A0A  6ED9               	movwf	fsr2l,c
  6904  002A0C  0E00               	movlw	high _array
  6905  002A0E  20F4               	addwfc	prodh,w,c
  6906  002A10  6EDA               	movwf	fsr2h,c
  6907  002A12  50DF               	movf	indf2,w,c
  6908  002A14  0B3F               	andlw	63
  6909  002A16  6E82               	movwf	3970,c	;volatile
  6910                           
  6911                           ;Lab4p1.c: 72: char PC = array[digit] & 0x01;
  6912  002A18  5001               	movf	DO_DISPLAY_7SEG_Lower@digit,w,c
  6913  002A1A  0D02               	mullw	2
  6914  002A1C  0E80               	movlw	low _array
  6915  002A1E  24F3               	addwf	prodl,w,c
  6916  002A20  6ED9               	movwf	fsr2l,c
  6917  002A22  0E00               	movlw	high _array
  6918  002A24  20F4               	addwfc	prodh,w,c
  6919  002A26  6EDA               	movwf	fsr2h,c
  6920  002A28  50DF               	movf	indf2,w,c
  6921  002A2A  0B01               	andlw	1
  6922  002A2C  6E02               	movwf	DO_DISPLAY_7SEG_Lower@PC,c
  6923                           
  6924                           ;Lab4p1.c: 73: char PE = array[digit] & 0x40;
  6925  002A2E  5001               	movf	DO_DISPLAY_7SEG_Lower@digit,w,c
  6926  002A30  0D02               	mullw	2
  6927  002A32  0E80               	movlw	low _array
  6928  002A34  24F3               	addwf	prodl,w,c
  6929  002A36  6ED9               	movwf	fsr2l,c
  6930  002A38  0E00               	movlw	high _array
  6931  002A3A  20F4               	addwfc	prodh,w,c
  6932  002A3C  6EDA               	movwf	fsr2h,c
  6933  002A3E  50DF               	movf	indf2,w,c
  6934  002A40  0B40               	andlw	64
  6935  002A42  6E03               	movwf	DO_DISPLAY_7SEG_Lower@PE,c
  6936                           
  6937                           ;Lab4p1.c: 74: if (PE == 0 && PC ==0)
  6938  002A44  5003               	movf	DO_DISPLAY_7SEG_Lower@PE,w,c
  6939  002A46  A4D8               	btfss	status,2,c
  6940  002A48  D005               	goto	l2565
  6941  002A4A  5002               	movf	DO_DISPLAY_7SEG_Lower@PC,w,c
  6942  002A4C  A4D8               	btfss	status,2,c
  6943  002A4E  D002               	goto	l2565
  6944                           
  6945                           ;Lab4p1.c: 75: PORTE = 0x00;
  6946  002A50  0E00               	movlw	0
  6947  002A52  D017               	goto	L12
  6948  002A54                     l2565:
  6949                           
  6950                           ;Lab4p1.c: 76: else if (PC == 0 && PE != 0)
  6951  002A54  5002               	movf	DO_DISPLAY_7SEG_Lower@PC,w,c
  6952  002A56  A4D8               	btfss	status,2,c
  6953  002A58  D005               	goto	l2571
  6954  002A5A  5003               	movf	DO_DISPLAY_7SEG_Lower@PE,w,c
  6955  002A5C  B4D8               	btfsc	status,2,c
  6956  002A5E  D002               	goto	l2571
  6957                           
  6958                           ;Lab4p1.c: 77: PORTE = 0x01;
  6959  002A60  0E01               	movlw	1
  6960  002A62  D00F               	goto	L12
  6961  002A64                     l2571:
  6962                           
  6963                           ;Lab4p1.c: 78: else if (PC == 1 && PE == 0)
  6964  002A64  0402               	decf	DO_DISPLAY_7SEG_Lower@PC,w,c
  6965  002A66  A4D8               	btfss	status,2,c
  6966  002A68  D005               	goto	l2577
  6967  002A6A  5003               	movf	DO_DISPLAY_7SEG_Lower@PE,w,c
  6968  002A6C  A4D8               	btfss	status,2,c
  6969  002A6E  D002               	goto	l2577
  6970                           
  6971                           ;Lab4p1.c: 79: PORTE = 0x02;
  6972  002A70  0E02               	movlw	2
  6973  002A72  D007               	goto	L12
  6974  002A74                     l2577:
  6975                           
  6976                           ;Lab4p1.c: 80: else if (PC == 1 && PE != 0)
  6977  002A74  0402               	decf	DO_DISPLAY_7SEG_Lower@PC,w,c
  6978  002A76  A4D8               	btfss	status,2,c
  6979  002A78  D006               	goto	l90
  6980  002A7A  5003               	movf	DO_DISPLAY_7SEG_Lower@PE,w,c
  6981  002A7C  B4D8               	btfsc	status,2,c
  6982  002A7E  D003               	goto	l90
  6983                           
  6984                           ;Lab4p1.c: 81: PORTE = 0x03;
  6985  002A80  0E03               	movlw	3
  6986  002A82                     L12:
  6987  002A82  6E84               	movwf	3972,c	;volatile
  6988  002A84  D000               	goto	l90
  6989  002A86                     l90:
  6990  002A86  0012               	return		;funcret
  6991  002A88                     __end_of_DO_DISPLAY_7SEG_Lower:
  6992                           	opt stack 0
  6993                           tblptru	equ	0xFF8
  6994                           tblptrh	equ	0xFF7
  6995                           tblptrl	equ	0xFF6
  6996                           tablat	equ	0xFF5
  6997                           prodh	equ	0xFF4
  6998                           prodl	equ	0xFF3
  6999                           postinc0	equ	0xFEE
  7000                           wreg	equ	0xFE8
  7001                           postdec1	equ	0xFE5
  7002                           fsr1l	equ	0xFE1
  7003                           indf2	equ	0xFDF
  7004                           postinc2	equ	0xFDE
  7005                           postdec2	equ	0xFDD
  7006                           fsr2h	equ	0xFDA
  7007                           fsr2l	equ	0xFD9
  7008                           status	equ	0xFD8
  7009                           tblptru	equ	0xFF8
  7010                           tblptrh	equ	0xFF7
  7011                           tblptrl	equ	0xFF6
  7012                           tablat	equ	0xFF5
  7013                           prodh	equ	0xFF4
  7014                           prodl	equ	0xFF3
  7015                           postinc0	equ	0xFEE
  7016                           wreg	equ	0xFE8
  7017                           postdec1	equ	0xFE5
  7018                           fsr1l	equ	0xFE1
  7019                           indf2	equ	0xFDF
  7020                           postinc2	equ	0xFDE
  7021                           postdec2	equ	0xFDD
  7022                           fsr2h	equ	0xFDA
  7023                           fsr2l	equ	0xFD9
  7024                           status	equ	0xFD8
  7025                           
  7026                           	psect	rparam
  7027  0000                     tblptru	equ	0xFF8
  7028                           tblptrh	equ	0xFF7
  7029                           tblptrl	equ	0xFF6
  7030                           tablat	equ	0xFF5
  7031                           prodh	equ	0xFF4
  7032                           prodl	equ	0xFF3
  7033                           postinc0	equ	0xFEE
  7034                           wreg	equ	0xFE8
  7035                           postdec1	equ	0xFE5
  7036                           fsr1l	equ	0xFE1
  7037                           indf2	equ	0xFDF
  7038                           postinc2	equ	0xFDE
  7039                           postdec2	equ	0xFDD
  7040                           fsr2h	equ	0xFDA
  7041                           fsr2l	equ	0xFD9
  7042                           status	equ	0xFD8


Data Sizes:
    Strings     81
    Constant    118
    Data        20
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    116     126
    BANK0           128      0      20
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_4(CODE[23]), STR_3(CODE[24]), STR_2(CODE[20]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _init_UART->_OpenUSART
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _DO_DISPLAY_D2->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   56172
                                             97 COMRAM    19    19      0
              _DO_DISPLAY_7SEG_Lower
              _DO_DISPLAY_7SEG_Upper
                      _DO_DISPLAY_D1
                      _DO_DISPLAY_D2
                      _DO_DISPLAY_D3
                       _Get_Full_ADC
                           _Init_ADC
                 _Select_ADC_Channel
                         _WAIT_1_SEC
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                          _init_UART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   38604
                                             63 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    9120
                                             35 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8922
                                             35 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3848
                                             20 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1356
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1868
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     583
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     480
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     464
                                             42 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3343
                                             57 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3090
                                             45 COMRAM    12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     151
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     454
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2212
                                             57 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1890
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _WAIT_1_SEC                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_D3                                        2     0      2     119
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_D2                                        2     0      2    1669
                                             14 COMRAM     2     0      2
                           _D2_White
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1572
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _D2_White                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_D1                                        2     0      2     229
                                              0 COMRAM     2     0      2
                            _D1_Blue
                           _D1_Green
                            _D1_None
                             _D1_Red
                           _D1_White
 ---------------------------------------------------------------------------------
 (2) _D1_White                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D1_Red                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D1_None                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D1_Green                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _D1_Blue                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_7SEG_Upper                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_7SEG_Lower                                3     3      0     244
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DO_DISPLAY_7SEG_Lower
   _DO_DISPLAY_7SEG_Upper
   _DO_DISPLAY_D1
     _D1_Blue
     _D1_Green
     _D1_None
     _D1_Red
     _D1_White
   _DO_DISPLAY_D2
     _D2_White
     ___awdiv
       ___awmod (ARG)
   _DO_DISPLAY_D3
   _Get_Full_ADC
   _Init_ADC
   _Select_ADC_Channel
   _WAIT_1_SEC
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftneg
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _init_UART
     _OpenUSART
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      14       5       15.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     74      7E       1       99.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      92      34        0.0%
DATA                 0      0      92       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Sep 22 16:14:42 2021

                             _F 0075                              l62 2E48                              l71 2DBE  
                            l90 2A86                              l59 2E02                              l68 2D9E  
                            _Tc 0078                    ___awdiv@sign 000C             ___wmul@multiplicand 0011  
                  ___ftadd@exp1 0039                    ___ftadd@exp2 0038                    ___ftadd@sign 0037  
                           l144 2846                             l156 2CCC                             l236 1554  
                           l149 2D70                             l182 1E3A                             l254 1816  
                           l282 2BC0                             l290 2D98                             l283 2BC2  
                           l508 2D08                             l284 2BCC                             l285 2BCE  
                           l189 1BF6                             l278 2BA6                             l615 27A6  
                           l287 2BE8                             l704 2306                             l713 28DC  
                           l626 277E                             l483 2972                             l740 25FE  
                           l670 2174                             l574 2420                             l655 2088  
                           l583 2410                             l719 2518                             l656 2206  
                           l736 2C8C                             l496 2B08                             l729 2DD6  
                           l809 2C48                             l690 26AC                             l659 20B2  
                           l687 26E0                             l679 2190                             l695 2316  
                           l697 227E                             l698 22A6                             l779 29EE  
                           l789 2B68                 __end_of_D1_Blue 2E9C                    ___awmod@sign 0006  
               __end_of_D1_None 2E8C                             prod 000FF3                             wreg 000FE8  
                  __CFG_LVP$OFF 000000                  ?_DO_DISPLAY_D1 0001                  ?_DO_DISPLAY_D2 000F  
                ?_DO_DISPLAY_D3 0001                    ___ftdiv@cntr 0043                    ___ftdiv@sign 0048  
                  __CFG_WDT$OFF 000000                            l2001 2096                            l2013 20CC  
                          l2031 2124                            l2023 20F4                            l2007 20C0  
                          l2103 24DC                            l2201 2B8C                            l2041 215C  
                          l2033 2130                            l2131 291C                            l2043 2168  
                          l2035 2138                            l2107 24F2                            l2133 2926  
                          l2125 2906                            l2221 2BB8                            l2213 2BAA  
                          l2205 2B96                            l2029 2118                            l2301 1BD2  
                          l2151 2968                            l2143 294C                            l2135 292E  
                          l2119 28F4                            l2311 2226                            l2071 245A  
                          l2209 2B9E                            l2049 21AE                            l2147 2958  
                          l2059 21E0                            l2411 23E2                            l2171 2ABA  
                          l2163 2A9E                            l2075 2468                            l2413 23E8  
                          l2317 2244                            l2173 2AC4                            l2093 24AE  
                          l2069 2440                            l1535 2DEC                            l2503 2996  
                          l2407 23D2                            l2351 22D8                            l2175 2ACC  
                          l2183 2AEE                            l2167 2AAC                            l2263 1DFA  
                          l2255 1D36                            l2601 280A                            l2433 287A  
                          l2425 2C62                            l2505 29A4                            l2417 23FC  
                          l2353 22DE                            l2097 24C4                            l2089 249C  
                          l1539 2DFA                            l2443 28D8                            l2515 29DE  
                          l2507 29AC                            l2531 2B58                            l2523 2B1C  
                          l2419 240A                            l2347 22C8                            l2339 22B4  
                          l2187 2AFE                            l2179 2AE2                            l2099 24CA  
                          l2283 19EC                            l2605 282A                            l2621 2CA2  
                          l2437 28AC                            l2525 2B2A                            l2373 2338  
                          l2357 22F2                            l2277 1944                            l2701 133E  
                          l2607 2830                            l2615 2D56                            l2527 2B32  
                          l2367 2328                            l2359 2300                            l2295 1B20  
                          l2287 19FC                            l2703 1348                            l2711 13C6  
                          l2631 10D4                            l2625 2CC2                            l2481 25A8  
                          l2457 2538                            l2537 2BF0                            l2721 143C  
                          l2641 10F8                            l2571 2A64                            l2627 2CC6  
                          l2619 2C9E                            l2475 2592                            l2539 2BFE  
                          l2395 23AE                            l2387 237C                            l2803 175C  
                          l2715 142C                            l2707 138A                            l2643 1124  
                          l2635 10E4                            l2811 17FA                            l2565 2A54  
                          l2821 2638                            l2493 25EC                            l2485 25BC  
                          l2805 1768                            l2741 1522                            l2733 148C  
                          l2725 146C                            l2717 1430                            l2709 13B8  
                          l2637 10F0                            l2487 25CA                            l2479 25A2  
                          l2399 23BE                            l2751 155A                            l2577 2A74  
                          l2593 27DE                            l1961 270E                            l2825 2646  
                          l2489 25D4                            l2809 17E6                            l2761 15C4  
                          l2745 1530                            l2729 1470                            l2681 126C  
                          l2673 1208                            l2657 1176                            l2595 27E4  
                          l2587 27B8                            l1971 2772                            l1963 272E  
                          l1955 26F2                            l2819 261E                            l2747 153E  
                          l2739 1516                            l2691 12E2                            l2589 27BE  
                          l2845 2686                            l2773 16B4                            l2757 1574  
                          l2685 1292                            l2599 2804                            l1983 2798  
                          l1967 2746                            l1959 2702                            l2855 26BA  
                          l2791 170C                            l2767 169A                            l2687 12A2  
                          l2775 16C0                            l1977 2786                            l1969 2766  
                          l2785 16FC                            l2769 16A6                            l2697 131A  
                          l2689 12D2                            l2867 2CE4                            l2795 173C  
                          l2787 1700                            l2799 1740                            l2889 1E62  
                          STR_1 10BA                            STR_2 10A6                            STR_3 1077  
                          STR_4 108F                            u3040 154E                            u2500 2556  
                          u1701 2054                            u3151 2610                            u1711 2068  
                          u2271 2218                            u2505 254E                            u3171 262E  
                          u2291 2236                            u1911 2432                            u2800 2D50  
                          u2481 252A                            u2730 27CE                            u1931 2450  
                  printf@tmpval 005A                            u2750 27F4                            u2770 281A  
                          u2790 2840                            u2880 11AE                            u2885 11A4  
                          _TRMT 007D61                            _main 1E3C                    ___ftpack@arg 0001  
                  ___ftpack@exp 0004                            fsr2h 000FDA                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                __end_of_D1_Green 2E94  
                          prodh 000FF4                            prodl 000FF3                __end_of_D1_White 2E7C  
                          start 0000                __end_of_D2_White 2E74                    ___ftmul@cntr 0022  
                  ___param_bank 000010                    ___ftmul@sign 0023            __end_of_Get_Full_ADC 2DC0  
                  ___fttol@exp1 0039                    ___fttol@lval 0035                     ?_WAIT_1_SEC 0001  
                         ?_main 0001                 __end_of___awdiv 2974                 __end_of___ftadd 2208  
               __end_of___awmod 2B0A                 __end_of___ftdiv 26E2                 __end_of___ftneg 2DE4  
               __end_of___lldiv 2A00                 __end_of___ftmul 251A                 ___awdiv@divisor 0009  
               __end_of___llmod 2B7A                 __end_of___ftsub 2C8E                 __end_of___fttol 2600  
               ___awdiv@counter 000B                           _RCSTA 000FAB                           _SPBRG 000FAF  
                         _PORTA 000F80                           _PORTB 000F81                           _PORTC 000F82  
                         _PORTD 000F83                           _PORTE 000F84                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                           _TXREG 000FAD                           _TXSTA 000FAC  
                  ___lltoft@exp 0011                   ___awtoft@sign 000C                 __end_of_dpowers 1029  
                         _array 0080                           _scale 1818                           _tempF 007D  
                 ___ftpack@sign 0005                           _nstep 007B                           main@L 006B  
                         main@U 006A                           _putch 2E44                    main@num_step 0071  
                __CFG_BOREN$OFF 000000                           tablat 000FF5                           status 000FD8  
        ?_DO_DISPLAY_7SEG_Lower 0001          ?_DO_DISPLAY_7SEG_Upper 0001                 __initialization 2D0A  
                  __end_of_main 2044                __end_of_Init_ADC 2E60                       ??_D1_Blue 0001  
                     ??_D1_None 0001                          ??_main 0062                   ___fttol@sign1 0034  
                 __activetblptr 000002            __size_of__tdiv_to_l_ 0110                 ??_DO_DISPLAY_D1 0003  
               ??_DO_DISPLAY_D2 0011                 ??_DO_DISPLAY_D3 0003                          _ADCON0 000FC2  
                        _ADCON1 000FC1                          _ADCON2 000FC0                ___llmod@dividend 000E  
                        ?_scale 0024                          _ADRESH 000FC4                          _ADRESL 000FC3  
                        _D1_Red 2E7C                ___awdiv@dividend 0007                __end_of___awtoft 2D0A  
                        ?_putch 0001                __end_of___ftpack 27A8                __end_of___lltoft 2C4A  
                        _OSCCON 000FD3                          _SPBRGH 000FB0             __size_of_WAIT_1_SEC 0020  
            Get_Full_ADC@result 0005                __end_of__powers_ 1077              __size_of_OpenUSART 0070  
                        ___ftge 2848                          ___wmul 2D72                       ??___awdiv 000B  
                     ??___ftadd 0034                       ??___awmod 0005                       ??___ftdiv 0040  
                     ??___ftneg 0004                       ??___lldiv 0009                       ??___ftmul 001B  
                     ??___llmod 0016                       ??___ftsub 0040                       ??___fttol 002F  
                        _fround 1BF8                          clear_0 2D10                ___awdiv@quotient 000D  
               ___awmod@divisor 0003                 ___awmod@counter 0005                          _printf 10CA  
         ___ftmul@f3_as_product 001F                       ?_D1_Green 0001                    __mediumconst 0000  
                     ?_D1_White 0001                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                       ?_D2_White 0001                          putch@c 0001  
                    __accesstop 0080         __end_of__initialization 2D36                      ___ftadd@f1 002E  
                    ___ftadd@f2 0031                      ___ftge@ff1 0001                      ___ftge@ff2 0004  
                 ___rparam_used 000001                      ___ftdiv@f1 003A                      ___ftdiv@f2 003D  
                    ___ftdiv@f3 0044           __size_of_Get_Full_ADC 0026                      ___ftneg@f1 0001  
                    ___awtoft@c 0009                      ___ftmul@f1 0015                      ___ftmul@f2 0018  
                    ___ftsub@f1 003A                      ___ftsub@f2 003D                      ___fttol@f1 002B  
                __pcstackCOMRAM 0001                    __pidataBANK0 2E1C                      ___lltoft@c 0009  
                 __end_of_scale 1BF8                   __end_of_putch 2E52                      __div_to_l_ 2318  
                    ??_D1_Green 0001                      ??_D1_White 0001                      ??_D2_White 0001  
             __end_of_OpenUSART 2BEA                 __div_to_l_@exp1 000C                 __div_to_l_@cntr 000B  
                       ??_scale 0027                         ?_D1_Red 0001                 __div_to_l_@quot 0007  
                  _Get_Full_ADC 2D9A                         ??_putch 0001                       ?_Init_ADC 0001  
            __size_of_init_UART 0014      __end_of_Select_ADC_Channel 2E6C                   __div_to_l_@f1 0001  
                 __div_to_l_@f2 0004                         ?___ftge 0001                         ?___wmul 000F  
                       _D1_Blue 2E94                         ?_fround 0024                    ??_WAIT_1_SEC 0001  
                       _D1_None 2E84                       ?___awtoft 0009                       ?___ftpack 0001  
                       ?_printf 0040       Select_ADC_Channel@channel 0001                       ?___lltoft 0009  
                   WAIT_1_SEC@j 0001                 __size_of_D1_Red 0008                      ??_Init_ADC 0001  
       ??_DO_DISPLAY_7SEG_Lower 0001         ??_DO_DISPLAY_7SEG_Upper 0001              __end_of_WAIT_1_SEC 2E04  
             __end_of__npowers_ 1050                         __Hparam 0000                      _scale$1185 0027  
                       __Lparam 0000                 __size_of___ftge 0096                         ___awdiv 28DE  
                       ___ftadd 2044                         ___awmod 2A88                         ___ftdiv 2600  
                       ___ftneg 2DC0                         ___lldiv 2974                 __size_of___wmul 0028  
                       ___ftmul 2422                         ___llmod 2B0A                         ___ftsub 2C4A  
                       ___fttol 251A                    __psmallconst 1000                         __pcinit 2D0A  
                    ??___awtoft 000C                      ??___ftpack 0006                 __size_of_fround 0244  
                       __ramtop 1000                      ??___lltoft 000D                         __ptext0 1E3C  
                       __ptext1 10CA                         __ptext2 1818                         __ptext3 2E44  
                       __ptext4 1BF8                         __ptext5 2D72                         __ptext6 2422  
                       __ptext7 2A88                         __ptext8 2208                         __ptext9 2318  
               __size_of_printf 074E               __end_of_init_UART 2E44                     ?__div_to_l_ 0001  
                       _dpowers 1001                ___awmod@dividend 0001            end_of_initialization 2D36  
                DO_DISPLAY_D1@T 0001                  DO_DISPLAY_D2@T 000F                   __Lmediumconst 0000  
               ___lldiv@divisor 0005                 ___lldiv@counter 000D                       _RCSTAbits 000FAB  
                       printf@c 0061                         printf@f 0040                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc2 000FDE  
                __tdiv_to_l_@f1 0001                  __tdiv_to_l_@f2 0004                   ??__tdiv_to_l_ 0007  
                     _PORTBbits 000F81                       _TRISCbits 000F94                  main@voltage_mv 006C  
             __size_of_D1_Green 0008           __end_of_DO_DISPLAY_D1 2848           __end_of_DO_DISPLAY_D2 2D72  
         __end_of_DO_DISPLAY_D3 2CCE               __size_of_D1_White 0008               __size_of_D2_White 0008  
                __end_of_D1_Red 2E84                     ___ftdiv@exp 0047                       _TXSTAbits 000FAC  
           __size_of__div_to_l_ 010A                     ___ftmul@exp 001E                  __end_of___ftge 28DE  
                __end_of___wmul 2D9A         DO_DISPLAY_7SEG_Lower@PC 0002         DO_DISPLAY_7SEG_Lower@PE 0003  
                __end_of_fround 1E3C               main@temperature_C 0064               main@temperature_F 0067  
                __end_of_printf 1818             start_initialization 2D0A      DO_DISPLAY_7SEG_Lower@digit 0001  
           __end_of__tdiv_to_l_ 2318                        ??_D1_Red 0001                       _OpenUSART 2B7A  
               ___llmod@divisor 0012                __CFG_OSC$INTIO67 000000               __size_of_Init_ADC 000E  
               ___llmod@counter 0016                        ??___ftge 0007                        ??___wmul 0013  
                   __pdataBANK0 0080              _Select_ADC_Channel 2E60                        ?_D1_Blue 0001  
                      ??_fround 0027                        ?_D1_None 0001                        ??_printf 0045  
                    fround@prec 002D               __size_of___awtoft 003C               __size_of___ftpack 00C6  
           ?_Select_ADC_Channel 0001               __size_of___lltoft 0060                     __pbssCOMRAM 0075  
                    ?_OpenUSART 0001  __size_of_DO_DISPLAY_7SEG_Lower 0088   __end_of_DO_DISPLAY_7SEG_Lower 2A88  
__size_of_DO_DISPLAY_7SEG_Upper 0018   __end_of_DO_DISPLAY_7SEG_Upper 2E1C            ??_Select_ADC_Channel 0001  
                      ?___awdiv 0007                        ?___ftadd 002E                        ?___awmod 0001  
                      ?___ftdiv 003A                        ?___ftneg 0001                        ?___lldiv 0001  
                      ?___ftmul 0015                        ?___llmod 000E                        ?___ftsub 003A  
                     __npowers_ 1029                        ?___fttol 002B                     __tdiv_to_l_ 2208  
                  ??__div_to_l_ 0007                     __smallconst 1000                        _D1_Green 2E8C  
    DO_DISPLAY_7SEG_Upper@digit 0001                        _D1_White 2E74                        _D2_White 2E6C  
                     _init_UART 2E30                  __size_of_scale 03E0                  __size_of_putch 000E  
                ___wmul@product 0013                        _PIE1bits 000F9D                        _PIR1bits 000F9E  
            __end_of__div_to_l_ 2422                __size_of_D1_Blue 0008                      _ADCON0bits 000FC2  
              __size_of_D1_None 0008               ___wmul@multiplier 000F                      printf@flag 0050  
                    printf@fval 005E                      printf@prec 0052                       main@tempF 0073  
                    ?_init_UART 0001                       copy_data0 2D2A                        _Init_ADC 2E52  
                   ??_OpenUSART 0003                 OpenUSART@config 0003                        __Hrparam 0000  
                      __Lrparam 0000                __size_of___awdiv 0096                __size_of___ftadd 01C4  
              __size_of___awmod 0082                __size_of___ftdiv 00E2                __size_of___ftneg 0024  
              __size_of___lldiv 008C                __size_of___ftmul 00F8                __size_of___llmod 0070  
              __size_of___ftsub 0044                __size_of___fttol 00E6                        ___awtoft 2CCE  
                      ___ftpack 26E2                     _fround$1183 002A                     _fround$1184 0027  
                      ___lltoft 2BEA                        __ptext10 2BEA                        __ptext11 2B0A  
                      __ptext20 2600                        __ptext12 2974                        __ptext21 2CCE  
                      __ptext13 251A                        __ptext30 2E6C                        __ptext22 26E2  
                      __ptext14 2C4A                        __ptext31 27A8                        __ptext23 2DE4  
                      __ptext15 2044                        __ptext32 2E74                        __ptext24 2E60  
                      __ptext16 2DC0                        __ptext33 2E7C                        __ptext25 2E52  
                      __ptext17 2848                        __ptext34 2E84                        __ptext26 2D9A  
                      __ptext18 2E30                        __ptext35 2E8C                        __ptext27 2C8E  
                      __ptext19 2B7A                        __ptext36 2E94                        __ptext28 2D40  
                      __ptext37 2E04                        __ptext29 28DE                        __ptext38 2A00  
                      __powers_ 1050                   ?_Get_Full_ADC 0001                   __size_of_main 0208  
        __size_of_DO_DISPLAY_D1 00A0          __size_of_DO_DISPLAY_D2 0032          __size_of_DO_DISPLAY_D3 0040  
                     printf@exp 0058                       printf@val 0054                 DO_DISPLAY_D3@mv 0001  
                OpenUSART@spbrg 0001                     ??_init_UART 0004                  ??_Get_Full_ADC 0003  
                      scale@scl 002A                __tdiv_to_l_@exp1 000F                __tdiv_to_l_@cntr 000E  
              __tdiv_to_l_@quot 000A                ___lldiv@dividend 0001                        printf@ap 004E  
                    _WAIT_1_SEC 2DE4                    ?__tdiv_to_l_ 0001                     _printf$1186 004B  
              ___lldiv@quotient 0009                   _DO_DISPLAY_D1 27A8                   _DO_DISPLAY_D2 2D40  
                 _DO_DISPLAY_D3 2C8E     __size_of_Select_ADC_Channel 000C                 main@voltage_mv1 006F  
         _DO_DISPLAY_7SEG_Lower 2A00           _DO_DISPLAY_7SEG_Upper 2E04  
