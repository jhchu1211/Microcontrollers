

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Sep 25 17:15:14 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           	psect	idataBANK0
    47  002A98                     __pidataBANK0:
    48                           	opt stack 0
    49                           
    50                           ;initializer for _array
    51  002A98  0040               	dw	64
    52  002A9A  0079               	dw	121
    53  002A9C  0024               	dw	36
    54  002A9E  0030               	dw	48
    55  002AA0  0019               	dw	25
    56  002AA2  0012               	dw	18
    57  002AA4  0002               	dw	2
    58  002AA6  0078               	dw	120
    59  002AA8  0000               	dw	0
    60  002AAA  0010               	dw	16
    61                           
    62                           	psect	smallconst
    63  001000                     __psmallconst:
    64                           	opt stack 0
    65  001000  00                 	db	0
    66  001001                     _dpowers:
    67                           	opt stack 0
    68  001001  0001               	dw	1
    69  001003  0000               	dw	0
    70  001005  000A               	dw	10
    71  001007  0000               	dw	0
    72  001009  0064               	dw	100
    73  00100B  0000               	dw	0
    74  00100D  03E8               	dw	1000
    75  00100F  0000               	dw	0
    76  001011  2710               	dw	10000
    77  001013  0000               	dw	0
    78  001015  86A0               	dw	34464
    79  001017  0001               	dw	1
    80  001019  4240               	dw	16960
    81  00101B  000F               	dw	15
    82  00101D  9680               	dw	38528
    83  00101F  0098               	dw	152
    84  001021  E100               	dw	57600
    85  001023  05F5               	dw	1525
    86  001025  CA00               	dw	51712
    87  001027  3B9A               	dw	15258
    88  001029                     __end_of_dpowers:
    89                           	opt stack 0
    90  001029                     __npowers_:
    91                           	opt stack 0
    92  001029  00                 	db	0
    93  00102A  80                 	db	128
    94  00102B  3F                 	db	63
    95  00102C  CD                 	db	205
    96  00102D  CC                 	db	204
    97  00102E  3D                 	db	61
    98  00102F  D7                 	db	215
    99  001030  23                 	db	35
   100  001031  3C                 	db	60
   101  001032  12                 	db	18
   102  001033  83                 	db	131
   103  001034  3A                 	db	58
   104  001035  B7                 	db	183
   105  001036  D1                 	db	209
   106  001037  38                 	db	56
   107  001038  C6                 	db	198
   108  001039  27                 	db	39
   109  00103A  37                 	db	55
   110  00103B  38                 	db	56
   111  00103C  86                 	db	134
   112  00103D  35                 	db	53
   113  00103E  C0                 	db	192
   114  00103F  D6                 	db	214
   115  001040  33                 	db	51
   116  001041  CC                 	db	204
   117  001042  2B                 	db	43
   118  001043  32                 	db	50
   119  001044  70                 	db	112
   120  001045  89                 	db	137
   121  001046  30                 	db	48
   122  001047  E7                 	db	231
   123  001048  DB                 	db	219
   124  001049  2E                 	db	46
   125  00104A  E5                 	db	229
   126  00104B  3C                 	db	60
   127  00104C  1E                 	db	30
   128  00104D  42                 	db	66
   129  00104E  A2                 	db	162
   130  00104F  0D                 	db	13
   131  001050                     __end_of__npowers_:
   132                           	opt stack 0
   133  001050                     __powers_:
   134                           	opt stack 0
   135  001050  00                 	db	0
   136  001051  80                 	db	128
   137  001052  3F                 	db	63
   138  001053  00                 	db	0
   139  001054  20                 	db	32
   140  001055  41                 	db	65
   141  001056  00                 	db	0
   142  001057  C8                 	db	200
   143  001058  42                 	db	66
   144  001059  00                 	db	0
   145  00105A  7A                 	db	122
   146  00105B  44                 	db	68
   147  00105C  40                 	db	64
   148  00105D  1C                 	db	28
   149  00105E  46                 	db	70
   150  00105F  50                 	db	80
   151  001060  C3                 	db	195
   152  001061  47                 	db	71
   153  001062  24                 	db	36
   154  001063  74                 	db	116
   155  001064  49                 	db	73
   156  001065  97                 	db	151
   157  001066  18                 	db	24
   158  001067  4B                 	db	75
   159  001068  BC                 	db	188
   160  001069  BE                 	db	190
   161  00106A  4C                 	db	76
   162  00106B  6B                 	db	107
   163  00106C  6E                 	db	110
   164  00106D  4E                 	db	78
   165  00106E  03                 	db	3
   166  00106F  15                 	db	21
   167  001070  50                 	db	80
   168  001071  79                 	db	121
   169  001072  AD                 	db	173
   170  001073  60                 	db	96
   171  001074  F3                 	db	243
   172  001075  49                 	db	73
   173  001076  71                 	db	113
   174  001077                     __end_of__powers_:
   175                           	opt stack 0
   176  0000                     _ADCON0	set	4034
   177  0000                     _ADCON0bits	set	4034
   178  0000                     _ADCON1	set	4033
   179  0000                     _ADCON2	set	4032
   180  0000                     _ADRESH	set	4036
   181  0000                     _ADRESL	set	4035
   182  0000                     _OSCCON	set	4051
   183  0000                     _PIE1bits	set	3997
   184  0000                     _PIR1bits	set	3998
   185  0000                     _PORTC	set	3970
   186  0000                     _PORTD	set	3971
   187  0000                     _PORTDbits	set	3971
   188  0000                     _PORTE	set	3972
   189  0000                     _RCSTA	set	4011
   190  0000                     _RCSTAbits	set	4011
   191  0000                     _SPBRG	set	4015
   192  0000                     _SPBRGH	set	4016
   193  0000                     _TRISA	set	3986
   194  0000                     _TRISB	set	3987
   195  0000                     _TRISC	set	3988
   196  0000                     _TRISCbits	set	3988
   197  0000                     _TRISD	set	3989
   198  0000                     _TRISE	set	3990
   199  0000                     _TXREG	set	4013
   200  0000                     _TXSTA	set	4012
   201  0000                     _TXSTAbits	set	4012
   202  0000                     _TRMT	set	32097
   203  001077                     STR_1:
   204  001077  76                 	db	118	;'v'
   205  001078  6F                 	db	111	;'o'
   206  001079  6C                 	db	108	;'l'
   207  00107A  74                 	db	116	;'t'
   208  00107B  20                 	db	32
   209  00107C  3D                 	db	61	;'='
   210  00107D  20                 	db	32
   211  00107E  25                 	db	37
   212  00107F  66                 	db	102	;'f'
   213  001080  0D                 	db	13
   214  001081  0A                 	db	10
   215  001082  00                 	db	0
   216                           
   217                           ; #config settings
   218  001083  00                 	db	0	; dummy byte at the end
   219  0000                     
   220                           	psect	cinit
   221  00299E                     __pcinit:
   222                           	opt stack 0
   223  00299E                     start_initialization:
   224                           	opt stack 0
   225  00299E                     __initialization:
   226                           	opt stack 0
   227                           
   228                           ; Clear objects allocated to BANK0 (2 bytes)
   229  00299E  0100               	movlb	0
   230  0029A0  6B95               	clrf	(__pbssBANK0+1)& (0+255),b
   231  0029A2  6B94               	clrf	__pbssBANK0& (0+255),b
   232                           
   233                           ; Clear objects allocated to COMRAM (2 bytes)
   234  0029A4  6A7F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   235  0029A6  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   236                           
   237                           ; Initialize objects allocated to BANK0 (20 bytes)
   238                           ; load TBLPTR registers with __pidataBANK0
   239  0029A8  0E98               	movlw	low __pidataBANK0
   240  0029AA  6EF6               	movwf	tblptrl,c
   241  0029AC  0E2A               	movlw	high __pidataBANK0
   242  0029AE  6EF7               	movwf	tblptrh,c
   243  0029B0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   244  0029B2  6EF8               	movwf	tblptru,c
   245  0029B4  EE00  F080         	lfsr	0,__pdataBANK0
   246  0029B8  EE10 F014          	lfsr	1,20
   247  0029BC                     copy_data0:
   248  0029BC  0009               	tblrd		*+
   249  0029BE  CFF5 FFEE          	movff	tablat,postinc0
   250  0029C2  50E5               	movf	postdec1,w,c
   251  0029C4  50E1               	movf	fsr1l,w,c
   252  0029C6  E1FA               	bnz	copy_data0
   253  0029C8                     end_of_initialization:
   254                           	opt stack 0
   255  0029C8                     __end_of__initialization:
   256                           	opt stack 0
   257  0029C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   258  0029CA  6EF8               	movwf	tblptru,c
   259  0029CC  0100               	movlb	0
   260  0029CE  EFD2  F010         	goto	_main	;jump to C main() function
   261                           tblptru	equ	0xFF8
   262                           tblptrh	equ	0xFF7
   263                           tblptrl	equ	0xFF6
   264                           tablat	equ	0xFF5
   265                           postinc0	equ	0xFEE
   266                           postdec1	equ	0xFE5
   267                           fsr1l	equ	0xFE1
   268                           
   269                           	psect	bssCOMRAM
   270  00007E                     __pbssCOMRAM:
   271                           	opt stack 0
   272  00007E                     _U:
   273                           	opt stack 0
   274  00007E                     	ds	2
   275                           tblptru	equ	0xFF8
   276                           tblptrh	equ	0xFF7
   277                           tblptrl	equ	0xFF6
   278                           tablat	equ	0xFF5
   279                           postinc0	equ	0xFEE
   280                           postdec1	equ	0xFE5
   281                           fsr1l	equ	0xFE1
   282                           
   283                           	psect	bssBANK0
   284  000094                     __pbssBANK0:
   285                           	opt stack 0
   286  000094                     _L:
   287                           	opt stack 0
   288  000094                     	ds	2
   289                           tblptru	equ	0xFF8
   290                           tblptrh	equ	0xFF7
   291                           tblptrl	equ	0xFF6
   292                           tablat	equ	0xFF5
   293                           postinc0	equ	0xFEE
   294                           postdec1	equ	0xFE5
   295                           fsr1l	equ	0xFE1
   296                           
   297                           	psect	dataBANK0
   298  000080                     __pdataBANK0:
   299                           	opt stack 0
   300  000080                     _array:
   301                           	opt stack 0
   302  000080                     	ds	20
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           postdec1	equ	0xFE5
   309                           fsr1l	equ	0xFE1
   310                           
   311                           	psect	cstackCOMRAM
   312  000001                     __pcstackCOMRAM:
   313                           	opt stack 0
   314  000001                     ?_GET_FULL_ADC:
   315                           	opt stack 0
   316  000001                     ?___ftpack:
   317                           	opt stack 0
   318  000001                     ?___ftneg:
   319                           	opt stack 0
   320  000001                     ?__tdiv_to_l_:
   321                           	opt stack 0
   322  000001                     ?__div_to_l_:
   323                           	opt stack 0
   324  000001                     ?___lldiv:
   325                           	opt stack 0
   326  000001                     ?___llmod:
   327                           	opt stack 0
   328  000001                     putch@c:
   329                           	opt stack 0
   330  000001                     DO_DISPLAY_7SEG_Upper@digit:
   331                           	opt stack 0
   332  000001                     DO_DISPLAY_7SEG_Lower@digit:
   333                           	opt stack 0
   334  000001                     SET_ADC_CH@ADC_CH:
   335                           	opt stack 0
   336  000001                     WAIT_1_SEC@j:
   337                           	opt stack 0
   338  000001                     OpenUSART@spbrg:
   339                           	opt stack 0
   340  000001                     __div_to_l_@f1:
   341                           	opt stack 0
   342  000001                     ___ftpack@arg:
   343                           	opt stack 0
   344  000001                     __tdiv_to_l_@f1:
   345                           	opt stack 0
   346  000001                     ___ftge@ff1:
   347                           	opt stack 0
   348  000001                     ___ftneg@f1:
   349                           	opt stack 0
   350  000001                     ___lldiv@dividend:
   351                           	opt stack 0
   352  000001                     ___llmod@dividend:
   353                           	opt stack 0
   354                           
   355                           ; 4 bytes @ 0x0
   356  000001                     	ds	1
   357  000002                     DO_DISPLAY_7SEG_Upper@PC:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x1
   361  000002                     	ds	1
   362  000003                     ??_GET_FULL_ADC:
   363  000003                     DO_DISPLAY_7SEG_Upper@PE:
   364                           	opt stack 0
   365  000003                     OpenUSART@config:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x2
   369  000003                     	ds	1
   370  000004                     ___ftpack@exp:
   371                           	opt stack 0
   372  000004                     __div_to_l_@f2:
   373                           	opt stack 0
   374  000004                     __tdiv_to_l_@f2:
   375                           	opt stack 0
   376  000004                     ___ftge@ff2:
   377                           	opt stack 0
   378                           
   379                           ; 3 bytes @ 0x3
   380  000004                     	ds	1
   381  000005                     ___ftpack@sign:
   382                           	opt stack 0
   383  000005                     GET_FULL_ADC@result:
   384                           	opt stack 0
   385  000005                     ___lldiv@divisor:
   386                           	opt stack 0
   387  000005                     ___llmod@divisor:
   388                           	opt stack 0
   389                           
   390                           ; 4 bytes @ 0x4
   391  000005                     	ds	1
   392  000006                     ??___ftpack:
   393                           
   394                           ; 0 bytes @ 0x5
   395  000006                     	ds	1
   396  000007                     ??__tdiv_to_l_:
   397  000007                     ??___ftge:
   398  000007                     __div_to_l_@quot:
   399                           	opt stack 0
   400                           
   401                           ; 4 bytes @ 0x6
   402  000007                     	ds	2
   403  000009                     ?___ftmul:
   404                           	opt stack 0
   405  000009                     ?___awtoft:
   406                           	opt stack 0
   407  000009                     ?___lltoft:
   408                           	opt stack 0
   409  000009                     ___llmod@counter:
   410                           	opt stack 0
   411  000009                     ___awtoft@c:
   412                           	opt stack 0
   413  000009                     ___ftmul@f1:
   414                           	opt stack 0
   415  000009                     ___lldiv@quotient:
   416                           	opt stack 0
   417  000009                     ___lltoft@c:
   418                           	opt stack 0
   419                           
   420                           ; 4 bytes @ 0x8
   421  000009                     	ds	1
   422  00000A                     __tdiv_to_l_@quot:
   423                           	opt stack 0
   424                           
   425                           ; 4 bytes @ 0x9
   426  00000A                     	ds	1
   427  00000B                     __div_to_l_@cntr:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0xA
   431  00000B                     	ds	1
   432  00000C                     ___awtoft@sign:
   433                           	opt stack 0
   434  00000C                     __div_to_l_@exp1:
   435                           	opt stack 0
   436  00000C                     ___ftmul@f2:
   437                           	opt stack 0
   438                           
   439                           ; 3 bytes @ 0xB
   440  00000C                     	ds	1
   441  00000D                     ??___lltoft:
   442  00000D                     ?___ftdiv:
   443                           	opt stack 0
   444  00000D                     ___lldiv@counter:
   445                           	opt stack 0
   446  00000D                     ___ftdiv@f1:
   447                           	opt stack 0
   448                           
   449                           ; 3 bytes @ 0xC
   450  00000D                     	ds	1
   451  00000E                     __tdiv_to_l_@cntr:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0xD
   455  00000E                     	ds	1
   456  00000F                     ??___ftmul:
   457  00000F                     __tdiv_to_l_@exp1:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0xE
   461  00000F                     	ds	1
   462  000010                     ___ftdiv@f2:
   463                           	opt stack 0
   464                           
   465                           ; 3 bytes @ 0xF
   466  000010                     	ds	1
   467  000011                     ___lltoft@exp:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x10
   471  000011                     	ds	1
   472  000012                     ___ftmul@exp:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x11
   476  000012                     	ds	1
   477  000013                     ??___ftdiv:
   478  000013                     ___ftmul@f3_as_product:
   479                           	opt stack 0
   480                           
   481                           ; 3 bytes @ 0x12
   482  000013                     	ds	3
   483  000016                     ___ftdiv@cntr:
   484                           	opt stack 0
   485  000016                     ___ftmul@cntr:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x15
   489  000016                     	ds	1
   490  000017                     ___ftmul@sign:
   491                           	opt stack 0
   492  000017                     ___ftdiv@f3:
   493                           	opt stack 0
   494                           
   495                           ; 3 bytes @ 0x16
   496  000017                     	ds	1
   497  000018                     ?___fttol:
   498                           	opt stack 0
   499  000018                     ___fttol@f1:
   500                           	opt stack 0
   501                           
   502                           ; 3 bytes @ 0x17
   503  000018                     	ds	2
   504  00001A                     ___ftdiv@exp:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x19
   508  00001A                     	ds	1
   509  00001B                     ___ftdiv@sign:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x1A
   513  00001B                     	ds	1
   514  00001C                     ??___fttol:
   515                           
   516                           ; 0 bytes @ 0x1B
   517  00001C                     	ds	5
   518  000021                     ___fttol@sign1:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x20
   522  000021                     	ds	1
   523  000022                     ___fttol@lval:
   524                           	opt stack 0
   525                           
   526                           ; 4 bytes @ 0x21
   527  000022                     	ds	4
   528  000026                     ___fttol@exp1:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x25
   532  000026                     	ds	1
   533  000027                     ?___awmod:
   534                           	opt stack 0
   535  000027                     ___awmod@dividend:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x26
   539  000027                     	ds	2
   540  000029                     ___awmod@divisor:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x28
   544  000029                     	ds	2
   545  00002B                     ___awmod@counter:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x2A
   549  00002B                     	ds	1
   550  00002C                     ___awmod@sign:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x2B
   554  00002C                     	ds	1
   555  00002D                     ?___awdiv:
   556                           	opt stack 0
   557  00002D                     ___awdiv@dividend:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x2C
   561  00002D                     	ds	2
   562  00002F                     ___awdiv@divisor:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x2E
   566  00002F                     	ds	2
   567  000031                     ___awdiv@counter:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x30
   571  000031                     	ds	1
   572  000032                     ___awdiv@sign:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x31
   576  000032                     	ds	1
   577  000033                     ___awdiv@quotient:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x32
   581  000033                     	ds	2
   582  000035                     ?___wmul:
   583                           	opt stack 0
   584  000035                     ___wmul@multiplier:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x34
   588  000035                     	ds	2
   589  000037                     ___wmul@multiplicand:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x36
   593  000037                     	ds	2
   594  000039                     ___wmul@product:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x38
   598  000039                     	ds	2
   599  00003B                     ?_fround:
   600                           	opt stack 0
   601  00003B                     ?_scale:
   602                           	opt stack 0
   603                           
   604                           ; 3 bytes @ 0x3A
   605  00003B                     	ds	3
   606  00003E                     _fround$1104:
   607                           	opt stack 0
   608  00003E                     _scale$1105:
   609                           	opt stack 0
   610                           
   611                           ; 3 bytes @ 0x3D
   612  00003E                     	ds	3
   613  000041                     scale@scl:
   614                           	opt stack 0
   615  000041                     _fround$1103:
   616                           	opt stack 0
   617                           
   618                           ; 3 bytes @ 0x40
   619  000041                     	ds	3
   620  000044                     fround@prec:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x43
   624  000044                     	ds	1
   625  000045                     ?___ftadd:
   626                           	opt stack 0
   627  000045                     ___ftadd@f1:
   628                           	opt stack 0
   629                           
   630                           ; 3 bytes @ 0x44
   631  000045                     	ds	3
   632  000048                     ___ftadd@f2:
   633                           	opt stack 0
   634                           
   635                           ; 3 bytes @ 0x47
   636  000048                     	ds	3
   637  00004B                     ??___ftadd:
   638                           
   639                           ; 0 bytes @ 0x4A
   640  00004B                     	ds	3
   641  00004E                     ___ftadd@sign:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x4D
   645  00004E                     	ds	1
   646  00004F                     ___ftadd@exp2:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x4E
   650  00004F                     	ds	1
   651  000050                     ___ftadd@exp1:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x4F
   655  000050                     	ds	1
   656  000051                     ?___ftsub:
   657                           	opt stack 0
   658  000051                     ___ftsub@f1:
   659                           	opt stack 0
   660                           
   661                           ; 3 bytes @ 0x50
   662  000051                     	ds	3
   663  000054                     ___ftsub@f2:
   664                           	opt stack 0
   665                           
   666                           ; 3 bytes @ 0x53
   667  000054                     	ds	3
   668  000057                     ?_printf:
   669                           	opt stack 0
   670  000057                     printf@f:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x56
   674  000057                     	ds	5
   675  00005C                     ??_printf:
   676                           
   677                           ; 0 bytes @ 0x5B
   678  00005C                     	ds	6
   679  000062                     _printf$1106:
   680                           	opt stack 0
   681                           
   682                           ; 3 bytes @ 0x61
   683  000062                     	ds	3
   684  000065                     printf@ap:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x64
   688  000065                     	ds	2
   689  000067                     printf@flag:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x66
   693  000067                     	ds	2
   694  000069                     printf@prec:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x68
   698  000069                     	ds	2
   699  00006B                     printf@val:
   700                           	opt stack 0
   701                           
   702                           ; 4 bytes @ 0x6A
   703  00006B                     	ds	4
   704  00006F                     printf@exp:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x6E
   708  00006F                     	ds	2
   709  000071                     printf@tmpval:
   710                           	opt stack 0
   711                           
   712                           ; 4 bytes @ 0x70
   713  000071                     	ds	4
   714  000075                     printf@fval:
   715                           	opt stack 0
   716                           
   717                           ; 3 bytes @ 0x74
   718  000075                     	ds	3
   719  000078                     printf@c:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x77
   723  000078                     	ds	1
   724  000079                     main@ivolt:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x78
   728  000079                     	ds	2
   729  00007B                     main@volt:
   730                           	opt stack 0
   731                           
   732                           ; 3 bytes @ 0x7A
   733  00007B                     	ds	3
   734                           tblptru	equ	0xFF8
   735                           tblptrh	equ	0xFF7
   736                           tblptrl	equ	0xFF6
   737                           tablat	equ	0xFF5
   738                           postinc0	equ	0xFEE
   739                           postdec1	equ	0xFE5
   740                           fsr1l	equ	0xFE1
   741                           
   742 ;;
   743 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   744 ;;
   745 ;; *************** function _main *****************
   746 ;; Defined at:
   747 ;;		line 54 in file "Lab5p1.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  volt            3  122[COMRAM] float 
   752 ;;  ivolt           2  120[COMRAM] int 
   753 ;; Return value:  Size  Location     Type
   754 ;;		None               void
   755 ;; Registers used:
   756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;Total ram usage:        5 bytes
   767 ;; Hardware stack levels required when called:    4
   768 ;; This function calls:
   769 ;;		_DO_DISPLAY_7SEG_Lower
   770 ;;		_DO_DISPLAY_7SEG_Upper
   771 ;;		_DO_INIT
   772 ;;		_GET_FULL_ADC
   773 ;;		_SET_ADC_CH
   774 ;;		_WAIT_1_SEC
   775 ;;		___awmod
   776 ;;		___awtoft
   777 ;;		___ftdiv
   778 ;;		___ftmul
   779 ;;		___fttol
   780 ;;		_printf
   781 ;; This function is called by:
   782 ;;		Startup code after reset
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text0
   787  0021A4                     __ptext0:
   788                           	opt stack 0
   789  0021A4                     _main:
   790                           	opt stack 27
   791                           
   792                           ;Lab5p1.c: 56: DO_INIT();
   793                           
   794                           ;incstack = 0
   795  0021A4  EC32  F015         	call	_DO_INIT	;wreg free
   796  0021A8  D000               	goto	l2624
   797  0021AA                     l2624:
   798                           
   799                           ;Lab5p1.c: 58: {
   800                           ;Lab5p1.c: 59: SET_ADC_CH(0);
   801  0021AA  0E00               	movlw	0
   802  0021AC  EC6E  F015         	call	_SET_ADC_CH
   803                           
   804                           ;Lab5p1.c: 60: int ivolt = GET_FULL_ADC() * 4;
   805  0021B0  ECFD  F014         	call	_GET_FULL_ADC	;wreg free
   806  0021B4  90D8               	bcf	status,0,c
   807  0021B6  3601               	rlcf	?_GET_FULL_ADC,f,c
   808  0021B8  3602               	rlcf	?_GET_FULL_ADC+1,f,c
   809  0021BA  90D8               	bcf	status,0,c
   810  0021BC  3601               	rlcf	?_GET_FULL_ADC,f,c
   811  0021BE  3602               	rlcf	?_GET_FULL_ADC+1,f,c
   812  0021C0  C001  F079         	movff	?_GET_FULL_ADC,main@ivolt
   813  0021C4  C002  F07A         	movff	?_GET_FULL_ADC+1,main@ivolt+1
   814                           
   815                           ;Lab5p1.c: 61: float volt = ivolt / 1000.0;
   816  0021C8  C079  F009         	movff	main@ivolt,___awtoft@c
   817  0021CC  C07A  F00A         	movff	main@ivolt+1,___awtoft@c+1
   818  0021D0  ECB1  F014         	call	___awtoft	;wreg free
   819  0021D4  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   820  0021D8  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   821  0021DC  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   822  0021E0  0E00               	movlw	0
   823  0021E2  6E10               	movwf	___ftdiv@f2,c
   824  0021E4  0E7A               	movlw	122
   825  0021E6  6E11               	movwf	___ftdiv@f2+1,c
   826  0021E8  0E44               	movlw	68
   827  0021EA  6E12               	movwf	___ftdiv@f2+2,c
   828  0021EC  ECBA  F011         	call	___ftdiv	;wreg free
   829  0021F0  C00D  F07B         	movff	?___ftdiv,main@volt
   830  0021F4  C00E  F07C         	movff	?___ftdiv+1,main@volt+1
   831  0021F8  C00F  F07D         	movff	?___ftdiv+2,main@volt+2
   832                           
   833                           ;Lab5p1.c: 62: printf ("volt = %f\r\n",volt);
   834  0021FC  0E77               	movlw	low STR_1
   835  0021FE  6E57               	movwf	printf@f,c
   836  002200  0E10               	movlw	high STR_1
   837  002202  6E58               	movwf	printf@f+1,c
   838  002204  C07B  F059         	movff	main@volt,?_printf+2
   839  002208  C07C  F05A         	movff	main@volt+1,?_printf+3
   840  00220C  C07D  F05B         	movff	main@volt+2,?_printf+4
   841  002210  EC42  F008         	call	_printf	;wreg free
   842                           
   843                           ;Lab5p1.c: 63: U = ((int)(volt));
   844  002214  C07B  F018         	movff	main@volt,___fttol@f1
   845  002218  C07C  F019         	movff	main@volt+1,___fttol@f1+1
   846  00221C  C07D  F01A         	movff	main@volt+2,___fttol@f1+2
   847  002220  EC47  F011         	call	___fttol	;wreg free
   848  002224  C018  F07E         	movff	?___fttol,_U
   849  002228  C019  F07F         	movff	?___fttol+1,_U+1
   850                           
   851                           ;Lab5p1.c: 64: L = ((int)(volt*10)%10);
   852  00222C  0E00               	movlw	0
   853  00222E  6E0C               	movwf	___ftmul@f2,c
   854  002230  0E20               	movlw	32
   855  002232  6E0D               	movwf	___ftmul@f2+1,c
   856  002234  0E41               	movlw	65
   857  002236  6E0E               	movwf	___ftmul@f2+2,c
   858  002238  C07B  F009         	movff	main@volt,___ftmul@f1
   859  00223C  C07C  F00A         	movff	main@volt+1,___ftmul@f1+1
   860  002240  C07D  F00B         	movff	main@volt+2,___ftmul@f1+2
   861  002244  EC56  F010         	call	___ftmul	;wreg free
   862  002248  C009  F018         	movff	?___ftmul,___fttol@f1
   863  00224C  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
   864  002250  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
   865  002254  EC47  F011         	call	___fttol	;wreg free
   866  002258  C018  F027         	movff	?___fttol,___awmod@dividend
   867  00225C  C019  F028         	movff	?___fttol+1,___awmod@dividend+1
   868  002260  0E00               	movlw	0
   869  002262  6E2A               	movwf	___awmod@divisor+1,c
   870  002264  0E0A               	movlw	10
   871  002266  6E29               	movwf	___awmod@divisor,c
   872  002268  ECAE  F013         	call	___awmod	;wreg free
   873  00226C  C027  F094         	movff	?___awmod,_L
   874  002270  C028  F095         	movff	?___awmod+1,_L+1
   875                           
   876                           ;Lab5p1.c: 65: DO_DISPLAY_7SEG_Upper(U);
   877  002274  507E               	movf	_U,w,c
   878  002276  EC6A  F013         	call	_DO_DISPLAY_7SEG_Upper
   879                           
   880                           ;Lab5p1.c: 66: DO_DISPLAY_7SEG_Lower(L);
   881  00227A  0100               	movlb	0	; () banked
   882  00227C  5194               	movf	_L& (0+255),w,b
   883  00227E  EC40  F015         	call	_DO_DISPLAY_7SEG_Lower
   884                           
   885                           ;Lab5p1.c: 67: PORTDbits.RD7 = 0;
   886  002282  9E83               	bcf	3971,7,c	;volatile
   887                           
   888                           ;Lab5p1.c: 68: WAIT_1_SEC();
   889  002284  EC22  F015         	call	_WAIT_1_SEC	;wreg free
   890  002288  D790               	goto	l2624
   891  00228A  EF00  F000         	goto	start
   892  00228E                     __end_of_main:
   893                           	opt stack 0
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           tblptrl	equ	0xFF6
   897                           tablat	equ	0xFF5
   898                           postinc0	equ	0xFEE
   899                           postdec1	equ	0xFE5
   900                           fsr1l	equ	0xFE1
   901                           status	equ	0xFD8
   902                           
   903 ;; *************** function _printf *****************
   904 ;; Defined at:
   905 ;;		line 464 in file "E:\XC8\sources\common\doprnt.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  f               2   86[COMRAM] PTR const unsigned char 
   908 ;;		 -> STR_1(12), 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  tmpval          4  112[COMRAM] struct .
   911 ;;  val             4  106[COMRAM] unsigned long 
   912 ;;  fval            3  116[COMRAM] unsigned long 
   913 ;;  cp              3    0        PTR const unsigned char 
   914 ;;  exp             2  110[COMRAM] int 
   915 ;;  prec            2  104[COMRAM] int 
   916 ;;  flag            2  102[COMRAM] unsigned short 
   917 ;;  ap              2  100[COMRAM] PTR void [1]
   918 ;;		 -> ?_printf(2), 
   919 ;;  len             2    0        unsigned int 
   920 ;;  width           2    0        int 
   921 ;;  c               1  119[COMRAM] char 
   922 ;;  d               1    0        unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  2   86[COMRAM] int 
   925 ;; Registers used:
   926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   932 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;Total ram usage:       34 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; Hardware stack levels required when called:    3
   939 ;; This function calls:
   940 ;;		___awdiv
   941 ;;		___ftadd
   942 ;;		___ftge
   943 ;;		___ftmul
   944 ;;		___ftneg
   945 ;;		___ftsub
   946 ;;		___fttol
   947 ;;		___lldiv
   948 ;;		___llmod
   949 ;;		___lltoft
   950 ;;		___wmul
   951 ;;		__div_to_l_
   952 ;;		__tdiv_to_l_
   953 ;;		_fround
   954 ;;		_putch
   955 ;;		_scale
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text1
   962  001084                     __ptext1:
   963                           	opt stack 0
   964  001084                     _printf:
   965                           	opt stack 27
   966                           
   967                           ;doprnt.c: 466: va_list ap;
   968                           ;doprnt.c: 499: signed char c;
   969                           ;doprnt.c: 501: int width;
   970                           ;doprnt.c: 504: int prec;
   971                           ;doprnt.c: 508: unsigned short flag;
   972                           ;doprnt.c: 515: char d;
   973                           ;doprnt.c: 516: double fval;
   974                           ;doprnt.c: 517: int exp;
   975                           ;doprnt.c: 523: union {
   976                           ;doprnt.c: 524: unsigned long vd;
   977                           ;doprnt.c: 525: double integ;
   978                           ;doprnt.c: 526: } tmpval;
   979                           ;doprnt.c: 528: unsigned long val;
   980                           ;doprnt.c: 529: unsigned len;
   981                           ;doprnt.c: 530: const char * cp;
   982                           ;doprnt.c: 533: *ap = __va_start();
   983                           
   984                           ;incstack = 0
   985  001084  0E59               	movlw	low (?_printf+2)
   986  001086  6E65               	movwf	printf@ap,c
   987  001088  0E00               	movlw	high (?_printf+2)
   988  00108A  6E66               	movwf	printf@ap+1,c
   989                           
   990                           ;doprnt.c: 536: while(c = *f++) {
   991  00108C  D2FF               	goto	l2562
   992  00108E                     l2414:
   993                           
   994                           ;doprnt.c: 538: if(c != '%')
   995  00108E  0E25               	movlw	37
   996  001090  1878               	xorwf	printf@c,w,c
   997  001092  B4D8               	btfsc	status,2,c
   998  001094  D004               	goto	l2418
   999                           
  1000                           ;doprnt.c: 540: {
  1001                           ;doprnt.c: 541: (putch(c) );
  1002  001096  5078               	movf	printf@c,w,c
  1003  001098  EC60  F015         	call	_putch
  1004                           
  1005                           ;doprnt.c: 542: continue;
  1006  00109C  D2F7               	goto	l2562
  1007  00109E                     l2418:
  1008                           
  1009                           ;doprnt.c: 543: }
  1010                           ;doprnt.c: 548: flag = 0;
  1011  00109E  0E00               	movlw	0
  1012  0010A0  6E68               	movwf	printf@flag+1,c
  1013  0010A2  0E00               	movlw	0
  1014  0010A4  6E67               	movwf	printf@flag,c
  1015                           
  1016                           ;doprnt.c: 635: switch(c = *f++) {
  1017  0010A6  D005               	goto	l2424
  1018                           
  1019                           ;doprnt.c: 638: goto alldone;
  1020                           
  1021                           ;doprnt.c: 637: case 0:
  1022  0010A8  D2FF               	goto	l183
  1023  0010AA                     l2420:
  1024                           
  1025                           ;doprnt.c: 663: flag |= 0x400;
  1026  0010AA  8468               	bsf	printf@flag+1,2,c
  1027                           
  1028                           ;doprnt.c: 664: break;
  1029  0010AC  D013               	goto	l2426
  1030                           
  1031                           ;doprnt.c: 813: continue;
  1032                           
  1033                           ;doprnt.c: 802: default:
  1034  0010AE  D2EE               	goto	l2562
  1035                           
  1036                           ;doprnt.c: 822: }
  1037  0010B0  D011               	goto	l2426
  1038  0010B2                     l2424:
  1039  0010B2  C057  FFF6         	movff	printf@f,tblptrl
  1040  0010B6  C058  FFF7         	movff	printf@f+1,tblptrh
  1041  0010BA  4A57               	infsnz	printf@f,f,c
  1042  0010BC  2A58               	incf	printf@f+1,f,c
  1043  0010BE                     	if	0	;tblptru may be non-zero
  1044  0010BE                     	endif
  1045  0010BE                     	if	0	;tblptru may be non-zero
  1046  0010BE                     	endif
  1047  0010BE  0008               	tblrd		*
  1048  0010C0  CFF5 F078          	movff	tablat,printf@c
  1049  0010C4  5078               	movf	printf@c,w,c
  1050                           
  1051                           ; Switch size 1, requested type "space"
  1052                           ; Number of cases is 2, Range of values is 0 to 102
  1053                           ; switch strategies available:
  1054                           ; Name         Instructions Cycles
  1055                           ; simple_byte            7     4 (average)
  1056                           ;	Chosen strategy is simple_byte
  1057  0010C6  0A00               	xorlw	0	; case 0
  1058  0010C8  B4D8               	btfsc	status,2,c
  1059  0010CA  D2EE               	goto	l183
  1060  0010CC  0A66               	xorlw	102	; case 102
  1061  0010CE  B4D8               	btfsc	status,2,c
  1062  0010D0  D7EC               	goto	l2420
  1063  0010D2  D2DC               	goto	l2562
  1064  0010D4                     l2426:
  1065                           
  1066                           ;doprnt.c: 825: if(flag & (0x700)) {
  1067  0010D4  0E07               	movlw	7
  1068  0010D6  1468               	andwf	printf@flag+1,w,c
  1069  0010D8  B4D8               	btfsc	status,2,c
  1070  0010DA  D2CA               	goto	l2558
  1071                           
  1072                           ;doprnt.c: 829: prec = 6;
  1073  0010DC  0E00               	movlw	0
  1074  0010DE  6E6A               	movwf	printf@prec+1,c
  1075  0010E0  0E06               	movlw	6
  1076  0010E2  6E69               	movwf	printf@prec,c
  1077                           
  1078                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1079  0010E4  C065  FFD9         	movff	printf@ap,fsr2l
  1080  0010E8  C066  FFDA         	movff	printf@ap+1,fsr2h
  1081  0010EC  CFDE F075          	movff	postinc2,printf@fval
  1082  0010F0  CFDE F076          	movff	postinc2,printf@fval+1
  1083  0010F4  CFDD F077          	movff	postdec2,printf@fval+2
  1084  0010F8  0E03               	movlw	3
  1085  0010FA  2665               	addwf	printf@ap,f,c
  1086  0010FC  0E00               	movlw	0
  1087  0010FE  2266               	addwfc	printf@ap+1,f,c
  1088                           
  1089                           ;doprnt.c: 831: if(fval < 0.0) {
  1090  001100  AE77               	btfss	printf@fval+2,7,c
  1091  001102  D011               	goto	l2440
  1092                           
  1093                           ;doprnt.c: 832: fval = -fval;
  1094  001104  C075  F001         	movff	printf@fval,___ftneg@f1
  1095  001108  C076  F002         	movff	printf@fval+1,___ftneg@f1+1
  1096  00110C  C077  F003         	movff	printf@fval+2,___ftneg@f1+2
  1097  001110  EC10  F015         	call	___ftneg	;wreg free
  1098  001114  C001  F075         	movff	?___ftneg,printf@fval
  1099  001118  C002  F076         	movff	?___ftneg+1,printf@fval+1
  1100  00111C  C003  F077         	movff	?___ftneg+2,printf@fval+2
  1101                           
  1102                           ;doprnt.c: 833: flag |= 0x03;
  1103  001120  0E03               	movlw	3
  1104  001122  1267               	iorwf	printf@flag,f,c
  1105  001124  D000               	goto	l2440
  1106  001126                     l2440:
  1107                           
  1108                           ;doprnt.c: 834: }
  1109                           ;doprnt.c: 835: exp = 0;
  1110  001126  0E00               	movlw	0
  1111  001128  6E70               	movwf	printf@exp+1,c
  1112  00112A  0E00               	movlw	0
  1113  00112C  6E6F               	movwf	printf@exp,c
  1114                           
  1115                           ;doprnt.c: 836: if( fval!=0) {
  1116  00112E  5075               	movf	printf@fval,w,c
  1117  001130  1076               	iorwf	printf@fval+1,w,c
  1118  001132  1077               	iorwf	printf@fval+2,w,c
  1119  001134  B4D8               	btfsc	status,2,c
  1120  001136  D085               	goto	l2468
  1121                           
  1122                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1123  001138  0E82               	movlw	130
  1124  00113A  6E5C               	movwf	??_printf& (0+255),c
  1125  00113C  0EFF               	movlw	255
  1126  00113E  6E5D               	movwf	(??_printf+1)& (0+255),c
  1127  001140  C075  F05E         	movff	printf@fval,??_printf+2
  1128  001144  C076  F05F         	movff	printf@fval+1,??_printf+3
  1129  001148  C077  F060         	movff	printf@fval+2,??_printf+4
  1130  00114C  C078  F061         	movff	printf@fval+3,??_printf+5
  1131  001150  0E10               	movlw	16
  1132  001152  D005               	goto	u2610
  1133  001154                     u2615:
  1134  001154  90D8               	bcf	status,0,c
  1135  001156  3261               	rrcf	??_printf+5,f,c
  1136  001158  3260               	rrcf	??_printf+4,f,c
  1137  00115A  325F               	rrcf	??_printf+3,f,c
  1138  00115C  325E               	rrcf	??_printf+2,f,c
  1139  00115E                     u2610:
  1140  00115E  2EE8               	decfsz	wreg,f,c
  1141  001160  D7F9               	goto	u2615
  1142  001162  505E               	movf	??_printf+2,w,c
  1143  001164  245C               	addwf	??_printf,w,c
  1144  001166  6E6F               	movwf	printf@exp,c
  1145  001168  0E00               	movlw	0
  1146  00116A  205D               	addwfc	??_printf+1,w,c
  1147  00116C  6E70               	movwf	printf@exp+1,c
  1148                           
  1149                           ;doprnt.c: 838: exp--;
  1150  00116E  066F               	decf	printf@exp,f,c
  1151  001170  A0D8               	btfss	status,0,c
  1152  001172  0670               	decf	printf@exp+1,f,c
  1153                           
  1154                           ;doprnt.c: 839: exp *= 3;
  1155  001174  C06F  F035         	movff	printf@exp,___wmul@multiplier
  1156  001178  C070  F036         	movff	printf@exp+1,___wmul@multiplier+1
  1157  00117C  0E00               	movlw	0
  1158  00117E  6E38               	movwf	___wmul@multiplicand+1,c
  1159  001180  0E03               	movlw	3
  1160  001182  6E37               	movwf	___wmul@multiplicand,c
  1161  001184  ECE9  F014         	call	___wmul	;wreg free
  1162  001188  C035  F06F         	movff	?___wmul,printf@exp
  1163  00118C  C036  F070         	movff	?___wmul+1,printf@exp+1
  1164                           
  1165                           ;doprnt.c: 840: exp /= 10;
  1166  001190  C06F  F02D         	movff	printf@exp,___awdiv@dividend
  1167  001194  C070  F02E         	movff	printf@exp+1,___awdiv@dividend+1
  1168  001198  0E00               	movlw	0
  1169  00119A  6E30               	movwf	___awdiv@divisor+1,c
  1170  00119C  0E0A               	movlw	10
  1171  00119E  6E2F               	movwf	___awdiv@divisor,c
  1172  0011A0  EC8E  F012         	call	___awdiv	;wreg free
  1173  0011A4  C02D  F06F         	movff	?___awdiv,printf@exp
  1174  0011A8  C02E  F070         	movff	?___awdiv+1,printf@exp+1
  1175                           
  1176                           ;doprnt.c: 841: if(exp < 0)
  1177  0011AC  AE70               	btfss	printf@exp+1,7,c
  1178  0011AE  D004               	goto	l2456
  1179                           
  1180                           ;doprnt.c: 842: exp--;
  1181  0011B0  066F               	decf	printf@exp,f,c
  1182  0011B2  A0D8               	btfss	status,0,c
  1183  0011B4  0670               	decf	printf@exp+1,f,c
  1184  0011B6  D000               	goto	l2456
  1185  0011B8                     l2456:
  1186                           
  1187                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1188  0011B8  506F               	movf	printf@exp,w,c
  1189  0011BA  0800               	sublw	0
  1190  0011BC  EC55  F00B         	call	_scale
  1191  0011C0  C03B  F071         	movff	?_scale,printf@tmpval
  1192  0011C4  C03C  F072         	movff	?_scale+1,printf@tmpval+1
  1193  0011C8  C03D  F073         	movff	?_scale+2,printf@tmpval+2
  1194                           
  1195                           ;doprnt.c: 847: tmpval.integ *= fval;
  1196  0011CC  C071  F009         	movff	printf@tmpval,___ftmul@f1
  1197  0011D0  C072  F00A         	movff	printf@tmpval+1,___ftmul@f1+1
  1198  0011D4  C073  F00B         	movff	printf@tmpval+2,___ftmul@f1+2
  1199  0011D8  C075  F00C         	movff	printf@fval,___ftmul@f2
  1200  0011DC  C076  F00D         	movff	printf@fval+1,___ftmul@f2+1
  1201  0011E0  C077  F00E         	movff	printf@fval+2,___ftmul@f2+2
  1202  0011E4  EC56  F010         	call	___ftmul	;wreg free
  1203  0011E8  C009  F071         	movff	?___ftmul,printf@tmpval
  1204  0011EC  C00A  F072         	movff	?___ftmul+1,printf@tmpval+1
  1205  0011F0  C00B  F073         	movff	?___ftmul+2,printf@tmpval+2
  1206                           
  1207                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1208  0011F4  C071  F001         	movff	printf@tmpval,___ftge@ff1
  1209  0011F8  C072  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1210  0011FC  C073  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1211  001200  0E00               	movlw	0
  1212  001202  6E04               	movwf	___ftge@ff2,c
  1213  001204  0E80               	movlw	128
  1214  001206  6E05               	movwf	___ftge@ff2+1,c
  1215  001208  0E3F               	movlw	63
  1216  00120A  6E06               	movwf	___ftge@ff2+2,c
  1217  00120C  ECD9  F012         	call	___ftge	;wreg free
  1218  001210  B0D8               	btfsc	status,0,c
  1219  001212  D004               	goto	l2464
  1220                           
  1221                           ;doprnt.c: 849: exp--;
  1222  001214  066F               	decf	printf@exp,f,c
  1223  001216  A0D8               	btfss	status,0,c
  1224  001218  0670               	decf	printf@exp+1,f,c
  1225  00121A  D013               	goto	l2468
  1226  00121C                     l2464:
  1227                           
  1228                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1229  00121C  C071  F001         	movff	printf@tmpval,___ftge@ff1
  1230  001220  C072  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1231  001224  C073  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1232  001228  0E00               	movlw	0
  1233  00122A  6E04               	movwf	___ftge@ff2,c
  1234  00122C  0E20               	movlw	32
  1235  00122E  6E05               	movwf	___ftge@ff2+1,c
  1236  001230  0E41               	movlw	65
  1237  001232  6E06               	movwf	___ftge@ff2+2,c
  1238  001234  ECD9  F012         	call	___ftge	;wreg free
  1239  001238  A0D8               	btfss	status,0,c
  1240  00123A  D003               	goto	l2468
  1241                           
  1242                           ;doprnt.c: 851: exp++;
  1243  00123C  4A6F               	infsnz	printf@exp,f,c
  1244  00123E  2A70               	incf	printf@exp+1,f,c
  1245  001240  D000               	goto	l2468
  1246  001242                     l2468:
  1247                           
  1248                           ;doprnt.c: 852: }
  1249                           ;doprnt.c: 1112: if(prec <= 12)
  1250  001242  BE6A               	btfsc	printf@prec+1,7,c
  1251  001244  D006               	goto	l2470
  1252  001246  506A               	movf	printf@prec+1,w,c
  1253  001248  E11C               	bnz	l2472
  1254  00124A  0E0D               	movlw	13
  1255  00124C  5C69               	subwf	printf@prec,w,c
  1256  00124E  B0D8               	btfsc	status,0,c
  1257  001250  D018               	goto	l2472
  1258  001252                     l2470:
  1259                           
  1260                           ;doprnt.c: 1113: fval += fround(prec);
  1261  001252  C075  F045         	movff	printf@fval,___ftadd@f1
  1262  001256  C076  F046         	movff	printf@fval+1,___ftadd@f1+1
  1263  00125A  C077  F047         	movff	printf@fval+2,___ftadd@f1+2
  1264  00125E  5069               	movf	printf@prec,w,c
  1265  001260  EC45  F00D         	call	_fround
  1266  001264  C03B  F048         	movff	?_fround,___ftadd@f2
  1267  001268  C03C  F049         	movff	?_fround+1,___ftadd@f2+1
  1268  00126C  C03D  F04A         	movff	?_fround+2,___ftadd@f2+2
  1269  001270  EC67  F00E         	call	___ftadd	;wreg free
  1270  001274  C045  F075         	movff	?___ftadd,printf@fval
  1271  001278  C046  F076         	movff	?___ftadd+1,printf@fval+1
  1272  00127C  C047  F077         	movff	?___ftadd+2,printf@fval+2
  1273  001280  D000               	goto	l2472
  1274  001282                     l2472:
  1275                           
  1276                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1277  001282  BE70               	btfsc	printf@exp+1,7,c
  1278  001284  D006               	goto	l2474
  1279  001286  5070               	movf	printf@exp+1,w,c
  1280  001288  E120               	bnz	l2480
  1281  00128A  0E0A               	movlw	10
  1282  00128C  5C6F               	subwf	printf@exp,w,c
  1283  00128E  B0D8               	btfsc	status,0,c
  1284  001290  D01C               	goto	l2480
  1285  001292                     l2474:
  1286  001292  5075               	movf	printf@fval,w,c
  1287  001294  1076               	iorwf	printf@fval+1,w,c
  1288  001296  1077               	iorwf	printf@fval+2,w,c
  1289  001298  B4D8               	btfsc	status,2,c
  1290  00129A  D06D               	goto	l2494
  1291  00129C  C075  F018         	movff	printf@fval,___fttol@f1
  1292  0012A0  C076  F019         	movff	printf@fval+1,___fttol@f1+1
  1293  0012A4  C077  F01A         	movff	printf@fval+2,___fttol@f1+2
  1294  0012A8  EC47  F011         	call	___fttol	;wreg free
  1295  0012AC  5018               	movf	?___fttol,w,c
  1296  0012AE  1019               	iorwf	?___fttol+1,w,c
  1297  0012B0  101A               	iorwf	?___fttol+2,w,c
  1298  0012B2  101B               	iorwf	?___fttol+3,w,c
  1299  0012B4  B4D8               	btfsc	status,2,c
  1300  0012B6  BE70               	btfsc	printf@exp+1,7,c
  1301  0012B8  D05E               	goto	l2494
  1302  0012BA  5070               	movf	printf@exp+1,w,c
  1303  0012BC  E106               	bnz	l2480
  1304  0012BE  0E02               	movlw	2
  1305  0012C0  5C6F               	subwf	printf@exp,w,c
  1306  0012C2  B0D8               	btfsc	status,0,c
  1307  0012C4  D002               	goto	l2480
  1308  0012C6  D057               	goto	l2494
  1309  0012C8  D000               	goto	l2480
  1310  0012CA                     l2480:
  1311                           
  1312                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1313  0012CA  C071  F001         	movff	printf@tmpval,___ftge@ff1
  1314  0012CE  C072  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1315  0012D2  C073  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1316  0012D6  0E70               	movlw	112
  1317  0012D8  6E04               	movwf	___ftge@ff2,c
  1318  0012DA  0E89               	movlw	137
  1319  0012DC  6E05               	movwf	___ftge@ff2+1,c
  1320  0012DE  0E40               	movlw	64
  1321  0012E0  6E06               	movwf	___ftge@ff2+2,c
  1322  0012E2  ECD9  F012         	call	___ftge	;wreg free
  1323  0012E6  B0D8               	btfsc	status,0,c
  1324  0012E8  D002               	goto	l2484
  1325                           
  1326                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1327  0012EA  0EF7               	movlw	247
  1328  0012EC  D001               	goto	L1
  1329  0012EE                     l2484:
  1330                           
  1331                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1332  0012EE  0EF8               	movlw	248
  1333  0012F0                     L1:
  1334  0012F0  266F               	addwf	printf@exp,f,c
  1335  0012F2  0EFF               	movlw	255
  1336  0012F4  2270               	addwfc	printf@exp+1,f,c
  1337  0012F6  D000               	goto	l2486
  1338  0012F8                     l2486:
  1339                           
  1340                           ;doprnt.c: 1124: }
  1341                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1342  0012F8  506F               	movf	printf@exp,w,c
  1343  0012FA  EC55  F00B         	call	_scale
  1344  0012FE  C03B  F071         	movff	?_scale,printf@tmpval
  1345  001302  C03C  F072         	movff	?_scale+1,printf@tmpval+1
  1346  001306  C03D  F073         	movff	?_scale+2,printf@tmpval+2
  1347                           
  1348                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1349  00130A  D017               	goto	l2490
  1350  00130C  C075  F001         	movff	printf@fval,__div_to_l_@f1
  1351  001310  C076  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1352  001314  C077  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1353  001318  C071  F004         	movff	printf@tmpval,__div_to_l_@f2
  1354  00131C  C072  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1355  001320  C073  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1356  001324  ECD1  F00F         	call	__div_to_l_	;wreg free
  1357  001328  C001  F06B         	movff	?__div_to_l_,printf@val
  1358  00132C  C002  F06C         	movff	?__div_to_l_+1,printf@val+1
  1359  001330  C003  F06D         	movff	?__div_to_l_+2,printf@val+2
  1360  001334  C004  F06E         	movff	?__div_to_l_+3,printf@val+3
  1361  001338  D017               	goto	l2492
  1362  00133A                     l2490:
  1363  00133A  C075  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1364  00133E  C076  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1365  001342  C077  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1366  001346  C071  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1367  00134A  C072  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1368  00134E  C073  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1369  001352  EC49  F00F         	call	__tdiv_to_l_	;wreg free
  1370  001356  C001  F06B         	movff	?__tdiv_to_l_,printf@val
  1371  00135A  C002  F06C         	movff	?__tdiv_to_l_+1,printf@val+1
  1372  00135E  C003  F06D         	movff	?__tdiv_to_l_+2,printf@val+2
  1373  001362  C004  F06E         	movff	?__tdiv_to_l_+3,printf@val+3
  1374  001366  D000               	goto	l2492
  1375  001368                     l2492:
  1376                           
  1377                           ;doprnt.c: 1129: fval = 0.0;
  1378  001368  0E00               	movlw	0
  1379  00136A  6E75               	movwf	printf@fval,c
  1380  00136C  0E00               	movlw	0
  1381  00136E  6E76               	movwf	printf@fval+1,c
  1382  001370  0E00               	movlw	0
  1383  001372  6E77               	movwf	printf@fval+2,c
  1384                           
  1385                           ;doprnt.c: 1130: } else {
  1386  001374  D033               	goto	l2498
  1387  001376                     l2494:
  1388                           
  1389                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1390  001376  C075  F018         	movff	printf@fval,___fttol@f1
  1391  00137A  C076  F019         	movff	printf@fval+1,___fttol@f1+1
  1392  00137E  C077  F01A         	movff	printf@fval+2,___fttol@f1+2
  1393  001382  EC47  F011         	call	___fttol	;wreg free
  1394  001386  C018  F06B         	movff	?___fttol,printf@val
  1395  00138A  C019  F06C         	movff	?___fttol+1,printf@val+1
  1396  00138E  C01A  F06D         	movff	?___fttol+2,printf@val+2
  1397  001392  C01B  F06E         	movff	?___fttol+3,printf@val+3
  1398                           
  1399                           ;doprnt.c: 1132: fval -= (double)val;
  1400  001396  C075  F051         	movff	printf@fval,___ftsub@f1
  1401  00139A  C076  F052         	movff	printf@fval+1,___ftsub@f1+1
  1402  00139E  C077  F053         	movff	printf@fval+2,___ftsub@f1+2
  1403  0013A2  C06B  F009         	movff	printf@val,___lltoft@c
  1404  0013A6  C06C  F00A         	movff	printf@val+1,___lltoft@c+1
  1405  0013AA  C06D  F00B         	movff	printf@val+2,___lltoft@c+2
  1406  0013AE  C06E  F00C         	movff	printf@val+3,___lltoft@c+3
  1407  0013B2  EC5F  F014         	call	___lltoft	;wreg free
  1408  0013B6  C009  F054         	movff	?___lltoft,___ftsub@f2
  1409  0013BA  C00A  F055         	movff	?___lltoft+1,___ftsub@f2+1
  1410  0013BE  C00B  F056         	movff	?___lltoft+2,___ftsub@f2+2
  1411  0013C2  EC8F  F014         	call	___ftsub	;wreg free
  1412  0013C6  C051  F075         	movff	?___ftsub,printf@fval
  1413  0013CA  C052  F076         	movff	?___ftsub+1,printf@fval+1
  1414  0013CE  C053  F077         	movff	?___ftsub+2,printf@fval+2
  1415                           
  1416                           ;doprnt.c: 1133: exp = 0;
  1417  0013D2  0E00               	movlw	0
  1418  0013D4  6E70               	movwf	printf@exp+1,c
  1419  0013D6  0E00               	movlw	0
  1420  0013D8  6E6F               	movwf	printf@exp,c
  1421  0013DA  D000               	goto	l2498
  1422  0013DC                     l2498:
  1423                           
  1424                           ;doprnt.c: 1134: }
  1425                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1426  0013DC  0E01               	movlw	1
  1427  0013DE  6E78               	movwf	printf@c,c
  1428  0013E0                     l2500:
  1429  0013E0  0E0A               	movlw	10
  1430  0013E2  1878               	xorwf	printf@c,w,c
  1431  0013E4  B4D8               	btfsc	status,2,c
  1432  0013E6  D01C               	goto	l2512
  1433  0013E8  D001               	goto	l2504
  1434  0013EA  D01A               	goto	l2512
  1435  0013EC                     l2504:
  1436                           
  1437                           ;doprnt.c: 1137: if(val < dpowers[c])
  1438  0013EC  5078               	movf	printf@c,w,c
  1439  0013EE  0D04               	mullw	4
  1440  0013F0  0E01               	movlw	low _dpowers
  1441  0013F2  24F3               	addwf	prodl,w,c
  1442  0013F4  6EF6               	movwf	tblptrl,c
  1443  0013F6  0E10               	movlw	high _dpowers
  1444  0013F8  20F4               	addwfc	prodh,w,c
  1445  0013FA  6EF7               	movwf	tblptrh,c
  1446  0013FC                     	if	0	;There are less than 3 active tblptr bytes
  1447  0013FC                     	endif
  1448  0013FC  0009               	tblrd		*+
  1449  0013FE  50F5               	movf	tablat,w,c
  1450  001400  5C6B               	subwf	printf@val,w,c
  1451  001402  0009               	tblrd		*+
  1452  001404  50F5               	movf	tablat,w,c
  1453  001406  586C               	subwfb	printf@val+1,w,c
  1454  001408  0009               	tblrd		*+
  1455  00140A  50F5               	movf	tablat,w,c
  1456  00140C  586D               	subwfb	printf@val+2,w,c
  1457  00140E  0009               	tblrd		*+
  1458  001410  50F5               	movf	tablat,w,c
  1459  001412  586E               	subwfb	printf@val+3,w,c
  1460  001414  A0D8               	btfss	status,0,c
  1461  001416  D004               	goto	l2512
  1462  001418  D001               	goto	l2508
  1463                           
  1464                           ;doprnt.c: 1138: break;
  1465  00141A  D002               	goto	l2512
  1466  00141C                     l2508:
  1467  00141C  2A78               	incf	printf@c,f,c
  1468  00141E  D7E0               	goto	l2500
  1469  001420                     l2512:
  1470                           
  1471                           ;doprnt.c: 1175: {
  1472                           ;doprnt.c: 1188: if(flag & 0x03)
  1473  001420  0E03               	movlw	3
  1474  001422  1467               	andwf	printf@flag,w,c
  1475  001424  6E5C               	movwf	??_printf& (0+255),c
  1476  001426  0E00               	movlw	0
  1477  001428  1468               	andwf	printf@flag+1,w,c
  1478  00142A  6E5D               	movwf	(??_printf+1)& (0+255),c
  1479  00142C  505C               	movf	??_printf,w,c
  1480  00142E  105D               	iorwf	??_printf+1,w,c
  1481  001430  B4D8               	btfsc	status,2,c
  1482  001432  D049               	goto	l2522
  1483                           
  1484                           ;doprnt.c: 1190: (putch('-') );
  1485  001434  0E2D               	movlw	45
  1486  001436  EC60  F015         	call	_putch
  1487                           
  1488                           ;doprnt.c: 1195: }
  1489                           ;doprnt.c: 1196: while(c--) {
  1490  00143A  D045               	goto	l2522
  1491  00143C                     l2516:
  1492                           
  1493                           ;doprnt.c: 1200: {
  1494                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1495  00143C  C06B  F001         	movff	printf@val,___lldiv@dividend
  1496  001440  C06C  F002         	movff	printf@val+1,___lldiv@dividend+1
  1497  001444  C06D  F003         	movff	printf@val+2,___lldiv@dividend+2
  1498  001448  C06E  F004         	movff	printf@val+3,___lldiv@dividend+3
  1499  00144C  5078               	movf	printf@c,w,c
  1500  00144E  0D04               	mullw	4
  1501  001450  0E01               	movlw	low _dpowers
  1502  001452  24F3               	addwf	prodl,w,c
  1503  001454  6EF6               	movwf	tblptrl,c
  1504  001456  0E10               	movlw	high _dpowers
  1505  001458  20F4               	addwfc	prodh,w,c
  1506  00145A  6EF7               	movwf	tblptrh,c
  1507  00145C                     	if	0	;There are less than 3 active tblptr bytes
  1508  00145C                     	endif
  1509  00145C  0009               	tblrd		*+
  1510  00145E  CFF5 F005          	movff	tablat,___lldiv@divisor
  1511  001462  0009               	tblrd		*+
  1512  001464  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1513  001468  0009               	tblrd		*+
  1514  00146A  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1515  00146E  000A               	tblrd		*-
  1516  001470  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1517  001474  EC24  F013         	call	___lldiv	;wreg free
  1518  001478  C001  F071         	movff	?___lldiv,printf@tmpval
  1519  00147C  C002  F072         	movff	?___lldiv+1,printf@tmpval+1
  1520  001480  C003  F073         	movff	?___lldiv+2,printf@tmpval+2
  1521  001484  C004  F074         	movff	?___lldiv+3,printf@tmpval+3
  1522                           
  1523                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1524  001488  C071  F001         	movff	printf@tmpval,___llmod@dividend
  1525  00148C  C072  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1526  001490  C073  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1527  001494  C074  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1528  001498  0E0A               	movlw	10
  1529  00149A  6E05               	movwf	___llmod@divisor,c
  1530  00149C  0E00               	movlw	0
  1531  00149E  6E06               	movwf	___llmod@divisor+1,c
  1532  0014A0  0E00               	movlw	0
  1533  0014A2  6E07               	movwf	___llmod@divisor+2,c
  1534  0014A4  0E00               	movlw	0
  1535  0014A6  6E08               	movwf	___llmod@divisor+3,c
  1536  0014A8  ECEF  F013         	call	___llmod	;wreg free
  1537  0014AC  C001  F071         	movff	?___llmod,printf@tmpval
  1538  0014B0  C002  F072         	movff	?___llmod+1,printf@tmpval+1
  1539  0014B4  C003  F073         	movff	?___llmod+2,printf@tmpval+2
  1540  0014B8  C004  F074         	movff	?___llmod+3,printf@tmpval+3
  1541                           
  1542                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1543  0014BC  5071               	movf	printf@tmpval,w,c
  1544  0014BE  0F30               	addlw	48
  1545  0014C0  EC60  F015         	call	_putch
  1546  0014C4  D000               	goto	l2522
  1547  0014C6                     l2522:
  1548  0014C6  0678               	decf	printf@c,f,c
  1549  0014C8  2878               	incf	printf@c,w,c
  1550  0014CA  B4D8               	btfsc	status,2,c
  1551  0014CC  D009               	goto	l2528
  1552  0014CE  D7B6               	goto	l2516
  1553                           
  1554                           ;doprnt.c: 1204: }
  1555                           ;doprnt.c: 1206: }
  1556                           ;doprnt.c: 1207: while(exp > 0) {
  1557  0014D0  D007               	goto	l2528
  1558  0014D2                     l2524:
  1559                           
  1560                           ;doprnt.c: 1208: (putch('0') );
  1561  0014D2  0E30               	movlw	48
  1562  0014D4  EC60  F015         	call	_putch
  1563                           
  1564                           ;doprnt.c: 1209: exp--;
  1565  0014D8  066F               	decf	printf@exp,f,c
  1566  0014DA  A0D8               	btfss	status,0,c
  1567  0014DC  0670               	decf	printf@exp+1,f,c
  1568  0014DE  D000               	goto	l2528
  1569  0014E0                     l2528:
  1570  0014E0  BE70               	btfsc	printf@exp+1,7,c
  1571  0014E2  D005               	goto	l2530
  1572  0014E4  5070               	movf	printf@exp+1,w,c
  1573  0014E6  E1F5               	bnz	l2524
  1574  0014E8  046F               	decf	printf@exp,w,c
  1575  0014EA  B0D8               	btfsc	status,0,c
  1576  0014EC  D7F2               	goto	l2524
  1577  0014EE                     l2530:
  1578                           
  1579                           ;doprnt.c: 1210: }
  1580                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1581  0014EE  BE6A               	btfsc	printf@prec+1,7,c
  1582  0014F0  D009               	goto	l172
  1583  0014F2  506A               	movf	printf@prec+1,w,c
  1584  0014F4  E104               	bnz	u2770
  1585  0014F6  0E09               	movlw	9
  1586  0014F8  5C69               	subwf	printf@prec,w,c
  1587  0014FA  A0D8               	btfss	status,0,c
  1588  0014FC  D003               	goto	l172
  1589  0014FE                     u2770:
  1590                           
  1591                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1592  0014FE  0E08               	movlw	8
  1593  001500  6E78               	movwf	printf@c,c
  1594  001502  D003               	goto	l2534
  1595  001504                     l172:
  1596                           
  1597                           ;doprnt.c: 1213: else
  1598                           ;doprnt.c: 1214: c = prec;
  1599  001504  C069  F078         	movff	printf@prec,printf@c
  1600  001508  D000               	goto	l2534
  1601  00150A                     l2534:
  1602                           
  1603                           ;doprnt.c: 1215: prec -= c;
  1604  00150A  5078               	movf	printf@c,w,c
  1605  00150C  5E69               	subwf	printf@prec,f,c
  1606  00150E  0E00               	movlw	0
  1607  001510  BE78               	btfsc	printf@c,7,c
  1608  001512  0EFF               	movlw	255
  1609  001514  5A6A               	subwfb	printf@prec+1,f,c
  1610                           
  1611                           ;doprnt.c: 1219: if(c)
  1612  001516  5078               	movf	printf@c,w,c
  1613  001518  B4D8               	btfsc	status,2,c
  1614  00151A  D004               	goto	l2540
  1615                           
  1616                           ;doprnt.c: 1221: (putch('.') );
  1617  00151C  0E2E               	movlw	46
  1618  00151E  EC60  F015         	call	_putch
  1619  001522  D000               	goto	l2540
  1620  001524                     l2540:
  1621                           
  1622                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1623  001524  5078               	movf	printf@c,w,c
  1624  001526  EC55  F00B         	call	_scale
  1625  00152A  C03B  F062         	movff	?_scale,_printf$1106
  1626  00152E  C03C  F063         	movff	?_scale+1,_printf$1106+1
  1627  001532  C03D  F064         	movff	?_scale+2,_printf$1106+2
  1628                           
  1629                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1630  001536  C075  F00C         	movff	printf@fval,___ftmul@f2
  1631  00153A  C076  F00D         	movff	printf@fval+1,___ftmul@f2+1
  1632  00153E  C077  F00E         	movff	printf@fval+2,___ftmul@f2+2
  1633  001542  C062  F009         	movff	_printf$1106,___ftmul@f1
  1634  001546  C063  F00A         	movff	_printf$1106+1,___ftmul@f1+1
  1635  00154A  C064  F00B         	movff	_printf$1106+2,___ftmul@f1+2
  1636  00154E  EC56  F010         	call	___ftmul	;wreg free
  1637  001552  C009  F018         	movff	?___ftmul,___fttol@f1
  1638  001556  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
  1639  00155A  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
  1640  00155E  EC47  F011         	call	___fttol	;wreg free
  1641  001562  C018  F06B         	movff	?___fttol,printf@val
  1642  001566  C019  F06C         	movff	?___fttol+1,printf@val+1
  1643  00156A  C01A  F06D         	movff	?___fttol+2,printf@val+2
  1644  00156E  C01B  F06E         	movff	?___fttol+3,printf@val+3
  1645                           
  1646                           ;doprnt.c: 1228: while(c--) {
  1647  001572  D06B               	goto	l2550
  1648  001574                     l2544:
  1649                           
  1650                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  1651  001574  C06B  F001         	movff	printf@val,___lldiv@dividend
  1652  001578  C06C  F002         	movff	printf@val+1,___lldiv@dividend+1
  1653  00157C  C06D  F003         	movff	printf@val+2,___lldiv@dividend+2
  1654  001580  C06E  F004         	movff	printf@val+3,___lldiv@dividend+3
  1655  001584  5078               	movf	printf@c,w,c
  1656  001586  0D04               	mullw	4
  1657  001588  0E01               	movlw	low _dpowers
  1658  00158A  24F3               	addwf	prodl,w,c
  1659  00158C  6EF6               	movwf	tblptrl,c
  1660  00158E  0E10               	movlw	high _dpowers
  1661  001590  20F4               	addwfc	prodh,w,c
  1662  001592  6EF7               	movwf	tblptrh,c
  1663  001594                     	if	0	;There are less than 3 active tblptr bytes
  1664  001594                     	endif
  1665  001594  0009               	tblrd		*+
  1666  001596  CFF5 F005          	movff	tablat,___lldiv@divisor
  1667  00159A  0009               	tblrd		*+
  1668  00159C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1669  0015A0  0009               	tblrd		*+
  1670  0015A2  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1671  0015A6  000A               	tblrd		*-
  1672  0015A8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1673  0015AC  EC24  F013         	call	___lldiv	;wreg free
  1674  0015B0  C001  F071         	movff	?___lldiv,printf@tmpval
  1675  0015B4  C002  F072         	movff	?___lldiv+1,printf@tmpval+1
  1676  0015B8  C003  F073         	movff	?___lldiv+2,printf@tmpval+2
  1677  0015BC  C004  F074         	movff	?___lldiv+3,printf@tmpval+3
  1678                           
  1679                           ;doprnt.c: 1230: tmpval.vd %= 10;
  1680  0015C0  C071  F001         	movff	printf@tmpval,___llmod@dividend
  1681  0015C4  C072  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1682  0015C8  C073  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1683  0015CC  C074  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1684  0015D0  0E0A               	movlw	10
  1685  0015D2  6E05               	movwf	___llmod@divisor,c
  1686  0015D4  0E00               	movlw	0
  1687  0015D6  6E06               	movwf	___llmod@divisor+1,c
  1688  0015D8  0E00               	movlw	0
  1689  0015DA  6E07               	movwf	___llmod@divisor+2,c
  1690  0015DC  0E00               	movlw	0
  1691  0015DE  6E08               	movwf	___llmod@divisor+3,c
  1692  0015E0  ECEF  F013         	call	___llmod	;wreg free
  1693  0015E4  C001  F071         	movff	?___llmod,printf@tmpval
  1694  0015E8  C002  F072         	movff	?___llmod+1,printf@tmpval+1
  1695  0015EC  C003  F073         	movff	?___llmod+2,printf@tmpval+2
  1696  0015F0  C004  F074         	movff	?___llmod+3,printf@tmpval+3
  1697                           
  1698                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  1699  0015F4  5071               	movf	printf@tmpval,w,c
  1700  0015F6  0F30               	addlw	48
  1701  0015F8  EC60  F015         	call	_putch
  1702                           
  1703                           ;doprnt.c: 1232: val %= dpowers[c];
  1704  0015FC  C06B  F001         	movff	printf@val,___llmod@dividend
  1705  001600  C06C  F002         	movff	printf@val+1,___llmod@dividend+1
  1706  001604  C06D  F003         	movff	printf@val+2,___llmod@dividend+2
  1707  001608  C06E  F004         	movff	printf@val+3,___llmod@dividend+3
  1708  00160C  5078               	movf	printf@c,w,c
  1709  00160E  0D04               	mullw	4
  1710  001610  0E01               	movlw	low _dpowers
  1711  001612  24F3               	addwf	prodl,w,c
  1712  001614  6EF6               	movwf	tblptrl,c
  1713  001616  0E10               	movlw	high _dpowers
  1714  001618  20F4               	addwfc	prodh,w,c
  1715  00161A  6EF7               	movwf	tblptrh,c
  1716  00161C                     	if	0	;There are less than 3 active tblptr bytes
  1717  00161C                     	endif
  1718  00161C  0009               	tblrd		*+
  1719  00161E  CFF5 F005          	movff	tablat,___llmod@divisor
  1720  001622  0009               	tblrd		*+
  1721  001624  CFF5 F006          	movff	tablat,___llmod@divisor+1
  1722  001628  0009               	tblrd		*+
  1723  00162A  CFF5 F007          	movff	tablat,___llmod@divisor+2
  1724  00162E  000A               	tblrd		*-
  1725  001630  CFF5 F008          	movff	tablat,___llmod@divisor+3
  1726  001634  ECEF  F013         	call	___llmod	;wreg free
  1727  001638  C001  F06B         	movff	?___llmod,printf@val
  1728  00163C  C002  F06C         	movff	?___llmod+1,printf@val+1
  1729  001640  C003  F06D         	movff	?___llmod+2,printf@val+2
  1730  001644  C004  F06E         	movff	?___llmod+3,printf@val+3
  1731  001648  D000               	goto	l2550
  1732  00164A                     l2550:
  1733  00164A  0678               	decf	printf@c,f,c
  1734  00164C  2878               	incf	printf@c,w,c
  1735  00164E  B4D8               	btfsc	status,2,c
  1736  001650  D009               	goto	l2556
  1737  001652  D790               	goto	l2544
  1738                           
  1739                           ;doprnt.c: 1233: }
  1740                           ;doprnt.c: 1235: while(prec) {
  1741  001654  D007               	goto	l2556
  1742  001656                     l2552:
  1743                           
  1744                           ;doprnt.c: 1236: (putch('0') );
  1745  001656  0E30               	movlw	48
  1746  001658  EC60  F015         	call	_putch
  1747                           
  1748                           ;doprnt.c: 1237: prec--;
  1749  00165C  0669               	decf	printf@prec,f,c
  1750  00165E  A0D8               	btfss	status,0,c
  1751  001660  066A               	decf	printf@prec+1,f,c
  1752  001662  D000               	goto	l2556
  1753  001664                     l2556:
  1754  001664  5069               	movf	printf@prec,w,c
  1755  001666  106A               	iorwf	printf@prec+1,w,c
  1756  001668  B4D8               	btfsc	status,2,c
  1757  00166A  D010               	goto	l2562
  1758  00166C  D7F4               	goto	l2552
  1759                           
  1760                           ;doprnt.c: 1238: }
  1761                           ;doprnt.c: 1245: continue;
  1762  00166E  D00E               	goto	l2562
  1763  001670                     l2558:
  1764                           
  1765                           ;doprnt.c: 1246: }
  1766                           ;doprnt.c: 1422: {
  1767                           ;doprnt.c: 1438: if(flag & 0x03)
  1768  001670  0E03               	movlw	3
  1769  001672  1467               	andwf	printf@flag,w,c
  1770  001674  6E5C               	movwf	??_printf& (0+255),c
  1771  001676  0E00               	movlw	0
  1772  001678  1468               	andwf	printf@flag+1,w,c
  1773  00167A  6E5D               	movwf	(??_printf+1)& (0+255),c
  1774  00167C  505C               	movf	??_printf,w,c
  1775  00167E  105D               	iorwf	??_printf+1,w,c
  1776  001680  B4D8               	btfsc	status,2,c
  1777  001682  D004               	goto	l2562
  1778                           
  1779                           ;doprnt.c: 1439: (putch('-') );
  1780  001684  0E2D               	movlw	45
  1781  001686  EC60  F015         	call	_putch
  1782  00168A  D000               	goto	l2562
  1783  00168C                     l2562:
  1784  00168C  C057  FFF6         	movff	printf@f,tblptrl
  1785  001690  C058  FFF7         	movff	printf@f+1,tblptrh
  1786  001694  4A57               	infsnz	printf@f,f,c
  1787  001696  2A58               	incf	printf@f+1,f,c
  1788  001698                     	if	0	;tblptru may be non-zero
  1789  001698                     	endif
  1790  001698                     	if	0	;tblptru may be non-zero
  1791  001698                     	endif
  1792  001698  0008               	tblrd		*
  1793  00169A  CFF5 F078          	movff	tablat,printf@c
  1794  00169E  5078               	movf	printf@c,w,c
  1795  0016A0  B4D8               	btfsc	status,2,c
  1796  0016A2  D002               	goto	l183
  1797  0016A4  D4F4               	goto	l2414
  1798  0016A6  D000               	goto	l183
  1799  0016A8                     l183:
  1800  0016A8  0012               	return		;funcret
  1801  0016AA                     __end_of_printf:
  1802                           	opt stack 0
  1803                           tblptru	equ	0xFF8
  1804                           tblptrh	equ	0xFF7
  1805                           tblptrl	equ	0xFF6
  1806                           tablat	equ	0xFF5
  1807                           prodh	equ	0xFF4
  1808                           prodl	equ	0xFF3
  1809                           postinc0	equ	0xFEE
  1810                           wreg	equ	0xFE8
  1811                           postdec1	equ	0xFE5
  1812                           fsr1l	equ	0xFE1
  1813                           postinc2	equ	0xFDE
  1814                           postdec2	equ	0xFDD
  1815                           fsr2h	equ	0xFDA
  1816                           fsr2l	equ	0xFD9
  1817                           status	equ	0xFD8
  1818                           
  1819 ;; *************** function _scale *****************
  1820 ;; Defined at:
  1821 ;;		line 425 in file "E:\XC8\sources\common\doprnt.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  scl             1    wreg     char 
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;  scl             1   64[COMRAM] char 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  3   58[COMRAM] char 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1835 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;Total ram usage:        7 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:    2
  1842 ;; This function calls:
  1843 ;;		___awdiv
  1844 ;;		___awmod
  1845 ;;		___ftmul
  1846 ;;		___wmul
  1847 ;; This function is called by:
  1848 ;;		_printf
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           	psect	text2
  1853  0016AA                     __ptext2:
  1854                           	opt stack 0
  1855  0016AA                     _scale:
  1856                           	opt stack 27
  1857                           
  1858                           ;incstack = 0
  1859                           ;scale@scl stored from wreg
  1860  0016AA  6E41               	movwf	scale@scl,c
  1861                           
  1862                           ;doprnt.c: 428: if(scl < 0) {
  1863  0016AC  AE41               	btfss	scale@scl,7,c
  1864  0016AE  D0EF               	goto	l2094
  1865                           
  1866                           ;doprnt.c: 429: scl = -scl;
  1867  0016B0  6C41               	negf	scale@scl,c
  1868                           
  1869                           ;doprnt.c: 430: if(scl>=110)
  1870  0016B2  5041               	movf	scale@scl,w,c
  1871  0016B4  0A80               	xorlw	128
  1872  0016B6  0F12               	addlw	-238
  1873  0016B8  A0D8               	btfss	status,0,c
  1874  0016BA  D08D               	goto	l2084
  1875                           
  1876                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  1877  0016BC  0E00               	movlw	0
  1878  0016BE  6E38               	movwf	___wmul@multiplicand+1,c
  1879  0016C0  0E03               	movlw	3
  1880  0016C2  6E37               	movwf	___wmul@multiplicand,c
  1881  0016C4  0E00               	movlw	0
  1882  0016C6  6E30               	movwf	___awdiv@divisor+1,c
  1883  0016C8  0E0A               	movlw	10
  1884  0016CA  6E2F               	movwf	___awdiv@divisor,c
  1885  0016CC  0E00               	movlw	0
  1886  0016CE  6E2A               	movwf	___awmod@divisor+1,c
  1887  0016D0  0E64               	movlw	100
  1888  0016D2  6E29               	movwf	___awmod@divisor,c
  1889  0016D4  5041               	movf	scale@scl,w,c
  1890  0016D6  6E27               	movwf	___awmod@dividend,c
  1891  0016D8  6A28               	clrf	___awmod@dividend+1,c
  1892  0016DA  BE27               	btfsc	___awmod@dividend,7,c
  1893  0016DC  0628               	decf	___awmod@dividend+1,f,c
  1894  0016DE  ECAE  F013         	call	___awmod	;wreg free
  1895  0016E2  C027  F02D         	movff	?___awmod,___awdiv@dividend
  1896  0016E6  C028  F02E         	movff	?___awmod+1,___awdiv@dividend+1
  1897  0016EA  EC8E  F012         	call	___awdiv	;wreg free
  1898  0016EE  0E09               	movlw	9
  1899  0016F0  242D               	addwf	?___awdiv,w,c
  1900  0016F2  6E35               	movwf	___wmul@multiplier,c
  1901  0016F4  0E00               	movlw	0
  1902  0016F6  202E               	addwfc	?___awdiv+1,w,c
  1903  0016F8  6E36               	movwf	___wmul@multiplier+1,c
  1904  0016FA  ECE9  F014         	call	___wmul	;wreg free
  1905  0016FE  0E29               	movlw	low __npowers_
  1906  001700  2435               	addwf	?___wmul,w,c
  1907  001702  6EF6               	movwf	tblptrl,c
  1908  001704  0E10               	movlw	high __npowers_
  1909  001706  2036               	addwfc	?___wmul+1,w,c
  1910  001708  6EF7               	movwf	tblptrh,c
  1911  00170A                     	if	0	;There are less than 3 active tblptr bytes
  1912  00170A                     	endif
  1913  00170A  0009               	tblrd		*+
  1914  00170C  CFF5 F00C          	movff	tablat,___ftmul@f2
  1915  001710  0009               	tblrd		*+
  1916  001712  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  1917  001716  000A               	tblrd		*-
  1918  001718  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  1919  00171C  0E00               	movlw	0
  1920  00171E  6E30               	movwf	___awdiv@divisor+1,c
  1921  001720  0E64               	movlw	100
  1922  001722  6E2F               	movwf	___awdiv@divisor,c
  1923  001724  5041               	movf	scale@scl,w,c
  1924  001726  6E2D               	movwf	___awdiv@dividend,c
  1925  001728  6A2E               	clrf	___awdiv@dividend+1,c
  1926  00172A  BE2D               	btfsc	___awdiv@dividend,7,c
  1927  00172C  062E               	decf	___awdiv@dividend+1,f,c
  1928  00172E  EC8E  F012         	call	___awdiv	;wreg free
  1929  001732  0E12               	movlw	18
  1930  001734  242D               	addwf	?___awdiv,w,c
  1931  001736  6E35               	movwf	___wmul@multiplier,c
  1932  001738  0E00               	movlw	0
  1933  00173A  202E               	addwfc	?___awdiv+1,w,c
  1934  00173C  6E36               	movwf	___wmul@multiplier+1,c
  1935  00173E  0E00               	movlw	0
  1936  001740  6E38               	movwf	___wmul@multiplicand+1,c
  1937  001742  0E03               	movlw	3
  1938  001744  6E37               	movwf	___wmul@multiplicand,c
  1939  001746  ECE9  F014         	call	___wmul	;wreg free
  1940  00174A  0E29               	movlw	low __npowers_
  1941  00174C  2435               	addwf	?___wmul,w,c
  1942  00174E  6EF6               	movwf	tblptrl,c
  1943  001750  0E10               	movlw	high __npowers_
  1944  001752  2036               	addwfc	?___wmul+1,w,c
  1945  001754  6EF7               	movwf	tblptrh,c
  1946  001756                     	if	0	;There are less than 3 active tblptr bytes
  1947  001756                     	endif
  1948  001756  0009               	tblrd		*+
  1949  001758  CFF5 F009          	movff	tablat,___ftmul@f1
  1950  00175C  0009               	tblrd		*+
  1951  00175E  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  1952  001762  000A               	tblrd		*-
  1953  001764  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  1954  001768  EC56  F010         	call	___ftmul	;wreg free
  1955  00176C  C009  F03E         	movff	?___ftmul,_scale$1105
  1956  001770  C00A  F03F         	movff	?___ftmul+1,_scale$1105+1
  1957  001774  C00B  F040         	movff	?___ftmul+2,_scale$1105+2
  1958                           
  1959                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  1960  001778  C03E  F009         	movff	_scale$1105,___ftmul@f1
  1961  00177C  C03F  F00A         	movff	_scale$1105+1,___ftmul@f1+1
  1962  001780  C040  F00B         	movff	_scale$1105+2,___ftmul@f1+2
  1963  001784  0E00               	movlw	0
  1964  001786  6E38               	movwf	___wmul@multiplicand+1,c
  1965  001788  0E03               	movlw	3
  1966  00178A  6E37               	movwf	___wmul@multiplicand,c
  1967  00178C  0E00               	movlw	0
  1968  00178E  6E2A               	movwf	___awmod@divisor+1,c
  1969  001790  0E0A               	movlw	10
  1970  001792  6E29               	movwf	___awmod@divisor,c
  1971  001794  5041               	movf	scale@scl,w,c
  1972  001796  6E27               	movwf	___awmod@dividend,c
  1973  001798  6A28               	clrf	___awmod@dividend+1,c
  1974  00179A  BE27               	btfsc	___awmod@dividend,7,c
  1975  00179C  0628               	decf	___awmod@dividend+1,f,c
  1976  00179E  ECAE  F013         	call	___awmod	;wreg free
  1977  0017A2  C027  F035         	movff	?___awmod,___wmul@multiplier
  1978  0017A6  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  1979  0017AA  ECE9  F014         	call	___wmul	;wreg free
  1980  0017AE  0E29               	movlw	low __npowers_
  1981  0017B0  2435               	addwf	?___wmul,w,c
  1982  0017B2  6EF6               	movwf	tblptrl,c
  1983  0017B4  0E10               	movlw	high __npowers_
  1984  0017B6  2036               	addwfc	?___wmul+1,w,c
  1985  0017B8  6EF7               	movwf	tblptrh,c
  1986  0017BA                     	if	0	;There are less than 3 active tblptr bytes
  1987  0017BA                     	endif
  1988  0017BA  0009               	tblrd		*+
  1989  0017BC  CFF5 F00C          	movff	tablat,___ftmul@f2
  1990  0017C0  0009               	tblrd		*+
  1991  0017C2  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  1992  0017C6  000A               	tblrd		*-
  1993  0017C8  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  1994  0017CC  EC56  F010         	call	___ftmul	;wreg free
  1995  0017D0  D141               	goto	L5
  1996  0017D2  D15A               	goto	l127
  1997  0017D4  D054               	goto	l2090
  1998  0017D6                     l2084:
  1999                           
  2000                           ;doprnt.c: 432: else if(scl > 10)
  2001  0017D6  5041               	movf	scale@scl,w,c
  2002  0017D8  0A80               	xorlw	128
  2003  0017DA  0F75               	addlw	-139
  2004  0017DC  A0D8               	btfss	status,0,c
  2005  0017DE  D04F               	goto	l2090
  2006                           
  2007                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2008  0017E0  0E00               	movlw	0
  2009  0017E2  6E30               	movwf	___awdiv@divisor+1,c
  2010  0017E4  0E0A               	movlw	10
  2011  0017E6  6E2F               	movwf	___awdiv@divisor,c
  2012  0017E8  5041               	movf	scale@scl,w,c
  2013  0017EA  6E2D               	movwf	___awdiv@dividend,c
  2014  0017EC  6A2E               	clrf	___awdiv@dividend+1,c
  2015  0017EE  BE2D               	btfsc	___awdiv@dividend,7,c
  2016  0017F0  062E               	decf	___awdiv@dividend+1,f,c
  2017  0017F2  EC8E  F012         	call	___awdiv	;wreg free
  2018  0017F6  0E09               	movlw	9
  2019  0017F8  242D               	addwf	?___awdiv,w,c
  2020  0017FA  6E35               	movwf	___wmul@multiplier,c
  2021  0017FC  0E00               	movlw	0
  2022  0017FE  202E               	addwfc	?___awdiv+1,w,c
  2023  001800  6E36               	movwf	___wmul@multiplier+1,c
  2024  001802  0E00               	movlw	0
  2025  001804  6E38               	movwf	___wmul@multiplicand+1,c
  2026  001806  0E03               	movlw	3
  2027  001808  6E37               	movwf	___wmul@multiplicand,c
  2028  00180A  ECE9  F014         	call	___wmul	;wreg free
  2029  00180E  0E29               	movlw	low __npowers_
  2030  001810  2435               	addwf	?___wmul,w,c
  2031  001812  6EF6               	movwf	tblptrl,c
  2032  001814  0E10               	movlw	high __npowers_
  2033  001816  2036               	addwfc	?___wmul+1,w,c
  2034  001818  6EF7               	movwf	tblptrh,c
  2035  00181A                     	if	0	;There are less than 3 active tblptr bytes
  2036  00181A                     	endif
  2037  00181A  0009               	tblrd		*+
  2038  00181C  CFF5 F009          	movff	tablat,___ftmul@f1
  2039  001820  0009               	tblrd		*+
  2040  001822  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2041  001826  000A               	tblrd		*-
  2042  001828  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2043  00182C  0E00               	movlw	0
  2044  00182E  6E38               	movwf	___wmul@multiplicand+1,c
  2045  001830  0E03               	movlw	3
  2046  001832  6E37               	movwf	___wmul@multiplicand,c
  2047  001834  0E00               	movlw	0
  2048  001836  6E2A               	movwf	___awmod@divisor+1,c
  2049  001838  0E0A               	movlw	10
  2050  00183A  6E29               	movwf	___awmod@divisor,c
  2051  00183C  5041               	movf	scale@scl,w,c
  2052  00183E  6E27               	movwf	___awmod@dividend,c
  2053  001840  6A28               	clrf	___awmod@dividend+1,c
  2054  001842  BE27               	btfsc	___awmod@dividend,7,c
  2055  001844  0628               	decf	___awmod@dividend+1,f,c
  2056  001846  ECAE  F013         	call	___awmod	;wreg free
  2057  00184A  C027  F035         	movff	?___awmod,___wmul@multiplier
  2058  00184E  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2059  001852  ECE9  F014         	call	___wmul	;wreg free
  2060  001856  0E29               	movlw	low __npowers_
  2061  001858  2435               	addwf	?___wmul,w,c
  2062  00185A  6EF6               	movwf	tblptrl,c
  2063  00185C  0E10               	movlw	high __npowers_
  2064  00185E  2036               	addwfc	?___wmul+1,w,c
  2065  001860  6EF7               	movwf	tblptrh,c
  2066  001862                     	if	0	;There are less than 3 active tblptr bytes
  2067  001862                     	endif
  2068  001862  0009               	tblrd		*+
  2069  001864  CFF5 F00C          	movff	tablat,___ftmul@f2
  2070  001868  0009               	tblrd		*+
  2071  00186A  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2072  00186E  000A               	tblrd		*-
  2073  001870  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2074  001874  EC56  F010         	call	___ftmul	;wreg free
  2075  001878  D0ED               	goto	L5
  2076  00187A  D106               	goto	l127
  2077  00187C  D000               	goto	l2090
  2078  00187E                     l2090:
  2079                           
  2080                           ;doprnt.c: 434: return _npowers_[scl];
  2081  00187E  5041               	movf	scale@scl,w,c
  2082  001880  0D03               	mullw	3
  2083  001882  0E29               	movlw	low __npowers_
  2084  001884  24F3               	addwf	prodl,w,c
  2085  001886  6EF6               	movwf	tblptrl,c
  2086  001888  0E10               	movlw	high __npowers_
  2087  00188A  D0F2               	goto	L4
  2088  00188C  D0FD               	goto	l127
  2089  00188E                     l2094:
  2090                           
  2091                           ;doprnt.c: 435: }
  2092                           ;doprnt.c: 436: if(scl>=110)
  2093  00188E  5041               	movf	scale@scl,w,c
  2094  001890  0A80               	xorlw	128
  2095  001892  0F12               	addlw	-238
  2096  001894  A0D8               	btfss	status,0,c
  2097  001896  D08D               	goto	l2102
  2098                           
  2099                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2100  001898  0E00               	movlw	0
  2101  00189A  6E38               	movwf	___wmul@multiplicand+1,c
  2102  00189C  0E03               	movlw	3
  2103  00189E  6E37               	movwf	___wmul@multiplicand,c
  2104  0018A0  0E00               	movlw	0
  2105  0018A2  6E30               	movwf	___awdiv@divisor+1,c
  2106  0018A4  0E0A               	movlw	10
  2107  0018A6  6E2F               	movwf	___awdiv@divisor,c
  2108  0018A8  0E00               	movlw	0
  2109  0018AA  6E2A               	movwf	___awmod@divisor+1,c
  2110  0018AC  0E64               	movlw	100
  2111  0018AE  6E29               	movwf	___awmod@divisor,c
  2112  0018B0  5041               	movf	scale@scl,w,c
  2113  0018B2  6E27               	movwf	___awmod@dividend,c
  2114  0018B4  6A28               	clrf	___awmod@dividend+1,c
  2115  0018B6  BE27               	btfsc	___awmod@dividend,7,c
  2116  0018B8  0628               	decf	___awmod@dividend+1,f,c
  2117  0018BA  ECAE  F013         	call	___awmod	;wreg free
  2118  0018BE  C027  F02D         	movff	?___awmod,___awdiv@dividend
  2119  0018C2  C028  F02E         	movff	?___awmod+1,___awdiv@dividend+1
  2120  0018C6  EC8E  F012         	call	___awdiv	;wreg free
  2121  0018CA  0E09               	movlw	9
  2122  0018CC  242D               	addwf	?___awdiv,w,c
  2123  0018CE  6E35               	movwf	___wmul@multiplier,c
  2124  0018D0  0E00               	movlw	0
  2125  0018D2  202E               	addwfc	?___awdiv+1,w,c
  2126  0018D4  6E36               	movwf	___wmul@multiplier+1,c
  2127  0018D6  ECE9  F014         	call	___wmul	;wreg free
  2128  0018DA  0E50               	movlw	low __powers_
  2129  0018DC  2435               	addwf	?___wmul,w,c
  2130  0018DE  6EF6               	movwf	tblptrl,c
  2131  0018E0  0E10               	movlw	high __powers_
  2132  0018E2  2036               	addwfc	?___wmul+1,w,c
  2133  0018E4  6EF7               	movwf	tblptrh,c
  2134  0018E6                     	if	0	;There are less than 3 active tblptr bytes
  2135  0018E6                     	endif
  2136  0018E6  0009               	tblrd		*+
  2137  0018E8  CFF5 F00C          	movff	tablat,___ftmul@f2
  2138  0018EC  0009               	tblrd		*+
  2139  0018EE  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2140  0018F2  000A               	tblrd		*-
  2141  0018F4  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2142  0018F8  0E00               	movlw	0
  2143  0018FA  6E30               	movwf	___awdiv@divisor+1,c
  2144  0018FC  0E64               	movlw	100
  2145  0018FE  6E2F               	movwf	___awdiv@divisor,c
  2146  001900  5041               	movf	scale@scl,w,c
  2147  001902  6E2D               	movwf	___awdiv@dividend,c
  2148  001904  6A2E               	clrf	___awdiv@dividend+1,c
  2149  001906  BE2D               	btfsc	___awdiv@dividend,7,c
  2150  001908  062E               	decf	___awdiv@dividend+1,f,c
  2151  00190A  EC8E  F012         	call	___awdiv	;wreg free
  2152  00190E  0E12               	movlw	18
  2153  001910  242D               	addwf	?___awdiv,w,c
  2154  001912  6E35               	movwf	___wmul@multiplier,c
  2155  001914  0E00               	movlw	0
  2156  001916  202E               	addwfc	?___awdiv+1,w,c
  2157  001918  6E36               	movwf	___wmul@multiplier+1,c
  2158  00191A  0E00               	movlw	0
  2159  00191C  6E38               	movwf	___wmul@multiplicand+1,c
  2160  00191E  0E03               	movlw	3
  2161  001920  6E37               	movwf	___wmul@multiplicand,c
  2162  001922  ECE9  F014         	call	___wmul	;wreg free
  2163  001926  0E50               	movlw	low __powers_
  2164  001928  2435               	addwf	?___wmul,w,c
  2165  00192A  6EF6               	movwf	tblptrl,c
  2166  00192C  0E10               	movlw	high __powers_
  2167  00192E  2036               	addwfc	?___wmul+1,w,c
  2168  001930  6EF7               	movwf	tblptrh,c
  2169  001932                     	if	0	;There are less than 3 active tblptr bytes
  2170  001932                     	endif
  2171  001932  0009               	tblrd		*+
  2172  001934  CFF5 F009          	movff	tablat,___ftmul@f1
  2173  001938  0009               	tblrd		*+
  2174  00193A  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2175  00193E  000A               	tblrd		*-
  2176  001940  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2177  001944  EC56  F010         	call	___ftmul	;wreg free
  2178  001948  C009  F03E         	movff	?___ftmul,_scale$1105
  2179  00194C  C00A  F03F         	movff	?___ftmul+1,_scale$1105+1
  2180  001950  C00B  F040         	movff	?___ftmul+2,_scale$1105+2
  2181                           
  2182                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2183  001954  C03E  F009         	movff	_scale$1105,___ftmul@f1
  2184  001958  C03F  F00A         	movff	_scale$1105+1,___ftmul@f1+1
  2185  00195C  C040  F00B         	movff	_scale$1105+2,___ftmul@f1+2
  2186  001960  0E00               	movlw	0
  2187  001962  6E38               	movwf	___wmul@multiplicand+1,c
  2188  001964  0E03               	movlw	3
  2189  001966  6E37               	movwf	___wmul@multiplicand,c
  2190  001968  0E00               	movlw	0
  2191  00196A  6E2A               	movwf	___awmod@divisor+1,c
  2192  00196C  0E0A               	movlw	10
  2193  00196E  6E29               	movwf	___awmod@divisor,c
  2194  001970  5041               	movf	scale@scl,w,c
  2195  001972  6E27               	movwf	___awmod@dividend,c
  2196  001974  6A28               	clrf	___awmod@dividend+1,c
  2197  001976  BE27               	btfsc	___awmod@dividend,7,c
  2198  001978  0628               	decf	___awmod@dividend+1,f,c
  2199  00197A  ECAE  F013         	call	___awmod	;wreg free
  2200  00197E  C027  F035         	movff	?___awmod,___wmul@multiplier
  2201  001982  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2202  001986  ECE9  F014         	call	___wmul	;wreg free
  2203  00198A  0E50               	movlw	low __powers_
  2204  00198C  2435               	addwf	?___wmul,w,c
  2205  00198E  6EF6               	movwf	tblptrl,c
  2206  001990  0E10               	movlw	high __powers_
  2207  001992  2036               	addwfc	?___wmul+1,w,c
  2208  001994  6EF7               	movwf	tblptrh,c
  2209  001996                     	if	0	;There are less than 3 active tblptr bytes
  2210  001996                     	endif
  2211  001996  0009               	tblrd		*+
  2212  001998  CFF5 F00C          	movff	tablat,___ftmul@f2
  2213  00199C  0009               	tblrd		*+
  2214  00199E  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2215  0019A2  000A               	tblrd		*-
  2216  0019A4  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2217  0019A8  EC56  F010         	call	___ftmul	;wreg free
  2218  0019AC  D053               	goto	L5
  2219  0019AE  D06C               	goto	l127
  2220  0019B0  D059               	goto	l2108
  2221  0019B2                     l2102:
  2222                           
  2223                           ;doprnt.c: 438: else if(scl > 10)
  2224  0019B2  5041               	movf	scale@scl,w,c
  2225  0019B4  0A80               	xorlw	128
  2226  0019B6  0F75               	addlw	-139
  2227  0019B8  A0D8               	btfss	status,0,c
  2228  0019BA  D054               	goto	l2108
  2229                           
  2230                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2231  0019BC  0E00               	movlw	0
  2232  0019BE  6E30               	movwf	___awdiv@divisor+1,c
  2233  0019C0  0E0A               	movlw	10
  2234  0019C2  6E2F               	movwf	___awdiv@divisor,c
  2235  0019C4  5041               	movf	scale@scl,w,c
  2236  0019C6  6E2D               	movwf	___awdiv@dividend,c
  2237  0019C8  6A2E               	clrf	___awdiv@dividend+1,c
  2238  0019CA  BE2D               	btfsc	___awdiv@dividend,7,c
  2239  0019CC  062E               	decf	___awdiv@dividend+1,f,c
  2240  0019CE  EC8E  F012         	call	___awdiv	;wreg free
  2241  0019D2  0E09               	movlw	9
  2242  0019D4  242D               	addwf	?___awdiv,w,c
  2243  0019D6  6E35               	movwf	___wmul@multiplier,c
  2244  0019D8  0E00               	movlw	0
  2245  0019DA  202E               	addwfc	?___awdiv+1,w,c
  2246  0019DC  6E36               	movwf	___wmul@multiplier+1,c
  2247  0019DE  0E00               	movlw	0
  2248  0019E0  6E38               	movwf	___wmul@multiplicand+1,c
  2249  0019E2  0E03               	movlw	3
  2250  0019E4  6E37               	movwf	___wmul@multiplicand,c
  2251  0019E6  ECE9  F014         	call	___wmul	;wreg free
  2252  0019EA  0E50               	movlw	low __powers_
  2253  0019EC  2435               	addwf	?___wmul,w,c
  2254  0019EE  6EF6               	movwf	tblptrl,c
  2255  0019F0  0E10               	movlw	high __powers_
  2256  0019F2  2036               	addwfc	?___wmul+1,w,c
  2257  0019F4  6EF7               	movwf	tblptrh,c
  2258  0019F6                     	if	0	;There are less than 3 active tblptr bytes
  2259  0019F6                     	endif
  2260  0019F6  0009               	tblrd		*+
  2261  0019F8  CFF5 F009          	movff	tablat,___ftmul@f1
  2262  0019FC  0009               	tblrd		*+
  2263  0019FE  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2264  001A02  000A               	tblrd		*-
  2265  001A04  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2266  001A08  0E00               	movlw	0
  2267  001A0A  6E38               	movwf	___wmul@multiplicand+1,c
  2268  001A0C  0E03               	movlw	3
  2269  001A0E  6E37               	movwf	___wmul@multiplicand,c
  2270  001A10  0E00               	movlw	0
  2271  001A12  6E2A               	movwf	___awmod@divisor+1,c
  2272  001A14  0E0A               	movlw	10
  2273  001A16  6E29               	movwf	___awmod@divisor,c
  2274  001A18  5041               	movf	scale@scl,w,c
  2275  001A1A  6E27               	movwf	___awmod@dividend,c
  2276  001A1C  6A28               	clrf	___awmod@dividend+1,c
  2277  001A1E  BE27               	btfsc	___awmod@dividend,7,c
  2278  001A20  0628               	decf	___awmod@dividend+1,f,c
  2279  001A22  ECAE  F013         	call	___awmod	;wreg free
  2280  001A26  C027  F035         	movff	?___awmod,___wmul@multiplier
  2281  001A2A  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2282  001A2E  ECE9  F014         	call	___wmul	;wreg free
  2283  001A32  0E50               	movlw	low __powers_
  2284  001A34  2435               	addwf	?___wmul,w,c
  2285  001A36  6EF6               	movwf	tblptrl,c
  2286  001A38  0E10               	movlw	high __powers_
  2287  001A3A  2036               	addwfc	?___wmul+1,w,c
  2288  001A3C  6EF7               	movwf	tblptrh,c
  2289  001A3E                     	if	0	;There are less than 3 active tblptr bytes
  2290  001A3E                     	endif
  2291  001A3E  0009               	tblrd		*+
  2292  001A40  CFF5 F00C          	movff	tablat,___ftmul@f2
  2293  001A44  0009               	tblrd		*+
  2294  001A46  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2295  001A4A  000A               	tblrd		*-
  2296  001A4C  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2297  001A50  EC56  F010         	call	___ftmul	;wreg free
  2298  001A54                     L5:
  2299  001A54  C009  F03B         	movff	?___ftmul,?_scale
  2300  001A58  C00A  F03C         	movff	?___ftmul+1,?_scale+1
  2301  001A5C  C00B  F03D         	movff	?___ftmul+2,?_scale+2
  2302  001A60  D013               	goto	l127
  2303  001A62  D000               	goto	l2108
  2304  001A64                     l2108:
  2305                           
  2306                           ;doprnt.c: 440: return _powers_[scl];
  2307  001A64  5041               	movf	scale@scl,w,c
  2308  001A66  0D03               	mullw	3
  2309  001A68  0E50               	movlw	low __powers_
  2310  001A6A  24F3               	addwf	prodl,w,c
  2311  001A6C  6EF6               	movwf	tblptrl,c
  2312  001A6E  0E10               	movlw	high __powers_
  2313  001A70                     L4:
  2314  001A70  20F4               	addwfc	prodh,w,c
  2315  001A72  6EF7               	movwf	tblptrh,c
  2316  001A74                     	if	0	;There are less than 3 active tblptr bytes
  2317  001A74                     	endif
  2318  001A74  0009               	tblrd		*+
  2319  001A76  CFF5 F03B          	movff	tablat,?_scale
  2320  001A7A  0009               	tblrd		*+
  2321  001A7C  CFF5 F03C          	movff	tablat,?_scale+1
  2322  001A80  000A               	tblrd		*-
  2323  001A82  CFF5 F03D          	movff	tablat,?_scale+2
  2324  001A86  D000               	goto	l127
  2325  001A88                     l127:
  2326  001A88  0012               	return		;funcret
  2327  001A8A                     __end_of_scale:
  2328                           	opt stack 0
  2329                           tblptru	equ	0xFF8
  2330                           tblptrh	equ	0xFF7
  2331                           tblptrl	equ	0xFF6
  2332                           tablat	equ	0xFF5
  2333                           prodh	equ	0xFF4
  2334                           prodl	equ	0xFF3
  2335                           postinc0	equ	0xFEE
  2336                           wreg	equ	0xFE8
  2337                           postdec1	equ	0xFE5
  2338                           fsr1l	equ	0xFE1
  2339                           postinc2	equ	0xFDE
  2340                           postdec2	equ	0xFDD
  2341                           fsr2h	equ	0xFDA
  2342                           fsr2l	equ	0xFD9
  2343                           status	equ	0xFD8
  2344                           
  2345 ;; *************** function _putch *****************
  2346 ;; Defined at:
  2347 ;;		line 25 in file "Lab5p1.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  c               1    wreg     unsigned char 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  c               1    0[COMRAM] unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;		None               void
  2354 ;; Registers used:
  2355 ;;		wreg
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;Total ram usage:        1 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_printf
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text3
  2375  002AC0                     __ptext3:
  2376                           	opt stack 0
  2377  002AC0                     _putch:
  2378                           	opt stack 29
  2379                           
  2380                           ;incstack = 0
  2381                           ;putch@c stored from wreg
  2382  002AC0  6E01               	movwf	putch@c,c
  2383                           
  2384                           ;Lab5p1.c: 27: while (!TRMT);
  2385  002AC2  D000               	goto	l60
  2386  002AC4                     l60:
  2387  002AC4  A2AC               	btfss	4012,1,c	;volatile
  2388  002AC6  D7FE               	goto	l60
  2389                           
  2390                           ;Lab5p1.c: 28: TXREG = c;
  2391  002AC8  C001  FFAD         	movff	putch@c,4013	;volatile
  2392  002ACC  0012               	return		;funcret
  2393  002ACE                     __end_of_putch:
  2394                           	opt stack 0
  2395                           tblptru	equ	0xFF8
  2396                           tblptrh	equ	0xFF7
  2397                           tblptrl	equ	0xFF6
  2398                           tablat	equ	0xFF5
  2399                           prodh	equ	0xFF4
  2400                           prodl	equ	0xFF3
  2401                           postinc0	equ	0xFEE
  2402                           wreg	equ	0xFE8
  2403                           postdec1	equ	0xFE5
  2404                           fsr1l	equ	0xFE1
  2405                           postinc2	equ	0xFDE
  2406                           postdec2	equ	0xFDD
  2407                           fsr2h	equ	0xFDA
  2408                           fsr2l	equ	0xFD9
  2409                           status	equ	0xFD8
  2410                           
  2411 ;; *************** function _fround *****************
  2412 ;; Defined at:
  2413 ;;		line 409 in file "E:\XC8\sources\common\doprnt.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  prec            1    wreg     unsigned char 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  prec            1   67[COMRAM] unsigned char 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  3   58[COMRAM] unsigned char 
  2420 ;; Registers used:
  2421 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2427 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;Total ram usage:       10 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; Hardware stack levels required when called:    2
  2434 ;; This function calls:
  2435 ;;		___awdiv
  2436 ;;		___awmod
  2437 ;;		___ftmul
  2438 ;;		___wmul
  2439 ;; This function is called by:
  2440 ;;		_printf
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text4
  2445  001A8A                     __ptext4:
  2446                           	opt stack 0
  2447  001A8A                     _fround:
  2448                           	opt stack 27
  2449                           
  2450                           ;incstack = 0
  2451                           ;fround@prec stored from wreg
  2452  001A8A  6E44               	movwf	fround@prec,c
  2453                           
  2454                           ;doprnt.c: 413: if(prec>=110)
  2455  001A8C  0E6D               	movlw	109
  2456  001A8E  6444               	cpfsgt	fround@prec,c
  2457  001A90  D09B               	goto	l2062
  2458                           
  2459                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2460  001A92  0E00               	movlw	0
  2461  001A94  6E38               	movwf	___wmul@multiplicand+1,c
  2462  001A96  0E03               	movlw	3
  2463  001A98  6E37               	movwf	___wmul@multiplicand,c
  2464  001A9A  0E00               	movlw	0
  2465  001A9C  6E30               	movwf	___awdiv@divisor+1,c
  2466  001A9E  0E0A               	movlw	10
  2467  001AA0  6E2F               	movwf	___awdiv@divisor,c
  2468  001AA2  0E00               	movlw	0
  2469  001AA4  6E2A               	movwf	___awmod@divisor+1,c
  2470  001AA6  0E64               	movlw	100
  2471  001AA8  6E29               	movwf	___awmod@divisor,c
  2472  001AAA  C044  F027         	movff	fround@prec,___awmod@dividend
  2473  001AAE  6A28               	clrf	___awmod@dividend+1,c
  2474  001AB0  ECAE  F013         	call	___awmod	;wreg free
  2475  001AB4  C027  F02D         	movff	?___awmod,___awdiv@dividend
  2476  001AB8  C028  F02E         	movff	?___awmod+1,___awdiv@dividend+1
  2477  001ABC  EC8E  F012         	call	___awdiv	;wreg free
  2478  001AC0  0E09               	movlw	9
  2479  001AC2  242D               	addwf	?___awdiv,w,c
  2480  001AC4  6E35               	movwf	___wmul@multiplier,c
  2481  001AC6  0E00               	movlw	0
  2482  001AC8  202E               	addwfc	?___awdiv+1,w,c
  2483  001ACA  6E36               	movwf	___wmul@multiplier+1,c
  2484  001ACC  ECE9  F014         	call	___wmul	;wreg free
  2485  001AD0  0E29               	movlw	low __npowers_
  2486  001AD2  2435               	addwf	?___wmul,w,c
  2487  001AD4  6EF6               	movwf	tblptrl,c
  2488  001AD6  0E10               	movlw	high __npowers_
  2489  001AD8  2036               	addwfc	?___wmul+1,w,c
  2490  001ADA  6EF7               	movwf	tblptrh,c
  2491  001ADC                     	if	0	;There are less than 3 active tblptr bytes
  2492  001ADC                     	endif
  2493  001ADC  0009               	tblrd		*+
  2494  001ADE  CFF5 F00C          	movff	tablat,___ftmul@f2
  2495  001AE2  0009               	tblrd		*+
  2496  001AE4  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2497  001AE8  000A               	tblrd		*-
  2498  001AEA  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2499  001AEE  0E00               	movlw	0
  2500  001AF0  6E30               	movwf	___awdiv@divisor+1,c
  2501  001AF2  0E64               	movlw	100
  2502  001AF4  6E2F               	movwf	___awdiv@divisor,c
  2503  001AF6  C044  F02D         	movff	fround@prec,___awdiv@dividend
  2504  001AFA  6A2E               	clrf	___awdiv@dividend+1,c
  2505  001AFC  EC8E  F012         	call	___awdiv	;wreg free
  2506  001B00  0E12               	movlw	18
  2507  001B02  242D               	addwf	?___awdiv,w,c
  2508  001B04  6E35               	movwf	___wmul@multiplier,c
  2509  001B06  0E00               	movlw	0
  2510  001B08  202E               	addwfc	?___awdiv+1,w,c
  2511  001B0A  6E36               	movwf	___wmul@multiplier+1,c
  2512  001B0C  0E00               	movlw	0
  2513  001B0E  6E38               	movwf	___wmul@multiplicand+1,c
  2514  001B10  0E03               	movlw	3
  2515  001B12  6E37               	movwf	___wmul@multiplicand,c
  2516  001B14  ECE9  F014         	call	___wmul	;wreg free
  2517  001B18  0E29               	movlw	low __npowers_
  2518  001B1A  2435               	addwf	?___wmul,w,c
  2519  001B1C  6EF6               	movwf	tblptrl,c
  2520  001B1E  0E10               	movlw	high __npowers_
  2521  001B20  2036               	addwfc	?___wmul+1,w,c
  2522  001B22  6EF7               	movwf	tblptrh,c
  2523  001B24                     	if	0	;There are less than 3 active tblptr bytes
  2524  001B24                     	endif
  2525  001B24  0009               	tblrd		*+
  2526  001B26  CFF5 F009          	movff	tablat,___ftmul@f1
  2527  001B2A  0009               	tblrd		*+
  2528  001B2C  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2529  001B30  000A               	tblrd		*-
  2530  001B32  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2531  001B36  EC56  F010         	call	___ftmul	;wreg free
  2532  001B3A  C009  F041         	movff	?___ftmul,_fround$1103
  2533  001B3E  C00A  F042         	movff	?___ftmul+1,_fround$1103+1
  2534  001B42  C00B  F043         	movff	?___ftmul+2,_fround$1103+2
  2535                           
  2536                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2537  001B46  0E00               	movlw	0
  2538  001B48  6E38               	movwf	___wmul@multiplicand+1,c
  2539  001B4A  0E03               	movlw	3
  2540  001B4C  6E37               	movwf	___wmul@multiplicand,c
  2541  001B4E  0E00               	movlw	0
  2542  001B50  6E2A               	movwf	___awmod@divisor+1,c
  2543  001B52  0E0A               	movlw	10
  2544  001B54  6E29               	movwf	___awmod@divisor,c
  2545  001B56  C044  F027         	movff	fround@prec,___awmod@dividend
  2546  001B5A  6A28               	clrf	___awmod@dividend+1,c
  2547  001B5C  ECAE  F013         	call	___awmod	;wreg free
  2548  001B60  C027  F035         	movff	?___awmod,___wmul@multiplier
  2549  001B64  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2550  001B68  ECE9  F014         	call	___wmul	;wreg free
  2551  001B6C  0E29               	movlw	low __npowers_
  2552  001B6E  2435               	addwf	?___wmul,w,c
  2553  001B70  6EF6               	movwf	tblptrl,c
  2554  001B72  0E10               	movlw	high __npowers_
  2555  001B74  2036               	addwfc	?___wmul+1,w,c
  2556  001B76  6EF7               	movwf	tblptrh,c
  2557  001B78                     	if	0	;There are less than 3 active tblptr bytes
  2558  001B78                     	endif
  2559  001B78  0009               	tblrd		*+
  2560  001B7A  CFF5 F00C          	movff	tablat,___ftmul@f2
  2561  001B7E  0009               	tblrd		*+
  2562  001B80  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2563  001B84  000A               	tblrd		*-
  2564  001B86  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2565  001B8A  C041  F009         	movff	_fround$1103,___ftmul@f1
  2566  001B8E  C042  F00A         	movff	_fround$1103+1,___ftmul@f1+1
  2567  001B92  C043  F00B         	movff	_fround$1103+2,___ftmul@f1+2
  2568  001B96  EC56  F010         	call	___ftmul	;wreg free
  2569  001B9A  C009  F03E         	movff	?___ftmul,_fround$1104
  2570  001B9E  C00A  F03F         	movff	?___ftmul+1,_fround$1104+1
  2571  001BA2  C00B  F040         	movff	?___ftmul+2,_fround$1104+2
  2572                           
  2573                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2574  001BA6  C03E  F009         	movff	_fround$1104,___ftmul@f1
  2575  001BAA  C03F  F00A         	movff	_fround$1104+1,___ftmul@f1+1
  2576  001BAE  C040  F00B         	movff	_fround$1104+2,___ftmul@f1+2
  2577  001BB2  0E00               	movlw	0
  2578  001BB4  6E0C               	movwf	___ftmul@f2,c
  2579  001BB6  0E00               	movlw	0
  2580  001BB8  6E0D               	movwf	___ftmul@f2+1,c
  2581  001BBA  0E3F               	movlw	63
  2582  001BBC  6E0E               	movwf	___ftmul@f2+2,c
  2583  001BBE  EC56  F010         	call	___ftmul	;wreg free
  2584  001BC2  D07D               	goto	L7
  2585  001BC4  D083               	goto	l120
  2586  001BC6  D062               	goto	l2070
  2587  001BC8                     l2062:
  2588                           
  2589                           ;doprnt.c: 415: else if(prec > 10)
  2590  001BC8  0E0A               	movlw	10
  2591  001BCA  6444               	cpfsgt	fround@prec,c
  2592  001BCC  D05F               	goto	l2070
  2593                           
  2594                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2595  001BCE  0E00               	movlw	0
  2596  001BD0  6E38               	movwf	___wmul@multiplicand+1,c
  2597  001BD2  0E03               	movlw	3
  2598  001BD4  6E37               	movwf	___wmul@multiplicand,c
  2599  001BD6  0E00               	movlw	0
  2600  001BD8  6E2A               	movwf	___awmod@divisor+1,c
  2601  001BDA  0E0A               	movlw	10
  2602  001BDC  6E29               	movwf	___awmod@divisor,c
  2603  001BDE  C044  F027         	movff	fround@prec,___awmod@dividend
  2604  001BE2  6A28               	clrf	___awmod@dividend+1,c
  2605  001BE4  ECAE  F013         	call	___awmod	;wreg free
  2606  001BE8  C027  F035         	movff	?___awmod,___wmul@multiplier
  2607  001BEC  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2608  001BF0  ECE9  F014         	call	___wmul	;wreg free
  2609  001BF4  0E29               	movlw	low __npowers_
  2610  001BF6  2435               	addwf	?___wmul,w,c
  2611  001BF8  6EF6               	movwf	tblptrl,c
  2612  001BFA  0E10               	movlw	high __npowers_
  2613  001BFC  2036               	addwfc	?___wmul+1,w,c
  2614  001BFE  6EF7               	movwf	tblptrh,c
  2615  001C00                     	if	0	;There are less than 3 active tblptr bytes
  2616  001C00                     	endif
  2617  001C00  0009               	tblrd		*+
  2618  001C02  CFF5 F00C          	movff	tablat,___ftmul@f2
  2619  001C06  0009               	tblrd		*+
  2620  001C08  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2621  001C0C  000A               	tblrd		*-
  2622  001C0E  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2623  001C12  0E00               	movlw	0
  2624  001C14  6E30               	movwf	___awdiv@divisor+1,c
  2625  001C16  0E0A               	movlw	10
  2626  001C18  6E2F               	movwf	___awdiv@divisor,c
  2627  001C1A  C044  F02D         	movff	fround@prec,___awdiv@dividend
  2628  001C1E  6A2E               	clrf	___awdiv@dividend+1,c
  2629  001C20  EC8E  F012         	call	___awdiv	;wreg free
  2630  001C24  0E09               	movlw	9
  2631  001C26  242D               	addwf	?___awdiv,w,c
  2632  001C28  6E35               	movwf	___wmul@multiplier,c
  2633  001C2A  0E00               	movlw	0
  2634  001C2C  202E               	addwfc	?___awdiv+1,w,c
  2635  001C2E  6E36               	movwf	___wmul@multiplier+1,c
  2636  001C30  0E00               	movlw	0
  2637  001C32  6E38               	movwf	___wmul@multiplicand+1,c
  2638  001C34  0E03               	movlw	3
  2639  001C36  6E37               	movwf	___wmul@multiplicand,c
  2640  001C38  ECE9  F014         	call	___wmul	;wreg free
  2641  001C3C  0E29               	movlw	low __npowers_
  2642  001C3E  2435               	addwf	?___wmul,w,c
  2643  001C40  6EF6               	movwf	tblptrl,c
  2644  001C42  0E10               	movlw	high __npowers_
  2645  001C44  2036               	addwfc	?___wmul+1,w,c
  2646  001C46  6EF7               	movwf	tblptrh,c
  2647  001C48                     	if	0	;There are less than 3 active tblptr bytes
  2648  001C48                     	endif
  2649  001C48  0009               	tblrd		*+
  2650  001C4A  CFF5 F009          	movff	tablat,___ftmul@f1
  2651  001C4E  0009               	tblrd		*+
  2652  001C50  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2653  001C54  000A               	tblrd		*-
  2654  001C56  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2655  001C5A  EC56  F010         	call	___ftmul	;wreg free
  2656  001C5E  C009  F041         	movff	?___ftmul,_fround$1103
  2657  001C62  C00A  F042         	movff	?___ftmul+1,_fround$1103+1
  2658  001C66  C00B  F043         	movff	?___ftmul+2,_fround$1103+2
  2659                           
  2660                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2661  001C6A  C041  F009         	movff	_fround$1103,___ftmul@f1
  2662  001C6E  C042  F00A         	movff	_fround$1103+1,___ftmul@f1+1
  2663  001C72  C043  F00B         	movff	_fround$1103+2,___ftmul@f1+2
  2664  001C76  0E00               	movlw	0
  2665  001C78  6E0C               	movwf	___ftmul@f2,c
  2666  001C7A  0E00               	movlw	0
  2667  001C7C  6E0D               	movwf	___ftmul@f2+1,c
  2668  001C7E  0E3F               	movlw	63
  2669  001C80  6E0E               	movwf	___ftmul@f2+2,c
  2670  001C82  EC56  F010         	call	___ftmul	;wreg free
  2671  001C86  D01B               	goto	L7
  2672  001C88  D021               	goto	l120
  2673  001C8A  D000               	goto	l2070
  2674  001C8C                     l2070:
  2675                           
  2676                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  2677  001C8C  5044               	movf	fround@prec,w,c
  2678  001C8E  0D03               	mullw	3
  2679  001C90  0E29               	movlw	low __npowers_
  2680  001C92  24F3               	addwf	prodl,w,c
  2681  001C94  6EF6               	movwf	tblptrl,c
  2682  001C96  0E10               	movlw	high __npowers_
  2683  001C98  20F4               	addwfc	prodh,w,c
  2684  001C9A  6EF7               	movwf	tblptrh,c
  2685  001C9C                     	if	0	;There are less than 3 active tblptr bytes
  2686  001C9C                     	endif
  2687  001C9C  0009               	tblrd		*+
  2688  001C9E  CFF5 F009          	movff	tablat,___ftmul@f1
  2689  001CA2  0009               	tblrd		*+
  2690  001CA4  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2691  001CA8  000A               	tblrd		*-
  2692  001CAA  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2693  001CAE  0E00               	movlw	0
  2694  001CB0  6E0C               	movwf	___ftmul@f2,c
  2695  001CB2  0E00               	movlw	0
  2696  001CB4  6E0D               	movwf	___ftmul@f2+1,c
  2697  001CB6  0E3F               	movlw	63
  2698  001CB8  6E0E               	movwf	___ftmul@f2+2,c
  2699  001CBA  EC56  F010         	call	___ftmul	;wreg free
  2700  001CBE                     L7:
  2701  001CBE  C009  F03B         	movff	?___ftmul,?_fround
  2702  001CC2  C00A  F03C         	movff	?___ftmul+1,?_fround+1
  2703  001CC6  C00B  F03D         	movff	?___ftmul+2,?_fround+2
  2704  001CCA  D000               	goto	l120
  2705  001CCC                     l120:
  2706  001CCC  0012               	return		;funcret
  2707  001CCE                     __end_of_fround:
  2708                           	opt stack 0
  2709                           tblptru	equ	0xFF8
  2710                           tblptrh	equ	0xFF7
  2711                           tblptrl	equ	0xFF6
  2712                           tablat	equ	0xFF5
  2713                           prodh	equ	0xFF4
  2714                           prodl	equ	0xFF3
  2715                           postinc0	equ	0xFEE
  2716                           wreg	equ	0xFE8
  2717                           postdec1	equ	0xFE5
  2718                           fsr1l	equ	0xFE1
  2719                           postinc2	equ	0xFDE
  2720                           postdec2	equ	0xFDD
  2721                           fsr2h	equ	0xFDA
  2722                           fsr2l	equ	0xFD9
  2723                           status	equ	0xFD8
  2724                           
  2725 ;; *************** function ___wmul *****************
  2726 ;; Defined at:
  2727 ;;		line 15 in file "E:\XC8\sources\common\Umul16.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  multiplier      2   52[COMRAM] unsigned int 
  2730 ;;  multiplicand    2   54[COMRAM] unsigned int 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  product         2   56[COMRAM] unsigned int 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  2   52[COMRAM] unsigned int 
  2735 ;; Registers used:
  2736 ;;		wreg, status,2, status,0, prodl, prodh
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;Total ram usage:        6 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_fround
  2752 ;;		_scale
  2753 ;;		_printf
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text5
  2758  0029D2                     __ptext5:
  2759                           	opt stack 0
  2760  0029D2                     ___wmul:
  2761                           	opt stack 28
  2762                           
  2763                           ;incstack = 0
  2764  0029D2  5035               	movf	___wmul@multiplier,w,c
  2765  0029D4  0237               	mulwf	___wmul@multiplicand,c
  2766  0029D6  CFF3 F039          	movff	prodl,___wmul@product
  2767  0029DA  CFF4 F03A          	movff	prodh,___wmul@product+1
  2768  0029DE  5035               	movf	___wmul@multiplier,w,c
  2769  0029E0  0238               	mulwf	___wmul@multiplicand+1,c
  2770  0029E2  50F3               	movf	prodl,w,c
  2771  0029E4  263A               	addwf	___wmul@product+1,f,c
  2772  0029E6  5036               	movf	___wmul@multiplier+1,w,c
  2773  0029E8  0237               	mulwf	___wmul@multiplicand,c
  2774  0029EA  50F3               	movf	prodl,w,c
  2775  0029EC  263A               	addwf	___wmul@product+1,f,c
  2776  0029EE  C039  F035         	movff	___wmul@product,?___wmul
  2777  0029F2  C03A  F036         	movff	___wmul@product+1,?___wmul+1
  2778  0029F6  D000               	goto	l219
  2779  0029F8                     l219:
  2780  0029F8  0012               	return		;funcret
  2781  0029FA                     __end_of___wmul:
  2782                           	opt stack 0
  2783                           tblptru	equ	0xFF8
  2784                           tblptrh	equ	0xFF7
  2785                           tblptrl	equ	0xFF6
  2786                           tablat	equ	0xFF5
  2787                           prodh	equ	0xFF4
  2788                           prodl	equ	0xFF3
  2789                           postinc0	equ	0xFEE
  2790                           wreg	equ	0xFE8
  2791                           postdec1	equ	0xFE5
  2792                           fsr1l	equ	0xFE1
  2793                           postinc2	equ	0xFDE
  2794                           postdec2	equ	0xFDD
  2795                           fsr2h	equ	0xFDA
  2796                           fsr2l	equ	0xFD9
  2797                           status	equ	0xFD8
  2798                           
  2799 ;; *************** function ___ftmul *****************
  2800 ;; Defined at:
  2801 ;;		line 62 in file "E:\XC8\sources\common\ftmul.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  f1              3    8[COMRAM] float 
  2804 ;;  f2              3   11[COMRAM] float 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  2807 ;;  sign            1   22[COMRAM] unsigned char 
  2808 ;;  cntr            1   21[COMRAM] unsigned char 
  2809 ;;  exp             1   17[COMRAM] unsigned char 
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  3    8[COMRAM] float 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2, status,0, cstack
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2819 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;Total ram usage:       15 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; Hardware stack levels required when called:    1
  2826 ;; This function calls:
  2827 ;;		___ftpack
  2828 ;; This function is called by:
  2829 ;;		_main
  2830 ;;		_fround
  2831 ;;		_scale
  2832 ;;		_printf
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text6
  2837  0020AC                     __ptext6:
  2838                           	opt stack 0
  2839  0020AC                     ___ftmul:
  2840                           	opt stack 27
  2841                           
  2842                           ;incstack = 0
  2843  0020AC  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  2844  0020B0  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2845  0020B2  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2846  0020B4  340A               	rlcf	___ftmul@f1+1,w,c
  2847  0020B6  360F               	rlcf	??___ftmul& (0+255),f,c
  2848  0020B8  E301               	bnc	u1841
  2849  0020BA  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2850  0020BC                     u1841:
  2851  0020BC  500F               	movf	??___ftmul,w,c
  2852  0020BE  6E12               	movwf	___ftmul@exp,c
  2853  0020C0  5012               	movf	___ftmul@exp,w,c
  2854  0020C2  A4D8               	btfss	status,2,c
  2855  0020C4  D002               	goto	l1920
  2856  0020C6  D00E               	goto	l1922
  2857  0020C8  D06C               	goto	l648
  2858  0020CA                     l1920:
  2859  0020CA  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  2860  0020CE  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2861  0020D0  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2862  0020D2  340D               	rlcf	___ftmul@f2+1,w,c
  2863  0020D4  360F               	rlcf	??___ftmul& (0+255),f,c
  2864  0020D6  E301               	bnc	u1861
  2865  0020D8  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2866  0020DA                     u1861:
  2867  0020DA  500F               	movf	??___ftmul,w,c
  2868  0020DC  6E17               	movwf	___ftmul@sign,c
  2869  0020DE  5017               	movf	___ftmul@sign,w,c
  2870  0020E0  A4D8               	btfss	status,2,c
  2871  0020E2  D007               	goto	l1926
  2872  0020E4                     l1922:
  2873  0020E4  0E00               	movlw	0
  2874  0020E6  6E09               	movwf	?___ftmul,c
  2875  0020E8  0E00               	movlw	0
  2876  0020EA  6E0A               	movwf	?___ftmul+1,c
  2877  0020EC  0E00               	movlw	0
  2878  0020EE  6E0B               	movwf	?___ftmul+2,c
  2879  0020F0  D058               	goto	l648
  2880  0020F2                     l1926:
  2881  0020F2  5017               	movf	___ftmul@sign,w,c
  2882  0020F4  0F7B               	addlw	123
  2883  0020F6  2612               	addwf	___ftmul@exp,f,c
  2884  0020F8  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  2885  0020FC  500E               	movf	___ftmul@f2+2,w,c
  2886  0020FE  1A17               	xorwf	___ftmul@sign,f,c
  2887  002100  0E80               	movlw	128
  2888  002102  1617               	andwf	___ftmul@sign,f,c
  2889  002104  8E0A               	bsf	___ftmul@f1+1,7,c
  2890  002106  8E0D               	bsf	___ftmul@f2+1,7,c
  2891  002108  0EFF               	movlw	255
  2892  00210A  160C               	andwf	___ftmul@f2,f,c
  2893  00210C  0EFF               	movlw	255
  2894  00210E  160D               	andwf	___ftmul@f2+1,f,c
  2895  002110  0E00               	movlw	0
  2896  002112  160E               	andwf	___ftmul@f2+2,f,c
  2897  002114  0E00               	movlw	0
  2898  002116  6E13               	movwf	___ftmul@f3_as_product,c
  2899  002118  0E00               	movlw	0
  2900  00211A  6E14               	movwf	___ftmul@f3_as_product+1,c
  2901  00211C  0E00               	movlw	0
  2902  00211E  6E15               	movwf	___ftmul@f3_as_product+2,c
  2903  002120  0E07               	movlw	7
  2904  002122  6E16               	movwf	___ftmul@cntr,c
  2905  002124  D000               	goto	l1940
  2906  002126                     l1940:
  2907  002126  A009               	btfss	___ftmul@f1,0,c
  2908  002128  D007               	goto	l1944
  2909  00212A  500C               	movf	___ftmul@f2,w,c
  2910  00212C  2613               	addwf	___ftmul@f3_as_product,f,c
  2911  00212E  500D               	movf	___ftmul@f2+1,w,c
  2912  002130  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2913  002132  500E               	movf	___ftmul@f2+2,w,c
  2914  002134  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2915  002136  D000               	goto	l1944
  2916  002138                     l1944:
  2917  002138  90D8               	bcf	status,0,c
  2918  00213A  320B               	rrcf	___ftmul@f1+2,f,c
  2919  00213C  320A               	rrcf	___ftmul@f1+1,f,c
  2920  00213E  3209               	rrcf	___ftmul@f1,f,c
  2921  002140  90D8               	bcf	status,0,c
  2922  002142  360C               	rlcf	___ftmul@f2,f,c
  2923  002144  360D               	rlcf	___ftmul@f2+1,f,c
  2924  002146  360E               	rlcf	___ftmul@f2+2,f,c
  2925  002148  2E16               	decfsz	___ftmul@cntr,f,c
  2926  00214A  D7ED               	goto	l1940
  2927  00214C  D000               	goto	l1948
  2928  00214E                     l1948:
  2929  00214E  0E09               	movlw	9
  2930  002150  6E16               	movwf	___ftmul@cntr,c
  2931  002152  D000               	goto	l1950
  2932  002154                     l1950:
  2933  002154  A009               	btfss	___ftmul@f1,0,c
  2934  002156  D007               	goto	l1954
  2935  002158  500C               	movf	___ftmul@f2,w,c
  2936  00215A  2613               	addwf	___ftmul@f3_as_product,f,c
  2937  00215C  500D               	movf	___ftmul@f2+1,w,c
  2938  00215E  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2939  002160  500E               	movf	___ftmul@f2+2,w,c
  2940  002162  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2941  002164  D000               	goto	l1954
  2942  002166                     l1954:
  2943  002166  90D8               	bcf	status,0,c
  2944  002168  320B               	rrcf	___ftmul@f1+2,f,c
  2945  00216A  320A               	rrcf	___ftmul@f1+1,f,c
  2946  00216C  3209               	rrcf	___ftmul@f1,f,c
  2947  00216E  90D8               	bcf	status,0,c
  2948  002170  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  2949  002172  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  2950  002174  3213               	rrcf	___ftmul@f3_as_product,f,c
  2951  002176  2E16               	decfsz	___ftmul@cntr,f,c
  2952  002178  D7ED               	goto	l1950
  2953  00217A  D000               	goto	l1958
  2954  00217C                     l1958:
  2955  00217C  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2956  002180  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2957  002184  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2958  002188  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  2959  00218C  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  2960  002190  EC2B  F012         	call	___ftpack	;wreg free
  2961  002194  C001  F009         	movff	?___ftpack,?___ftmul
  2962  002198  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  2963  00219C  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  2964  0021A0  D000               	goto	l648
  2965  0021A2                     l648:
  2966  0021A2  0012               	return		;funcret
  2967  0021A4                     __end_of___ftmul:
  2968                           	opt stack 0
  2969                           tblptru	equ	0xFF8
  2970                           tblptrh	equ	0xFF7
  2971                           tblptrl	equ	0xFF6
  2972                           tablat	equ	0xFF5
  2973                           prodh	equ	0xFF4
  2974                           prodl	equ	0xFF3
  2975                           postinc0	equ	0xFEE
  2976                           wreg	equ	0xFE8
  2977                           postdec1	equ	0xFE5
  2978                           fsr1l	equ	0xFE1
  2979                           postinc2	equ	0xFDE
  2980                           postdec2	equ	0xFDD
  2981                           fsr2h	equ	0xFDA
  2982                           fsr2l	equ	0xFD9
  2983                           status	equ	0xFD8
  2984                           
  2985 ;; *************** function ___awmod *****************
  2986 ;; Defined at:
  2987 ;;		line 8 in file "E:\XC8\sources\common\awmod.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  dividend        2   38[COMRAM] int 
  2990 ;;  divisor         2   40[COMRAM] int 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  sign            1   43[COMRAM] unsigned char 
  2993 ;;  counter         1   42[COMRAM] unsigned char 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  2   38[COMRAM] int 
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3003 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;Total ram usage:        6 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_main
  3013 ;;		_fround
  3014 ;;		_scale
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text7
  3019  00275C                     __ptext7:
  3020                           	opt stack 0
  3021  00275C                     ___awmod:
  3022                           	opt stack 28
  3023                           
  3024                           ;incstack = 0
  3025  00275C  0E00               	movlw	0
  3026  00275E  6E2C               	movwf	___awmod@sign,c
  3027  002760  AE28               	btfss	___awmod@dividend+1,7,c
  3028  002762  D007               	goto	l2014
  3029  002764  6C27               	negf	___awmod@dividend,c
  3030  002766  1E28               	comf	___awmod@dividend+1,f,c
  3031  002768  B0D8               	btfsc	status,0,c
  3032  00276A  2A28               	incf	___awmod@dividend+1,f,c
  3033  00276C  0E01               	movlw	1
  3034  00276E  6E2C               	movwf	___awmod@sign,c
  3035  002770  D000               	goto	l2014
  3036  002772                     l2014:
  3037  002772  AE2A               	btfss	___awmod@divisor+1,7,c
  3038  002774  D005               	goto	l2018
  3039  002776  6C29               	negf	___awmod@divisor,c
  3040  002778  1E2A               	comf	___awmod@divisor+1,f,c
  3041  00277A  B0D8               	btfsc	status,0,c
  3042  00277C  2A2A               	incf	___awmod@divisor+1,f,c
  3043  00277E  D000               	goto	l2018
  3044  002780                     l2018:
  3045  002780  5029               	movf	___awmod@divisor,w,c
  3046  002782  102A               	iorwf	___awmod@divisor+1,w,c
  3047  002784  B4D8               	btfsc	status,2,c
  3048  002786  D01D               	goto	l2034
  3049  002788  0E01               	movlw	1
  3050  00278A  6E2B               	movwf	___awmod@counter,c
  3051  00278C  D005               	goto	l2024
  3052  00278E                     l2022:
  3053  00278E  90D8               	bcf	status,0,c
  3054  002790  3629               	rlcf	___awmod@divisor,f,c
  3055  002792  362A               	rlcf	___awmod@divisor+1,f,c
  3056  002794  2A2B               	incf	___awmod@counter,f,c
  3057  002796  D000               	goto	l2024
  3058  002798                     l2024:
  3059  002798  BE2A               	btfsc	___awmod@divisor+1,7,c
  3060  00279A  D002               	goto	l2026
  3061  00279C  D7F8               	goto	l2022
  3062  00279E  D000               	goto	l2026
  3063  0027A0                     l2026:
  3064  0027A0  5029               	movf	___awmod@divisor,w,c
  3065  0027A2  5C27               	subwf	___awmod@dividend,w,c
  3066  0027A4  502A               	movf	___awmod@divisor+1,w,c
  3067  0027A6  5828               	subwfb	___awmod@dividend+1,w,c
  3068  0027A8  A0D8               	btfss	status,0,c
  3069  0027AA  D005               	goto	l2030
  3070  0027AC  5029               	movf	___awmod@divisor,w,c
  3071  0027AE  5E27               	subwf	___awmod@dividend,f,c
  3072  0027B0  502A               	movf	___awmod@divisor+1,w,c
  3073  0027B2  5A28               	subwfb	___awmod@dividend+1,f,c
  3074  0027B4  D000               	goto	l2030
  3075  0027B6                     l2030:
  3076  0027B6  90D8               	bcf	status,0,c
  3077  0027B8  322A               	rrcf	___awmod@divisor+1,f,c
  3078  0027BA  3229               	rrcf	___awmod@divisor,f,c
  3079  0027BC  2E2B               	decfsz	___awmod@counter,f,c
  3080  0027BE  D7F0               	goto	l2026
  3081  0027C0  D000               	goto	l2034
  3082  0027C2                     l2034:
  3083  0027C2  502C               	movf	___awmod@sign,w,c
  3084  0027C4  B4D8               	btfsc	status,2,c
  3085  0027C6  D005               	goto	l2038
  3086  0027C8  6C27               	negf	___awmod@dividend,c
  3087  0027CA  1E28               	comf	___awmod@dividend+1,f,c
  3088  0027CC  B0D8               	btfsc	status,0,c
  3089  0027CE  2A28               	incf	___awmod@dividend+1,f,c
  3090  0027D0  D000               	goto	l2038
  3091  0027D2                     l2038:
  3092  0027D2  C027  F027         	movff	___awmod@dividend,?___awmod
  3093  0027D6  C028  F028         	movff	___awmod@dividend+1,?___awmod+1
  3094  0027DA  D000               	goto	l425
  3095  0027DC                     l425:
  3096  0027DC  0012               	return		;funcret
  3097  0027DE                     __end_of___awmod:
  3098                           	opt stack 0
  3099                           tblptru	equ	0xFF8
  3100                           tblptrh	equ	0xFF7
  3101                           tblptrl	equ	0xFF6
  3102                           tablat	equ	0xFF5
  3103                           prodh	equ	0xFF4
  3104                           prodl	equ	0xFF3
  3105                           postinc0	equ	0xFEE
  3106                           wreg	equ	0xFE8
  3107                           postdec1	equ	0xFE5
  3108                           fsr1l	equ	0xFE1
  3109                           postinc2	equ	0xFDE
  3110                           postdec2	equ	0xFDD
  3111                           fsr2h	equ	0xFDA
  3112                           fsr2l	equ	0xFD9
  3113                           status	equ	0xFD8
  3114                           
  3115 ;; *************** function ___awdiv *****************
  3116 ;; Defined at:
  3117 ;;		line 8 in file "E:\XC8\sources\common\awdiv.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  dividend        2   44[COMRAM] int 
  3120 ;;  divisor         2   46[COMRAM] int 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  quotient        2   50[COMRAM] int 
  3123 ;;  sign            1   49[COMRAM] unsigned char 
  3124 ;;  counter         1   48[COMRAM] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  2   44[COMRAM] int 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;Total ram usage:        8 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_fround
  3144 ;;		_scale
  3145 ;;		_printf
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text8
  3150  00251C                     __ptext8:
  3151                           	opt stack 0
  3152  00251C                     ___awdiv:
  3153                           	opt stack 28
  3154                           
  3155                           ;incstack = 0
  3156  00251C  0E00               	movlw	0
  3157  00251E  6E32               	movwf	___awdiv@sign,c
  3158  002520  AE30               	btfss	___awdiv@divisor+1,7,c
  3159  002522  D007               	goto	l1970
  3160  002524  6C2F               	negf	___awdiv@divisor,c
  3161  002526  1E30               	comf	___awdiv@divisor+1,f,c
  3162  002528  B0D8               	btfsc	status,0,c
  3163  00252A  2A30               	incf	___awdiv@divisor+1,f,c
  3164  00252C  0E01               	movlw	1
  3165  00252E  6E32               	movwf	___awdiv@sign,c
  3166  002530  D000               	goto	l1970
  3167  002532                     l1970:
  3168  002532  AE2E               	btfss	___awdiv@dividend+1,7,c
  3169  002534  D007               	goto	l1976
  3170  002536  6C2D               	negf	___awdiv@dividend,c
  3171  002538  1E2E               	comf	___awdiv@dividend+1,f,c
  3172  00253A  B0D8               	btfsc	status,0,c
  3173  00253C  2A2E               	incf	___awdiv@dividend+1,f,c
  3174  00253E  0E01               	movlw	1
  3175  002540  1A32               	xorwf	___awdiv@sign,f,c
  3176  002542  D000               	goto	l1976
  3177  002544                     l1976:
  3178  002544  0E00               	movlw	0
  3179  002546  6E34               	movwf	___awdiv@quotient+1,c
  3180  002548  0E00               	movlw	0
  3181  00254A  6E33               	movwf	___awdiv@quotient,c
  3182  00254C  502F               	movf	___awdiv@divisor,w,c
  3183  00254E  1030               	iorwf	___awdiv@divisor+1,w,c
  3184  002550  B4D8               	btfsc	status,2,c
  3185  002552  D021               	goto	l1998
  3186  002554  0E01               	movlw	1
  3187  002556  6E31               	movwf	___awdiv@counter,c
  3188  002558  D005               	goto	l1984
  3189  00255A                     l1982:
  3190  00255A  90D8               	bcf	status,0,c
  3191  00255C  362F               	rlcf	___awdiv@divisor,f,c
  3192  00255E  3630               	rlcf	___awdiv@divisor+1,f,c
  3193  002560  2A31               	incf	___awdiv@counter,f,c
  3194  002562  D000               	goto	l1984
  3195  002564                     l1984:
  3196  002564  BE30               	btfsc	___awdiv@divisor+1,7,c
  3197  002566  D002               	goto	l1986
  3198  002568  D7F8               	goto	l1982
  3199  00256A  D000               	goto	l1986
  3200  00256C                     l1986:
  3201  00256C  90D8               	bcf	status,0,c
  3202  00256E  3633               	rlcf	___awdiv@quotient,f,c
  3203  002570  3634               	rlcf	___awdiv@quotient+1,f,c
  3204  002572  502F               	movf	___awdiv@divisor,w,c
  3205  002574  5C2D               	subwf	___awdiv@dividend,w,c
  3206  002576  5030               	movf	___awdiv@divisor+1,w,c
  3207  002578  582E               	subwfb	___awdiv@dividend+1,w,c
  3208  00257A  A0D8               	btfss	status,0,c
  3209  00257C  D006               	goto	l1994
  3210  00257E  502F               	movf	___awdiv@divisor,w,c
  3211  002580  5E2D               	subwf	___awdiv@dividend,f,c
  3212  002582  5030               	movf	___awdiv@divisor+1,w,c
  3213  002584  5A2E               	subwfb	___awdiv@dividend+1,f,c
  3214  002586  8033               	bsf	___awdiv@quotient,0,c
  3215  002588  D000               	goto	l1994
  3216  00258A                     l1994:
  3217  00258A  90D8               	bcf	status,0,c
  3218  00258C  3230               	rrcf	___awdiv@divisor+1,f,c
  3219  00258E  322F               	rrcf	___awdiv@divisor,f,c
  3220  002590  2E31               	decfsz	___awdiv@counter,f,c
  3221  002592  D7EC               	goto	l1986
  3222  002594  D000               	goto	l1998
  3223  002596                     l1998:
  3224  002596  5032               	movf	___awdiv@sign,w,c
  3225  002598  B4D8               	btfsc	status,2,c
  3226  00259A  D005               	goto	l2002
  3227  00259C  6C33               	negf	___awdiv@quotient,c
  3228  00259E  1E34               	comf	___awdiv@quotient+1,f,c
  3229  0025A0  B0D8               	btfsc	status,0,c
  3230  0025A2  2A34               	incf	___awdiv@quotient+1,f,c
  3231  0025A4  D000               	goto	l2002
  3232  0025A6                     l2002:
  3233  0025A6  C033  F02D         	movff	___awdiv@quotient,?___awdiv
  3234  0025AA  C034  F02E         	movff	___awdiv@quotient+1,?___awdiv+1
  3235  0025AE  D000               	goto	l412
  3236  0025B0                     l412:
  3237  0025B0  0012               	return		;funcret
  3238  0025B2                     __end_of___awdiv:
  3239                           	opt stack 0
  3240                           tblptru	equ	0xFF8
  3241                           tblptrh	equ	0xFF7
  3242                           tblptrl	equ	0xFF6
  3243                           tablat	equ	0xFF5
  3244                           prodh	equ	0xFF4
  3245                           prodl	equ	0xFF3
  3246                           postinc0	equ	0xFEE
  3247                           wreg	equ	0xFE8
  3248                           postdec1	equ	0xFE5
  3249                           fsr1l	equ	0xFE1
  3250                           postinc2	equ	0xFDE
  3251                           postdec2	equ	0xFDD
  3252                           fsr2h	equ	0xFDA
  3253                           fsr2l	equ	0xFD9
  3254                           status	equ	0xFD8
  3255                           
  3256 ;; *************** function __tdiv_to_l_ *****************
  3257 ;; Defined at:
  3258 ;;		line 60 in file "E:\XC8\sources\common\ftdivl.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  f1              3    0[COMRAM] float 
  3261 ;;  f2              3    3[COMRAM] float 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  quot            4    9[COMRAM] unsigned long 
  3264 ;;  exp1            1   14[COMRAM] unsigned char 
  3265 ;;  cntr            1   13[COMRAM] unsigned char 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  4    0[COMRAM] unsigned long 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3275 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;Total ram usage:       15 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_printf
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text9
  3289  001E92                     __ptext9:
  3290                           	opt stack 0
  3291  001E92                     __tdiv_to_l_:
  3292                           	opt stack 29
  3293                           
  3294                           ;incstack = 0
  3295  001E92  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3296  001E96  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3297  001E98  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3298  001E9A  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3299  001E9C  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3300  001E9E  E301               	bnc	u2101
  3301  001EA0  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3302  001EA2                     u2101:
  3303  001EA2  5007               	movf	??__tdiv_to_l_,w,c
  3304  001EA4  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3305  001EA6  500F               	movf	__tdiv_to_l_@exp1,w,c
  3306  001EA8  A4D8               	btfss	status,2,c
  3307  001EAA  D002               	goto	l2118
  3308  001EAC  D05D               	goto	l2160
  3309  001EAE  D078               	goto	l624
  3310  001EB0                     l2118:
  3311  001EB0  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3312  001EB4  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3313  001EB6  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3314  001EB8  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3315  001EBA  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3316  001EBC  E301               	bnc	u2121
  3317  001EBE  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3318  001EC0                     u2121:
  3319  001EC0  5007               	movf	??__tdiv_to_l_,w,c
  3320  001EC2  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3321  001EC4  500E               	movf	__tdiv_to_l_@cntr,w,c
  3322  001EC6  A4D8               	btfss	status,2,c
  3323  001EC8  D002               	goto	l2124
  3324  001ECA  D04E               	goto	l2160
  3325  001ECC  D069               	goto	l624
  3326  001ECE                     l2124:
  3327  001ECE  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3328  001ED0  0EFF               	movlw	255
  3329  001ED2  1601               	andwf	__tdiv_to_l_@f1,f,c
  3330  001ED4  0EFF               	movlw	255
  3331  001ED6  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3332  001ED8  0E00               	movlw	0
  3333  001EDA  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3334  001EDC  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3335  001EDE  0EFF               	movlw	255
  3336  001EE0  1604               	andwf	__tdiv_to_l_@f2,f,c
  3337  001EE2  0EFF               	movlw	255
  3338  001EE4  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3339  001EE6  0E00               	movlw	0
  3340  001EE8  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3341  001EEA  0E00               	movlw	0
  3342  001EEC  6E0A               	movwf	__tdiv_to_l_@quot,c
  3343  001EEE  0E00               	movlw	0
  3344  001EF0  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3345  001EF2  0E00               	movlw	0
  3346  001EF4  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3347  001EF6  0E00               	movlw	0
  3348  001EF8  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3349  001EFA  0E7F               	movlw	127
  3350  001EFC  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3351  001EFE  500E               	movf	__tdiv_to_l_@cntr,w,c
  3352  001F00  0F98               	addlw	152
  3353  001F02  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3354  001F04  0E18               	movlw	24
  3355  001F06  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3356  001F08                     l626:
  3357  001F08  90D8               	bcf	status,0,c
  3358  001F0A  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3359  001F0C  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3360  001F0E  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3361  001F10  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3362  001F12  5004               	movf	__tdiv_to_l_@f2,w,c
  3363  001F14  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3364  001F16  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3365  001F18  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3366  001F1A  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3367  001F1C  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3368  001F1E  A0D8               	btfss	status,0,c
  3369  001F20  D007               	goto	l627
  3370  001F22  5004               	movf	__tdiv_to_l_@f2,w,c
  3371  001F24  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3372  001F26  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3373  001F28  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3374  001F2A  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3375  001F2C  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3376  001F2E  800A               	bsf	__tdiv_to_l_@quot,0,c
  3377  001F30                     l627:
  3378  001F30  90D8               	bcf	status,0,c
  3379  001F32  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3380  001F34  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3381  001F36  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3382  001F38  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3383  001F3A  D7E6               	goto	l626
  3384  001F3C  D000               	goto	l2146
  3385  001F3E                     l2146:
  3386  001F3E  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3387  001F40  D010               	goto	l2158
  3388  001F42  500F               	movf	__tdiv_to_l_@exp1,w,c
  3389  001F44  0A80               	xorlw	128
  3390  001F46  0F97               	addlw	151
  3391  001F48  B0D8               	btfsc	status,0,c
  3392  001F4A  D003               	goto	l2154
  3393  001F4C  D00D               	goto	l2160
  3394  001F4E  D028               	goto	l624
  3395  001F50  D000               	goto	l2154
  3396  001F52                     l2154:
  3397  001F52  90D8               	bcf	status,0,c
  3398  001F54  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3399  001F56  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3400  001F58  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3401  001F5A  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3402  001F5C  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3403  001F5E  D7F9               	goto	l2154
  3404  001F60  D017               	goto	l633
  3405  001F62                     l2158:
  3406  001F62  0E17               	movlw	23
  3407  001F64  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3408  001F66  D011               	goto	l2166
  3409  001F68                     l2160:
  3410  001F68  0E00               	movlw	0
  3411  001F6A  6E01               	movwf	?__tdiv_to_l_,c
  3412  001F6C  0E00               	movlw	0
  3413  001F6E  6E02               	movwf	?__tdiv_to_l_+1,c
  3414  001F70  0E00               	movlw	0
  3415  001F72  6E03               	movwf	?__tdiv_to_l_+2,c
  3416  001F74  0E00               	movlw	0
  3417  001F76  6E04               	movwf	?__tdiv_to_l_+3,c
  3418  001F78  D013               	goto	l624
  3419  001F7A  D007               	goto	l2166
  3420  001F7C                     l2164:
  3421  001F7C  90D8               	bcf	status,0,c
  3422  001F7E  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3423  001F80  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3424  001F82  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3425  001F84  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3426  001F86  060F               	decf	__tdiv_to_l_@exp1,f,c
  3427  001F88  D000               	goto	l2166
  3428  001F8A                     l2166:
  3429  001F8A  500F               	movf	__tdiv_to_l_@exp1,w,c
  3430  001F8C  A4D8               	btfss	status,2,c
  3431  001F8E  D7F6               	goto	l2164
  3432  001F90                     l633:
  3433  001F90  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3434  001F94  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3435  001F98  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3436  001F9C  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3437  001FA0                     l624:
  3438  001FA0  0012               	return		;funcret
  3439  001FA2                     __end_of__tdiv_to_l_:
  3440                           	opt stack 0
  3441                           tblptru	equ	0xFF8
  3442                           tblptrh	equ	0xFF7
  3443                           tblptrl	equ	0xFF6
  3444                           tablat	equ	0xFF5
  3445                           prodh	equ	0xFF4
  3446                           prodl	equ	0xFF3
  3447                           postinc0	equ	0xFEE
  3448                           wreg	equ	0xFE8
  3449                           postdec1	equ	0xFE5
  3450                           fsr1l	equ	0xFE1
  3451                           postinc2	equ	0xFDE
  3452                           postdec2	equ	0xFDD
  3453                           fsr2h	equ	0xFDA
  3454                           fsr2l	equ	0xFD9
  3455                           status	equ	0xFD8
  3456                           
  3457 ;; *************** function __div_to_l_ *****************
  3458 ;; Defined at:
  3459 ;;		line 60 in file "E:\XC8\sources\common\fldivl.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  f1              3    0[COMRAM] unsigned long 
  3462 ;;  f2              3    3[COMRAM] unsigned long 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  quot            4    6[COMRAM] unsigned long 
  3465 ;;  exp1            1   11[COMRAM] unsigned char 
  3466 ;;  cntr            1   10[COMRAM] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  4    0[COMRAM] unsigned long 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3476 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;Total ram usage:       12 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_printf
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text10
  3490  001FA2                     __ptext10:
  3491                           	opt stack 0
  3492  001FA2                     __div_to_l_:
  3493                           	opt stack 29
  3494                           
  3495                           ;incstack = 0
  3496  001FA2  3403               	rlcf	__div_to_l_@f1+2,w,c
  3497  001FA4  3404               	rlcf	__div_to_l_@f1+3,w,c
  3498  001FA6  6E0C               	movwf	__div_to_l_@exp1,c
  3499  001FA8  500C               	movf	__div_to_l_@exp1,w,c
  3500  001FAA  A4D8               	btfss	status,2,c
  3501  001FAC  D002               	goto	l2174
  3502  001FAE  D061               	goto	l2220
  3503  001FB0  D07C               	goto	l503
  3504  001FB2                     l2174:
  3505  001FB2  3406               	rlcf	__div_to_l_@f2+2,w,c
  3506  001FB4  3407               	rlcf	__div_to_l_@f2+3,w,c
  3507  001FB6  6E0B               	movwf	__div_to_l_@cntr,c
  3508  001FB8  500B               	movf	__div_to_l_@cntr,w,c
  3509  001FBA  A4D8               	btfss	status,2,c
  3510  001FBC  D002               	goto	l2180
  3511  001FBE  D059               	goto	l2220
  3512  001FC0  D074               	goto	l503
  3513  001FC2                     l2180:
  3514  001FC2  8E03               	bsf	__div_to_l_@f1+2,7,c
  3515  001FC4  0EFF               	movlw	255
  3516  001FC6  1601               	andwf	__div_to_l_@f1,f,c
  3517  001FC8  0EFF               	movlw	255
  3518  001FCA  1602               	andwf	__div_to_l_@f1+1,f,c
  3519  001FCC  0EFF               	movlw	255
  3520  001FCE  1603               	andwf	__div_to_l_@f1+2,f,c
  3521  001FD0  0E00               	movlw	0
  3522  001FD2  1604               	andwf	__div_to_l_@f1+3,f,c
  3523  001FD4  8E06               	bsf	__div_to_l_@f2+2,7,c
  3524  001FD6  0EFF               	movlw	255
  3525  001FD8  1604               	andwf	__div_to_l_@f2,f,c
  3526  001FDA  0EFF               	movlw	255
  3527  001FDC  1605               	andwf	__div_to_l_@f2+1,f,c
  3528  001FDE  0EFF               	movlw	255
  3529  001FE0  1606               	andwf	__div_to_l_@f2+2,f,c
  3530  001FE2  0E00               	movlw	0
  3531  001FE4  1607               	andwf	__div_to_l_@f2+3,f,c
  3532  001FE6  0E00               	movlw	0
  3533  001FE8  6E07               	movwf	__div_to_l_@quot,c
  3534  001FEA  0E00               	movlw	0
  3535  001FEC  6E08               	movwf	__div_to_l_@quot+1,c
  3536  001FEE  0E00               	movlw	0
  3537  001FF0  6E09               	movwf	__div_to_l_@quot+2,c
  3538  001FF2  0E00               	movlw	0
  3539  001FF4  6E0A               	movwf	__div_to_l_@quot+3,c
  3540  001FF6  0E7F               	movlw	127
  3541  001FF8  5E0C               	subwf	__div_to_l_@exp1,f,c
  3542  001FFA  500B               	movf	__div_to_l_@cntr,w,c
  3543  001FFC  0FA0               	addlw	160
  3544  001FFE  5E0C               	subwf	__div_to_l_@exp1,f,c
  3545  002000  0E20               	movlw	32
  3546  002002  6E0B               	movwf	__div_to_l_@cntr,c
  3547  002004  D000               	goto	l2194
  3548  002006                     l2194:
  3549  002006  90D8               	bcf	status,0,c
  3550  002008  3607               	rlcf	__div_to_l_@quot,f,c
  3551  00200A  3608               	rlcf	__div_to_l_@quot+1,f,c
  3552  00200C  3609               	rlcf	__div_to_l_@quot+2,f,c
  3553  00200E  360A               	rlcf	__div_to_l_@quot+3,f,c
  3554  002010  5004               	movf	__div_to_l_@f2,w,c
  3555  002012  5C01               	subwf	__div_to_l_@f1,w,c
  3556  002014  5005               	movf	__div_to_l_@f2+1,w,c
  3557  002016  5802               	subwfb	__div_to_l_@f1+1,w,c
  3558  002018  5006               	movf	__div_to_l_@f2+2,w,c
  3559  00201A  5803               	subwfb	__div_to_l_@f1+2,w,c
  3560  00201C  5007               	movf	__div_to_l_@f2+3,w,c
  3561  00201E  5804               	subwfb	__div_to_l_@f1+3,w,c
  3562  002020  A0D8               	btfss	status,0,c
  3563  002022  D00A               	goto	l2202
  3564  002024  5004               	movf	__div_to_l_@f2,w,c
  3565  002026  5E01               	subwf	__div_to_l_@f1,f,c
  3566  002028  5005               	movf	__div_to_l_@f2+1,w,c
  3567  00202A  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3568  00202C  5006               	movf	__div_to_l_@f2+2,w,c
  3569  00202E  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3570  002030  5007               	movf	__div_to_l_@f2+3,w,c
  3571  002032  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3572  002034  8007               	bsf	__div_to_l_@quot,0,c
  3573  002036  D000               	goto	l2202
  3574  002038                     l2202:
  3575  002038  90D8               	bcf	status,0,c
  3576  00203A  3601               	rlcf	__div_to_l_@f1,f,c
  3577  00203C  3602               	rlcf	__div_to_l_@f1+1,f,c
  3578  00203E  3603               	rlcf	__div_to_l_@f1+2,f,c
  3579  002040  3604               	rlcf	__div_to_l_@f1+3,f,c
  3580  002042  2E0B               	decfsz	__div_to_l_@cntr,f,c
  3581  002044  D7E0               	goto	l2194
  3582  002046  D000               	goto	l2206
  3583  002048                     l2206:
  3584  002048  AE0C               	btfss	__div_to_l_@exp1,7,c
  3585  00204A  D010               	goto	l2218
  3586  00204C  500C               	movf	__div_to_l_@exp1,w,c
  3587  00204E  0A80               	xorlw	128
  3588  002050  0F9F               	addlw	159
  3589  002052  B0D8               	btfsc	status,0,c
  3590  002054  D003               	goto	l2214
  3591  002056  D00D               	goto	l2220
  3592  002058  D028               	goto	l503
  3593  00205A  D000               	goto	l2214
  3594  00205C                     l2214:
  3595  00205C  90D8               	bcf	status,0,c
  3596  00205E  320A               	rrcf	__div_to_l_@quot+3,f,c
  3597  002060  3209               	rrcf	__div_to_l_@quot+2,f,c
  3598  002062  3208               	rrcf	__div_to_l_@quot+1,f,c
  3599  002064  3207               	rrcf	__div_to_l_@quot,f,c
  3600  002066  3E0C               	incfsz	__div_to_l_@exp1,f,c
  3601  002068  D7F9               	goto	l2214
  3602  00206A  D017               	goto	l512
  3603  00206C                     l2218:
  3604  00206C  0E1F               	movlw	31
  3605  00206E  640C               	cpfsgt	__div_to_l_@exp1,c
  3606  002070  D011               	goto	l2226
  3607  002072                     l2220:
  3608  002072  0E00               	movlw	0
  3609  002074  6E01               	movwf	?__div_to_l_,c
  3610  002076  0E00               	movlw	0
  3611  002078  6E02               	movwf	?__div_to_l_+1,c
  3612  00207A  0E00               	movlw	0
  3613  00207C  6E03               	movwf	?__div_to_l_+2,c
  3614  00207E  0E00               	movlw	0
  3615  002080  6E04               	movwf	?__div_to_l_+3,c
  3616  002082  D013               	goto	l503
  3617  002084  D007               	goto	l2226
  3618  002086                     l2224:
  3619  002086  90D8               	bcf	status,0,c
  3620  002088  3607               	rlcf	__div_to_l_@quot,f,c
  3621  00208A  3608               	rlcf	__div_to_l_@quot+1,f,c
  3622  00208C  3609               	rlcf	__div_to_l_@quot+2,f,c
  3623  00208E  360A               	rlcf	__div_to_l_@quot+3,f,c
  3624  002090  060C               	decf	__div_to_l_@exp1,f,c
  3625  002092  D000               	goto	l2226
  3626  002094                     l2226:
  3627  002094  500C               	movf	__div_to_l_@exp1,w,c
  3628  002096  A4D8               	btfss	status,2,c
  3629  002098  D7F6               	goto	l2224
  3630  00209A                     l512:
  3631  00209A  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3632  00209E  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3633  0020A2  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3634  0020A6  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3635  0020AA                     l503:
  3636  0020AA  0012               	return		;funcret
  3637  0020AC                     __end_of__div_to_l_:
  3638                           	opt stack 0
  3639                           tblptru	equ	0xFF8
  3640                           tblptrh	equ	0xFF7
  3641                           tblptrl	equ	0xFF6
  3642                           tablat	equ	0xFF5
  3643                           prodh	equ	0xFF4
  3644                           prodl	equ	0xFF3
  3645                           postinc0	equ	0xFEE
  3646                           wreg	equ	0xFE8
  3647                           postdec1	equ	0xFE5
  3648                           fsr1l	equ	0xFE1
  3649                           postinc2	equ	0xFDE
  3650                           postdec2	equ	0xFDD
  3651                           fsr2h	equ	0xFDA
  3652                           fsr2l	equ	0xFD9
  3653                           status	equ	0xFD8
  3654                           
  3655 ;; *************** function ___lltoft *****************
  3656 ;; Defined at:
  3657 ;;		line 35 in file "E:\XC8\sources\common\lltoft.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  c               4    8[COMRAM] unsigned long 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  exp             1   16[COMRAM] unsigned char 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  3    8[COMRAM] float 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3671 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;Total ram usage:        9 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:    1
  3678 ;; This function calls:
  3679 ;;		___ftpack
  3680 ;; This function is called by:
  3681 ;;		_printf
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           	psect	text11
  3686  0028BE                     __ptext11:
  3687                           	opt stack 0
  3688  0028BE                     ___lltoft:
  3689                           	opt stack 28
  3690                           
  3691                           ;incstack = 0
  3692  0028BE  0E8E               	movlw	142
  3693  0028C0  6E11               	movwf	___lltoft@exp,c
  3694  0028C2  D007               	goto	l2346
  3695  0028C4                     l2344:
  3696  0028C4  90D8               	bcf	status,0,c
  3697  0028C6  320C               	rrcf	___lltoft@c+3,f,c
  3698  0028C8  320B               	rrcf	___lltoft@c+2,f,c
  3699  0028CA  320A               	rrcf	___lltoft@c+1,f,c
  3700  0028CC  3209               	rrcf	___lltoft@c,f,c
  3701  0028CE  2A11               	incf	___lltoft@exp,f,c
  3702  0028D0  D000               	goto	l2346
  3703  0028D2                     l2346:
  3704  0028D2  0E00               	movlw	0
  3705  0028D4  1409               	andwf	___lltoft@c,w,c
  3706  0028D6  6E0D               	movwf	??___lltoft& (0+255),c
  3707  0028D8  0E00               	movlw	0
  3708  0028DA  140A               	andwf	___lltoft@c+1,w,c
  3709  0028DC  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  3710  0028DE  0E00               	movlw	0
  3711  0028E0  140B               	andwf	___lltoft@c+2,w,c
  3712  0028E2  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  3713  0028E4  0EFF               	movlw	255
  3714  0028E6  140C               	andwf	___lltoft@c+3,w,c
  3715  0028E8  6E10               	movwf	(??___lltoft+3)& (0+255),c
  3716  0028EA  500D               	movf	??___lltoft,w,c
  3717  0028EC  100E               	iorwf	??___lltoft+1,w,c
  3718  0028EE  100F               	iorwf	??___lltoft+2,w,c
  3719  0028F0  1010               	iorwf	??___lltoft+3,w,c
  3720  0028F2  A4D8               	btfss	status,2,c
  3721  0028F4  D7E7               	goto	l2344
  3722  0028F6  C009  F001         	movff	___lltoft@c,___ftpack@arg
  3723  0028FA  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  3724  0028FE  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  3725  002902  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  3726  002906  0E00               	movlw	0
  3727  002908  6E05               	movwf	___ftpack@sign,c
  3728  00290A  EC2B  F012         	call	___ftpack	;wreg free
  3729  00290E  C001  F009         	movff	?___ftpack,?___lltoft
  3730  002912  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  3731  002916  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  3732  00291A  D000               	goto	l738
  3733  00291C                     l738:
  3734  00291C  0012               	return		;funcret
  3735  00291E                     __end_of___lltoft:
  3736                           	opt stack 0
  3737                           tblptru	equ	0xFF8
  3738                           tblptrh	equ	0xFF7
  3739                           tblptrl	equ	0xFF6
  3740                           tablat	equ	0xFF5
  3741                           prodh	equ	0xFF4
  3742                           prodl	equ	0xFF3
  3743                           postinc0	equ	0xFEE
  3744                           wreg	equ	0xFE8
  3745                           postdec1	equ	0xFE5
  3746                           fsr1l	equ	0xFE1
  3747                           postinc2	equ	0xFDE
  3748                           postdec2	equ	0xFDD
  3749                           fsr2h	equ	0xFDA
  3750                           fsr2l	equ	0xFD9
  3751                           status	equ	0xFD8
  3752                           
  3753 ;; *************** function ___llmod *****************
  3754 ;; Defined at:
  3755 ;;		line 8 in file "E:\XC8\sources\common\llmod.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  dividend        4    0[COMRAM] unsigned long 
  3758 ;;  divisor         4    4[COMRAM] unsigned long 
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;  counter         1    8[COMRAM] unsigned char 
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  4    0[COMRAM] unsigned long 
  3763 ;; Registers used:
  3764 ;;		wreg, status,2, status,0
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3770 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3773 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3774 ;;Total ram usage:        9 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; This function calls:
  3777 ;;		Nothing
  3778 ;; This function is called by:
  3779 ;;		_printf
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783                           	psect	text12
  3784  0027DE                     __ptext12:
  3785                           	opt stack 0
  3786  0027DE                     ___llmod:
  3787                           	opt stack 29
  3788                           
  3789                           ;incstack = 0
  3790  0027DE  5005               	movf	___llmod@divisor,w,c
  3791  0027E0  1006               	iorwf	___llmod@divisor+1,w,c
  3792  0027E2  1007               	iorwf	___llmod@divisor+2,w,c
  3793  0027E4  1008               	iorwf	___llmod@divisor+3,w,c
  3794  0027E6  B4D8               	btfsc	status,2,c
  3795  0027E8  D029               	goto	l718
  3796  0027EA  0E01               	movlw	1
  3797  0027EC  6E09               	movwf	___llmod@counter,c
  3798  0027EE  D007               	goto	l2332
  3799  0027F0                     l2330:
  3800  0027F0  90D8               	bcf	status,0,c
  3801  0027F2  3605               	rlcf	___llmod@divisor,f,c
  3802  0027F4  3606               	rlcf	___llmod@divisor+1,f,c
  3803  0027F6  3607               	rlcf	___llmod@divisor+2,f,c
  3804  0027F8  3608               	rlcf	___llmod@divisor+3,f,c
  3805  0027FA  2A09               	incf	___llmod@counter,f,c
  3806  0027FC  D000               	goto	l2332
  3807  0027FE                     l2332:
  3808  0027FE  BE08               	btfsc	___llmod@divisor+3,7,c
  3809  002800  D002               	goto	l2334
  3810  002802  D7F6               	goto	l2330
  3811  002804  D000               	goto	l2334
  3812  002806                     l2334:
  3813  002806  5005               	movf	___llmod@divisor,w,c
  3814  002808  5C01               	subwf	___llmod@dividend,w,c
  3815  00280A  5006               	movf	___llmod@divisor+1,w,c
  3816  00280C  5802               	subwfb	___llmod@dividend+1,w,c
  3817  00280E  5007               	movf	___llmod@divisor+2,w,c
  3818  002810  5803               	subwfb	___llmod@dividend+2,w,c
  3819  002812  5008               	movf	___llmod@divisor+3,w,c
  3820  002814  5804               	subwfb	___llmod@dividend+3,w,c
  3821  002816  A0D8               	btfss	status,0,c
  3822  002818  D009               	goto	l2338
  3823  00281A  5005               	movf	___llmod@divisor,w,c
  3824  00281C  5E01               	subwf	___llmod@dividend,f,c
  3825  00281E  5006               	movf	___llmod@divisor+1,w,c
  3826  002820  5A02               	subwfb	___llmod@dividend+1,f,c
  3827  002822  5007               	movf	___llmod@divisor+2,w,c
  3828  002824  5A03               	subwfb	___llmod@dividend+2,f,c
  3829  002826  5008               	movf	___llmod@divisor+3,w,c
  3830  002828  5A04               	subwfb	___llmod@dividend+3,f,c
  3831  00282A  D000               	goto	l2338
  3832  00282C                     l2338:
  3833  00282C  90D8               	bcf	status,0,c
  3834  00282E  3208               	rrcf	___llmod@divisor+3,f,c
  3835  002830  3207               	rrcf	___llmod@divisor+2,f,c
  3836  002832  3206               	rrcf	___llmod@divisor+1,f,c
  3837  002834  3205               	rrcf	___llmod@divisor,f,c
  3838  002836  2E09               	decfsz	___llmod@counter,f,c
  3839  002838  D7E6               	goto	l2334
  3840  00283A  D000               	goto	l718
  3841  00283C                     l718:
  3842  00283C  C001  F001         	movff	___llmod@dividend,?___llmod
  3843  002840  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3844  002844  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3845  002848  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3846  00284C  0012               	return		;funcret
  3847  00284E                     __end_of___llmod:
  3848                           	opt stack 0
  3849                           tblptru	equ	0xFF8
  3850                           tblptrh	equ	0xFF7
  3851                           tblptrl	equ	0xFF6
  3852                           tablat	equ	0xFF5
  3853                           prodh	equ	0xFF4
  3854                           prodl	equ	0xFF3
  3855                           postinc0	equ	0xFEE
  3856                           wreg	equ	0xFE8
  3857                           postdec1	equ	0xFE5
  3858                           fsr1l	equ	0xFE1
  3859                           postinc2	equ	0xFDE
  3860                           postdec2	equ	0xFDD
  3861                           fsr2h	equ	0xFDA
  3862                           fsr2l	equ	0xFD9
  3863                           status	equ	0xFD8
  3864                           
  3865 ;; *************** function ___lldiv *****************
  3866 ;; Defined at:
  3867 ;;		line 8 in file "E:\XC8\sources\common\lldiv.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  dividend        4    0[COMRAM] unsigned long 
  3870 ;;  divisor         4    4[COMRAM] unsigned long 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  quotient        4    8[COMRAM] unsigned long 
  3873 ;;  counter         1   12[COMRAM] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  4    0[COMRAM] unsigned long 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3883 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;Total ram usage:       13 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_printf
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text13
  3897  002648                     __ptext13:
  3898                           	opt stack 0
  3899  002648                     ___lldiv:
  3900                           	opt stack 29
  3901                           
  3902                           ;incstack = 0
  3903  002648  0E00               	movlw	0
  3904  00264A  6E09               	movwf	___lldiv@quotient,c
  3905  00264C  0E00               	movlw	0
  3906  00264E  6E0A               	movwf	___lldiv@quotient+1,c
  3907  002650  0E00               	movlw	0
  3908  002652  6E0B               	movwf	___lldiv@quotient+2,c
  3909  002654  0E00               	movlw	0
  3910  002656  6E0C               	movwf	___lldiv@quotient+3,c
  3911  002658  5005               	movf	___lldiv@divisor,w,c
  3912  00265A  1006               	iorwf	___lldiv@divisor+1,w,c
  3913  00265C  1007               	iorwf	___lldiv@divisor+2,w,c
  3914  00265E  1008               	iorwf	___lldiv@divisor+3,w,c
  3915  002660  B4D8               	btfsc	status,2,c
  3916  002662  D02F               	goto	l708
  3917  002664  0E01               	movlw	1
  3918  002666  6E0D               	movwf	___lldiv@counter,c
  3919  002668  D007               	goto	l2312
  3920  00266A                     l2310:
  3921  00266A  90D8               	bcf	status,0,c
  3922  00266C  3605               	rlcf	___lldiv@divisor,f,c
  3923  00266E  3606               	rlcf	___lldiv@divisor+1,f,c
  3924  002670  3607               	rlcf	___lldiv@divisor+2,f,c
  3925  002672  3608               	rlcf	___lldiv@divisor+3,f,c
  3926  002674  2A0D               	incf	___lldiv@counter,f,c
  3927  002676  D000               	goto	l2312
  3928  002678                     l2312:
  3929  002678  BE08               	btfsc	___lldiv@divisor+3,7,c
  3930  00267A  D002               	goto	l2314
  3931  00267C  D7F6               	goto	l2310
  3932  00267E  D000               	goto	l2314
  3933  002680                     l2314:
  3934  002680  90D8               	bcf	status,0,c
  3935  002682  3609               	rlcf	___lldiv@quotient,f,c
  3936  002684  360A               	rlcf	___lldiv@quotient+1,f,c
  3937  002686  360B               	rlcf	___lldiv@quotient+2,f,c
  3938  002688  360C               	rlcf	___lldiv@quotient+3,f,c
  3939  00268A  5005               	movf	___lldiv@divisor,w,c
  3940  00268C  5C01               	subwf	___lldiv@dividend,w,c
  3941  00268E  5006               	movf	___lldiv@divisor+1,w,c
  3942  002690  5802               	subwfb	___lldiv@dividend+1,w,c
  3943  002692  5007               	movf	___lldiv@divisor+2,w,c
  3944  002694  5803               	subwfb	___lldiv@dividend+2,w,c
  3945  002696  5008               	movf	___lldiv@divisor+3,w,c
  3946  002698  5804               	subwfb	___lldiv@dividend+3,w,c
  3947  00269A  A0D8               	btfss	status,0,c
  3948  00269C  D00A               	goto	l2322
  3949  00269E  5005               	movf	___lldiv@divisor,w,c
  3950  0026A0  5E01               	subwf	___lldiv@dividend,f,c
  3951  0026A2  5006               	movf	___lldiv@divisor+1,w,c
  3952  0026A4  5A02               	subwfb	___lldiv@dividend+1,f,c
  3953  0026A6  5007               	movf	___lldiv@divisor+2,w,c
  3954  0026A8  5A03               	subwfb	___lldiv@dividend+2,f,c
  3955  0026AA  5008               	movf	___lldiv@divisor+3,w,c
  3956  0026AC  5A04               	subwfb	___lldiv@dividend+3,f,c
  3957  0026AE  8009               	bsf	___lldiv@quotient,0,c
  3958  0026B0  D000               	goto	l2322
  3959  0026B2                     l2322:
  3960  0026B2  90D8               	bcf	status,0,c
  3961  0026B4  3208               	rrcf	___lldiv@divisor+3,f,c
  3962  0026B6  3207               	rrcf	___lldiv@divisor+2,f,c
  3963  0026B8  3206               	rrcf	___lldiv@divisor+1,f,c
  3964  0026BA  3205               	rrcf	___lldiv@divisor,f,c
  3965  0026BC  2E0D               	decfsz	___lldiv@counter,f,c
  3966  0026BE  D7E0               	goto	l2314
  3967  0026C0  D000               	goto	l708
  3968  0026C2                     l708:
  3969  0026C2  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3970  0026C6  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3971  0026CA  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3972  0026CE  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3973  0026D2  0012               	return		;funcret
  3974  0026D4                     __end_of___lldiv:
  3975                           	opt stack 0
  3976                           tblptru	equ	0xFF8
  3977                           tblptrh	equ	0xFF7
  3978                           tblptrl	equ	0xFF6
  3979                           tablat	equ	0xFF5
  3980                           prodh	equ	0xFF4
  3981                           prodl	equ	0xFF3
  3982                           postinc0	equ	0xFEE
  3983                           wreg	equ	0xFE8
  3984                           postdec1	equ	0xFE5
  3985                           fsr1l	equ	0xFE1
  3986                           postinc2	equ	0xFDE
  3987                           postdec2	equ	0xFDD
  3988                           fsr2h	equ	0xFDA
  3989                           fsr2l	equ	0xFD9
  3990                           status	equ	0xFD8
  3991                           
  3992 ;; *************** function ___fttol *****************
  3993 ;; Defined at:
  3994 ;;		line 44 in file "E:\XC8\sources\common\fttol.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  f1              3   23[COMRAM] float 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  lval            4   33[COMRAM] unsigned long 
  3999 ;;  exp1            1   37[COMRAM] unsigned char 
  4000 ;;  sign1           1   32[COMRAM] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  4   23[COMRAM] long 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4010 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;Total ram usage:       15 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_main
  4020 ;;		_printf
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text14
  4025  00228E                     __ptext14:
  4026                           	opt stack 0
  4027  00228E                     ___fttol:
  4028                           	opt stack 29
  4029                           
  4030                           ;incstack = 0
  4031  00228E  C01A  F01C         	movff	___fttol@f1+2,??___fttol
  4032  002292  6A1D               	clrf	(??___fttol+1)& (0+255),c
  4033  002294  6A1E               	clrf	(??___fttol+2)& (0+255),c
  4034  002296  3419               	rlcf	___fttol@f1+1,w,c
  4035  002298  361C               	rlcf	??___fttol& (0+255),f,c
  4036  00229A  E301               	bnc	u2311
  4037  00229C  801D               	bsf	(??___fttol+1)& (0+255),0,c
  4038  00229E                     u2311:
  4039  00229E  501C               	movf	??___fttol,w,c
  4040  0022A0  6E26               	movwf	___fttol@exp1,c
  4041  0022A2  5026               	movf	___fttol@exp1,w,c
  4042  0022A4  A4D8               	btfss	status,2,c
  4043  0022A6  D002               	goto	l2264
  4044  0022A8  D039               	goto	l2288
  4045  0022AA  D063               	goto	l669
  4046  0022AC                     l2264:
  4047  0022AC  0E17               	movlw	23
  4048  0022AE  6E1C               	movwf	??___fttol& (0+255),c
  4049  0022B0  C018  F01D         	movff	___fttol@f1,??___fttol+1
  4050  0022B4  C019  F01E         	movff	___fttol@f1+1,??___fttol+2
  4051  0022B8  C01A  F01F         	movff	___fttol@f1+2,??___fttol+3
  4052  0022BC  281C               	incf	??___fttol,w,c
  4053  0022BE  6E20               	movwf	(??___fttol+4)& (0+255),c
  4054  0022C0  D004               	goto	u2330
  4055  0022C2                     u2335:
  4056  0022C2  90D8               	bcf	status,0,c
  4057  0022C4  321F               	rrcf	??___fttol+3,f,c
  4058  0022C6  321E               	rrcf	??___fttol+2,f,c
  4059  0022C8  321D               	rrcf	??___fttol+1,f,c
  4060  0022CA                     u2330:
  4061  0022CA  2E20               	decfsz	(??___fttol+4)& (0+255),f,c
  4062  0022CC  D7FA               	goto	u2335
  4063  0022CE  501D               	movf	??___fttol+1,w,c
  4064  0022D0  6E21               	movwf	___fttol@sign1,c
  4065  0022D2  8E19               	bsf	___fttol@f1+1,7,c
  4066  0022D4  0EFF               	movlw	255
  4067  0022D6  1618               	andwf	___fttol@f1,f,c
  4068  0022D8  0EFF               	movlw	255
  4069  0022DA  1619               	andwf	___fttol@f1+1,f,c
  4070  0022DC  0E00               	movlw	0
  4071  0022DE  161A               	andwf	___fttol@f1+2,f,c
  4072  0022E0  5018               	movf	___fttol@f1,w,c
  4073  0022E2  6E22               	movwf	___fttol@lval,c
  4074  0022E4  5019               	movf	___fttol@f1+1,w,c
  4075  0022E6  6E23               	movwf	___fttol@lval+1,c
  4076  0022E8  501A               	movf	___fttol@f1+2,w,c
  4077  0022EA  6E24               	movwf	___fttol@lval+2,c
  4078  0022EC  6A25               	clrf	___fttol@lval+3,c
  4079  0022EE  0E8E               	movlw	142
  4080  0022F0  5E26               	subwf	___fttol@exp1,f,c
  4081  0022F2  AE26               	btfss	___fttol@exp1,7,c
  4082  0022F4  D010               	goto	l2286
  4083  0022F6  5026               	movf	___fttol@exp1,w,c
  4084  0022F8  0A80               	xorlw	128
  4085  0022FA  0F8F               	addlw	143
  4086  0022FC  B0D8               	btfsc	status,0,c
  4087  0022FE  D003               	goto	l2282
  4088  002300  D00D               	goto	l2288
  4089  002302  D037               	goto	l669
  4090  002304  D000               	goto	l2282
  4091  002306                     l2282:
  4092  002306  90D8               	bcf	status,0,c
  4093  002308  3225               	rrcf	___fttol@lval+3,f,c
  4094  00230A  3224               	rrcf	___fttol@lval+2,f,c
  4095  00230C  3223               	rrcf	___fttol@lval+1,f,c
  4096  00230E  3222               	rrcf	___fttol@lval,f,c
  4097  002310  3E26               	incfsz	___fttol@exp1,f,c
  4098  002312  D7F9               	goto	l2282
  4099  002314  D019               	goto	l2296
  4100  002316                     l2286:
  4101  002316  0E17               	movlw	23
  4102  002318  6426               	cpfsgt	___fttol@exp1,c
  4103  00231A  D011               	goto	l2294
  4104  00231C                     l2288:
  4105  00231C  0E00               	movlw	0
  4106  00231E  6E18               	movwf	?___fttol,c
  4107  002320  0E00               	movlw	0
  4108  002322  6E19               	movwf	?___fttol+1,c
  4109  002324  0E00               	movlw	0
  4110  002326  6E1A               	movwf	?___fttol+2,c
  4111  002328  0E00               	movlw	0
  4112  00232A  6E1B               	movwf	?___fttol+3,c
  4113  00232C  D022               	goto	l669
  4114  00232E  D007               	goto	l2294
  4115  002330                     l2292:
  4116  002330  90D8               	bcf	status,0,c
  4117  002332  3622               	rlcf	___fttol@lval,f,c
  4118  002334  3623               	rlcf	___fttol@lval+1,f,c
  4119  002336  3624               	rlcf	___fttol@lval+2,f,c
  4120  002338  3625               	rlcf	___fttol@lval+3,f,c
  4121  00233A  0626               	decf	___fttol@exp1,f,c
  4122  00233C  D000               	goto	l2294
  4123  00233E                     l2294:
  4124  00233E  5026               	movf	___fttol@exp1,w,c
  4125  002340  B4D8               	btfsc	status,2,c
  4126  002342  D002               	goto	l2296
  4127  002344  D7F5               	goto	l2292
  4128  002346  D000               	goto	l2296
  4129  002348                     l2296:
  4130  002348  5021               	movf	___fttol@sign1,w,c
  4131  00234A  B4D8               	btfsc	status,2,c
  4132  00234C  D009               	goto	l2300
  4133  00234E  1E25               	comf	___fttol@lval+3,f,c
  4134  002350  1E24               	comf	___fttol@lval+2,f,c
  4135  002352  1E23               	comf	___fttol@lval+1,f,c
  4136  002354  6C22               	negf	___fttol@lval,c
  4137  002356  0E00               	movlw	0
  4138  002358  2223               	addwfc	___fttol@lval+1,f,c
  4139  00235A  2224               	addwfc	___fttol@lval+2,f,c
  4140  00235C  2225               	addwfc	___fttol@lval+3,f,c
  4141  00235E  D000               	goto	l2300
  4142  002360                     l2300:
  4143  002360  C022  F018         	movff	___fttol@lval,?___fttol
  4144  002364  C023  F019         	movff	___fttol@lval+1,?___fttol+1
  4145  002368  C024  F01A         	movff	___fttol@lval+2,?___fttol+2
  4146  00236C  C025  F01B         	movff	___fttol@lval+3,?___fttol+3
  4147  002370  D000               	goto	l669
  4148  002372                     l669:
  4149  002372  0012               	return		;funcret
  4150  002374                     __end_of___fttol:
  4151                           	opt stack 0
  4152                           tblptru	equ	0xFF8
  4153                           tblptrh	equ	0xFF7
  4154                           tblptrl	equ	0xFF6
  4155                           tablat	equ	0xFF5
  4156                           prodh	equ	0xFF4
  4157                           prodl	equ	0xFF3
  4158                           postinc0	equ	0xFEE
  4159                           wreg	equ	0xFE8
  4160                           postdec1	equ	0xFE5
  4161                           fsr1l	equ	0xFE1
  4162                           postinc2	equ	0xFDE
  4163                           postdec2	equ	0xFDD
  4164                           fsr2h	equ	0xFDA
  4165                           fsr2l	equ	0xFD9
  4166                           status	equ	0xFD8
  4167                           
  4168 ;; *************** function ___ftsub *****************
  4169 ;; Defined at:
  4170 ;;		line 20 in file "E:\XC8\sources\common\ftsub.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  f1              3   80[COMRAM] float 
  4173 ;;  f2              3   83[COMRAM] float 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  3   80[COMRAM] float 
  4178 ;; Registers used:
  4179 ;;		wreg, status,2, status,0, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4185 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;Total ram usage:        6 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    2
  4192 ;; This function calls:
  4193 ;;		___ftadd
  4194 ;; This function is called by:
  4195 ;;		_printf
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           	psect	text15
  4200  00291E                     __ptext15:
  4201                           	opt stack 0
  4202  00291E                     ___ftsub:
  4203                           	opt stack 27
  4204                           
  4205                           ;incstack = 0
  4206  00291E  5054               	movf	___ftsub@f2,w,c
  4207  002920  1055               	iorwf	___ftsub@f2+1,w,c
  4208  002922  1056               	iorwf	___ftsub@f2+2,w,c
  4209  002924  B4D8               	btfsc	status,2,c
  4210  002926  D007               	goto	l2232
  4211  002928  0E00               	movlw	0
  4212  00292A  1A54               	xorwf	___ftsub@f2,f,c
  4213  00292C  0E00               	movlw	0
  4214  00292E  1A55               	xorwf	___ftsub@f2+1,f,c
  4215  002930  0E80               	movlw	128
  4216  002932  1A56               	xorwf	___ftsub@f2+2,f,c
  4217  002934  D000               	goto	l2232
  4218  002936                     l2232:
  4219  002936  C051  F045         	movff	___ftsub@f1,___ftadd@f1
  4220  00293A  C052  F046         	movff	___ftsub@f1+1,___ftadd@f1+1
  4221  00293E  C053  F047         	movff	___ftsub@f1+2,___ftadd@f1+2
  4222  002942  C054  F048         	movff	___ftsub@f2,___ftadd@f2
  4223  002946  C055  F049         	movff	___ftsub@f2+1,___ftadd@f2+1
  4224  00294A  C056  F04A         	movff	___ftsub@f2+2,___ftadd@f2+2
  4225  00294E  EC67  F00E         	call	___ftadd	;wreg free
  4226  002952  C045  F051         	movff	?___ftadd,?___ftsub
  4227  002956  C046  F052         	movff	?___ftadd+1,?___ftsub+1
  4228  00295A  C047  F053         	movff	?___ftadd+2,?___ftsub+2
  4229  00295E  D000               	goto	l665
  4230  002960                     l665:
  4231  002960  0012               	return		;funcret
  4232  002962                     __end_of___ftsub:
  4233                           	opt stack 0
  4234                           tblptru	equ	0xFF8
  4235                           tblptrh	equ	0xFF7
  4236                           tblptrl	equ	0xFF6
  4237                           tablat	equ	0xFF5
  4238                           prodh	equ	0xFF4
  4239                           prodl	equ	0xFF3
  4240                           postinc0	equ	0xFEE
  4241                           wreg	equ	0xFE8
  4242                           postdec1	equ	0xFE5
  4243                           fsr1l	equ	0xFE1
  4244                           postinc2	equ	0xFDE
  4245                           postdec2	equ	0xFDD
  4246                           fsr2h	equ	0xFDA
  4247                           fsr2l	equ	0xFD9
  4248                           status	equ	0xFD8
  4249                           
  4250 ;; *************** function ___ftadd *****************
  4251 ;; Defined at:
  4252 ;;		line 86 in file "E:\XC8\sources\common\ftadd.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  f1              3   68[COMRAM] float 
  4255 ;;  f2              3   71[COMRAM] float 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  exp1            1   79[COMRAM] unsigned char 
  4258 ;;  exp2            1   78[COMRAM] unsigned char 
  4259 ;;  sign            1   77[COMRAM] unsigned char 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  3   68[COMRAM] float 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4269 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;Total ram usage:       12 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    1
  4276 ;; This function calls:
  4277 ;;		___ftpack
  4278 ;; This function is called by:
  4279 ;;		_printf
  4280 ;;		___ftsub
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text16
  4285  001CCE                     __ptext16:
  4286                           	opt stack 0
  4287  001CCE                     ___ftadd:
  4288                           	opt stack 27
  4289                           
  4290                           ;incstack = 0
  4291  001CCE  C047  F04B         	movff	___ftadd@f1+2,??___ftadd
  4292  001CD2  6A4C               	clrf	(??___ftadd+1)& (0+255),c
  4293  001CD4  6A4D               	clrf	(??___ftadd+2)& (0+255),c
  4294  001CD6  3446               	rlcf	___ftadd@f1+1,w,c
  4295  001CD8  364B               	rlcf	??___ftadd& (0+255),f,c
  4296  001CDA  E301               	bnc	u1631
  4297  001CDC  804C               	bsf	(??___ftadd+1)& (0+255),0,c
  4298  001CDE                     u1631:
  4299  001CDE  504B               	movf	??___ftadd,w,c
  4300  001CE0  6E50               	movwf	___ftadd@exp1,c
  4301  001CE2  C04A  F04B         	movff	___ftadd@f2+2,??___ftadd
  4302  001CE6  6A4C               	clrf	(??___ftadd+1)& (0+255),c
  4303  001CE8  6A4D               	clrf	(??___ftadd+2)& (0+255),c
  4304  001CEA  3449               	rlcf	___ftadd@f2+1,w,c
  4305  001CEC  364B               	rlcf	??___ftadd& (0+255),f,c
  4306  001CEE  E301               	bnc	u1641
  4307  001CF0  804C               	bsf	(??___ftadd+1)& (0+255),0,c
  4308  001CF2                     u1641:
  4309  001CF2  504B               	movf	??___ftadd,w,c
  4310  001CF4  6E4F               	movwf	___ftadd@exp2,c
  4311  001CF6  5050               	movf	___ftadd@exp1,w,c
  4312  001CF8  B4D8               	btfsc	status,2,c
  4313  001CFA  D00B               	goto	l584
  4314  001CFC  504F               	movf	___ftadd@exp2,w,c
  4315  001CFE  5C50               	subwf	___ftadd@exp1,w,c
  4316  001D00  B0D8               	btfsc	status,0,c
  4317  001D02  D00E               	goto	l1852
  4318  001D04  5050               	movf	___ftadd@exp1,w,c
  4319  001D06  0800               	sublw	0
  4320  001D08  244F               	addwf	___ftadd@exp2,w,c
  4321  001D0A  6E4B               	movwf	??___ftadd& (0+255),c
  4322  001D0C  0E18               	movlw	24
  4323  001D0E  644B               	cpfsgt	??___ftadd,c
  4324  001D10  D007               	goto	l1852
  4325  001D12                     l584:
  4326  001D12  C048  F045         	movff	___ftadd@f2,?___ftadd
  4327  001D16  C049  F046         	movff	___ftadd@f2+1,?___ftadd+1
  4328  001D1A  C04A  F047         	movff	___ftadd@f2+2,?___ftadd+2
  4329  001D1E  D0B8               	goto	l585
  4330  001D20                     l1852:
  4331  001D20  504F               	movf	___ftadd@exp2,w,c
  4332  001D22  B4D8               	btfsc	status,2,c
  4333  001D24  D00B               	goto	l588
  4334  001D26  5050               	movf	___ftadd@exp1,w,c
  4335  001D28  5C4F               	subwf	___ftadd@exp2,w,c
  4336  001D2A  B0D8               	btfsc	status,0,c
  4337  001D2C  D00E               	goto	l1858
  4338  001D2E  504F               	movf	___ftadd@exp2,w,c
  4339  001D30  0800               	sublw	0
  4340  001D32  2450               	addwf	___ftadd@exp1,w,c
  4341  001D34  6E4B               	movwf	??___ftadd& (0+255),c
  4342  001D36  0E18               	movlw	24
  4343  001D38  644B               	cpfsgt	??___ftadd,c
  4344  001D3A  D007               	goto	l1858
  4345  001D3C                     l588:
  4346  001D3C  C045  F045         	movff	___ftadd@f1,?___ftadd
  4347  001D40  C046  F046         	movff	___ftadd@f1+1,?___ftadd+1
  4348  001D44  C047  F047         	movff	___ftadd@f1+2,?___ftadd+2
  4349  001D48  D0A3               	goto	l585
  4350  001D4A                     l1858:
  4351  001D4A  0E06               	movlw	6
  4352  001D4C  6E4E               	movwf	___ftadd@sign,c
  4353  001D4E  AE47               	btfss	___ftadd@f1+2,7,c
  4354  001D50  D002               	goto	l1864
  4355  001D52  8E4E               	bsf	___ftadd@sign,7,c
  4356  001D54  D000               	goto	l1864
  4357  001D56                     l1864:
  4358  001D56  BE4A               	btfsc	___ftadd@f2+2,7,c
  4359  001D58  8C4E               	bsf	___ftadd@sign,6,c
  4360  001D5A  8E46               	bsf	___ftadd@f1+1,7,c
  4361  001D5C  0EFF               	movlw	255
  4362  001D5E  1645               	andwf	___ftadd@f1,f,c
  4363  001D60  0EFF               	movlw	255
  4364  001D62  1646               	andwf	___ftadd@f1+1,f,c
  4365  001D64  0E00               	movlw	0
  4366  001D66  1647               	andwf	___ftadd@f1+2,f,c
  4367  001D68  8E49               	bsf	___ftadd@f2+1,7,c
  4368  001D6A  0EFF               	movlw	255
  4369  001D6C  1648               	andwf	___ftadd@f2,f,c
  4370  001D6E  0EFF               	movlw	255
  4371  001D70  1649               	andwf	___ftadd@f2+1,f,c
  4372  001D72  0E00               	movlw	0
  4373  001D74  164A               	andwf	___ftadd@f2+2,f,c
  4374  001D76  504F               	movf	___ftadd@exp2,w,c
  4375  001D78  5C50               	subwf	___ftadd@exp1,w,c
  4376  001D7A  B0D8               	btfsc	status,0,c
  4377  001D7C  D01E               	goto	l1884
  4378  001D7E                     l1874:
  4379  001D7E  90D8               	bcf	status,0,c
  4380  001D80  3648               	rlcf	___ftadd@f2,f,c
  4381  001D82  3649               	rlcf	___ftadd@f2+1,f,c
  4382  001D84  364A               	rlcf	___ftadd@f2+2,f,c
  4383  001D86  064F               	decf	___ftadd@exp2,f,c
  4384  001D88  5050               	movf	___ftadd@exp1,w,c
  4385  001D8A  184F               	xorwf	___ftadd@exp2,w,c
  4386  001D8C  B4D8               	btfsc	status,2,c
  4387  001D8E  D00F               	goto	l1882
  4388  001D90  064E               	decf	___ftadd@sign,f,c
  4389  001D92  C04E  F04B         	movff	___ftadd@sign,??___ftadd
  4390  001D96  0E07               	movlw	7
  4391  001D98  164B               	andwf	??___ftadd,f,c
  4392  001D9A  B4D8               	btfsc	status,2,c
  4393  001D9C  D008               	goto	l1882
  4394  001D9E  D7EF               	goto	l1874
  4395  001DA0  D006               	goto	l1882
  4396  001DA2                     l1880:
  4397  001DA2  90D8               	bcf	status,0,c
  4398  001DA4  3247               	rrcf	___ftadd@f1+2,f,c
  4399  001DA6  3246               	rrcf	___ftadd@f1+1,f,c
  4400  001DA8  3245               	rrcf	___ftadd@f1,f,c
  4401  001DAA  2A50               	incf	___ftadd@exp1,f,c
  4402  001DAC  D000               	goto	l1882
  4403  001DAE                     l1882:
  4404  001DAE  504F               	movf	___ftadd@exp2,w,c
  4405  001DB0  1850               	xorwf	___ftadd@exp1,w,c
  4406  001DB2  B4D8               	btfsc	status,2,c
  4407  001DB4  D024               	goto	l599
  4408  001DB6  D7F5               	goto	l1880
  4409  001DB8  D022               	goto	l599
  4410  001DBA                     l1884:
  4411  001DBA  5050               	movf	___ftadd@exp1,w,c
  4412  001DBC  5C4F               	subwf	___ftadd@exp2,w,c
  4413  001DBE  B0D8               	btfsc	status,0,c
  4414  001DC0  D01E               	goto	l599
  4415  001DC2                     l1886:
  4416  001DC2  90D8               	bcf	status,0,c
  4417  001DC4  3645               	rlcf	___ftadd@f1,f,c
  4418  001DC6  3646               	rlcf	___ftadd@f1+1,f,c
  4419  001DC8  3647               	rlcf	___ftadd@f1+2,f,c
  4420  001DCA  0650               	decf	___ftadd@exp1,f,c
  4421  001DCC  5050               	movf	___ftadd@exp1,w,c
  4422  001DCE  184F               	xorwf	___ftadd@exp2,w,c
  4423  001DD0  B4D8               	btfsc	status,2,c
  4424  001DD2  D00F               	goto	l1894
  4425  001DD4  064E               	decf	___ftadd@sign,f,c
  4426  001DD6  C04E  F04B         	movff	___ftadd@sign,??___ftadd
  4427  001DDA  0E07               	movlw	7
  4428  001DDC  164B               	andwf	??___ftadd,f,c
  4429  001DDE  B4D8               	btfsc	status,2,c
  4430  001DE0  D008               	goto	l1894
  4431  001DE2  D7EF               	goto	l1886
  4432  001DE4  D006               	goto	l1894
  4433  001DE6                     l1892:
  4434  001DE6  90D8               	bcf	status,0,c
  4435  001DE8  324A               	rrcf	___ftadd@f2+2,f,c
  4436  001DEA  3249               	rrcf	___ftadd@f2+1,f,c
  4437  001DEC  3248               	rrcf	___ftadd@f2,f,c
  4438  001DEE  2A4F               	incf	___ftadd@exp2,f,c
  4439  001DF0  D000               	goto	l1894
  4440  001DF2                     l1894:
  4441  001DF2  504F               	movf	___ftadd@exp2,w,c
  4442  001DF4  1850               	xorwf	___ftadd@exp1,w,c
  4443  001DF6  B4D8               	btfsc	status,2,c
  4444  001DF8  D002               	goto	l599
  4445  001DFA  D7F5               	goto	l1892
  4446  001DFC  D000               	goto	l599
  4447  001DFE                     l599:
  4448  001DFE  AE4E               	btfss	___ftadd@sign,7,c
  4449  001E00  D00C               	goto	l608
  4450  001E02  0EFF               	movlw	255
  4451  001E04  1A45               	xorwf	___ftadd@f1,f,c
  4452  001E06  0EFF               	movlw	255
  4453  001E08  1A46               	xorwf	___ftadd@f1+1,f,c
  4454  001E0A  0EFF               	movlw	255
  4455  001E0C  1A47               	xorwf	___ftadd@f1+2,f,c
  4456  001E0E  0E01               	movlw	1
  4457  001E10  2645               	addwf	___ftadd@f1,f,c
  4458  001E12  0E00               	movlw	0
  4459  001E14  2246               	addwfc	___ftadd@f1+1,f,c
  4460  001E16  0E00               	movlw	0
  4461  001E18  2247               	addwfc	___ftadd@f1+2,f,c
  4462  001E1A                     l608:
  4463  001E1A  AC4E               	btfss	___ftadd@sign,6,c
  4464  001E1C  D00D               	goto	l1900
  4465  001E1E  0EFF               	movlw	255
  4466  001E20  1A48               	xorwf	___ftadd@f2,f,c
  4467  001E22  0EFF               	movlw	255
  4468  001E24  1A49               	xorwf	___ftadd@f2+1,f,c
  4469  001E26  0EFF               	movlw	255
  4470  001E28  1A4A               	xorwf	___ftadd@f2+2,f,c
  4471  001E2A  0E01               	movlw	1
  4472  001E2C  2648               	addwf	___ftadd@f2,f,c
  4473  001E2E  0E00               	movlw	0
  4474  001E30  2249               	addwfc	___ftadd@f2+1,f,c
  4475  001E32  0E00               	movlw	0
  4476  001E34  224A               	addwfc	___ftadd@f2+2,f,c
  4477  001E36  D000               	goto	l1900
  4478  001E38                     l1900:
  4479  001E38  0E00               	movlw	0
  4480  001E3A  6E4E               	movwf	___ftadd@sign,c
  4481  001E3C  5045               	movf	___ftadd@f1,w,c
  4482  001E3E  2648               	addwf	___ftadd@f2,f,c
  4483  001E40  5046               	movf	___ftadd@f1+1,w,c
  4484  001E42  2249               	addwfc	___ftadd@f2+1,f,c
  4485  001E44  5047               	movf	___ftadd@f1+2,w,c
  4486  001E46  224A               	addwfc	___ftadd@f2+2,f,c
  4487  001E48  AE4A               	btfss	___ftadd@f2+2,7,c
  4488  001E4A  D00F               	goto	l1910
  4489  001E4C  0EFF               	movlw	255
  4490  001E4E  1A48               	xorwf	___ftadd@f2,f,c
  4491  001E50  0EFF               	movlw	255
  4492  001E52  1A49               	xorwf	___ftadd@f2+1,f,c
  4493  001E54  0EFF               	movlw	255
  4494  001E56  1A4A               	xorwf	___ftadd@f2+2,f,c
  4495  001E58  0E01               	movlw	1
  4496  001E5A  2648               	addwf	___ftadd@f2,f,c
  4497  001E5C  0E00               	movlw	0
  4498  001E5E  2249               	addwfc	___ftadd@f2+1,f,c
  4499  001E60  0E00               	movlw	0
  4500  001E62  224A               	addwfc	___ftadd@f2+2,f,c
  4501  001E64  0E01               	movlw	1
  4502  001E66  6E4E               	movwf	___ftadd@sign,c
  4503  001E68  D000               	goto	l1910
  4504  001E6A                     l1910:
  4505  001E6A  C048  F001         	movff	___ftadd@f2,___ftpack@arg
  4506  001E6E  C049  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4507  001E72  C04A  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4508  001E76  C050  F004         	movff	___ftadd@exp1,___ftpack@exp
  4509  001E7A  C04E  F005         	movff	___ftadd@sign,___ftpack@sign
  4510  001E7E  EC2B  F012         	call	___ftpack	;wreg free
  4511  001E82  C001  F045         	movff	?___ftpack,?___ftadd
  4512  001E86  C002  F046         	movff	?___ftpack+1,?___ftadd+1
  4513  001E8A  C003  F047         	movff	?___ftpack+2,?___ftadd+2
  4514  001E8E  D000               	goto	l585
  4515  001E90                     l585:
  4516  001E90  0012               	return		;funcret
  4517  001E92                     __end_of___ftadd:
  4518                           	opt stack 0
  4519                           tblptru	equ	0xFF8
  4520                           tblptrh	equ	0xFF7
  4521                           tblptrl	equ	0xFF6
  4522                           tablat	equ	0xFF5
  4523                           prodh	equ	0xFF4
  4524                           prodl	equ	0xFF3
  4525                           postinc0	equ	0xFEE
  4526                           wreg	equ	0xFE8
  4527                           postdec1	equ	0xFE5
  4528                           fsr1l	equ	0xFE1
  4529                           postinc2	equ	0xFDE
  4530                           postdec2	equ	0xFDD
  4531                           fsr2h	equ	0xFDA
  4532                           fsr2l	equ	0xFD9
  4533                           status	equ	0xFD8
  4534                           
  4535 ;; *************** function ___ftneg *****************
  4536 ;; Defined at:
  4537 ;;		line 15 in file "E:\XC8\sources\common\ftneg.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  f1              3    0[COMRAM] float 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;		None
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  3    0[COMRAM] float 
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4551 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4554 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4555 ;;Total ram usage:        3 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_printf
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text17
  4565  002A20                     __ptext17:
  4566                           	opt stack 0
  4567  002A20                     ___ftneg:
  4568                           	opt stack 29
  4569                           
  4570                           ;incstack = 0
  4571  002A20  5001               	movf	___ftneg@f1,w,c
  4572  002A22  1002               	iorwf	___ftneg@f1+1,w,c
  4573  002A24  1003               	iorwf	___ftneg@f1+2,w,c
  4574  002A26  B4D8               	btfsc	status,2,c
  4575  002A28  D006               	goto	l658
  4576  002A2A  0E00               	movlw	0
  4577  002A2C  1A01               	xorwf	___ftneg@f1,f,c
  4578  002A2E  0E00               	movlw	0
  4579  002A30  1A02               	xorwf	___ftneg@f1+1,f,c
  4580  002A32  0E80               	movlw	128
  4581  002A34  1A03               	xorwf	___ftneg@f1+2,f,c
  4582  002A36                     l658:
  4583  002A36  C001  F001         	movff	___ftneg@f1,?___ftneg
  4584  002A3A  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4585  002A3E  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4586  002A42  0012               	return		;funcret
  4587  002A44                     __end_of___ftneg:
  4588                           	opt stack 0
  4589                           tblptru	equ	0xFF8
  4590                           tblptrh	equ	0xFF7
  4591                           tblptrl	equ	0xFF6
  4592                           tablat	equ	0xFF5
  4593                           prodh	equ	0xFF4
  4594                           prodl	equ	0xFF3
  4595                           postinc0	equ	0xFEE
  4596                           wreg	equ	0xFE8
  4597                           postdec1	equ	0xFE5
  4598                           fsr1l	equ	0xFE1
  4599                           postinc2	equ	0xFDE
  4600                           postdec2	equ	0xFDD
  4601                           fsr2h	equ	0xFDA
  4602                           fsr2l	equ	0xFD9
  4603                           status	equ	0xFD8
  4604                           
  4605 ;; *************** function ___ftge *****************
  4606 ;; Defined at:
  4607 ;;		line 4 in file "E:\XC8\sources\common\ftge.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  ff1             3    0[COMRAM] float 
  4610 ;;  ff2             3    3[COMRAM] float 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;		None
  4613 ;; Return value:  Size  Location     Type
  4614 ;;		None               void
  4615 ;; Registers used:
  4616 ;;		wreg, status,2, status,0
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4622 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;Total ram usage:        9 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_printf
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text18
  4636  0025B2                     __ptext18:
  4637                           	opt stack 0
  4638  0025B2                     ___ftge:
  4639                           	opt stack 29
  4640                           
  4641                           ;incstack = 0
  4642  0025B2  AE03               	btfss	___ftge@ff1+2,7,c
  4643  0025B4  D017               	goto	l2240
  4644  0025B6  C001  F007         	movff	___ftge@ff1,??___ftge
  4645  0025BA  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4646  0025BE  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4647  0025C2  1E07               	comf	??___ftge,f,c
  4648  0025C4  1E08               	comf	??___ftge+1,f,c
  4649  0025C6  1E09               	comf	??___ftge+2,f,c
  4650  0025C8  2A07               	incf	??___ftge,f,c
  4651  0025CA  0E00               	movlw	0
  4652  0025CC  2208               	addwfc	??___ftge+1,f,c
  4653  0025CE  2209               	addwfc	??___ftge+2,f,c
  4654  0025D0  0E00               	movlw	0
  4655  0025D2  2407               	addwf	??___ftge,w,c
  4656  0025D4  6E01               	movwf	___ftge@ff1,c
  4657  0025D6  0E00               	movlw	0
  4658  0025D8  2008               	addwfc	??___ftge+1,w,c
  4659  0025DA  6E02               	movwf	___ftge@ff1+1,c
  4660  0025DC  0E80               	movlw	128
  4661  0025DE  2009               	addwfc	??___ftge+2,w,c
  4662  0025E0  6E03               	movwf	___ftge@ff1+2,c
  4663  0025E2  D000               	goto	l2240
  4664  0025E4                     l2240:
  4665  0025E4  AE06               	btfss	___ftge@ff2+2,7,c
  4666  0025E6  D017               	goto	l2244
  4667  0025E8  C004  F007         	movff	___ftge@ff2,??___ftge
  4668  0025EC  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4669  0025F0  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4670  0025F4  1E07               	comf	??___ftge,f,c
  4671  0025F6  1E08               	comf	??___ftge+1,f,c
  4672  0025F8  1E09               	comf	??___ftge+2,f,c
  4673  0025FA  2A07               	incf	??___ftge,f,c
  4674  0025FC  0E00               	movlw	0
  4675  0025FE  2208               	addwfc	??___ftge+1,f,c
  4676  002600  2209               	addwfc	??___ftge+2,f,c
  4677  002602  0E00               	movlw	0
  4678  002604  2407               	addwf	??___ftge,w,c
  4679  002606  6E04               	movwf	___ftge@ff2,c
  4680  002608  0E00               	movlw	0
  4681  00260A  2008               	addwfc	??___ftge+1,w,c
  4682  00260C  6E05               	movwf	___ftge@ff2+1,c
  4683  00260E  0E80               	movlw	128
  4684  002610  2009               	addwfc	??___ftge+2,w,c
  4685  002612  6E06               	movwf	___ftge@ff2+2,c
  4686  002614  D000               	goto	l2244
  4687  002616                     l2244:
  4688  002616  0E00               	movlw	0
  4689  002618  1A01               	xorwf	___ftge@ff1,f,c
  4690  00261A  0E00               	movlw	0
  4691  00261C  1A02               	xorwf	___ftge@ff1+1,f,c
  4692  00261E  0E80               	movlw	128
  4693  002620  1A03               	xorwf	___ftge@ff1+2,f,c
  4694  002622  0E00               	movlw	0
  4695  002624  1A04               	xorwf	___ftge@ff2,f,c
  4696  002626  0E00               	movlw	0
  4697  002628  1A05               	xorwf	___ftge@ff2+1,f,c
  4698  00262A  0E80               	movlw	128
  4699  00262C  1A06               	xorwf	___ftge@ff2+2,f,c
  4700  00262E  5004               	movf	___ftge@ff2,w,c
  4701  002630  5C01               	subwf	___ftge@ff1,w,c
  4702  002632  5005               	movf	___ftge@ff2+1,w,c
  4703  002634  5802               	subwfb	___ftge@ff1+1,w,c
  4704  002636  5006               	movf	___ftge@ff2+2,w,c
  4705  002638  5803               	subwfb	___ftge@ff1+2,w,c
  4706  00263A  B0D8               	btfsc	status,0,c
  4707  00263C  D002               	goto	l2250
  4708  00263E  90D8               	bcf	status,0,c
  4709  002640  D002               	goto	l642
  4710  002642                     l2250:
  4711  002642  80D8               	bsf	status,0,c
  4712  002644  D000               	goto	l642
  4713  002646                     l642:
  4714  002646  0012               	return		;funcret
  4715  002648                     __end_of___ftge:
  4716                           	opt stack 0
  4717                           tblptru	equ	0xFF8
  4718                           tblptrh	equ	0xFF7
  4719                           tblptrl	equ	0xFF6
  4720                           tablat	equ	0xFF5
  4721                           prodh	equ	0xFF4
  4722                           prodl	equ	0xFF3
  4723                           postinc0	equ	0xFEE
  4724                           wreg	equ	0xFE8
  4725                           postdec1	equ	0xFE5
  4726                           fsr1l	equ	0xFE1
  4727                           postinc2	equ	0xFDE
  4728                           postdec2	equ	0xFDD
  4729                           fsr2h	equ	0xFDA
  4730                           fsr2l	equ	0xFD9
  4731                           status	equ	0xFD8
  4732                           
  4733 ;; *************** function ___ftdiv *****************
  4734 ;; Defined at:
  4735 ;;		line 54 in file "E:\XC8\sources\common\ftdiv.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  f1              3   12[COMRAM] float 
  4738 ;;  f2              3   15[COMRAM] float 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  f3              3   22[COMRAM] float 
  4741 ;;  sign            1   26[COMRAM] unsigned char 
  4742 ;;  exp             1   25[COMRAM] unsigned char 
  4743 ;;  cntr            1   21[COMRAM] unsigned char 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  3   12[COMRAM] float 
  4746 ;; Registers used:
  4747 ;;		wreg, status,2, status,0, cstack
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4753 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;Total ram usage:       15 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; Hardware stack levels required when called:    1
  4760 ;; This function calls:
  4761 ;;		___ftpack
  4762 ;; This function is called by:
  4763 ;;		_main
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text19
  4768  002374                     __ptext19:
  4769                           	opt stack 0
  4770  002374                     ___ftdiv:
  4771                           	opt stack 29
  4772                           
  4773                           ;incstack = 0
  4774  002374  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  4775  002378  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  4776  00237A  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  4777  00237C  340E               	rlcf	___ftdiv@f1+1,w,c
  4778  00237E  3613               	rlcf	??___ftdiv& (0+255),f,c
  4779  002380  E301               	bnc	u2831
  4780  002382  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  4781  002384                     u2831:
  4782  002384  5013               	movf	??___ftdiv,w,c
  4783  002386  6E1A               	movwf	___ftdiv@exp,c
  4784  002388  501A               	movf	___ftdiv@exp,w,c
  4785  00238A  A4D8               	btfss	status,2,c
  4786  00238C  D002               	goto	l2570
  4787  00238E  D00E               	goto	l2572
  4788  002390  D061               	goto	l616
  4789  002392                     l2570:
  4790  002392  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  4791  002396  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  4792  002398  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  4793  00239A  3411               	rlcf	___ftdiv@f2+1,w,c
  4794  00239C  3613               	rlcf	??___ftdiv& (0+255),f,c
  4795  00239E  E301               	bnc	u2851
  4796  0023A0  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  4797  0023A2                     u2851:
  4798  0023A2  5013               	movf	??___ftdiv,w,c
  4799  0023A4  6E1B               	movwf	___ftdiv@sign,c
  4800  0023A6  501B               	movf	___ftdiv@sign,w,c
  4801  0023A8  A4D8               	btfss	status,2,c
  4802  0023AA  D007               	goto	l2576
  4803  0023AC                     l2572:
  4804  0023AC  0E00               	movlw	0
  4805  0023AE  6E0D               	movwf	?___ftdiv,c
  4806  0023B0  0E00               	movlw	0
  4807  0023B2  6E0E               	movwf	?___ftdiv+1,c
  4808  0023B4  0E00               	movlw	0
  4809  0023B6  6E0F               	movwf	?___ftdiv+2,c
  4810  0023B8  D04D               	goto	l616
  4811  0023BA                     l2576:
  4812  0023BA  0E00               	movlw	0
  4813  0023BC  6E17               	movwf	___ftdiv@f3,c
  4814  0023BE  0E00               	movlw	0
  4815  0023C0  6E18               	movwf	___ftdiv@f3+1,c
  4816  0023C2  0E00               	movlw	0
  4817  0023C4  6E19               	movwf	___ftdiv@f3+2,c
  4818  0023C6  501B               	movf	___ftdiv@sign,w,c
  4819  0023C8  0F89               	addlw	137
  4820  0023CA  5E1A               	subwf	___ftdiv@exp,f,c
  4821  0023CC  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  4822  0023D0  5012               	movf	___ftdiv@f2+2,w,c
  4823  0023D2  1A1B               	xorwf	___ftdiv@sign,f,c
  4824  0023D4  0E80               	movlw	128
  4825  0023D6  161B               	andwf	___ftdiv@sign,f,c
  4826  0023D8  8E0E               	bsf	___ftdiv@f1+1,7,c
  4827  0023DA  0EFF               	movlw	255
  4828  0023DC  160D               	andwf	___ftdiv@f1,f,c
  4829  0023DE  0EFF               	movlw	255
  4830  0023E0  160E               	andwf	___ftdiv@f1+1,f,c
  4831  0023E2  0E00               	movlw	0
  4832  0023E4  160F               	andwf	___ftdiv@f1+2,f,c
  4833  0023E6  8E11               	bsf	___ftdiv@f2+1,7,c
  4834  0023E8  0EFF               	movlw	255
  4835  0023EA  1610               	andwf	___ftdiv@f2,f,c
  4836  0023EC  0EFF               	movlw	255
  4837  0023EE  1611               	andwf	___ftdiv@f2+1,f,c
  4838  0023F0  0E00               	movlw	0
  4839  0023F2  1612               	andwf	___ftdiv@f2+2,f,c
  4840  0023F4  0E18               	movlw	24
  4841  0023F6  6E16               	movwf	___ftdiv@cntr,c
  4842  0023F8  D000               	goto	l2596
  4843  0023FA                     l2596:
  4844  0023FA  90D8               	bcf	status,0,c
  4845  0023FC  3617               	rlcf	___ftdiv@f3,f,c
  4846  0023FE  3618               	rlcf	___ftdiv@f3+1,f,c
  4847  002400  3619               	rlcf	___ftdiv@f3+2,f,c
  4848  002402  5010               	movf	___ftdiv@f2,w,c
  4849  002404  5C0D               	subwf	___ftdiv@f1,w,c
  4850  002406  5011               	movf	___ftdiv@f2+1,w,c
  4851  002408  580E               	subwfb	___ftdiv@f1+1,w,c
  4852  00240A  5012               	movf	___ftdiv@f2+2,w,c
  4853  00240C  580F               	subwfb	___ftdiv@f1+2,w,c
  4854  00240E  A0D8               	btfss	status,0,c
  4855  002410  D007               	goto	l619
  4856  002412  5010               	movf	___ftdiv@f2,w,c
  4857  002414  5E0D               	subwf	___ftdiv@f1,f,c
  4858  002416  5011               	movf	___ftdiv@f2+1,w,c
  4859  002418  5A0E               	subwfb	___ftdiv@f1+1,f,c
  4860  00241A  5012               	movf	___ftdiv@f2+2,w,c
  4861  00241C  5A0F               	subwfb	___ftdiv@f1+2,f,c
  4862  00241E  8017               	bsf	___ftdiv@f3,0,c
  4863  002420                     l619:
  4864  002420  90D8               	bcf	status,0,c
  4865  002422  360D               	rlcf	___ftdiv@f1,f,c
  4866  002424  360E               	rlcf	___ftdiv@f1+1,f,c
  4867  002426  360F               	rlcf	___ftdiv@f1+2,f,c
  4868  002428  2E16               	decfsz	___ftdiv@cntr,f,c
  4869  00242A  D7E7               	goto	l2596
  4870  00242C  D000               	goto	l2606
  4871  00242E                     l2606:
  4872  00242E  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  4873  002432  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4874  002436  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4875  00243A  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  4876  00243E  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  4877  002442  EC2B  F012         	call	___ftpack	;wreg free
  4878  002446  C001  F00D         	movff	?___ftpack,?___ftdiv
  4879  00244A  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  4880  00244E  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  4881  002452  D000               	goto	l616
  4882  002454                     l616:
  4883  002454  0012               	return		;funcret
  4884  002456                     __end_of___ftdiv:
  4885                           	opt stack 0
  4886                           tblptru	equ	0xFF8
  4887                           tblptrh	equ	0xFF7
  4888                           tblptrl	equ	0xFF6
  4889                           tablat	equ	0xFF5
  4890                           prodh	equ	0xFF4
  4891                           prodl	equ	0xFF3
  4892                           postinc0	equ	0xFEE
  4893                           wreg	equ	0xFE8
  4894                           postdec1	equ	0xFE5
  4895                           fsr1l	equ	0xFE1
  4896                           postinc2	equ	0xFDE
  4897                           postdec2	equ	0xFDD
  4898                           fsr2h	equ	0xFDA
  4899                           fsr2l	equ	0xFD9
  4900                           status	equ	0xFD8
  4901                           
  4902 ;; *************** function ___awtoft *****************
  4903 ;; Defined at:
  4904 ;;		line 32 in file "E:\XC8\sources\common\awtoft.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  c               2    8[COMRAM] int 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  sign            1   11[COMRAM] unsigned char 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  3    8[COMRAM] float 
  4911 ;; Registers used:
  4912 ;;		wreg, status,2, status,0, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4918 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;Total ram usage:        4 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    1
  4925 ;; This function calls:
  4926 ;;		___ftpack
  4927 ;; This function is called by:
  4928 ;;		_main
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text20
  4933  002962                     __ptext20:
  4934                           	opt stack 0
  4935  002962                     ___awtoft:
  4936                           	opt stack 29
  4937                           
  4938                           ;incstack = 0
  4939  002962  0E00               	movlw	0
  4940  002964  6E0C               	movwf	___awtoft@sign,c
  4941  002966  AE0A               	btfss	___awtoft@c+1,7,c
  4942  002968  D007               	goto	l2618
  4943  00296A  6C09               	negf	___awtoft@c,c
  4944  00296C  1E0A               	comf	___awtoft@c+1,f,c
  4945  00296E  B0D8               	btfsc	status,0,c
  4946  002970  2A0A               	incf	___awtoft@c+1,f,c
  4947  002972  0E01               	movlw	1
  4948  002974  6E0C               	movwf	___awtoft@sign,c
  4949  002976  D000               	goto	l2618
  4950  002978                     l2618:
  4951  002978  C009  F001         	movff	___awtoft@c,___ftpack@arg
  4952  00297C  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  4953  002980  6A03               	clrf	___ftpack@arg+2,c
  4954  002982  0E8E               	movlw	142
  4955  002984  6E04               	movwf	___ftpack@exp,c
  4956  002986  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  4957  00298A  EC2B  F012         	call	___ftpack	;wreg free
  4958  00298E  C001  F009         	movff	?___ftpack,?___awtoft
  4959  002992  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  4960  002996  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  4961  00299A  D000               	goto	l437
  4962  00299C                     l437:
  4963  00299C  0012               	return		;funcret
  4964  00299E                     __end_of___awtoft:
  4965                           	opt stack 0
  4966                           tblptru	equ	0xFF8
  4967                           tblptrh	equ	0xFF7
  4968                           tblptrl	equ	0xFF6
  4969                           tablat	equ	0xFF5
  4970                           prodh	equ	0xFF4
  4971                           prodl	equ	0xFF3
  4972                           postinc0	equ	0xFEE
  4973                           wreg	equ	0xFE8
  4974                           postdec1	equ	0xFE5
  4975                           fsr1l	equ	0xFE1
  4976                           postinc2	equ	0xFDE
  4977                           postdec2	equ	0xFDD
  4978                           fsr2h	equ	0xFDA
  4979                           fsr2l	equ	0xFD9
  4980                           status	equ	0xFD8
  4981                           
  4982 ;; *************** function ___ftpack *****************
  4983 ;; Defined at:
  4984 ;;		line 62 in file "E:\XC8\sources\common\float.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  arg             3    0[COMRAM] unsigned um
  4987 ;;  exp             1    3[COMRAM] unsigned char 
  4988 ;;  sign            1    4[COMRAM] unsigned char 
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  3    0[COMRAM] float 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5000 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5002 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5004 ;;Total ram usage:        8 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; This function calls:
  5007 ;;		Nothing
  5008 ;; This function is called by:
  5009 ;;		___awtoft
  5010 ;;		___ftadd
  5011 ;;		___ftdiv
  5012 ;;		___ftmul
  5013 ;;		___lltoft
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           	psect	text21
  5018  002456                     __ptext21:
  5019                           	opt stack 0
  5020  002456                     ___ftpack:
  5021                           	opt stack 27
  5022                           
  5023                           ;incstack = 0
  5024  002456  5004               	movf	___ftpack@exp,w,c
  5025  002458  B4D8               	btfsc	status,2,c
  5026  00245A  D005               	goto	l1756
  5027  00245C  5001               	movf	___ftpack@arg,w,c
  5028  00245E  1002               	iorwf	___ftpack@arg+1,w,c
  5029  002460  1003               	iorwf	___ftpack@arg+2,w,c
  5030  002462  A4D8               	btfss	status,2,c
  5031  002464  D00E               	goto	l1762
  5032  002466                     l1756:
  5033  002466  0E00               	movlw	0
  5034  002468  6E01               	movwf	?___ftpack,c
  5035  00246A  0E00               	movlw	0
  5036  00246C  6E02               	movwf	?___ftpack+1,c
  5037  00246E  0E00               	movlw	0
  5038  002470  6E03               	movwf	?___ftpack+2,c
  5039  002472  D053               	goto	l544
  5040  002474  D006               	goto	l1762
  5041  002476                     l1760:
  5042  002476  2A04               	incf	___ftpack@exp,f,c
  5043  002478  90D8               	bcf	status,0,c
  5044  00247A  3203               	rrcf	___ftpack@arg+2,f,c
  5045  00247C  3202               	rrcf	___ftpack@arg+1,f,c
  5046  00247E  3201               	rrcf	___ftpack@arg,f,c
  5047  002480  D000               	goto	l1762
  5048  002482                     l1762:
  5049  002482  0E00               	movlw	0
  5050  002484  1401               	andwf	___ftpack@arg,w,c
  5051  002486  6E06               	movwf	??___ftpack& (0+255),c
  5052  002488  0E00               	movlw	0
  5053  00248A  1402               	andwf	___ftpack@arg+1,w,c
  5054  00248C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5055  00248E  0EFE               	movlw	254
  5056  002490  1403               	andwf	___ftpack@arg+2,w,c
  5057  002492  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5058  002494  5006               	movf	??___ftpack,w,c
  5059  002496  1007               	iorwf	??___ftpack+1,w,c
  5060  002498  1008               	iorwf	??___ftpack+2,w,c
  5061  00249A  B4D8               	btfsc	status,2,c
  5062  00249C  D00E               	goto	l1768
  5063  00249E  D7EB               	goto	l1760
  5064  0024A0  D00C               	goto	l1768
  5065  0024A2                     l1764:
  5066  0024A2  2A04               	incf	___ftpack@exp,f,c
  5067  0024A4  0E01               	movlw	1
  5068  0024A6  2601               	addwf	___ftpack@arg,f,c
  5069  0024A8  0E00               	movlw	0
  5070  0024AA  2202               	addwfc	___ftpack@arg+1,f,c
  5071  0024AC  0E00               	movlw	0
  5072  0024AE  2203               	addwfc	___ftpack@arg+2,f,c
  5073  0024B0  90D8               	bcf	status,0,c
  5074  0024B2  3203               	rrcf	___ftpack@arg+2,f,c
  5075  0024B4  3202               	rrcf	___ftpack@arg+1,f,c
  5076  0024B6  3201               	rrcf	___ftpack@arg,f,c
  5077  0024B8  D000               	goto	l1768
  5078  0024BA                     l1768:
  5079  0024BA  0E00               	movlw	0
  5080  0024BC  1401               	andwf	___ftpack@arg,w,c
  5081  0024BE  6E06               	movwf	??___ftpack& (0+255),c
  5082  0024C0  0E00               	movlw	0
  5083  0024C2  1402               	andwf	___ftpack@arg+1,w,c
  5084  0024C4  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5085  0024C6  0EFF               	movlw	255
  5086  0024C8  1403               	andwf	___ftpack@arg+2,w,c
  5087  0024CA  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5088  0024CC  5006               	movf	??___ftpack,w,c
  5089  0024CE  1007               	iorwf	??___ftpack+1,w,c
  5090  0024D0  1008               	iorwf	??___ftpack+2,w,c
  5091  0024D2  B4D8               	btfsc	status,2,c
  5092  0024D4  D008               	goto	l1772
  5093  0024D6  D7E5               	goto	l1764
  5094  0024D8  D006               	goto	l1772
  5095  0024DA                     l1770:
  5096  0024DA  0604               	decf	___ftpack@exp,f,c
  5097  0024DC  90D8               	bcf	status,0,c
  5098  0024DE  3601               	rlcf	___ftpack@arg,f,c
  5099  0024E0  3602               	rlcf	___ftpack@arg+1,f,c
  5100  0024E2  3603               	rlcf	___ftpack@arg+2,f,c
  5101  0024E4  D000               	goto	l1772
  5102  0024E6                     l1772:
  5103  0024E6  BE02               	btfsc	___ftpack@arg+1,7,c
  5104  0024E8  D004               	goto	l555
  5105  0024EA  0E02               	movlw	2
  5106  0024EC  6004               	cpfslt	___ftpack@exp,c
  5107  0024EE  D7F5               	goto	l1770
  5108  0024F0  D000               	goto	l555
  5109  0024F2                     l555:
  5110  0024F2  B004               	btfsc	___ftpack@exp,0,c
  5111  0024F4  D002               	goto	l1778
  5112  0024F6  9E02               	bcf	___ftpack@arg+1,7,c
  5113  0024F8  D000               	goto	l1778
  5114  0024FA                     l1778:
  5115  0024FA  90D8               	bcf	status,0,c
  5116  0024FC  3204               	rrcf	___ftpack@exp,f,c
  5117  0024FE  5004               	movf	___ftpack@exp,w,c
  5118  002500  1203               	iorwf	___ftpack@arg+2,f,c
  5119  002502  5005               	movf	___ftpack@sign,w,c
  5120  002504  B4D8               	btfsc	status,2,c
  5121  002506  D002               	goto	l1784
  5122  002508  8E03               	bsf	___ftpack@arg+2,7,c
  5123  00250A  D000               	goto	l1784
  5124  00250C                     l1784:
  5125  00250C  C001  F001         	movff	___ftpack@arg,?___ftpack
  5126  002510  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5127  002514  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5128  002518  D000               	goto	l544
  5129  00251A                     l544:
  5130  00251A  0012               	return		;funcret
  5131  00251C                     __end_of___ftpack:
  5132                           	opt stack 0
  5133                           tblptru	equ	0xFF8
  5134                           tblptrh	equ	0xFF7
  5135                           tblptrl	equ	0xFF6
  5136                           tablat	equ	0xFF5
  5137                           prodh	equ	0xFF4
  5138                           prodl	equ	0xFF3
  5139                           postinc0	equ	0xFEE
  5140                           wreg	equ	0xFE8
  5141                           postdec1	equ	0xFE5
  5142                           fsr1l	equ	0xFE1
  5143                           postinc2	equ	0xFDE
  5144                           postdec2	equ	0xFDD
  5145                           fsr2h	equ	0xFDA
  5146                           fsr2l	equ	0xFD9
  5147                           status	equ	0xFD8
  5148                           
  5149 ;; *************** function _WAIT_1_SEC *****************
  5150 ;; Defined at:
  5151 ;;		line 21 in file "Lab5p1.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;		None
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  j               2    0[COMRAM] int 
  5156 ;; Return value:  Size  Location     Type
  5157 ;;		None               void
  5158 ;; Registers used:
  5159 ;;		wreg, status,2, status,0
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5168 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5169 ;;Total ram usage:        2 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_main
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           	psect	text22
  5179  002A44                     __ptext22:
  5180                           	opt stack 0
  5181  002A44                     _WAIT_1_SEC:
  5182                           	opt stack 30
  5183                           
  5184                           ;Lab5p1.c: 23: for (int j=0; j<0xffff; j++);
  5185                           
  5186                           ;incstack = 0
  5187  002A44  0E00               	movlw	0
  5188  002A46  6E02               	movwf	WAIT_1_SEC@j+1,c
  5189  002A48  0E00               	movlw	0
  5190  002A4A  6E01               	movwf	WAIT_1_SEC@j,c
  5191  002A4C                     l2354:
  5192  002A4C  2801               	incf	WAIT_1_SEC@j,w,c
  5193  002A4E  E105               	bnz	l2358
  5194  002A50  2802               	incf	WAIT_1_SEC@j+1,w,c
  5195  002A52  B4D8               	btfsc	status,2,c
  5196  002A54  D006               	goto	l57
  5197  002A56  D001               	goto	l2358
  5198  002A58  D004               	goto	l57
  5199  002A5A                     l2358:
  5200  002A5A  4A01               	infsnz	WAIT_1_SEC@j,f,c
  5201  002A5C  2A02               	incf	WAIT_1_SEC@j+1,f,c
  5202  002A5E  D7F6               	goto	l2354
  5203  002A60  D7FC               	goto	l2358
  5204  002A62                     l57:
  5205  002A62  0012               	return		;funcret
  5206  002A64                     __end_of_WAIT_1_SEC:
  5207                           	opt stack 0
  5208                           tblptru	equ	0xFF8
  5209                           tblptrh	equ	0xFF7
  5210                           tblptrl	equ	0xFF6
  5211                           tablat	equ	0xFF5
  5212                           prodh	equ	0xFF4
  5213                           prodl	equ	0xFF3
  5214                           postinc0	equ	0xFEE
  5215                           wreg	equ	0xFE8
  5216                           postdec1	equ	0xFE5
  5217                           fsr1l	equ	0xFE1
  5218                           postinc2	equ	0xFDE
  5219                           postdec2	equ	0xFDD
  5220                           fsr2h	equ	0xFDA
  5221                           fsr2l	equ	0xFD9
  5222                           status	equ	0xFD8
  5223                           
  5224 ;; *************** function _SET_ADC_CH *****************
  5225 ;; Defined at:
  5226 ;;		line 72 in file "Lab5p1.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;  ADC_CH          1    wreg     unsigned char 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  ADC_CH          1    0[COMRAM] unsigned char 
  5231 ;; Return value:  Size  Location     Type
  5232 ;;		None               void
  5233 ;; Registers used:
  5234 ;;		wreg, status,2, status,0, prodl, prodh
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5244 ;;Total ram usage:        1 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_main
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           	psect	text23
  5254  002ADC                     __ptext23:
  5255                           	opt stack 0
  5256  002ADC                     _SET_ADC_CH:
  5257                           	opt stack 30
  5258                           
  5259                           ;incstack = 0
  5260                           ;SET_ADC_CH@ADC_CH stored from wreg
  5261  002ADC  6E01               	movwf	SET_ADC_CH@ADC_CH,c
  5262                           
  5263                           ;Lab5p1.c: 74: ADCON0 = (ADC_CH * 4) + 1;
  5264  002ADE  5001               	movf	SET_ADC_CH@ADC_CH,w,c
  5265  002AE0  0D04               	mullw	4
  5266  002AE2  28F3               	incf	prodl,w,c
  5267  002AE4  6EC2               	movwf	4034,c	;volatile
  5268  002AE6  0012               	return		;funcret
  5269  002AE8                     __end_of_SET_ADC_CH:
  5270                           	opt stack 0
  5271                           tblptru	equ	0xFF8
  5272                           tblptrh	equ	0xFF7
  5273                           tblptrl	equ	0xFF6
  5274                           tablat	equ	0xFF5
  5275                           prodh	equ	0xFF4
  5276                           prodl	equ	0xFF3
  5277                           postinc0	equ	0xFEE
  5278                           wreg	equ	0xFE8
  5279                           postdec1	equ	0xFE5
  5280                           fsr1l	equ	0xFE1
  5281                           postinc2	equ	0xFDE
  5282                           postdec2	equ	0xFDD
  5283                           fsr2h	equ	0xFDA
  5284                           fsr2l	equ	0xFD9
  5285                           status	equ	0xFD8
  5286                           
  5287 ;; *************** function _GET_FULL_ADC *****************
  5288 ;; Defined at:
  5289 ;;		line 99 in file "Lab5p1.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;		None
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;  result          2    4[COMRAM] int 
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  2    0[COMRAM] unsigned int 
  5296 ;; Registers used:
  5297 ;;		wreg, status,2, status,0
  5298 ;; Tracked objects:
  5299 ;;		On entry : 0/0
  5300 ;;		On exit  : 0/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5303 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;Total ram usage:        6 bytes
  5308 ;; Hardware stack levels used:    1
  5309 ;; This function calls:
  5310 ;;		Nothing
  5311 ;; This function is called by:
  5312 ;;		_main
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           	psect	text24
  5317  0029FA                     __ptext24:
  5318                           	opt stack 0
  5319  0029FA                     _GET_FULL_ADC:
  5320                           	opt stack 30
  5321                           
  5322                           ;Lab5p1.c: 101: int result;
  5323                           ;Lab5p1.c: 102: ADCON0bits.GO = 1;
  5324                           
  5325                           ;incstack = 0
  5326  0029FA  82C2               	bsf	4034,1,c	;volatile
  5327                           
  5328                           ;Lab5p1.c: 103: while(ADCON0bits.DONE == 1);
  5329  0029FC  D000               	goto	l97
  5330  0029FE                     l97:
  5331  0029FE  B2C2               	btfsc	4034,1,c	;volatile
  5332  002A00  D7FE               	goto	l97
  5333                           
  5334                           ;Lab5p1.c: 104: result = (ADRESH * 0x100 + ADRESL);
  5335  002A02  50C4               	movf	4036,w,c	;volatile
  5336  002A04  6E04               	movwf	(??_GET_FULL_ADC+1)& (0+255),c
  5337  002A06  6A03               	clrf	??_GET_FULL_ADC& (0+255),c
  5338  002A08  50C3               	movf	4035,w,c	;volatile
  5339  002A0A  2403               	addwf	??_GET_FULL_ADC,w,c
  5340  002A0C  6E05               	movwf	GET_FULL_ADC@result,c
  5341  002A0E  0E00               	movlw	0
  5342  002A10  2004               	addwfc	??_GET_FULL_ADC+1,w,c
  5343  002A12  6E06               	movwf	GET_FULL_ADC@result+1,c
  5344                           
  5345                           ;Lab5p1.c: 106: return result;
  5346  002A14  C005  F001         	movff	GET_FULL_ADC@result,?_GET_FULL_ADC
  5347  002A18  C006  F002         	movff	GET_FULL_ADC@result+1,?_GET_FULL_ADC+1
  5348  002A1C  D000               	goto	l100
  5349  002A1E                     l100:
  5350  002A1E  0012               	return		;funcret
  5351  002A20                     __end_of_GET_FULL_ADC:
  5352                           	opt stack 0
  5353                           tblptru	equ	0xFF8
  5354                           tblptrh	equ	0xFF7
  5355                           tblptrl	equ	0xFF6
  5356                           tablat	equ	0xFF5
  5357                           prodh	equ	0xFF4
  5358                           prodl	equ	0xFF3
  5359                           postinc0	equ	0xFEE
  5360                           wreg	equ	0xFE8
  5361                           postdec1	equ	0xFE5
  5362                           fsr1l	equ	0xFE1
  5363                           postinc2	equ	0xFDE
  5364                           postdec2	equ	0xFDD
  5365                           fsr2h	equ	0xFDA
  5366                           fsr2l	equ	0xFD9
  5367                           status	equ	0xFD8
  5368                           
  5369 ;; *************** function _DO_INIT *****************
  5370 ;; Defined at:
  5371 ;;		line 89 in file "Lab5p1.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;		None
  5374 ;; Auto vars:     Size  Location     Type
  5375 ;;		None
  5376 ;; Return value:  Size  Location     Type
  5377 ;;		None               void
  5378 ;; Registers used:
  5379 ;;		wreg, status,2, cstack
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;Total ram usage:        0 bytes
  5390 ;; Hardware stack levels used:    1
  5391 ;; Hardware stack levels required when called:    2
  5392 ;; This function calls:
  5393 ;;		_INIT_ADC
  5394 ;;		_init_UART
  5395 ;; This function is called by:
  5396 ;;		_main
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           	psect	text25
  5401  002A64                     __ptext25:
  5402                           	opt stack 0
  5403  002A64                     _DO_INIT:
  5404                           	opt stack 28
  5405                           
  5406                           ;Lab5p1.c: 91: init_UART();
  5407                           
  5408                           ;incstack = 0
  5409  002A64  EC56  F015         	call	_init_UART	;wreg free
  5410                           
  5411                           ;Lab5p1.c: 92: TRISA = 0xFF;
  5412  002A68  6892               	setf	3986,c	;volatile
  5413                           
  5414                           ;Lab5p1.c: 93: TRISB = 0x00;
  5415  002A6A  0E00               	movlw	0
  5416  002A6C  6E93               	movwf	3987,c	;volatile
  5417                           
  5418                           ;Lab5p1.c: 94: TRISC = 0x00;
  5419  002A6E  0E00               	movlw	0
  5420  002A70  6E94               	movwf	3988,c	;volatile
  5421                           
  5422                           ;Lab5p1.c: 95: TRISD = 0x00;
  5423  002A72  0E00               	movlw	0
  5424  002A74  6E95               	movwf	3989,c	;volatile
  5425                           
  5426                           ;Lab5p1.c: 96: TRISE = 0x00;
  5427  002A76  0E00               	movlw	0
  5428  002A78  6E96               	movwf	3990,c	;volatile
  5429                           
  5430                           ;Lab5p1.c: 97: INIT_ADC();
  5431  002A7A  EC67  F015         	call	_INIT_ADC	;wreg free
  5432  002A7E  0012               	return		;funcret
  5433  002A80                     __end_of_DO_INIT:
  5434                           	opt stack 0
  5435                           tblptru	equ	0xFF8
  5436                           tblptrh	equ	0xFF7
  5437                           tblptrl	equ	0xFF6
  5438                           tablat	equ	0xFF5
  5439                           prodh	equ	0xFF4
  5440                           prodl	equ	0xFF3
  5441                           postinc0	equ	0xFEE
  5442                           wreg	equ	0xFE8
  5443                           postdec1	equ	0xFE5
  5444                           fsr1l	equ	0xFE1
  5445                           postinc2	equ	0xFDE
  5446                           postdec2	equ	0xFDD
  5447                           fsr2h	equ	0xFDA
  5448                           fsr2l	equ	0xFD9
  5449                           status	equ	0xFD8
  5450                           
  5451 ;; *************** function _init_UART *****************
  5452 ;; Defined at:
  5453 ;;		line 82 in file "Lab5p1.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;		None
  5458 ;; Return value:  Size  Location     Type
  5459 ;;		None               void
  5460 ;; Registers used:
  5461 ;;		wreg, status,2, cstack
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5471 ;;Total ram usage:        0 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    1
  5474 ;; This function calls:
  5475 ;;		_OpenUSART
  5476 ;; This function is called by:
  5477 ;;		_DO_INIT
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           	psect	text26
  5482  002AAC                     __ptext26:
  5483                           	opt stack 0
  5484  002AAC                     _init_UART:
  5485                           	opt stack 28
  5486                           
  5487                           ;Lab5p1.c: 84: OpenUSART (0b01111111 & 0b10111111 &
  5488                           ;Lab5p1.c: 85: 0b11111110 & 0b11111101 & 0b11111111 &
  5489                           ;Lab5p1.c: 86: 0b11111111, 25);
  5490                           
  5491                           ;incstack = 0
  5492  002AAC  0E00               	movlw	0
  5493  002AAE  6E02               	movwf	OpenUSART@spbrg+1,c
  5494  002AB0  0E19               	movlw	25
  5495  002AB2  6E01               	movwf	OpenUSART@spbrg,c
  5496  002AB4  0E3C               	movlw	60
  5497  002AB6  EC27  F014         	call	_OpenUSART
  5498                           
  5499                           ;Lab5p1.c: 87: OSCCON = 0x60;
  5500  002ABA  0E60               	movlw	96
  5501  002ABC  6ED3               	movwf	4051,c	;volatile
  5502  002ABE  0012               	return		;funcret
  5503  002AC0                     __end_of_init_UART:
  5504                           	opt stack 0
  5505                           tblptru	equ	0xFF8
  5506                           tblptrh	equ	0xFF7
  5507                           tblptrl	equ	0xFF6
  5508                           tablat	equ	0xFF5
  5509                           prodh	equ	0xFF4
  5510                           prodl	equ	0xFF3
  5511                           postinc0	equ	0xFEE
  5512                           wreg	equ	0xFE8
  5513                           postdec1	equ	0xFE5
  5514                           fsr1l	equ	0xFE1
  5515                           postinc2	equ	0xFDE
  5516                           postdec2	equ	0xFDD
  5517                           fsr2h	equ	0xFDA
  5518                           fsr2l	equ	0xFD9
  5519                           status	equ	0xFD8
  5520                           
  5521 ;; *************** function _OpenUSART *****************
  5522 ;; Defined at:
  5523 ;;		line 73 in file "E:\XC8\sources\pic18\plib\USART\uopen.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  config          1    wreg     unsigned char 
  5526 ;;  spbrg           2    0[COMRAM] unsigned int 
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;  config          1    2[COMRAM] unsigned char 
  5529 ;; Return value:  Size  Location     Type
  5530 ;;		None               void
  5531 ;; Registers used:
  5532 ;;		wreg, status,2
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;Total ram usage:        3 bytes
  5543 ;; Hardware stack levels used:    1
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_init_UART
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           	psect	text27
  5552  00284E                     __ptext27:
  5553                           	opt stack 0
  5554  00284E                     _OpenUSART:
  5555                           	opt stack 28
  5556                           
  5557                           ;incstack = 0
  5558                           ;OpenUSART@config stored from wreg
  5559  00284E  6E03               	movwf	OpenUSART@config,c
  5560  002850  0E00               	movlw	0
  5561  002852  6EAC               	movwf	4012,c	;volatile
  5562  002854  0E00               	movlw	0
  5563  002856  6EAB               	movwf	4011,c	;volatile
  5564  002858  A003               	btfss	OpenUSART@config,0,c
  5565  00285A  D002               	goto	l1794
  5566  00285C  88AC               	bsf	4012,4,c	;volatile
  5567  00285E  D000               	goto	l1794
  5568  002860                     l1794:
  5569  002860  A203               	btfss	OpenUSART@config,1,c
  5570  002862  D003               	goto	l1798
  5571  002864  8CAC               	bsf	4012,6,c	;volatile
  5572  002866  8CAB               	bsf	4011,6,c	;volatile
  5573  002868  D000               	goto	l1798
  5574  00286A                     l1798:
  5575  00286A  A403               	btfss	OpenUSART@config,2,c
  5576  00286C  D002               	goto	l1802
  5577  00286E  8EAC               	bsf	4012,7,c	;volatile
  5578  002870  D000               	goto	l1802
  5579  002872                     l1802:
  5580  002872  A603               	btfss	OpenUSART@config,3,c
  5581  002874  D002               	goto	l207
  5582  002876  88AB               	bsf	4011,4,c	;volatile
  5583  002878  D002               	goto	l1806
  5584  00287A                     l207:
  5585  00287A  8AAB               	bsf	4011,5,c	;volatile
  5586  00287C  D000               	goto	l1806
  5587  00287E                     l1806:
  5588  00287E  B803               	btfsc	OpenUSART@config,4,c
  5589  002880  84AC               	bsf	4012,2,c	;volatile
  5590  002882  989E               	bcf	3998,4,c	;volatile
  5591  002884  AA03               	btfss	OpenUSART@config,5,c
  5592  002886  D002               	goto	l1814
  5593  002888  86AB               	bsf	4011,3,c	;volatile
  5594  00288A  D000               	goto	l1814
  5595  00288C                     l1814:
  5596  00288C  AC03               	btfss	OpenUSART@config,6,c
  5597  00288E  D002               	goto	l211
  5598  002890  8A9D               	bsf	3997,5,c	;volatile
  5599  002892  D001               	goto	l212
  5600  002894                     l211:
  5601  002894  9A9D               	bcf	3997,5,c	;volatile
  5602  002896                     l212:
  5603  002896  9A9E               	bcf	3998,5,c	;volatile
  5604  002898  AE03               	btfss	OpenUSART@config,7,c
  5605  00289A  D002               	goto	l213
  5606  00289C  889D               	bsf	3997,4,c	;volatile
  5607  00289E  D001               	goto	l214
  5608  0028A0                     l213:
  5609  0028A0  989D               	bcf	3997,4,c	;volatile
  5610  0028A2                     l214:
  5611  0028A2  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5612  0028A6  5002               	movf	OpenUSART@spbrg+1,w,c
  5613  0028A8  6EB0               	movwf	4016,c	;volatile
  5614  0028AA  8AAC               	bsf	4012,5,c	;volatile
  5615  0028AC  8EAB               	bsf	4011,7,c	;volatile
  5616  0028AE  9C94               	bcf	3988,6,c	;volatile
  5617  0028B0  8E94               	bsf	3988,7,c	;volatile
  5618  0028B2  B8AC               	btfsc	4012,4,c	;volatile
  5619  0028B4  BEAC               	btfsc	4012,7,c	;volatile
  5620  0028B6  D002               	goto	l216
  5621  0028B8  8C94               	bsf	3988,6,c	;volatile
  5622  0028BA  D000               	goto	l216
  5623  0028BC                     l216:
  5624  0028BC  0012               	return		;funcret
  5625  0028BE                     __end_of_OpenUSART:
  5626                           	opt stack 0
  5627                           tblptru	equ	0xFF8
  5628                           tblptrh	equ	0xFF7
  5629                           tblptrl	equ	0xFF6
  5630                           tablat	equ	0xFF5
  5631                           prodh	equ	0xFF4
  5632                           prodl	equ	0xFF3
  5633                           postinc0	equ	0xFEE
  5634                           wreg	equ	0xFE8
  5635                           postdec1	equ	0xFE5
  5636                           fsr1l	equ	0xFE1
  5637                           postinc2	equ	0xFDE
  5638                           postdec2	equ	0xFDD
  5639                           fsr2h	equ	0xFDA
  5640                           fsr2l	equ	0xFD9
  5641                           status	equ	0xFD8
  5642                           
  5643 ;; *************** function _INIT_ADC *****************
  5644 ;; Defined at:
  5645 ;;		line 76 in file "Lab5p1.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;		None
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;		None
  5650 ;; Return value:  Size  Location     Type
  5651 ;;		None               void
  5652 ;; Registers used:
  5653 ;;		wreg, status,2
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;Total ram usage:        0 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; This function calls:
  5666 ;;		Nothing
  5667 ;; This function is called by:
  5668 ;;		_DO_INIT
  5669 ;; This function uses a non-reentrant model
  5670 ;;
  5671                           
  5672                           	psect	text28
  5673  002ACE                     __ptext28:
  5674                           	opt stack 0
  5675  002ACE                     _INIT_ADC:
  5676                           	opt stack 29
  5677                           
  5678                           ;Lab5p1.c: 78: ADCON0=0x01;
  5679                           
  5680                           ;incstack = 0
  5681  002ACE  0E01               	movlw	1
  5682  002AD0  6EC2               	movwf	4034,c	;volatile
  5683                           
  5684                           ;Lab5p1.c: 79: ADCON1=0x1B ;
  5685  002AD2  0E1B               	movlw	27
  5686  002AD4  6EC1               	movwf	4033,c	;volatile
  5687                           
  5688                           ;Lab5p1.c: 80: ADCON2=0xA9;
  5689  002AD6  0EA9               	movlw	169
  5690  002AD8  6EC0               	movwf	4032,c	;volatile
  5691  002ADA  0012               	return		;funcret
  5692  002ADC                     __end_of_INIT_ADC:
  5693                           	opt stack 0
  5694                           tblptru	equ	0xFF8
  5695                           tblptrh	equ	0xFF7
  5696                           tblptrl	equ	0xFF6
  5697                           tablat	equ	0xFF5
  5698                           prodh	equ	0xFF4
  5699                           prodl	equ	0xFF3
  5700                           postinc0	equ	0xFEE
  5701                           wreg	equ	0xFE8
  5702                           postdec1	equ	0xFE5
  5703                           fsr1l	equ	0xFE1
  5704                           postinc2	equ	0xFDE
  5705                           postdec2	equ	0xFDD
  5706                           fsr2h	equ	0xFDA
  5707                           fsr2l	equ	0xFD9
  5708                           status	equ	0xFD8
  5709                           
  5710 ;; *************** function _DO_DISPLAY_7SEG_Upper *****************
  5711 ;; Defined at:
  5712 ;;		line 32 in file "Lab5p1.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;  digit           1    wreg     unsigned char 
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;  digit           1    0[COMRAM] unsigned char 
  5717 ;;  PE              1    2[COMRAM] unsigned char 
  5718 ;;  PC              1    1[COMRAM] unsigned char 
  5719 ;; Return value:  Size  Location     Type
  5720 ;;		None               void
  5721 ;; Registers used:
  5722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5732 ;;Total ram usage:        3 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_main
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text29
  5742  0026D4                     __ptext29:
  5743                           	opt stack 0
  5744  0026D4                     _DO_DISPLAY_7SEG_Upper:
  5745                           	opt stack 30
  5746                           
  5747                           ;incstack = 0
  5748                           ;DO_DISPLAY_7SEG_Upper@digit stored from wreg
  5749  0026D4  6E01               	movwf	DO_DISPLAY_7SEG_Upper@digit,c
  5750                           
  5751                           ;Lab5p1.c: 34: PORTC = array[digit] & 0x3F;
  5752  0026D6  5001               	movf	DO_DISPLAY_7SEG_Upper@digit,w,c
  5753  0026D8  0D02               	mullw	2
  5754  0026DA  0E80               	movlw	low _array
  5755  0026DC  24F3               	addwf	prodl,w,c
  5756  0026DE  6ED9               	movwf	fsr2l,c
  5757  0026E0  0E00               	movlw	high _array
  5758  0026E2  20F4               	addwfc	prodh,w,c
  5759  0026E4  6EDA               	movwf	fsr2h,c
  5760  0026E6  50DF               	movf	indf2,w,c
  5761  0026E8  0B3F               	andlw	63
  5762  0026EA  6E82               	movwf	3970,c	;volatile
  5763                           
  5764                           ;Lab5p1.c: 35: char PC = array[digit] & 0x01;
  5765  0026EC  5001               	movf	DO_DISPLAY_7SEG_Upper@digit,w,c
  5766  0026EE  0D02               	mullw	2
  5767  0026F0  0E80               	movlw	low _array
  5768  0026F2  24F3               	addwf	prodl,w,c
  5769  0026F4  6ED9               	movwf	fsr2l,c
  5770  0026F6  0E00               	movlw	high _array
  5771  0026F8  20F4               	addwfc	prodh,w,c
  5772  0026FA  6EDA               	movwf	fsr2h,c
  5773  0026FC  50DF               	movf	indf2,w,c
  5774  0026FE  0B01               	andlw	1
  5775  002700  6E02               	movwf	DO_DISPLAY_7SEG_Upper@PC,c
  5776                           
  5777                           ;Lab5p1.c: 36: char PE = array[digit] & 0x40;
  5778  002702  5001               	movf	DO_DISPLAY_7SEG_Upper@digit,w,c
  5779  002704  0D02               	mullw	2
  5780  002706  0E80               	movlw	low _array
  5781  002708  24F3               	addwf	prodl,w,c
  5782  00270A  6ED9               	movwf	fsr2l,c
  5783  00270C  0E00               	movlw	high _array
  5784  00270E  20F4               	addwfc	prodh,w,c
  5785  002710  6EDA               	movwf	fsr2h,c
  5786  002712  50DF               	movf	indf2,w,c
  5787  002714  0B40               	andlw	64
  5788  002716  6E03               	movwf	DO_DISPLAY_7SEG_Upper@PE,c
  5789                           
  5790                           ;Lab5p1.c: 37: if (PE == 0 && PC ==0)
  5791  002718  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  5792  00271A  A4D8               	btfss	status,2,c
  5793  00271C  D005               	goto	l2370
  5794  00271E  5002               	movf	DO_DISPLAY_7SEG_Upper@PC,w,c
  5795  002720  A4D8               	btfss	status,2,c
  5796  002722  D002               	goto	l2370
  5797                           
  5798                           ;Lab5p1.c: 38: PORTE = 0x00;
  5799  002724  0E00               	movlw	0
  5800  002726  D017               	goto	L10
  5801  002728                     l2370:
  5802                           
  5803                           ;Lab5p1.c: 39: else if (PC == 0 && PE != 0)
  5804  002728  5002               	movf	DO_DISPLAY_7SEG_Upper@PC,w,c
  5805  00272A  A4D8               	btfss	status,2,c
  5806  00272C  D005               	goto	l2376
  5807  00272E  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  5808  002730  B4D8               	btfsc	status,2,c
  5809  002732  D002               	goto	l2376
  5810                           
  5811                           ;Lab5p1.c: 40: PORTE = 0x01;
  5812  002734  0E01               	movlw	1
  5813  002736  D00F               	goto	L10
  5814  002738                     l2376:
  5815                           
  5816                           ;Lab5p1.c: 41: else if (PC == 1 && PE == 0)
  5817  002738  0402               	decf	DO_DISPLAY_7SEG_Upper@PC,w,c
  5818  00273A  A4D8               	btfss	status,2,c
  5819  00273C  D005               	goto	l2382
  5820  00273E  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  5821  002740  A4D8               	btfss	status,2,c
  5822  002742  D002               	goto	l2382
  5823                           
  5824                           ;Lab5p1.c: 42: PORTE = 0x02;
  5825  002744  0E02               	movlw	2
  5826  002746  D007               	goto	L10
  5827  002748                     l2382:
  5828                           
  5829                           ;Lab5p1.c: 43: else if (PC == 1 && PE != 0)
  5830  002748  0402               	decf	DO_DISPLAY_7SEG_Upper@PC,w,c
  5831  00274A  A4D8               	btfss	status,2,c
  5832  00274C  D006               	goto	l73
  5833  00274E  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  5834  002750  B4D8               	btfsc	status,2,c
  5835  002752  D003               	goto	l73
  5836                           
  5837                           ;Lab5p1.c: 44: PORTE = 0x03;
  5838  002754  0E03               	movlw	3
  5839  002756                     L10:
  5840  002756  6E84               	movwf	3972,c	;volatile
  5841  002758  D000               	goto	l73
  5842  00275A                     l73:
  5843  00275A  0012               	return		;funcret
  5844  00275C                     __end_of_DO_DISPLAY_7SEG_Upper:
  5845                           	opt stack 0
  5846                           tblptru	equ	0xFF8
  5847                           tblptrh	equ	0xFF7
  5848                           tblptrl	equ	0xFF6
  5849                           tablat	equ	0xFF5
  5850                           prodh	equ	0xFF4
  5851                           prodl	equ	0xFF3
  5852                           postinc0	equ	0xFEE
  5853                           wreg	equ	0xFE8
  5854                           postdec1	equ	0xFE5
  5855                           fsr1l	equ	0xFE1
  5856                           indf2	equ	0xFDF
  5857                           postinc2	equ	0xFDE
  5858                           postdec2	equ	0xFDD
  5859                           fsr2h	equ	0xFDA
  5860                           fsr2l	equ	0xFD9
  5861                           status	equ	0xFD8
  5862                           
  5863 ;; *************** function _DO_DISPLAY_7SEG_Lower *****************
  5864 ;; Defined at:
  5865 ;;		line 49 in file "Lab5p1.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;  digit           1    wreg     unsigned char 
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;  digit           1    0[COMRAM] unsigned char 
  5870 ;; Return value:  Size  Location     Type
  5871 ;;		None               void
  5872 ;; Registers used:
  5873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5874 ;; Tracked objects:
  5875 ;;		On entry : 0/0
  5876 ;;		On exit  : 0/0
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5882 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5883 ;;Total ram usage:        1 bytes
  5884 ;; Hardware stack levels used:    1
  5885 ;; This function calls:
  5886 ;;		Nothing
  5887 ;; This function is called by:
  5888 ;;		_main
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text30
  5893  002A80                     __ptext30:
  5894                           	opt stack 0
  5895  002A80                     _DO_DISPLAY_7SEG_Lower:
  5896                           	opt stack 30
  5897                           
  5898                           ;incstack = 0
  5899                           ;DO_DISPLAY_7SEG_Lower@digit stored from wreg
  5900  002A80  6E01               	movwf	DO_DISPLAY_7SEG_Lower@digit,c
  5901                           
  5902                           ;Lab5p1.c: 51: PORTD = array[digit];
  5903  002A82  5001               	movf	DO_DISPLAY_7SEG_Lower@digit,w,c
  5904  002A84  0D02               	mullw	2
  5905  002A86  0E80               	movlw	low _array
  5906  002A88  24F3               	addwf	prodl,w,c
  5907  002A8A  6ED9               	movwf	fsr2l,c
  5908  002A8C  0E00               	movlw	high _array
  5909  002A8E  20F4               	addwfc	prodh,w,c
  5910  002A90  6EDA               	movwf	fsr2h,c
  5911  002A92  50DF               	movf	indf2,w,c
  5912  002A94  6E83               	movwf	3971,c	;volatile
  5913  002A96  0012               	return		;funcret
  5914  002A98                     __end_of_DO_DISPLAY_7SEG_Lower:
  5915                           	opt stack 0
  5916                           tblptru	equ	0xFF8
  5917                           tblptrh	equ	0xFF7
  5918                           tblptrl	equ	0xFF6
  5919                           tablat	equ	0xFF5
  5920                           prodh	equ	0xFF4
  5921                           prodl	equ	0xFF3
  5922                           postinc0	equ	0xFEE
  5923                           wreg	equ	0xFE8
  5924                           postdec1	equ	0xFE5
  5925                           fsr1l	equ	0xFE1
  5926                           indf2	equ	0xFDF
  5927                           postinc2	equ	0xFDE
  5928                           postdec2	equ	0xFDD
  5929                           fsr2h	equ	0xFDA
  5930                           fsr2l	equ	0xFD9
  5931                           status	equ	0xFD8
  5932                           tblptru	equ	0xFF8
  5933                           tblptrh	equ	0xFF7
  5934                           tblptrl	equ	0xFF6
  5935                           tablat	equ	0xFF5
  5936                           prodh	equ	0xFF4
  5937                           prodl	equ	0xFF3
  5938                           postinc0	equ	0xFEE
  5939                           wreg	equ	0xFE8
  5940                           postdec1	equ	0xFE5
  5941                           fsr1l	equ	0xFE1
  5942                           indf2	equ	0xFDF
  5943                           postinc2	equ	0xFDE
  5944                           postdec2	equ	0xFDD
  5945                           fsr2h	equ	0xFDA
  5946                           fsr2l	equ	0xFD9
  5947                           status	equ	0xFD8
  5948                           
  5949                           	psect	rparam
  5950  0000                     tblptru	equ	0xFF8
  5951                           tblptrh	equ	0xFF7
  5952                           tblptrl	equ	0xFF6
  5953                           tablat	equ	0xFF5
  5954                           prodh	equ	0xFF4
  5955                           prodl	equ	0xFF3
  5956                           postinc0	equ	0xFEE
  5957                           wreg	equ	0xFE8
  5958                           postdec1	equ	0xFE5
  5959                           fsr1l	equ	0xFE1
  5960                           indf2	equ	0xFDF
  5961                           postinc2	equ	0xFDE
  5962                           postdec2	equ	0xFDD
  5963                           fsr2h	equ	0xFDA
  5964                           fsr2l	equ	0xFD9
  5965                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    118
    Data        20
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    125     127
    BANK0           128      0      22
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___ftpack
    ___awmod->___fttol
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _init_UART->_OpenUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   47020
                                            120 COMRAM     5     5      0
              _DO_DISPLAY_7SEG_Lower
              _DO_DISPLAY_7SEG_Upper
                            _DO_INIT
                       _GET_FULL_ADC
                         _SET_ADC_CH
                         _WAIT_1_SEC
                            ___awmod
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   36583
                                             86 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    8802
                                             58 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8604
                                             58 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             52 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3742
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1356
                                             38 COMRAM     6     2      4
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1360
                                             44 COMRAM     8     4      4
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1868
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     477
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     374
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     517
                                             23 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3131
                                             80 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    2878
                                             68 COMRAM    12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     454
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2212
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1890
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _WAIT_1_SEC                                           2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SET_ADC_CH                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _GET_FULL_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _DO_INIT                                              0     0      0     273
                           _INIT_ADC
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _INIT_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_7SEG_Upper                                3     3      0     244
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_7SEG_Lower                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DO_DISPLAY_7SEG_Lower
   _DO_DISPLAY_7SEG_Upper
   _DO_INIT
     _INIT_ADC
     _init_UART
       _OpenUSART
   _GET_FULL_ADC
   _SET_ADC_CH
   _WAIT_1_SEC
   ___awmod
     ___ftmul (ARG)
       ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
   _printf
     ___awdiv
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___ftpack
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftpack
         ___awmod
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___ftmul (ARG)
               ___ftpack
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftpack
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___ftmul (ARG)
               ___ftpack
           ___awmod
             ___ftmul (ARG)
               ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___ftpack
               ___ftmul (ARG)
                 ___ftpack
             ___awmod (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___ftmul (ARG)
               ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftpack
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___ftpack
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftpack
       ___awmod
         ___ftmul (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftpack
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftpack
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftpack
       ___awmod
         ___ftmul (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul
         ___ftpack
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftpack
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      16       5       17.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7D      7F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      95      34        0.0%
DATA                 0      0      95       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Sep 25 17:15:14 2021

                             _L 0094                               _U 007E                              l60 2AC4  
                            l73 275A                              l57 2A62                              l97 29FE  
                  ___awdiv@sign 0032             ___wmul@multiplicand 0037                    ___ftadd@exp1 0050  
                  ___ftadd@exp2 004F                    ___ftadd@sign 004E                             l100 2A1E  
                           l120 1CCC                             l211 2894                             l212 2896  
                           l213 28A0                             l214 28A2                             l207 287A  
                           l127 1A88                             l216 28BC                             l219 29F8  
                           l412 25B0                             l172 1504                             l503 20AA  
                           l183 16A8                             l512 209A                             l425 27DC  
                           l437 299C                             l544 251A                             l616 2454  
                           l608 1E1A                             l624 1FA0                             l633 1F90  
                           l642 2646                             l626 1F08                             l555 24F2  
                           l619 2420                             l627 1F30                             l708 26C2  
                           l718 283C                             l584 1D12                             l648 21A2  
                           l585 1E90                             l665 2960                             l658 2A36  
                           l738 291C                             l588 1D3C                             l669 2372  
                           l599 1DFE                    ___awmod@sign 002C                             prod 000FF3  
                           wreg 000FE8                  ??_GET_FULL_ADC 0003                    __CFG_LVP$OFF 000000  
               __end_of_DO_INIT 2A80                    ___ftdiv@cntr 0016                    ___ftdiv@sign 001B  
                  __CFG_WDT$OFF 000000                            l2002 25A6                            l2030 27B6  
                          l2022 278E                            l2014 2772                            l2102 19B2  
                          l2024 2798                            l2202 2038                            l2026 27A0  
                          l2034 27C2                            l2018 2780                            l2300 2360  
                          l2220 2072                            l2124 1ECE                            l2108 1A64  
                          l2310 266A                            l2214 205C                            l2206 2048  
                          l2118 1EB0                            l2038 27D2                            l2070 1C8C  
                          l2062 1BC8                            l2240 25E4                            l2232 2936  
                          l2312 2678                            l2224 2086                            l2160 1F68  
                          l2250 2642                            l2322 26B2                            l2314 2680  
                          l2330 27F0                            l2226 2094                            l2218 206C  
                          l2154 1F52                            l2146 1F3E                            l2090 187E  
                          l2244 2616                            l2332 27FE                            l2180 1FC2  
                          l2164 1F7C                            l2084 17D6                            l2500 13E0  
                          l2420 10AA                            l2334 2806                            l2174 1FB2  
                          l2166 1F8A                            l2158 1F62                            l2094 188E  
                          l2414 108E                            l2264 22AC                            l2344 28C4  
                          l2512 1420                            l2504 13EC                            l2440 1126  
                          l2424 10B2                            l2370 2728                            l1802 2872  
                          l2354 2A4C                            l2282 2306                            l2338 282C  
                          l2346 28D2                            l2194 2006                            l2530 14EE  
                          l2522 14C6                            l2426 10D4                            l2418 109E  
                          l1900 1E38                            l2292 2330                            l2540 1524  
                          l2524 14D2                            l2516 143C                            l2508 141C  
                          l2382 2748                            l1814 288C                            l1806 287E  
                          l2358 2A5A                            l2606 242E                            l1910 1E6A  
                          l2294 233E                            l2286 2316                            l2550 164A  
                          l2534 150A                            l2470 1252                            l2376 2738  
                          l1760 2476                            l2288 231C                            l2296 2348  
                          l1920 20CA                            l2552 1656                            l2544 1574  
                          l2528 14E0                            l2480 12CA                            l2472 1282  
                          l2464 121C                            l2456 11B8                            l2624 21AA  
                          l1770 24DA                            l1762 2482                            l2618 2978  
                          l2570 2392                            l1922 20E4                            l2490 133A  
                          l2474 1292                            l2562 168C                            l1772 24E6  
                          l1764 24A2                            l1756 2466                            l2572 23AC  
                          l1852 1D20                            l1940 2126                            l2556 1664  
                          l2492 1368                            l2484 12EE                            l2468 1242  
                          l1950 2154                            l1926 20F2                            l2486 12F8  
                          l2494 1376                            l2558 1670                            l1784 250C  
                          l1768 24BA                            l2576 23BA                            l1880 1DA2  
                          l1864 1D56                            l1944 2138                            l1794 2860  
                          l1778 24FA                            l1882 1DAE                            l1874 1D7E  
                          l1858 1D4A                            l1970 2532                            l1954 2166  
                          l2498 13DC                            l2596 23FA                            l1892 1DE6  
                          l1884 1DBA                            l1948 214E                            l1798 286A  
                          l1894 1DF2                            l1886 1DC2                            l1982 255A  
                          l1958 217C                            l1984 2564                            l1976 2544  
                          l1994 258A                            l1986 256C                            l1998 2596  
                          STR_1 1077                            u2101 1EA2                            u2121 1EC0  
                          u2311 229E                            u2330 22CA                            u1631 1CDE  
                          u2335 22C2                            u1641 1CF2                            u2610 115E  
                          u2615 1154                            u1841 20BC                    printf@tmpval 0071  
                          u1861 20DA                            u2831 2384                            u2770 14FE  
                          u2851 23A2                            _TRMT 007D61                            _main 21A4  
                  ___ftpack@arg 0001                    ___ftpack@exp 0004                            fsr2h 000FDA  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          prodh 000FF4                            prodl 000FF3                            start 0000  
                  ___ftmul@cntr 0016                    ___param_bank 000010                    ___ftmul@sign 0017  
                  ___fttol@exp1 0026                    ___fttol@lval 0022                __end_of_INIT_ADC 2ADC  
                   ?_WAIT_1_SEC 0001                           ?_main 0001                     ?_SET_ADC_CH 0001  
               __end_of___awdiv 25B2                 __end_of___ftadd 1E92                 __end_of___awmod 27DE  
               __end_of___ftdiv 2456                 __end_of___ftneg 2A44                 __end_of___lldiv 26D4  
               __end_of___ftmul 21A4                 ___awdiv@divisor 002F                 __end_of___llmod 284E  
               __end_of___ftsub 2962                 __end_of___fttol 2374                 ___awdiv@counter 0031  
                         _RCSTA 000FAB                           _SPBRG 000FAF                           _PORTC 000F82  
                         _PORTD 000F83                           _PORTE 000F84                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                           _TXREG 000FAD                           _TXSTA 000FAC  
                  ___lltoft@exp 0011                   ___awtoft@sign 000C                 __end_of_dpowers 1029  
                         _array 0080                           _scale 16AA                   ___ftpack@sign 0005  
                         _putch 2AC0                  __CFG_BOREN$OFF 000000                           tablat 000FF5  
                         status 000FD8          ?_DO_DISPLAY_7SEG_Lower 0001          ?_DO_DISPLAY_7SEG_Upper 0001  
              SET_ADC_CH@ADC_CH 0001                 __initialization 299E                    __end_of_main 228E  
                        ??_main 0079                   ___fttol@sign1 0021                   __activetblptr 000002  
                     ??_DO_INIT 0004            __size_of__tdiv_to_l_ 0110                          _ADCON0 000FC2  
                        _ADCON1 000FC1                          _ADCON2 000FC0                ___llmod@dividend 0001  
                        ?_scale 003B                          _ADRESH 000FC4                          _ADRESL 000FC3  
              ___awdiv@dividend 002D                __end_of___awtoft 299E                          ?_putch 0001  
              __end_of___ftpack 251C                __end_of___lltoft 291E                          _OSCCON 000FD3  
                        _SPBRGH 000FB0             __size_of_WAIT_1_SEC 0020             __size_of_SET_ADC_CH 000C  
              __end_of__powers_ 1077            __end_of_GET_FULL_ADC 2A20              __size_of_OpenUSART 0070  
                        ___ftge 25B2                          ___wmul 29D2                       ??___awdiv 0031  
                     ??___ftadd 004B                       ??___awmod 002B                       ??___ftdiv 0013  
                     ??___ftneg 0004                       ??___lldiv 0009                       ??___ftmul 000F  
                     ??___llmod 0009                       ??___ftsub 0057                       ??___fttol 001C  
                        _fround 1A8A                ___awdiv@quotient 0033                 ___awmod@divisor 0029  
               ___awmod@counter 002B                          _printf 1084           ___ftmul@f3_as_product 0013  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                          putch@c 0001                      __accesstop 0080  
       __end_of__initialization 29C8                      ___ftadd@f1 0045                      ___ftadd@f2 0048  
                     ?_INIT_ADC 0001                      ___ftge@ff1 0001                      ___ftge@ff2 0004  
                 ___rparam_used 000001                      ___ftdiv@f1 000D                      ___ftdiv@f2 0010  
                    ___ftdiv@f3 0017                      ___ftneg@f1 0001                      ___awtoft@c 0009  
                    ___ftmul@f1 0009                      ___ftmul@f2 000C                      ___ftsub@f1 0051  
                    ___ftsub@f2 0054                      ___fttol@f1 0018                  __pcstackCOMRAM 0001  
                  __pidataBANK0 2A98                      ___lltoft@c 0009                   __end_of_scale 1A8A  
                 __end_of_putch 2ACE                      __div_to_l_ 1FA2               __end_of_OpenUSART 28BE  
               __div_to_l_@exp1 000C                 __div_to_l_@cntr 000B                         ??_scale 003E  
               __div_to_l_@quot 0007                         ??_putch 0001                      __pbssBANK0 0094  
            __size_of_init_UART 0014                      ??_INIT_ADC 0001                   __div_to_l_@f1 0001  
                 __div_to_l_@f2 0004                         ?___ftge 0001                         ?___wmul 0035  
                       ?_fround 003B                    ??_WAIT_1_SEC 0001                       ?___awtoft 0009  
                     ?___ftpack 0001                         ?_printf 0057                    ??_SET_ADC_CH 0001  
                     ?___lltoft 0009                         _DO_INIT 2A64                     WAIT_1_SEC@j 0001  
       ??_DO_DISPLAY_7SEG_Lower 0001         ??_DO_DISPLAY_7SEG_Upper 0001           __size_of_GET_FULL_ADC 0026  
            __end_of_WAIT_1_SEC 2A64              __end_of_SET_ADC_CH 2AE8               __end_of__npowers_ 1050  
                       __Hparam 0000                      _scale$1105 003E                         __Lparam 0000  
               __size_of___ftge 0096                         ___awdiv 251C                         ___ftadd 1CCE  
                       ___awmod 275C                         ___ftdiv 2374                         ___ftneg 2A20  
                       ___lldiv 2648                 __size_of___wmul 0028                         ___ftmul 20AC  
                       ___llmod 27DE                         ___ftsub 291E                         ___fttol 228E  
                  __psmallconst 1000                         __pcinit 299E                      ??___awtoft 000C  
                    ??___ftpack 0006                 __size_of_fround 0244                         __ramtop 1000  
                    ??___lltoft 000D                         __ptext0 21A4                         __ptext1 1084  
                       __ptext2 16AA                         __ptext3 2AC0                         __ptext4 1A8A  
                       __ptext5 29D2                         __ptext6 20AC                         __ptext7 275C  
                       __ptext8 251C                         __ptext9 1E92                 __size_of_printf 0626  
             __end_of_init_UART 2AC0                     ?__div_to_l_ 0001                         _dpowers 1001  
              ___awmod@dividend 0027                    _GET_FULL_ADC 29FA            end_of_initialization 29C8  
                 __Lmediumconst 0000                 ___lldiv@divisor 0005                 ___lldiv@counter 000D  
                     _RCSTAbits 000FAB                         printf@c 0078                         printf@f 0057  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE                  __tdiv_to_l_@f1 0001                  __tdiv_to_l_@f2 0004  
                 ??__tdiv_to_l_ 0007                       _PORTDbits 000F83                       _TRISCbits 000F94  
                   ___ftdiv@exp 001A                       _TXSTAbits 000FAC             __size_of__div_to_l_ 010A  
             __size_of_INIT_ADC 000E                     ___ftmul@exp 0012                  __end_of___ftge 2648  
                __end_of___wmul 29FA                  __end_of_fround 1CCE                  __end_of_printf 16AA  
           start_initialization 299E         DO_DISPLAY_7SEG_Upper@PC 0002         DO_DISPLAY_7SEG_Upper@PE 0003  
    DO_DISPLAY_7SEG_Lower@digit 0001             __end_of__tdiv_to_l_ 1FA2                       _OpenUSART 284E  
               ___llmod@divisor 0005                __CFG_OSC$INTIO67 000000                 ___llmod@counter 0009  
                      ??___ftge 0007              GET_FULL_ADC@result 0005                        ??___wmul 0039  
                   __pdataBANK0 0080                        ??_fround 003E                        ??_printf 005C  
                    fround@prec 0044               __size_of___awtoft 003C               __size_of___ftpack 00C6  
                      ?_DO_INIT 0001               __size_of___lltoft 0060                     __pbssCOMRAM 007E  
                    ?_OpenUSART 0001  __size_of_DO_DISPLAY_7SEG_Lower 0018   __end_of_DO_DISPLAY_7SEG_Lower 2A98  
__size_of_DO_DISPLAY_7SEG_Upper 0088   __end_of_DO_DISPLAY_7SEG_Upper 275C                        ?___awdiv 002D  
                      ?___ftadd 0045                        ?___awmod 0027                        ?___ftdiv 000D  
                      ?___ftneg 0001                        ?___lldiv 0001                        ?___ftmul 0009  
                      ?___llmod 0001                        ?___ftsub 0051                       __npowers_ 1029  
                      ?___fttol 0018                     __tdiv_to_l_ 1E92                    ??__div_to_l_ 0007  
                   __smallconst 1000      DO_DISPLAY_7SEG_Upper@digit 0001                       _init_UART 2AAC  
                __size_of_scale 03E0                  __size_of_putch 000E                  ___wmul@product 0039  
                      _INIT_ADC 2ACE                        _PIE1bits 000F9D                        _PIR1bits 000F9E  
            __end_of__div_to_l_ 20AC                      _ADCON0bits 000FC2               ___wmul@multiplier 0035  
                    printf@flag 0067                      printf@fval 0075                      printf@prec 0069  
                     main@ivolt 0079                __size_of_DO_INIT 001C                      ?_init_UART 0001  
                     copy_data0 29BC                     ??_OpenUSART 0003                 OpenUSART@config 0003  
                      __Hrparam 0000                        __Lrparam 0000                __size_of___awdiv 0096  
              __size_of___ftadd 01C4                __size_of___awmod 0082                __size_of___ftdiv 00E2  
              __size_of___ftneg 0024                __size_of___lldiv 008C                __size_of___ftmul 00F8  
              __size_of___llmod 0070                __size_of___ftsub 0044                __size_of___fttol 00E6  
                      ___awtoft 2962                        ___ftpack 2456                     _fround$1103 0041  
                   _fround$1104 003E                        ___lltoft 28BE                        __ptext10 1FA2  
                      __ptext11 28BE                        __ptext20 2962                        __ptext12 27DE  
                      __ptext21 2456                        __ptext13 2648                        __ptext30 2A80  
                      __ptext22 2A44                        __ptext14 228E                        __ptext23 2ADC  
                      __ptext15 291E                        __ptext24 29FA                        __ptext16 1CCE  
                      __ptext25 2A64                        __ptext17 2A20                        __ptext26 2AAC  
                      __ptext18 25B2                        __ptext27 284E                        __ptext19 2374  
                      __ptext28 2ACE                        __ptext29 26D4                        __powers_ 1050  
                 __size_of_main 00EA                       printf@exp 006F                       printf@val 006B  
                      main@volt 007B                  OpenUSART@spbrg 0001                     ??_init_UART 0004  
                      scale@scl 0041                __tdiv_to_l_@exp1 000F                __tdiv_to_l_@cntr 000E  
              __tdiv_to_l_@quot 000A                ___lldiv@dividend 0001                        printf@ap 0065  
                    _WAIT_1_SEC 2A44                    ?__tdiv_to_l_ 0001                      _SET_ADC_CH 2ADC  
                   _printf$1106 0062                ___lldiv@quotient 0009                   ?_GET_FULL_ADC 0001  
         _DO_DISPLAY_7SEG_Lower 2A80           _DO_DISPLAY_7SEG_Upper 26D4  
