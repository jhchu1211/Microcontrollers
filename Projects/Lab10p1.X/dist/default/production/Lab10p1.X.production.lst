

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Nov 06 17:15:02 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	idataCOMRAM
    50  0007D4                     __pidataCOMRAM:
    51                           	opt stack 0
    52                           
    53                           ;initializer for _Display_D1
    54  0007D4  00                 	db	0
    55  0007D5  02                 	db	2
    56  0007D6  04                 	db	4
    57  0007D7  06                 	db	6
    58  0007D8  10                 	db	16
    59  0007D9  12                 	db	18
    60  0007DA  14                 	db	20
    61  0007DB  16                 	db	22
    62  0007DC  16                 	db	22
    63  0007DD  16                 	db	22
    64                           
    65                           ;initializer for _tempSecond
    66  0007DE  FF                 	db	255
    67                           
    68                           ;initializer for _wrap
    69  0007DF  01                 	db	1
    70                           
    71                           	psect	mediumconst
    72  00FDEE                     __pmediumconst:
    73                           	opt stack 0
    74  00FDEE  00                 	db	0
    75  00FDEF                     _font:
    76                           	opt stack 0
    77  00FDEF  00                 	db	0
    78  00FDF0  00                 	db	0
    79  00FDF1  00                 	db	0
    80  00FDF2  00                 	db	0
    81  00FDF3  00                 	db	0
    82  00FDF4  00                 	db	0
    83  00FDF5  00                 	db	0
    84  00FDF6  5F                 	db	95
    85  00FDF7  00                 	db	0
    86  00FDF8  00                 	db	0
    87  00FDF9  00                 	db	0
    88  00FDFA  07                 	db	7
    89  00FDFB  00                 	db	0
    90  00FDFC  07                 	db	7
    91  00FDFD  00                 	db	0
    92  00FDFE  14                 	db	20
    93  00FDFF  7F                 	db	127
    94  00FE00  14                 	db	20
    95  00FE01  7F                 	db	127
    96  00FE02  14                 	db	20
    97  00FE03  24                 	db	36
    98  00FE04  2A                 	db	42
    99  00FE05  7F                 	db	127
   100  00FE06  2A                 	db	42
   101  00FE07  12                 	db	18
   102  00FE08  23                 	db	35
   103  00FE09  13                 	db	19
   104  00FE0A  08                 	db	8
   105  00FE0B  64                 	db	100
   106  00FE0C  62                 	db	98
   107  00FE0D  36                 	db	54
   108  00FE0E  49                 	db	73
   109  00FE0F  56                 	db	86
   110  00FE10  20                 	db	32
   111  00FE11  50                 	db	80
   112  00FE12  00                 	db	0
   113  00FE13  08                 	db	8
   114  00FE14  07                 	db	7
   115  00FE15  03                 	db	3
   116  00FE16  00                 	db	0
   117  00FE17  00                 	db	0
   118  00FE18  1C                 	db	28
   119  00FE19  22                 	db	34
   120  00FE1A  41                 	db	65
   121  00FE1B  00                 	db	0
   122  00FE1C  00                 	db	0
   123  00FE1D  41                 	db	65
   124  00FE1E  22                 	db	34
   125  00FE1F  1C                 	db	28
   126  00FE20  00                 	db	0
   127  00FE21  2A                 	db	42
   128  00FE22  1C                 	db	28
   129  00FE23  7F                 	db	127
   130  00FE24  1C                 	db	28
   131  00FE25  2A                 	db	42
   132  00FE26  08                 	db	8
   133  00FE27  08                 	db	8
   134  00FE28  3E                 	db	62
   135  00FE29  08                 	db	8
   136  00FE2A  08                 	db	8
   137  00FE2B  00                 	db	0
   138  00FE2C  80                 	db	128
   139  00FE2D  70                 	db	112
   140  00FE2E  30                 	db	48
   141  00FE2F  00                 	db	0
   142  00FE30  08                 	db	8
   143  00FE31  08                 	db	8
   144  00FE32  08                 	db	8
   145  00FE33  08                 	db	8
   146  00FE34  08                 	db	8
   147  00FE35  00                 	db	0
   148  00FE36  00                 	db	0
   149  00FE37  60                 	db	96
   150  00FE38  60                 	db	96
   151  00FE39  00                 	db	0
   152  00FE3A  20                 	db	32
   153  00FE3B  10                 	db	16
   154  00FE3C  08                 	db	8
   155  00FE3D  04                 	db	4
   156  00FE3E  02                 	db	2
   157  00FE3F  3E                 	db	62
   158  00FE40  51                 	db	81
   159  00FE41  49                 	db	73
   160  00FE42  45                 	db	69
   161  00FE43  3E                 	db	62
   162  00FE44  00                 	db	0
   163  00FE45  42                 	db	66
   164  00FE46  7F                 	db	127
   165  00FE47  40                 	db	64
   166  00FE48  00                 	db	0
   167  00FE49  72                 	db	114
   168  00FE4A  49                 	db	73
   169  00FE4B  49                 	db	73
   170  00FE4C  49                 	db	73
   171  00FE4D  46                 	db	70
   172  00FE4E  21                 	db	33
   173  00FE4F  41                 	db	65
   174  00FE50  49                 	db	73
   175  00FE51  4D                 	db	77
   176  00FE52  33                 	db	51
   177  00FE53  18                 	db	24
   178  00FE54  14                 	db	20
   179  00FE55  12                 	db	18
   180  00FE56  7F                 	db	127
   181  00FE57  10                 	db	16
   182  00FE58  27                 	db	39
   183  00FE59  45                 	db	69
   184  00FE5A  45                 	db	69
   185  00FE5B  45                 	db	69
   186  00FE5C  39                 	db	57
   187  00FE5D  3C                 	db	60
   188  00FE5E  4A                 	db	74
   189  00FE5F  49                 	db	73
   190  00FE60  49                 	db	73
   191  00FE61  31                 	db	49
   192  00FE62  41                 	db	65
   193  00FE63  21                 	db	33
   194  00FE64  11                 	db	17
   195  00FE65  09                 	db	9
   196  00FE66  07                 	db	7
   197  00FE67  36                 	db	54
   198  00FE68  49                 	db	73
   199  00FE69  49                 	db	73
   200  00FE6A  49                 	db	73
   201  00FE6B  36                 	db	54
   202  00FE6C  46                 	db	70
   203  00FE6D  49                 	db	73
   204  00FE6E  49                 	db	73
   205  00FE6F  29                 	db	41
   206  00FE70  1E                 	db	30
   207  00FE71  00                 	db	0
   208  00FE72  00                 	db	0
   209  00FE73  14                 	db	20
   210  00FE74  00                 	db	0
   211  00FE75  00                 	db	0
   212  00FE76  00                 	db	0
   213  00FE77  40                 	db	64
   214  00FE78  34                 	db	52
   215  00FE79  00                 	db	0
   216  00FE7A  00                 	db	0
   217  00FE7B  00                 	db	0
   218  00FE7C  08                 	db	8
   219  00FE7D  14                 	db	20
   220  00FE7E  22                 	db	34
   221  00FE7F  41                 	db	65
   222  00FE80  14                 	db	20
   223  00FE81  14                 	db	20
   224  00FE82  14                 	db	20
   225  00FE83  14                 	db	20
   226  00FE84  14                 	db	20
   227  00FE85  00                 	db	0
   228  00FE86  41                 	db	65
   229  00FE87  22                 	db	34
   230  00FE88  14                 	db	20
   231  00FE89  08                 	db	8
   232  00FE8A  02                 	db	2
   233  00FE8B  01                 	db	1
   234  00FE8C  59                 	db	89
   235  00FE8D  09                 	db	9
   236  00FE8E  06                 	db	6
   237  00FE8F  3E                 	db	62
   238  00FE90  41                 	db	65
   239  00FE91  5D                 	db	93
   240  00FE92  59                 	db	89
   241  00FE93  4E                 	db	78
   242  00FE94  7C                 	db	124
   243  00FE95  12                 	db	18
   244  00FE96  11                 	db	17
   245  00FE97  12                 	db	18
   246  00FE98  7C                 	db	124
   247  00FE99  7F                 	db	127
   248  00FE9A  49                 	db	73
   249  00FE9B  49                 	db	73
   250  00FE9C  49                 	db	73
   251  00FE9D  36                 	db	54
   252  00FE9E  3E                 	db	62
   253  00FE9F  41                 	db	65
   254  00FEA0  41                 	db	65
   255  00FEA1  41                 	db	65
   256  00FEA2  22                 	db	34
   257  00FEA3  7F                 	db	127
   258  00FEA4  41                 	db	65
   259  00FEA5  41                 	db	65
   260  00FEA6  41                 	db	65
   261  00FEA7  3E                 	db	62
   262  00FEA8  7F                 	db	127
   263  00FEA9  49                 	db	73
   264  00FEAA  49                 	db	73
   265  00FEAB  49                 	db	73
   266  00FEAC  41                 	db	65
   267  00FEAD  7F                 	db	127
   268  00FEAE  09                 	db	9
   269  00FEAF  09                 	db	9
   270  00FEB0  09                 	db	9
   271  00FEB1  01                 	db	1
   272  00FEB2  3E                 	db	62
   273  00FEB3  41                 	db	65
   274  00FEB4  41                 	db	65
   275  00FEB5  51                 	db	81
   276  00FEB6  73                 	db	115
   277  00FEB7  7F                 	db	127
   278  00FEB8  08                 	db	8
   279  00FEB9  08                 	db	8
   280  00FEBA  08                 	db	8
   281  00FEBB  7F                 	db	127
   282  00FEBC  00                 	db	0
   283  00FEBD  41                 	db	65
   284  00FEBE  7F                 	db	127
   285  00FEBF  41                 	db	65
   286  00FEC0  00                 	db	0
   287  00FEC1  20                 	db	32
   288  00FEC2  40                 	db	64
   289  00FEC3  41                 	db	65
   290  00FEC4  3F                 	db	63
   291  00FEC5  01                 	db	1
   292  00FEC6  7F                 	db	127
   293  00FEC7  08                 	db	8
   294  00FEC8  14                 	db	20
   295  00FEC9  22                 	db	34
   296  00FECA  41                 	db	65
   297  00FECB  7F                 	db	127
   298  00FECC  40                 	db	64
   299  00FECD  40                 	db	64
   300  00FECE  40                 	db	64
   301  00FECF  40                 	db	64
   302  00FED0  7F                 	db	127
   303  00FED1  02                 	db	2
   304  00FED2  1C                 	db	28
   305  00FED3  02                 	db	2
   306  00FED4  7F                 	db	127
   307  00FED5  7F                 	db	127
   308  00FED6  04                 	db	4
   309  00FED7  08                 	db	8
   310  00FED8  10                 	db	16
   311  00FED9  7F                 	db	127
   312  00FEDA  3E                 	db	62
   313  00FEDB  41                 	db	65
   314  00FEDC  41                 	db	65
   315  00FEDD  41                 	db	65
   316  00FEDE  3E                 	db	62
   317  00FEDF  7F                 	db	127
   318  00FEE0  09                 	db	9
   319  00FEE1  09                 	db	9
   320  00FEE2  09                 	db	9
   321  00FEE3  06                 	db	6
   322  00FEE4  3E                 	db	62
   323  00FEE5  41                 	db	65
   324  00FEE6  51                 	db	81
   325  00FEE7  21                 	db	33
   326  00FEE8  5E                 	db	94
   327  00FEE9  7F                 	db	127
   328  00FEEA  09                 	db	9
   329  00FEEB  19                 	db	25
   330  00FEEC  29                 	db	41
   331  00FEED  46                 	db	70
   332  00FEEE                     __end_of_font:
   333                           	opt stack 0
   334  00FEEE                     _font2:
   335                           	opt stack 0
   336  00FEEE  26                 	db	38
   337  00FEEF  49                 	db	73
   338  00FEF0  49                 	db	73
   339  00FEF1  49                 	db	73
   340  00FEF2  32                 	db	50
   341  00FEF3  03                 	db	3
   342  00FEF4  01                 	db	1
   343  00FEF5  7F                 	db	127
   344  00FEF6  01                 	db	1
   345  00FEF7  03                 	db	3
   346  00FEF8  3F                 	db	63
   347  00FEF9  40                 	db	64
   348  00FEFA  40                 	db	64
   349  00FEFB  40                 	db	64
   350  00FEFC  3F                 	db	63
   351  00FEFD  1F                 	db	31
   352  00FEFE  20                 	db	32
   353  00FEFF  40                 	db	64
   354  00FF00  20                 	db	32
   355  00FF01  1F                 	db	31
   356  00FF02  3F                 	db	63
   357  00FF03  40                 	db	64
   358  00FF04  38                 	db	56
   359  00FF05  40                 	db	64
   360  00FF06  3F                 	db	63
   361  00FF07  63                 	db	99
   362  00FF08  14                 	db	20
   363  00FF09  08                 	db	8
   364  00FF0A  14                 	db	20
   365  00FF0B  63                 	db	99
   366  00FF0C  03                 	db	3
   367  00FF0D  04                 	db	4
   368  00FF0E  78                 	db	120
   369  00FF0F  04                 	db	4
   370  00FF10  03                 	db	3
   371  00FF11  61                 	db	97
   372  00FF12  59                 	db	89
   373  00FF13  49                 	db	73
   374  00FF14  4D                 	db	77
   375  00FF15  43                 	db	67
   376  00FF16  00                 	db	0
   377  00FF17  7F                 	db	127
   378  00FF18  41                 	db	65
   379  00FF19  41                 	db	65
   380  00FF1A  41                 	db	65
   381  00FF1B  02                 	db	2
   382  00FF1C  04                 	db	4
   383  00FF1D  08                 	db	8
   384  00FF1E  10                 	db	16
   385  00FF1F  20                 	db	32
   386  00FF20  00                 	db	0
   387  00FF21  41                 	db	65
   388  00FF22  41                 	db	65
   389  00FF23  41                 	db	65
   390  00FF24  7F                 	db	127
   391  00FF25  04                 	db	4
   392  00FF26  02                 	db	2
   393  00FF27  01                 	db	1
   394  00FF28  02                 	db	2
   395  00FF29  04                 	db	4
   396  00FF2A  40                 	db	64
   397  00FF2B  40                 	db	64
   398  00FF2C  40                 	db	64
   399  00FF2D  40                 	db	64
   400  00FF2E  40                 	db	64
   401  00FF2F  00                 	db	0
   402  00FF30  03                 	db	3
   403  00FF31  07                 	db	7
   404  00FF32  08                 	db	8
   405  00FF33  00                 	db	0
   406  00FF34  20                 	db	32
   407  00FF35  54                 	db	84
   408  00FF36  54                 	db	84
   409  00FF37  78                 	db	120
   410  00FF38  40                 	db	64
   411  00FF39  7F                 	db	127
   412  00FF3A  28                 	db	40
   413  00FF3B  44                 	db	68
   414  00FF3C  44                 	db	68
   415  00FF3D  38                 	db	56
   416  00FF3E  38                 	db	56
   417  00FF3F  44                 	db	68
   418  00FF40  44                 	db	68
   419  00FF41  44                 	db	68
   420  00FF42  28                 	db	40
   421  00FF43  38                 	db	56
   422  00FF44  44                 	db	68
   423  00FF45  44                 	db	68
   424  00FF46  28                 	db	40
   425  00FF47  7F                 	db	127
   426  00FF48  38                 	db	56
   427  00FF49  54                 	db	84
   428  00FF4A  54                 	db	84
   429  00FF4B  54                 	db	84
   430  00FF4C  18                 	db	24
   431  00FF4D  00                 	db	0
   432  00FF4E  08                 	db	8
   433  00FF4F  7E                 	db	126
   434  00FF50  09                 	db	9
   435  00FF51  02                 	db	2
   436  00FF52  18                 	db	24
   437  00FF53  A4                 	db	164
   438  00FF54  A4                 	db	164
   439  00FF55  9C                 	db	156
   440  00FF56  78                 	db	120
   441  00FF57  7F                 	db	127
   442  00FF58  08                 	db	8
   443  00FF59  04                 	db	4
   444  00FF5A  04                 	db	4
   445  00FF5B  78                 	db	120
   446  00FF5C  00                 	db	0
   447  00FF5D  44                 	db	68
   448  00FF5E  7D                 	db	125
   449  00FF5F  40                 	db	64
   450  00FF60  00                 	db	0
   451  00FF61  20                 	db	32
   452  00FF62  40                 	db	64
   453  00FF63  40                 	db	64
   454  00FF64  3D                 	db	61
   455  00FF65  00                 	db	0
   456  00FF66  7F                 	db	127
   457  00FF67  10                 	db	16
   458  00FF68  28                 	db	40
   459  00FF69  44                 	db	68
   460  00FF6A  00                 	db	0
   461  00FF6B  00                 	db	0
   462  00FF6C  41                 	db	65
   463  00FF6D  7F                 	db	127
   464  00FF6E  40                 	db	64
   465  00FF6F  00                 	db	0
   466  00FF70  7C                 	db	124
   467  00FF71  04                 	db	4
   468  00FF72  78                 	db	120
   469  00FF73  04                 	db	4
   470  00FF74  78                 	db	120
   471  00FF75  7C                 	db	124
   472  00FF76  08                 	db	8
   473  00FF77  04                 	db	4
   474  00FF78  04                 	db	4
   475  00FF79  78                 	db	120
   476  00FF7A  38                 	db	56
   477  00FF7B  44                 	db	68
   478  00FF7C  44                 	db	68
   479  00FF7D  44                 	db	68
   480  00FF7E  38                 	db	56
   481  00FF7F  FC                 	db	252
   482  00FF80  18                 	db	24
   483  00FF81  24                 	db	36
   484  00FF82  24                 	db	36
   485  00FF83  18                 	db	24
   486  00FF84  18                 	db	24
   487  00FF85  24                 	db	36
   488  00FF86  24                 	db	36
   489  00FF87  18                 	db	24
   490  00FF88  FC                 	db	252
   491  00FF89  7C                 	db	124
   492  00FF8A  08                 	db	8
   493  00FF8B  04                 	db	4
   494  00FF8C  04                 	db	4
   495  00FF8D  08                 	db	8
   496  00FF8E  48                 	db	72
   497  00FF8F  54                 	db	84
   498  00FF90  54                 	db	84
   499  00FF91  54                 	db	84
   500  00FF92  24                 	db	36
   501  00FF93  04                 	db	4
   502  00FF94  04                 	db	4
   503  00FF95  3F                 	db	63
   504  00FF96  44                 	db	68
   505  00FF97  24                 	db	36
   506  00FF98  3C                 	db	60
   507  00FF99  40                 	db	64
   508  00FF9A  40                 	db	64
   509  00FF9B  20                 	db	32
   510  00FF9C  7C                 	db	124
   511  00FF9D  1C                 	db	28
   512  00FF9E  20                 	db	32
   513  00FF9F  40                 	db	64
   514  00FFA0  20                 	db	32
   515  00FFA1  1C                 	db	28
   516  00FFA2  3C                 	db	60
   517  00FFA3  40                 	db	64
   518  00FFA4  30                 	db	48
   519  00FFA5  40                 	db	64
   520  00FFA6  3C                 	db	60
   521  00FFA7  44                 	db	68
   522  00FFA8  28                 	db	40
   523  00FFA9  10                 	db	16
   524  00FFAA  28                 	db	40
   525  00FFAB  44                 	db	68
   526  00FFAC  4C                 	db	76
   527  00FFAD  90                 	db	144
   528  00FFAE  90                 	db	144
   529  00FFAF  90                 	db	144
   530  00FFB0  7C                 	db	124
   531  00FFB1  44                 	db	68
   532  00FFB2  64                 	db	100
   533  00FFB3  54                 	db	84
   534  00FFB4  4C                 	db	76
   535  00FFB5  44                 	db	68
   536  00FFB6  00                 	db	0
   537  00FFB7  08                 	db	8
   538  00FFB8  36                 	db	54
   539  00FFB9  41                 	db	65
   540  00FFBA  00                 	db	0
   541  00FFBB  00                 	db	0
   542  00FFBC  00                 	db	0
   543  00FFBD  77                 	db	119
   544  00FFBE  00                 	db	0
   545  00FFBF  00                 	db	0
   546  00FFC0  00                 	db	0
   547  00FFC1  41                 	db	65
   548  00FFC2  36                 	db	54
   549  00FFC3  08                 	db	8
   550  00FFC4  00                 	db	0
   551  00FFC5  02                 	db	2
   552  00FFC6  01                 	db	1
   553  00FFC7  02                 	db	2
   554  00FFC8  04                 	db	4
   555  00FFC9  02                 	db	2
   556  00FFCA                     __end_of_font2:
   557                           	opt stack 0
   558  00FFCA                     _dpowers:
   559                           	opt stack 0
   560  00FFCA  0001               	dw	1
   561  00FFCC  000A               	dw	10
   562  00FFCE  0064               	dw	100
   563  00FFD0  03E8               	dw	1000
   564  00FFD2  2710               	dw	10000
   565  00FFD4                     __end_of_dpowers:
   566                           	opt stack 0
   567  0000                     _ADCON1	set	4033
   568  0000                     _INTCON2bits	set	4081
   569  0000                     _INTCONbits	set	4082
   570  0000                     _OSCCON	set	4051
   571  0000                     _PIE1bits	set	3997
   572  0000                     _PIR1bits	set	3998
   573  0000                     _PIR2bits	set	4001
   574  0000                     _PORTCbits	set	3970
   575  0000                     _PORTDbits	set	3971
   576  0000                     _PORTEbits	set	3972
   577  0000                     _RCSTA	set	4011
   578  0000                     _RCSTAbits	set	4011
   579  0000                     _SPBRG	set	4015
   580  0000                     _SPBRGH	set	4016
   581  0000                     _SSPBUF	set	4041
   582  0000                     _SSPCON1	set	4038
   583  0000                     _SSPSTAT	set	4039
   584  0000                     _SSPSTATbits	set	4039
   585  0000                     _T0CON	set	4053
   586  0000                     _T0CONbits	set	4053
   587  0000                     _T1CON	set	4045
   588  0000                     _T1CONbits	set	4045
   589  0000                     _T3CON	set	4017
   590  0000                     _T3CONbits	set	4017
   591  0000                     _TMR0H	set	4055
   592  0000                     _TMR0L	set	4054
   593  0000                     _TMR1H	set	4047
   594  0000                     _TMR1L	set	4046
   595  0000                     _TMR3H	set	4019
   596  0000                     _TMR3L	set	4018
   597  0000                     _TRISA	set	3986
   598  0000                     _TRISB	set	3987
   599  0000                     _TRISC	set	3988
   600  0000                     _TRISCbits	set	3988
   601  0000                     _TRISD	set	3989
   602  0000                     _TRISE	set	3990
   603  0000                     _TXREG	set	4013
   604  0000                     _TXSTA	set	4012
   605  0000                     _TXSTAbits	set	4012
   606  0000                     _RBPU	set	32655
   607  0000                     _TRMT	set	32097
   608  00FFD4                     STR_1:
   609  00FFD4  20                 	db	32
   610  00FFD5  54                 	db	84	;'T'
   611  00FFD6  65                 	db	101	;'e'
   612  00FFD7  6D                 	db	109	;'m'
   613  00FFD8  70                 	db	112	;'p'
   614  00FFD9  65                 	db	101	;'e'
   615  00FFDA  72                 	db	114	;'r'
   616  00FFDB  61                 	db	97	;'a'
   617  00FFDC  74                 	db	116	;'t'
   618  00FFDD  75                 	db	117	;'u'
   619  00FFDE  72                 	db	114	;'r'
   620  00FFDF  65                 	db	101	;'e'
   621  00FFE0  20                 	db	32
   622  00FFE1  3D                 	db	61	;'='
   623  00FFE2  20                 	db	32
   624  00FFE3  25                 	db	37
   625  00FFE4  64                 	db	100	;'d'
   626  00FFE5  20                 	db	32
   627  00FFE6  64                 	db	100	;'d'
   628  00FFE7  65                 	db	101	;'e'
   629  00FFE8  67                 	db	103	;'g'
   630  00FFE9  72                 	db	114	;'r'
   631  00FFEA  65                 	db	101	;'e'
   632  00FFEB  65                 	db	101	;'e'
   633  00FFEC  73                 	db	115	;'s'
   634  00FFED  43                 	db	67	;'C'
   635  00FFEE  20                 	db	32
   636  00FFEF  3D                 	db	61	;'='
   637  00FFF0  20                 	db	32
   638  00FFF1  25                 	db	37
   639  00FFF2  64                 	db	100	;'d'
   640  00FFF3  20                 	db	32
   641  00FFF4  64                 	db	100	;'d'
   642  00FFF5  65                 	db	101	;'e'
   643  00FFF6  67                 	db	103	;'g'
   644  00FFF7  72                 	db	114	;'r'
   645  00FFF8  65                 	db	101	;'e'
   646  00FFF9  65                 	db	101	;'e'
   647  00FFFA  73                 	db	115	;'s'
   648  00FFFB  46                 	db	70	;'F'
   649  00FFFC  0D                 	db	13
   650  00FFFD  0A                 	db	10
   651  00FFFE  00                 	db	0
   652                           
   653                           ; #config settings
   654  00FFFF  00                 	db	0	; dummy byte at the end
   655  0000                     
   656                           	psect	cinit
   657  000592                     __pcinit:
   658                           	opt stack 0
   659  000592                     start_initialization:
   660                           	opt stack 0
   661  000592                     __initialization:
   662                           	opt stack 0
   663                           
   664                           ; Clear objects allocated to BANK0 (31 bytes)
   665  000592  EE00  F080         	lfsr	0,__pbssBANK0
   666  000596  0E1F               	movlw	31
   667  000598                     clear_0:
   668  000598  6AEE               	clrf	postinc0,c
   669  00059A  06E8               	decf	wreg,f,c
   670  00059C  E1FD               	bnz	clear_0
   671                           
   672                           ; Clear objects allocated to COMRAM (47 bytes)
   673  00059E  EE00  F001         	lfsr	0,__pbssCOMRAM
   674  0005A2  0E2F               	movlw	47
   675  0005A4                     clear_1:
   676  0005A4  6AEE               	clrf	postinc0,c
   677  0005A6  06E8               	decf	wreg,f,c
   678  0005A8  E1FD               	bnz	clear_1
   679                           
   680                           ; Initialize objects allocated to COMRAM (12 bytes)
   681                           ; load TBLPTR registers with __pidataCOMRAM
   682  0005AA  0ED4               	movlw	low __pidataCOMRAM
   683  0005AC  6EF6               	movwf	tblptrl,c
   684  0005AE  0E07               	movlw	high __pidataCOMRAM
   685  0005B0  6EF7               	movwf	tblptrh,c
   686  0005B2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   687  0005B4  6EF8               	movwf	tblptru,c
   688  0005B6  EE00  F05C         	lfsr	0,__pdataCOMRAM
   689  0005BA  EE10 F00C          	lfsr	1,12
   690  0005BE                     copy_data0:
   691  0005BE  0009               	tblrd		*+
   692  0005C0  CFF5 FFEE          	movff	tablat,postinc0
   693  0005C4  50E5               	movf	postdec1,w,c
   694  0005C6  50E1               	movf	fsr1l,w,c
   695  0005C8  E1FA               	bnz	copy_data0
   696  0005CA                     end_of_initialization:
   697                           	opt stack 0
   698  0005CA                     __end_of__initialization:
   699                           	opt stack 0
   700  0005CA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   701  0005CC  6EF8               	movwf	tblptru,c
   702  0005CE  0100               	movlb	0
   703  0005D0  EF1E  F002         	goto	_main	;jump to C main() function
   704                           tblptru	equ	0xFF8
   705                           tblptrh	equ	0xFF7
   706                           tblptrl	equ	0xFF6
   707                           tablat	equ	0xFF5
   708                           postinc0	equ	0xFEE
   709                           wreg	equ	0xFE8
   710                           postdec1	equ	0xFE5
   711                           fsr1l	equ	0xFE1
   712                           
   713                           	psect	bssCOMRAM
   714  000001                     __pbssCOMRAM:
   715                           	opt stack 0
   716  000001                     _Nec_code:
   717                           	opt stack 0
   718  000001                     	ds	4
   719  000005                     _Time_Elapsed:
   720                           	opt stack 0
   721  000005                     	ds	2
   722  000007                     _nbr:
   723                           	opt stack 0
   724  000007                     	ds	2
   725  000009                     _nec_ok:
   726                           	opt stack 0
   727  000009                     	ds	2
   728  00000B                     _txt:
   729                           	opt stack 0
   730  00000B                     	ds	2
   731  00000D                     _Address:
   732                           	opt stack 0
   733  00000D                     	ds	1
   734  00000E                     _Cmd:
   735                           	opt stack 0
   736  00000E                     	ds	1
   737  00000F                     _Device:
   738                           	opt stack 0
   739  00000F                     	ds	1
   740  000010                     _Nec_code1:
   741                           	opt stack 0
   742  000010                     	ds	1
   743  000011                     _Nec_state:
   744                           	opt stack 0
   745  000011                     	ds	1
   746  000012                     _TempSecond:
   747                           	opt stack 0
   748  000012                     	ds	1
   749  000013                     __tft_type:
   750                           	opt stack 0
   751  000013                     	ds	1
   752  000014                     _alarm_date:
   753                           	opt stack 0
   754  000014                     	ds	1
   755  000015                     _alarm_hour:
   756                           	opt stack 0
   757  000015                     	ds	1
   758  000016                     _alarm_minute:
   759                           	opt stack 0
   760  000016                     	ds	1
   761  000017                     _alarm_second:
   762                           	opt stack 0
   763  000017                     	ds	1
   764  000018                     _bit_count:
   765                           	opt stack 0
   766  000018                     	ds	1
   767  000019                     _colstart:
   768                           	opt stack 0
   769  000019                     	ds	1
   770  00001A                     _day:
   771                           	opt stack 0
   772  00001A                     	ds	1
   773  00001B                     _dow:
   774                           	opt stack 0
   775  00001B                     	ds	1
   776  00001C                     _found:
   777                           	opt stack 0
   778  00001C                     	ds	1
   779  00001D                     _hour:
   780                           	opt stack 0
   781  00001D                     	ds	1
   782  00001E                     _i:
   783                           	opt stack 0
   784  00001E                     	ds	1
   785  00001F                     _minute:
   786                           	opt stack 0
   787  00001F                     	ds	1
   788  000020                     _month:
   789                           	opt stack 0
   790  000020                     	ds	1
   791  000021                     _prev_second:
   792                           	opt stack 0
   793  000021                     	ds	1
   794  000022                     _rowstart:
   795                           	opt stack 0
   796  000022                     	ds	1
   797  000023                     _second:
   798                           	opt stack 0
   799  000023                     	ds	1
   800  000024                     _setup_alarm_hour:
   801                           	opt stack 0
   802  000024                     	ds	1
   803  000025                     _setup_alarm_minute:
   804                           	opt stack 0
   805  000025                     	ds	1
   806  000026                     _setup_alarm_second:
   807                           	opt stack 0
   808  000026                     	ds	1
   809  000027                     _setup_day:
   810                           	opt stack 0
   811  000027                     	ds	1
   812  000028                     _setup_hour:
   813                           	opt stack 0
   814  000028                     	ds	1
   815  000029                     _setup_minute:
   816                           	opt stack 0
   817  000029                     	ds	1
   818  00002A                     _setup_month:
   819                           	opt stack 0
   820  00002A                     	ds	1
   821  00002B                     _setup_second:
   822                           	opt stack 0
   823  00002B                     	ds	1
   824  00002C                     _setup_year:
   825                           	opt stack 0
   826  00002C                     	ds	1
   827  00002D                     _tempC:
   828                           	opt stack 0
   829  00002D                     	ds	1
   830  00002E                     _tempF:
   831                           	opt stack 0
   832  00002E                     	ds	1
   833  00002F                     _year:
   834                           	opt stack 0
   835  00002F                     	ds	1
   836                           tblptru	equ	0xFF8
   837                           tblptrh	equ	0xFF7
   838                           tblptrl	equ	0xFF6
   839                           tablat	equ	0xFF5
   840                           postinc0	equ	0xFEE
   841                           wreg	equ	0xFE8
   842                           postdec1	equ	0xFE5
   843                           fsr1l	equ	0xFE1
   844                           
   845                           	psect	dataCOMRAM
   846  00005C                     __pdataCOMRAM:
   847                           	opt stack 0
   848  00005C                     _Display_D1:
   849                           	opt stack 0
   850  00005C                     	ds	10
   851  000066                     _tempSecond:
   852                           	opt stack 0
   853  000066                     	ds	1
   854  000067                     _wrap:
   855                           	opt stack 0
   856  000067                     	ds	1
   857                           tblptru	equ	0xFF8
   858                           tblptrh	equ	0xFF7
   859                           tblptrl	equ	0xFF6
   860                           tablat	equ	0xFF5
   861                           postinc0	equ	0xFEE
   862                           wreg	equ	0xFE8
   863                           postdec1	equ	0xFE5
   864                           fsr1l	equ	0xFE1
   865                           
   866                           	psect	bssBANK0
   867  000080                     __pbssBANK0:
   868                           	opt stack 0
   869  000080                     _buffer:
   870                           	opt stack 0
   871  000080                     	ds	31
   872                           tblptru	equ	0xFF8
   873                           tblptrh	equ	0xFF7
   874                           tblptrl	equ	0xFF6
   875                           tablat	equ	0xFF5
   876                           postinc0	equ	0xFEE
   877                           wreg	equ	0xFE8
   878                           postdec1	equ	0xFE5
   879                           fsr1l	equ	0xFE1
   880                           
   881                           	psect	cstackCOMRAM
   882  000030                     __pcstackCOMRAM:
   883                           	opt stack 0
   884  000030                     ??_INT0_isr:
   885  000030                     
   886                           ; 1 bytes @ 0x0
   887  000030                     	ds	2
   888  000032                     ??_chkisr:
   889                           
   890                           ; 0 bytes @ 0x2
   891  000032                     	ds	14
   892  000040                     ?___wmul:
   893                           	opt stack 0
   894  000040                     ?___lwdiv:
   895                           	opt stack 0
   896  000040                     I2C_Read@ack:
   897                           	opt stack 0
   898  000040                     I2C_Write@outByte:
   899                           	opt stack 0
   900  000040                     putch@c:
   901                           	opt stack 0
   902  000040                     OpenUSART@spbrg:
   903                           	opt stack 0
   904  000040                     ___wmul@multiplier:
   905                           	opt stack 0
   906  000040                     ___lwdiv@dividend:
   907                           	opt stack 0
   908  000040                     I2C_Init@c:
   909                           	opt stack 0
   910                           
   911                           ; 4 bytes @ 0x10
   912  000040                     	ds	1
   913  000041                     I2C_Read@n:
   914                           	opt stack 0
   915  000041                     I2C_Write@n:
   916                           	opt stack 0
   917                           
   918                           ; 1 bytes @ 0x11
   919  000041                     	ds	1
   920  000042                     I2C_Read@inByte:
   921                           	opt stack 0
   922  000042                     I2C_Write_Cmd_Only@Cmd:
   923                           	opt stack 0
   924  000042                     I2C_Write_Cmd_Write_Data@Cmd:
   925                           	opt stack 0
   926  000042                     OpenUSART@config:
   927                           	opt stack 0
   928  000042                     ___wmul@multiplicand:
   929                           	opt stack 0
   930  000042                     ___lwdiv@divisor:
   931                           	opt stack 0
   932                           
   933                           ; 2 bytes @ 0x12
   934  000042                     	ds	1
   935  000043                     ?_DS1621_Read_Temp:
   936                           	opt stack 0
   937  000043                     I2C_Write_Cmd_Only@Device:
   938                           	opt stack 0
   939  000043                     I2C_Write_Cmd_Write_Data@Data_Out:
   940                           	opt stack 0
   941                           
   942                           ; 1 bytes @ 0x13
   943  000043                     	ds	1
   944  000044                     I2C_Write_Cmd_Write_Data@Device:
   945                           	opt stack 0
   946  000044                     ___wmul@product:
   947                           	opt stack 0
   948  000044                     ___lwdiv@quotient:
   949                           	opt stack 0
   950                           
   951                           ; 2 bytes @ 0x14
   952  000044                     	ds	1
   953  000045                     DS1621_Init@Device:
   954                           	opt stack 0
   955  000045                     DS1621_Read_Temp@Cmd:
   956                           	opt stack 0
   957                           
   958                           ; 1 bytes @ 0x15
   959  000045                     	ds	1
   960  000046                     ?___awdiv:
   961                           	opt stack 0
   962  000046                     DS1621_Read_Temp@Data_Ret:
   963                           	opt stack 0
   964  000046                     ___lwdiv@counter:
   965                           	opt stack 0
   966  000046                     ___awdiv@dividend:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0x16
   970  000046                     	ds	1
   971  000047                     ?___lwmod:
   972                           	opt stack 0
   973  000047                     DS1621_Read_Temp@Device:
   974                           	opt stack 0
   975  000047                     ___lwmod@dividend:
   976                           	opt stack 0
   977                           
   978                           ; 2 bytes @ 0x17
   979  000047                     	ds	1
   980  000048                     ___awdiv@divisor:
   981                           	opt stack 0
   982                           
   983                           ; 2 bytes @ 0x18
   984  000048                     	ds	1
   985  000049                     ___lwmod@divisor:
   986                           	opt stack 0
   987                           
   988                           ; 2 bytes @ 0x19
   989  000049                     	ds	1
   990  00004A                     ___awdiv@counter:
   991                           	opt stack 0
   992                           
   993                           ; 1 bytes @ 0x1A
   994  00004A                     	ds	1
   995  00004B                     ___awdiv@sign:
   996                           	opt stack 0
   997  00004B                     ___lwmod@counter:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x1B
  1001  00004B                     	ds	1
  1002  00004C                     ?_printf:
  1003                           	opt stack 0
  1004  00004C                     printf@f:
  1005                           	opt stack 0
  1006  00004C                     ___awdiv@quotient:
  1007                           	opt stack 0
  1008                           
  1009                           ; 2 bytes @ 0x1C
  1010  00004C                     	ds	6
  1011  000052                     ??_printf:
  1012                           
  1013                           ; 0 bytes @ 0x22
  1014  000052                     	ds	1
  1015  000053                     printf@ap:
  1016                           	opt stack 0
  1017                           
  1018                           ; 2 bytes @ 0x23
  1019  000053                     	ds	2
  1020  000055                     printf@flag:
  1021                           	opt stack 0
  1022                           
  1023                           ; 1 bytes @ 0x25
  1024  000055                     	ds	1
  1025  000056                     printf@prec:
  1026                           	opt stack 0
  1027                           
  1028                           ; 1 bytes @ 0x26
  1029  000056                     	ds	1
  1030  000057                     printf@val:
  1031                           	opt stack 0
  1032                           
  1033                           ; 2 bytes @ 0x27
  1034  000057                     	ds	2
  1035  000059                     printf@c:
  1036                           	opt stack 0
  1037                           
  1038                           ; 1 bytes @ 0x29
  1039  000059                     	ds	1
  1040  00005A                     main@tempF:
  1041                           	opt stack 0
  1042                           
  1043                           ; 1 bytes @ 0x2A
  1044  00005A                     	ds	1
  1045  00005B                     main@tempC:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x2B
  1049  00005B                     	ds	1
  1050                           tblptru	equ	0xFF8
  1051                           tblptrh	equ	0xFF7
  1052                           tblptrl	equ	0xFF6
  1053                           tablat	equ	0xFF5
  1054                           postinc0	equ	0xFEE
  1055                           wreg	equ	0xFE8
  1056                           postdec1	equ	0xFE5
  1057                           fsr1l	equ	0xFE1
  1058                           
  1059 ;;
  1060 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1061 ;;
  1062 ;; *************** function _main *****************
  1063 ;; Defined at:
  1064 ;;		line 137 in file "Lab10p1.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  tempC           1   43[COMRAM] char 
  1069 ;;  tempF           1   42[COMRAM] char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;		None               void
  1072 ;; Registers used:
  1073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1083 ;;Total ram usage:        2 bytes
  1084 ;; Hardware stack levels required when called:    8
  1085 ;; This function calls:
  1086 ;;		_DS1621_Read_Temp
  1087 ;;		_Do_Init
  1088 ;;		_Wait_One_Sec
  1089 ;;		___awdiv
  1090 ;;		___wmul
  1091 ;;		_printf
  1092 ;; This function is called by:
  1093 ;;		Startup code after reset
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text0
  1098  00043C                     __ptext0:
  1099                           	opt stack 0
  1100  00043C                     _main:
  1101                           	opt stack 23
  1102                           
  1103                           ;Lab10p1.c: 139: Do_Init();
  1104                           
  1105                           ;incstack = 0
  1106  00043C  ECEA  F002         	call	_Do_Init	;wreg free
  1107  000440                     l511:
  1108                           
  1109                           ;Lab10p1.c: 142: {
  1110                           ;Lab10p1.c: 143: signed char tempC = DS1621_Read_Temp();
  1111  000440  EC29  F003         	call	_DS1621_Read_Temp	;wreg free
  1112  000444  5043               	movf	?_DS1621_Read_Temp,w,c
  1113  000446  6E5B               	movwf	main@tempC,c
  1114                           
  1115                           ;Lab10p1.c: 144: signed char tempF = (tempC * 9 / 5) + 32;
  1116  000448  505B               	movf	main@tempC,w,c
  1117  00044A  6E40               	movwf	___wmul@multiplier,c
  1118  00044C  6A41               	clrf	___wmul@multiplier+1,c
  1119  00044E  BE40               	btfsc	___wmul@multiplier,7,c
  1120  000450  0641               	decf	___wmul@multiplier+1,f,c
  1121  000452  0E00               	movlw	0
  1122  000454  6E43               	movwf	___wmul@multiplicand+1,c
  1123  000456  0E09               	movlw	9
  1124  000458  6E42               	movwf	___wmul@multiplicand,c
  1125  00045A  EC5F  F003         	call	___wmul	;wreg free
  1126  00045E  C040  F046         	movff	?___wmul,___awdiv@dividend
  1127  000462  C041  F047         	movff	?___wmul+1,___awdiv@dividend+1
  1128  000466  0E00               	movlw	0
  1129  000468  6E49               	movwf	___awdiv@divisor+1,c
  1130  00046A  0E05               	movlw	5
  1131  00046C  6E48               	movwf	___awdiv@divisor,c
  1132  00046E  EC5D  F001         	call	___awdiv	;wreg free
  1133  000472  5046               	movf	?___awdiv,w,c
  1134  000474  0F20               	addlw	32
  1135  000476  6E5A               	movwf	main@tempF,c
  1136                           
  1137                           ;Lab10p1.c: 145: printf (" Temperature = %d degreesC = %d degreesF\r\n", tempC, tempF);
  1138  000478  0ED4               	movlw	low STR_1
  1139  00047A  6E4C               	movwf	printf@f,c
  1140  00047C  0EFF               	movlw	high STR_1
  1141  00047E  6E4D               	movwf	printf@f+1,c
  1142  000480  505B               	movf	main@tempC,w,c
  1143  000482  6E4E               	movwf	?_printf+2,c
  1144  000484  6A4F               	clrf	?_printf+3,c
  1145  000486  BE4E               	btfsc	?_printf+2,7,c
  1146  000488  064F               	decf	?_printf+3,f,c
  1147  00048A  505A               	movf	main@tempF,w,c
  1148  00048C  6E50               	movwf	?_printf+4,c
  1149  00048E  6A51               	clrf	?_printf+5,c
  1150  000490  BE50               	btfsc	?_printf+4,7,c
  1151  000492  0651               	decf	?_printf+5,f,c
  1152  000494  ECBE  F000         	call	_printf	;wreg free
  1153                           
  1154                           ;Lab10p1.c: 146: Wait_One_Sec();
  1155  000498  ECE3  F003         	call	_Wait_One_Sec	;wreg free
  1156  00049C  D7D1               	goto	l511
  1157  00049E  EF0C  F000         	goto	start
  1158  0004A2                     __end_of_main:
  1159                           	opt stack 0
  1160                           tblptru	equ	0xFF8
  1161                           tblptrh	equ	0xFF7
  1162                           tblptrl	equ	0xFF6
  1163                           tablat	equ	0xFF5
  1164                           postinc0	equ	0xFEE
  1165                           wreg	equ	0xFE8
  1166                           postdec1	equ	0xFE5
  1167                           fsr1l	equ	0xFE1
  1168                           
  1169 ;; *************** function _printf *****************
  1170 ;; Defined at:
  1171 ;;		line 464 in file "E:\XC8\sources\common\doprnt.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;  f               2   28[COMRAM] PTR const unsigned char 
  1174 ;;		 -> STR_1(43), 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  tmpval          4    0        struct .
  1177 ;;  cp              3    0        PTR const unsigned char 
  1178 ;;  val             2   39[COMRAM] unsigned int 
  1179 ;;  ap              2   35[COMRAM] PTR void [1]
  1180 ;;		 -> ?_printf(2), 
  1181 ;;  len             2    0        unsigned int 
  1182 ;;  c               1   41[COMRAM] char 
  1183 ;;  prec            1   38[COMRAM] char 
  1184 ;;  flag            1   37[COMRAM] unsigned char 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  2   28[COMRAM] int 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1194 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;Total ram usage:       14 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    4
  1201 ;; This function calls:
  1202 ;;		___lwdiv
  1203 ;;		___lwmod
  1204 ;;		_putch
  1205 ;; This function is called by:
  1206 ;;		_main
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text1
  1211  00017C                     __ptext1:
  1212                           	opt stack 0
  1213  00017C                     _printf:
  1214                           	opt stack 26
  1215                           
  1216                           ;doprnt.c: 466: va_list ap;
  1217                           ;doprnt.c: 499: signed char c;
  1218                           ;doprnt.c: 506: signed char prec;
  1219                           ;doprnt.c: 508: unsigned char flag;
  1220                           ;doprnt.c: 523: union {
  1221                           ;doprnt.c: 524: unsigned long vd;
  1222                           ;doprnt.c: 525: double integ;
  1223                           ;doprnt.c: 526: } tmpval;
  1224                           ;doprnt.c: 528: unsigned int val;
  1225                           ;doprnt.c: 529: unsigned len;
  1226                           ;doprnt.c: 530: const char * cp;
  1227                           ;doprnt.c: 533: *ap = __va_start();
  1228                           
  1229                           ;incstack = 0
  1230  00017C  0E4E               	movlw	low (?_printf+2)
  1231  00017E  6E53               	movwf	printf@ap,c
  1232  000180  0E00               	movlw	high (?_printf+2)
  1233  000182  6E54               	movwf	printf@ap+1,c
  1234                           
  1235                           ;doprnt.c: 536: while(c = *f++) {
  1236  000184  D08B               	goto	l2799
  1237  000186                     l2753:
  1238                           
  1239                           ;doprnt.c: 538: if(c != '%')
  1240  000186  0E25               	movlw	37
  1241  000188  1859               	xorwf	printf@c,w,c
  1242  00018A  B4D8               	btfsc	status,2,c
  1243  00018C  D004               	goto	l2757
  1244                           
  1245                           ;doprnt.c: 540: {
  1246                           ;doprnt.c: 541: (putch(c) );
  1247  00018E  5059               	movf	printf@c,w,c
  1248  000190  ECDC  F003         	call	_putch
  1249                           
  1250                           ;doprnt.c: 542: continue;
  1251  000194  D083               	goto	l2799
  1252  000196                     l2757:
  1253                           
  1254                           ;doprnt.c: 543: }
  1255                           ;doprnt.c: 548: flag = 0;
  1256  000196  0E00               	movlw	0
  1257  000198  6E55               	movwf	printf@flag,c
  1258                           
  1259                           ;doprnt.c: 635: switch(c = *f++) {
  1260  00019A  D004               	goto	l2761
  1261                           
  1262                           ;doprnt.c: 638: goto alldone;
  1263                           
  1264                           ;doprnt.c: 637: case 0:
  1265  00019C  D08D               	goto	l544
  1266                           
  1267                           ;doprnt.c: 698: case 'i':
  1268                           ;doprnt.c: 699: break;
  1269                           
  1270                           ;doprnt.c: 697: case 'd':
  1271  00019E  D015               	goto	l2763
  1272                           
  1273                           ;doprnt.c: 813: continue;
  1274                           
  1275                           ;doprnt.c: 802: default:
  1276  0001A0  D07D               	goto	l2799
  1277                           
  1278                           ;doprnt.c: 822: }
  1279  0001A2  D013               	goto	l2763
  1280  0001A4                     l2761:
  1281  0001A4  C04C  FFF6         	movff	printf@f,tblptrl
  1282  0001A8  C04D  FFF7         	movff	printf@f+1,tblptrh
  1283  0001AC  4A4C               	infsnz	printf@f,f,c
  1284  0001AE  2A4D               	incf	printf@f+1,f,c
  1285  0001B0                     	if	0	;tblptru may be non-zero
  1286  0001B0                     	endif
  1287  0001B0                     	if	0	;tblptru may be non-zero
  1288  0001B0                     	endif
  1289  0001B0  0008               	tblrd		*
  1290  0001B2  CFF5 F059          	movff	tablat,printf@c
  1291  0001B6  5059               	movf	printf@c,w,c
  1292                           
  1293                           ; Switch size 1, requested type "space"
  1294                           ; Number of cases is 3, Range of values is 0 to 105
  1295                           ; switch strategies available:
  1296                           ; Name         Instructions Cycles
  1297                           ; simple_byte           10     6 (average)
  1298                           ;	Chosen strategy is simple_byte
  1299  0001B8  0A00               	xorlw	0	; case 0
  1300  0001BA  B4D8               	btfsc	status,2,c
  1301  0001BC  D07D               	goto	l544
  1302  0001BE  0A64               	xorlw	100	; case 100
  1303  0001C0  B4D8               	btfsc	status,2,c
  1304  0001C2  D003               	goto	l2763
  1305  0001C4  0A0D               	xorlw	13	; case 105
  1306  0001C6  A4D8               	btfss	status,2,c
  1307  0001C8  D069               	goto	l2799
  1308  0001CA                     l2763:
  1309                           
  1310                           ;doprnt.c: 1253: {
  1311                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1312  0001CA  C053  FFD9         	movff	printf@ap,fsr2l
  1313  0001CE  C054  FFDA         	movff	printf@ap+1,fsr2h
  1314  0001D2  CFDE F057          	movff	postinc2,printf@val
  1315  0001D6  CFDD F058          	movff	postdec2,printf@val+1
  1316  0001DA  0E02               	movlw	2
  1317  0001DC  2653               	addwf	printf@ap,f,c
  1318  0001DE  0E00               	movlw	0
  1319  0001E0  2254               	addwfc	printf@ap+1,f,c
  1320                           
  1321                           ;doprnt.c: 1261: if((int)val < 0) {
  1322  0001E2  AE58               	btfss	printf@val+1,7,c
  1323  0001E4  D007               	goto	l2773
  1324                           
  1325                           ;doprnt.c: 1262: flag |= 0x03;
  1326  0001E6  0E03               	movlw	3
  1327  0001E8  1255               	iorwf	printf@flag,f,c
  1328                           
  1329                           ;doprnt.c: 1263: val = -val;
  1330  0001EA  6C57               	negf	printf@val,c
  1331  0001EC  1E58               	comf	printf@val+1,f,c
  1332  0001EE  B0D8               	btfsc	status,0,c
  1333  0001F0  2A58               	incf	printf@val+1,f,c
  1334  0001F2  D000               	goto	l2773
  1335  0001F4                     l2773:
  1336                           
  1337                           ;doprnt.c: 1264: }
  1338                           ;doprnt.c: 1266: }
  1339                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1340  0001F4  0E01               	movlw	1
  1341  0001F6  6E59               	movwf	printf@c,c
  1342  0001F8                     l2775:
  1343  0001F8  0E05               	movlw	5
  1344  0001FA  1859               	xorwf	printf@c,w,c
  1345  0001FC  B4D8               	btfsc	status,2,c
  1346  0001FE  D016               	goto	l2787
  1347  000200  D001               	goto	l2779
  1348  000202  D014               	goto	l2787
  1349  000204                     l2779:
  1350                           
  1351                           ;doprnt.c: 1306: if(val < dpowers[c])
  1352  000204  5059               	movf	printf@c,w,c
  1353  000206  0D02               	mullw	2
  1354  000208  0ECA               	movlw	low _dpowers
  1355  00020A  24F3               	addwf	prodl,w,c
  1356  00020C  6EF6               	movwf	tblptrl,c
  1357  00020E  0EFF               	movlw	high _dpowers
  1358  000210  20F4               	addwfc	prodh,w,c
  1359  000212  6EF7               	movwf	tblptrh,c
  1360  000214                     	if	0	;There are less than 3 active tblptr bytes
  1361  000214                     	endif
  1362  000214  0009               	tblrd		*+
  1363  000216  50F5               	movf	tablat,w,c
  1364  000218  5C57               	subwf	printf@val,w,c
  1365  00021A  0009               	tblrd		*+
  1366  00021C  50F5               	movf	tablat,w,c
  1367  00021E  5858               	subwfb	printf@val+1,w,c
  1368  000220  A0D8               	btfss	status,0,c
  1369  000222  D004               	goto	l2787
  1370  000224  D001               	goto	l2783
  1371                           
  1372                           ;doprnt.c: 1307: break;
  1373  000226  D002               	goto	l2787
  1374  000228                     l2783:
  1375  000228  2A59               	incf	printf@c,f,c
  1376  00022A  D7E6               	goto	l2775
  1377  00022C                     l2787:
  1378                           
  1379                           ;doprnt.c: 1422: {
  1380                           ;doprnt.c: 1438: if(flag & 0x03)
  1381  00022C  C055  F052         	movff	printf@flag,??_printf
  1382  000230  0E03               	movlw	3
  1383  000232  1652               	andwf	??_printf,f,c
  1384  000234  B4D8               	btfsc	status,2,c
  1385  000236  D004               	goto	l2791
  1386                           
  1387                           ;doprnt.c: 1439: (putch('-') );
  1388  000238  0E2D               	movlw	45
  1389  00023A  ECDC  F003         	call	_putch
  1390  00023E  D000               	goto	l2791
  1391  000240                     l2791:
  1392                           
  1393                           ;doprnt.c: 1469: }
  1394                           ;doprnt.c: 1472: prec = c;
  1395  000240  C059  F056         	movff	printf@c,printf@prec
  1396                           
  1397                           ;doprnt.c: 1474: while(prec--) {
  1398  000244  D025               	goto	l2797
  1399  000246                     l2793:
  1400                           
  1401                           ;doprnt.c: 1478: {
  1402                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1403  000246  5056               	movf	printf@prec,w,c
  1404  000248  0D02               	mullw	2
  1405  00024A  0ECA               	movlw	low _dpowers
  1406  00024C  24F3               	addwf	prodl,w,c
  1407  00024E  6EF6               	movwf	tblptrl,c
  1408  000250  0EFF               	movlw	high _dpowers
  1409  000252  20F4               	addwfc	prodh,w,c
  1410  000254  6EF7               	movwf	tblptrh,c
  1411  000256                     	if	0	;There are less than 3 active tblptr bytes
  1412  000256                     	endif
  1413  000256  0009               	tblrd		*+
  1414  000258  CFF5 F042          	movff	tablat,___lwdiv@divisor
  1415  00025C  000A               	tblrd		*-
  1416  00025E  CFF5 F043          	movff	tablat,___lwdiv@divisor+1
  1417  000262  C057  F040         	movff	printf@val,___lwdiv@dividend
  1418  000266  C058  F041         	movff	printf@val+1,___lwdiv@dividend+1
  1419  00026A  EC51  F002         	call	___lwdiv	;wreg free
  1420  00026E  C040  F047         	movff	?___lwdiv,___lwmod@dividend
  1421  000272  C041  F048         	movff	?___lwdiv+1,___lwmod@dividend+1
  1422  000276  0E00               	movlw	0
  1423  000278  6E4A               	movwf	___lwmod@divisor+1,c
  1424  00027A  0E0A               	movlw	10
  1425  00027C  6E49               	movwf	___lwmod@divisor,c
  1426  00027E  EC7F  F002         	call	___lwmod	;wreg free
  1427  000282  5047               	movf	?___lwmod,w,c
  1428  000284  0F30               	addlw	48
  1429  000286  6E59               	movwf	printf@c,c
  1430                           
  1431                           ;doprnt.c: 1523: }
  1432                           ;doprnt.c: 1524: (putch(c) );
  1433  000288  5059               	movf	printf@c,w,c
  1434  00028A  ECDC  F003         	call	_putch
  1435  00028E  D000               	goto	l2797
  1436  000290                     l2797:
  1437  000290  0656               	decf	printf@prec,f,c
  1438  000292  2856               	incf	printf@prec,w,c
  1439  000294  B4D8               	btfsc	status,2,c
  1440  000296  D002               	goto	l2799
  1441  000298  D7D6               	goto	l2793
  1442  00029A  D000               	goto	l2799
  1443  00029C                     l2799:
  1444  00029C  C04C  FFF6         	movff	printf@f,tblptrl
  1445  0002A0  C04D  FFF7         	movff	printf@f+1,tblptrh
  1446  0002A4  4A4C               	infsnz	printf@f,f,c
  1447  0002A6  2A4D               	incf	printf@f+1,f,c
  1448  0002A8                     	if	0	;tblptru may be non-zero
  1449  0002A8                     	endif
  1450  0002A8                     	if	0	;tblptru may be non-zero
  1451  0002A8                     	endif
  1452  0002A8  0008               	tblrd		*
  1453  0002AA  CFF5 F059          	movff	tablat,printf@c
  1454  0002AE  5059               	movf	printf@c,w,c
  1455  0002B0  B4D8               	btfsc	status,2,c
  1456  0002B2  D002               	goto	l544
  1457  0002B4  D768               	goto	l2753
  1458  0002B6  D000               	goto	l544
  1459  0002B8                     l544:
  1460  0002B8  0012               	return		;funcret
  1461  0002BA                     __end_of_printf:
  1462                           	opt stack 0
  1463                           tblptru	equ	0xFF8
  1464                           tblptrh	equ	0xFF7
  1465                           tblptrl	equ	0xFF6
  1466                           tablat	equ	0xFF5
  1467                           prodh	equ	0xFF4
  1468                           prodl	equ	0xFF3
  1469                           postinc0	equ	0xFEE
  1470                           wreg	equ	0xFE8
  1471                           postdec1	equ	0xFE5
  1472                           fsr1l	equ	0xFE1
  1473                           postinc2	equ	0xFDE
  1474                           postdec2	equ	0xFDD
  1475                           fsr2h	equ	0xFDA
  1476                           fsr2l	equ	0xFD9
  1477                           status	equ	0xFD8
  1478                           
  1479 ;; *************** function _putch *****************
  1480 ;; Defined at:
  1481 ;;		line 85 in file "Lab10p1.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  c               1    wreg     unsigned char 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  c               1   16[COMRAM] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;		None               void
  1488 ;; Registers used:
  1489 ;;		wreg
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;Total ram usage:        1 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    3
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_printf
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text2
  1510  0007B8                     __ptext2:
  1511                           	opt stack 0
  1512  0007B8                     _putch:
  1513                           	opt stack 26
  1514                           
  1515                           ;incstack = 0
  1516                           ;putch@c stored from wreg
  1517  0007B8  6E40               	movwf	putch@c,c
  1518                           
  1519                           ;Lab10p1.c: 87: while (!TRMT);
  1520  0007BA  D000               	goto	l490
  1521  0007BC                     l490:
  1522  0007BC  A2AC               	btfss	4012,1,c	;volatile
  1523  0007BE  D7FE               	goto	l490
  1524                           
  1525                           ;Lab10p1.c: 88: TXREG = c;
  1526  0007C0  C040  FFAD         	movff	putch@c,4013	;volatile
  1527  0007C4  0012               	return		;funcret
  1528  0007C6                     __end_of_putch:
  1529                           	opt stack 0
  1530                           tblptru	equ	0xFF8
  1531                           tblptrh	equ	0xFF7
  1532                           tblptrl	equ	0xFF6
  1533                           tablat	equ	0xFF5
  1534                           prodh	equ	0xFF4
  1535                           prodl	equ	0xFF3
  1536                           postinc0	equ	0xFEE
  1537                           wreg	equ	0xFE8
  1538                           postdec1	equ	0xFE5
  1539                           fsr1l	equ	0xFE1
  1540                           postinc2	equ	0xFDE
  1541                           postdec2	equ	0xFDD
  1542                           fsr2h	equ	0xFDA
  1543                           fsr2l	equ	0xFD9
  1544                           status	equ	0xFD8
  1545                           
  1546 ;; *************** function ___lwmod *****************
  1547 ;; Defined at:
  1548 ;;		line 8 in file "E:\XC8\sources\common\lwmod.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  dividend        2   23[COMRAM] unsigned int 
  1551 ;;  divisor         2   25[COMRAM] unsigned int 
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  counter         1   27[COMRAM] unsigned char 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  2   23[COMRAM] unsigned int 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;Total ram usage:        5 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    3
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_printf
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text3
  1578  0004FE                     __ptext3:
  1579                           	opt stack 0
  1580  0004FE                     ___lwmod:
  1581                           	opt stack 26
  1582                           
  1583                           ;incstack = 0
  1584  0004FE  5049               	movf	___lwmod@divisor,w,c
  1585  000500  104A               	iorwf	___lwmod@divisor+1,w,c
  1586  000502  B4D8               	btfsc	status,2,c
  1587  000504  D01D               	goto	l1108
  1588  000506  0E01               	movlw	1
  1589  000508  6E4B               	movwf	___lwmod@counter,c
  1590  00050A  D005               	goto	l2553
  1591  00050C                     l2551:
  1592  00050C  90D8               	bcf	status,0,c
  1593  00050E  3649               	rlcf	___lwmod@divisor,f,c
  1594  000510  364A               	rlcf	___lwmod@divisor+1,f,c
  1595  000512  2A4B               	incf	___lwmod@counter,f,c
  1596  000514  D000               	goto	l2553
  1597  000516                     l2553:
  1598  000516  BE4A               	btfsc	___lwmod@divisor+1,7,c
  1599  000518  D002               	goto	l2555
  1600  00051A  D7F8               	goto	l2551
  1601  00051C  D000               	goto	l2555
  1602  00051E                     l2555:
  1603  00051E  5049               	movf	___lwmod@divisor,w,c
  1604  000520  5C47               	subwf	___lwmod@dividend,w,c
  1605  000522  504A               	movf	___lwmod@divisor+1,w,c
  1606  000524  5848               	subwfb	___lwmod@dividend+1,w,c
  1607  000526  A0D8               	btfss	status,0,c
  1608  000528  D005               	goto	l2559
  1609  00052A  5049               	movf	___lwmod@divisor,w,c
  1610  00052C  5E47               	subwf	___lwmod@dividend,f,c
  1611  00052E  504A               	movf	___lwmod@divisor+1,w,c
  1612  000530  5A48               	subwfb	___lwmod@dividend+1,f,c
  1613  000532  D000               	goto	l2559
  1614  000534                     l2559:
  1615  000534  90D8               	bcf	status,0,c
  1616  000536  324A               	rrcf	___lwmod@divisor+1,f,c
  1617  000538  3249               	rrcf	___lwmod@divisor,f,c
  1618  00053A  2E4B               	decfsz	___lwmod@counter,f,c
  1619  00053C  D7F0               	goto	l2555
  1620  00053E  D000               	goto	l1108
  1621  000540                     l1108:
  1622  000540  C047  F047         	movff	___lwmod@dividend,?___lwmod
  1623  000544  C048  F048         	movff	___lwmod@dividend+1,?___lwmod+1
  1624  000548  0012               	return		;funcret
  1625  00054A                     __end_of___lwmod:
  1626                           	opt stack 0
  1627                           tblptru	equ	0xFF8
  1628                           tblptrh	equ	0xFF7
  1629                           tblptrl	equ	0xFF6
  1630                           tablat	equ	0xFF5
  1631                           prodh	equ	0xFF4
  1632                           prodl	equ	0xFF3
  1633                           postinc0	equ	0xFEE
  1634                           wreg	equ	0xFE8
  1635                           postdec1	equ	0xFE5
  1636                           fsr1l	equ	0xFE1
  1637                           postinc2	equ	0xFDE
  1638                           postdec2	equ	0xFDD
  1639                           fsr2h	equ	0xFDA
  1640                           fsr2l	equ	0xFD9
  1641                           status	equ	0xFD8
  1642                           
  1643 ;; *************** function ___lwdiv *****************
  1644 ;; Defined at:
  1645 ;;		line 8 in file "E:\XC8\sources\common\lwdiv.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  dividend        2   16[COMRAM] unsigned int 
  1648 ;;  divisor         2   18[COMRAM] unsigned int 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  quotient        2   20[COMRAM] unsigned int 
  1651 ;;  counter         1   22[COMRAM] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  2   16[COMRAM] unsigned int 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;Total ram usage:        7 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    3
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_printf
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text4
  1676  0004A2                     __ptext4:
  1677                           	opt stack 0
  1678  0004A2                     ___lwdiv:
  1679                           	opt stack 26
  1680                           
  1681                           ;incstack = 0
  1682  0004A2  0E00               	movlw	0
  1683  0004A4  6E45               	movwf	___lwdiv@quotient+1,c
  1684  0004A6  0E00               	movlw	0
  1685  0004A8  6E44               	movwf	___lwdiv@quotient,c
  1686  0004AA  5042               	movf	___lwdiv@divisor,w,c
  1687  0004AC  1043               	iorwf	___lwdiv@divisor+1,w,c
  1688  0004AE  B4D8               	btfsc	status,2,c
  1689  0004B0  D021               	goto	l1098
  1690  0004B2  0E01               	movlw	1
  1691  0004B4  6E46               	movwf	___lwdiv@counter,c
  1692  0004B6  D005               	goto	l2533
  1693  0004B8                     l2531:
  1694  0004B8  90D8               	bcf	status,0,c
  1695  0004BA  3642               	rlcf	___lwdiv@divisor,f,c
  1696  0004BC  3643               	rlcf	___lwdiv@divisor+1,f,c
  1697  0004BE  2A46               	incf	___lwdiv@counter,f,c
  1698  0004C0  D000               	goto	l2533
  1699  0004C2                     l2533:
  1700  0004C2  BE43               	btfsc	___lwdiv@divisor+1,7,c
  1701  0004C4  D002               	goto	l2535
  1702  0004C6  D7F8               	goto	l2531
  1703  0004C8  D000               	goto	l2535
  1704  0004CA                     l2535:
  1705  0004CA  90D8               	bcf	status,0,c
  1706  0004CC  3644               	rlcf	___lwdiv@quotient,f,c
  1707  0004CE  3645               	rlcf	___lwdiv@quotient+1,f,c
  1708  0004D0  5042               	movf	___lwdiv@divisor,w,c
  1709  0004D2  5C40               	subwf	___lwdiv@dividend,w,c
  1710  0004D4  5043               	movf	___lwdiv@divisor+1,w,c
  1711  0004D6  5841               	subwfb	___lwdiv@dividend+1,w,c
  1712  0004D8  A0D8               	btfss	status,0,c
  1713  0004DA  D006               	goto	l2543
  1714  0004DC  5042               	movf	___lwdiv@divisor,w,c
  1715  0004DE  5E40               	subwf	___lwdiv@dividend,f,c
  1716  0004E0  5043               	movf	___lwdiv@divisor+1,w,c
  1717  0004E2  5A41               	subwfb	___lwdiv@dividend+1,f,c
  1718  0004E4  8044               	bsf	___lwdiv@quotient,0,c
  1719  0004E6  D000               	goto	l2543
  1720  0004E8                     l2543:
  1721  0004E8  90D8               	bcf	status,0,c
  1722  0004EA  3243               	rrcf	___lwdiv@divisor+1,f,c
  1723  0004EC  3242               	rrcf	___lwdiv@divisor,f,c
  1724  0004EE  2E46               	decfsz	___lwdiv@counter,f,c
  1725  0004F0  D7EC               	goto	l2535
  1726  0004F2  D000               	goto	l1098
  1727  0004F4                     l1098:
  1728  0004F4  C044  F040         	movff	___lwdiv@quotient,?___lwdiv
  1729  0004F8  C045  F041         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1730  0004FC  0012               	return		;funcret
  1731  0004FE                     __end_of___lwdiv:
  1732                           	opt stack 0
  1733                           tblptru	equ	0xFF8
  1734                           tblptrh	equ	0xFF7
  1735                           tblptrl	equ	0xFF6
  1736                           tablat	equ	0xFF5
  1737                           prodh	equ	0xFF4
  1738                           prodl	equ	0xFF3
  1739                           postinc0	equ	0xFEE
  1740                           wreg	equ	0xFE8
  1741                           postdec1	equ	0xFE5
  1742                           fsr1l	equ	0xFE1
  1743                           postinc2	equ	0xFDE
  1744                           postdec2	equ	0xFDD
  1745                           fsr2h	equ	0xFDA
  1746                           fsr2l	equ	0xFD9
  1747                           status	equ	0xFD8
  1748                           
  1749 ;; *************** function ___wmul *****************
  1750 ;; Defined at:
  1751 ;;		line 15 in file "E:\XC8\sources\common\Umul16.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  multiplier      2   16[COMRAM] unsigned int 
  1754 ;;  multiplicand    2   18[COMRAM] unsigned int 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  product         2   20[COMRAM] unsigned int 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  2   16[COMRAM] unsigned int 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0, prodl, prodh
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;Total ram usage:        6 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:    3
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_main
  1777 ;;		_delay_ms
  1778 ;;		_drawChar
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text5
  1783  0006BE                     __ptext5:
  1784                           	opt stack 0
  1785  0006BE                     ___wmul:
  1786                           	opt stack 27
  1787                           
  1788                           ;incstack = 0
  1789  0006BE  5040               	movf	___wmul@multiplier,w,c
  1790  0006C0  0242               	mulwf	___wmul@multiplicand,c
  1791  0006C2  CFF3 F044          	movff	prodl,___wmul@product
  1792  0006C6  CFF4 F045          	movff	prodh,___wmul@product+1
  1793  0006CA  5040               	movf	___wmul@multiplier,w,c
  1794  0006CC  0243               	mulwf	___wmul@multiplicand+1,c
  1795  0006CE  50F3               	movf	prodl,w,c
  1796  0006D0  2645               	addwf	___wmul@product+1,f,c
  1797  0006D2  5041               	movf	___wmul@multiplier+1,w,c
  1798  0006D4  0242               	mulwf	___wmul@multiplicand,c
  1799  0006D6  50F3               	movf	prodl,w,c
  1800  0006D8  2645               	addwf	___wmul@product+1,f,c
  1801  0006DA  C044  F040         	movff	___wmul@product,?___wmul
  1802  0006DE  C045  F041         	movff	___wmul@product+1,?___wmul+1
  1803  0006E2  D000               	goto	l580
  1804  0006E4                     l580:
  1805  0006E4  0012               	return		;funcret
  1806  0006E6                     __end_of___wmul:
  1807                           	opt stack 0
  1808                           tblptru	equ	0xFF8
  1809                           tblptrh	equ	0xFF7
  1810                           tblptrl	equ	0xFF6
  1811                           tablat	equ	0xFF5
  1812                           prodh	equ	0xFF4
  1813                           prodl	equ	0xFF3
  1814                           postinc0	equ	0xFEE
  1815                           wreg	equ	0xFE8
  1816                           postdec1	equ	0xFE5
  1817                           fsr1l	equ	0xFE1
  1818                           postinc2	equ	0xFDE
  1819                           postdec2	equ	0xFDD
  1820                           fsr2h	equ	0xFDA
  1821                           fsr2l	equ	0xFD9
  1822                           status	equ	0xFD8
  1823                           
  1824 ;; *************** function ___awdiv *****************
  1825 ;; Defined at:
  1826 ;;		line 8 in file "E:\XC8\sources\common\awdiv.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  dividend        2   22[COMRAM] int 
  1829 ;;  divisor         2   24[COMRAM] int 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  quotient        2   28[COMRAM] int 
  1832 ;;  sign            1   27[COMRAM] unsigned char 
  1833 ;;  counter         1   26[COMRAM] unsigned char 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  2   22[COMRAM] int 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;Total ram usage:        8 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    3
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_main
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text6
  1858  0002BA                     __ptext6:
  1859                           	opt stack 0
  1860  0002BA                     ___awdiv:
  1861                           	opt stack 27
  1862                           
  1863                           ;incstack = 0
  1864  0002BA  0E00               	movlw	0
  1865  0002BC  6E4B               	movwf	___awdiv@sign,c
  1866  0002BE  AE49               	btfss	___awdiv@divisor+1,7,c
  1867  0002C0  D007               	goto	l2815
  1868  0002C2  6C48               	negf	___awdiv@divisor,c
  1869  0002C4  1E49               	comf	___awdiv@divisor+1,f,c
  1870  0002C6  B0D8               	btfsc	status,0,c
  1871  0002C8  2A49               	incf	___awdiv@divisor+1,f,c
  1872  0002CA  0E01               	movlw	1
  1873  0002CC  6E4B               	movwf	___awdiv@sign,c
  1874  0002CE  D000               	goto	l2815
  1875  0002D0                     l2815:
  1876  0002D0  AE47               	btfss	___awdiv@dividend+1,7,c
  1877  0002D2  D007               	goto	l2821
  1878  0002D4  6C46               	negf	___awdiv@dividend,c
  1879  0002D6  1E47               	comf	___awdiv@dividend+1,f,c
  1880  0002D8  B0D8               	btfsc	status,0,c
  1881  0002DA  2A47               	incf	___awdiv@dividend+1,f,c
  1882  0002DC  0E01               	movlw	1
  1883  0002DE  1A4B               	xorwf	___awdiv@sign,f,c
  1884  0002E0  D000               	goto	l2821
  1885  0002E2                     l2821:
  1886  0002E2  0E00               	movlw	0
  1887  0002E4  6E4D               	movwf	___awdiv@quotient+1,c
  1888  0002E6  0E00               	movlw	0
  1889  0002E8  6E4C               	movwf	___awdiv@quotient,c
  1890  0002EA  5048               	movf	___awdiv@divisor,w,c
  1891  0002EC  1049               	iorwf	___awdiv@divisor+1,w,c
  1892  0002EE  B4D8               	btfsc	status,2,c
  1893  0002F0  D021               	goto	l2843
  1894  0002F2  0E01               	movlw	1
  1895  0002F4  6E4A               	movwf	___awdiv@counter,c
  1896  0002F6  D005               	goto	l2829
  1897  0002F8                     l2827:
  1898  0002F8  90D8               	bcf	status,0,c
  1899  0002FA  3648               	rlcf	___awdiv@divisor,f,c
  1900  0002FC  3649               	rlcf	___awdiv@divisor+1,f,c
  1901  0002FE  2A4A               	incf	___awdiv@counter,f,c
  1902  000300  D000               	goto	l2829
  1903  000302                     l2829:
  1904  000302  BE49               	btfsc	___awdiv@divisor+1,7,c
  1905  000304  D002               	goto	l2831
  1906  000306  D7F8               	goto	l2827
  1907  000308  D000               	goto	l2831
  1908  00030A                     l2831:
  1909  00030A  90D8               	bcf	status,0,c
  1910  00030C  364C               	rlcf	___awdiv@quotient,f,c
  1911  00030E  364D               	rlcf	___awdiv@quotient+1,f,c
  1912  000310  5048               	movf	___awdiv@divisor,w,c
  1913  000312  5C46               	subwf	___awdiv@dividend,w,c
  1914  000314  5049               	movf	___awdiv@divisor+1,w,c
  1915  000316  5847               	subwfb	___awdiv@dividend+1,w,c
  1916  000318  A0D8               	btfss	status,0,c
  1917  00031A  D006               	goto	l2839
  1918  00031C  5048               	movf	___awdiv@divisor,w,c
  1919  00031E  5E46               	subwf	___awdiv@dividend,f,c
  1920  000320  5049               	movf	___awdiv@divisor+1,w,c
  1921  000322  5A47               	subwfb	___awdiv@dividend+1,f,c
  1922  000324  804C               	bsf	___awdiv@quotient,0,c
  1923  000326  D000               	goto	l2839
  1924  000328                     l2839:
  1925  000328  90D8               	bcf	status,0,c
  1926  00032A  3249               	rrcf	___awdiv@divisor+1,f,c
  1927  00032C  3248               	rrcf	___awdiv@divisor,f,c
  1928  00032E  2E4A               	decfsz	___awdiv@counter,f,c
  1929  000330  D7EC               	goto	l2831
  1930  000332  D000               	goto	l2843
  1931  000334                     l2843:
  1932  000334  504B               	movf	___awdiv@sign,w,c
  1933  000336  B4D8               	btfsc	status,2,c
  1934  000338  D005               	goto	l2847
  1935  00033A  6C4C               	negf	___awdiv@quotient,c
  1936  00033C  1E4D               	comf	___awdiv@quotient+1,f,c
  1937  00033E  B0D8               	btfsc	status,0,c
  1938  000340  2A4D               	incf	___awdiv@quotient+1,f,c
  1939  000342  D000               	goto	l2847
  1940  000344                     l2847:
  1941  000344  C04C  F046         	movff	___awdiv@quotient,?___awdiv
  1942  000348  C04D  F047         	movff	___awdiv@quotient+1,?___awdiv+1
  1943  00034C  D000               	goto	l773
  1944  00034E                     l773:
  1945  00034E  0012               	return		;funcret
  1946  000350                     __end_of___awdiv:
  1947                           	opt stack 0
  1948                           tblptru	equ	0xFF8
  1949                           tblptrh	equ	0xFF7
  1950                           tblptrl	equ	0xFF6
  1951                           tablat	equ	0xFF5
  1952                           prodh	equ	0xFF4
  1953                           prodl	equ	0xFF3
  1954                           postinc0	equ	0xFEE
  1955                           wreg	equ	0xFE8
  1956                           postdec1	equ	0xFE5
  1957                           fsr1l	equ	0xFE1
  1958                           postinc2	equ	0xFDE
  1959                           postdec2	equ	0xFDD
  1960                           fsr2h	equ	0xFDA
  1961                           fsr2l	equ	0xFD9
  1962                           status	equ	0xFD8
  1963                           
  1964 ;; *************** function _Wait_One_Sec *****************
  1965 ;; Defined at:
  1966 ;;		line 129 in file "Lab10p1.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;		None               void
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    4
  1987 ;; This function calls:
  1988 ;;		_Wait_Half_Second
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text7
  1995  0007C6                     __ptext7:
  1996                           	opt stack 0
  1997  0007C6                     _Wait_One_Sec:
  1998                           	opt stack 26
  1999                           
  2000                           ;Lab10p1.c: 131: Wait_Half_Second();
  2001                           
  2002                           ;incstack = 0
  2003  0007C6  EC92  F003         	call	_Wait_Half_Second	;wreg free
  2004                           
  2005                           ;Lab10p1.c: 132: PORTEbits.RE1 = 0;
  2006  0007CA  9284               	bcf	3972,1,c	;volatile
  2007                           
  2008                           ;Lab10p1.c: 133: Wait_Half_Second();
  2009  0007CC  EC92  F003         	call	_Wait_Half_Second	;wreg free
  2010                           
  2011                           ;Lab10p1.c: 134: PORTEbits.RE1 = 1;
  2012  0007D0  8284               	bsf	3972,1,c	;volatile
  2013  0007D2  0012               	return		;funcret
  2014  0007D4                     __end_of_Wait_One_Sec:
  2015                           	opt stack 0
  2016                           tblptru	equ	0xFF8
  2017                           tblptrh	equ	0xFF7
  2018                           tblptrl	equ	0xFF6
  2019                           tablat	equ	0xFF5
  2020                           prodh	equ	0xFF4
  2021                           prodl	equ	0xFF3
  2022                           postinc0	equ	0xFEE
  2023                           wreg	equ	0xFE8
  2024                           postdec1	equ	0xFE5
  2025                           fsr1l	equ	0xFE1
  2026                           postinc2	equ	0xFDE
  2027                           postdec2	equ	0xFDD
  2028                           fsr2h	equ	0xFDA
  2029                           fsr2l	equ	0xFD9
  2030                           status	equ	0xFD8
  2031                           
  2032 ;; *************** function _Wait_Half_Second *****************
  2033 ;; Defined at:
  2034 ;;		line 118 in file "Lab10p1.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;		None               void
  2041 ;; Registers used:
  2042 ;;		wreg, status,2
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;Total ram usage:        0 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    3
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_Wait_One_Sec
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text8
  2063  000724                     __ptext8:
  2064                           	opt stack 0
  2065  000724                     _Wait_Half_Second:
  2066                           	opt stack 26
  2067                           
  2068                           ;Lab10p1.c: 120: T0CON = 0x03;
  2069                           
  2070                           ;incstack = 0
  2071  000724  0E03               	movlw	3
  2072  000726  6ED5               	movwf	4053,c	;volatile
  2073                           
  2074                           ;Lab10p1.c: 121: TMR0L = 0xDB;
  2075  000728  0EDB               	movlw	219
  2076  00072A  6ED6               	movwf	4054,c	;volatile
  2077                           
  2078                           ;Lab10p1.c: 122: TMR0H = 0x0B;
  2079  00072C  0E0B               	movlw	11
  2080  00072E  6ED7               	movwf	4055,c	;volatile
  2081                           
  2082                           ;Lab10p1.c: 123: INTCONbits.TMR0IF = 0;
  2083  000730  94F2               	bcf	intcon,2,c	;volatile
  2084                           
  2085                           ;Lab10p1.c: 124: T0CONbits.TMR0ON = 1;
  2086  000732  8ED5               	bsf	4053,7,c	;volatile
  2087                           
  2088                           ;Lab10p1.c: 125: while (INTCONbits.TMR0IF == 0);
  2089  000734  D000               	goto	l502
  2090  000736                     l502:
  2091  000736  A4F2               	btfss	intcon,2,c	;volatile
  2092  000738  D7FE               	goto	l502
  2093                           
  2094                           ;Lab10p1.c: 126: T0CONbits.TMR0ON = 0;
  2095  00073A  9ED5               	bcf	4053,7,c	;volatile
  2096  00073C  0012               	return		;funcret
  2097  00073E                     __end_of_Wait_Half_Second:
  2098                           	opt stack 0
  2099                           tblptru	equ	0xFF8
  2100                           tblptrh	equ	0xFF7
  2101                           tblptrl	equ	0xFF6
  2102                           tablat	equ	0xFF5
  2103                           prodh	equ	0xFF4
  2104                           prodl	equ	0xFF3
  2105                           intcon	equ	0xFF2
  2106                           postinc0	equ	0xFEE
  2107                           wreg	equ	0xFE8
  2108                           postdec1	equ	0xFE5
  2109                           fsr1l	equ	0xFE1
  2110                           postinc2	equ	0xFDE
  2111                           postdec2	equ	0xFDD
  2112                           fsr2h	equ	0xFDA
  2113                           fsr2l	equ	0xFD9
  2114                           status	equ	0xFD8
  2115                           
  2116 ;; *************** function _Do_Init *****************
  2117 ;; Defined at:
  2118 ;;		line 99 in file "Lab10p1.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;		None
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;		None
  2123 ;; Return value:  Size  Location     Type
  2124 ;;		None               void
  2125 ;; Registers used:
  2126 ;;		wreg, status,2, status,0, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;Total ram usage:        0 bytes
  2137 ;; Hardware stack levels used:    1
  2138 ;; Hardware stack levels required when called:    7
  2139 ;; This function calls:
  2140 ;;		_DS1621_Init
  2141 ;;		_I2C_Init
  2142 ;;		_init_INTERRUPT
  2143 ;;		_init_UART
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text9
  2150  0005D4                     __ptext9:
  2151                           	opt stack 0
  2152  0005D4                     _Do_Init:
  2153                           	opt stack 23
  2154                           
  2155                           ;Lab10p1.c: 102: init_UART();
  2156                           
  2157                           ;incstack = 0
  2158  0005D4  ECB7  F003         	call	_init_UART	;wreg free
  2159                           
  2160                           ;Lab10p1.c: 103: OSCCON=0x70;
  2161  0005D8  0E70               	movlw	112
  2162  0005DA  6ED3               	movwf	4051,c	;volatile
  2163                           
  2164                           ;Lab10p1.c: 105: ADCON1=0x0F;
  2165  0005DC  0E0F               	movlw	15
  2166  0005DE  6EC1               	movwf	4033,c	;volatile
  2167                           
  2168                           ;Lab10p1.c: 106: TRISA = 0x00;
  2169  0005E0  0E00               	movlw	0
  2170  0005E2  6E92               	movwf	3986,c	;volatile
  2171                           
  2172                           ;Lab10p1.c: 107: TRISB = 0x01;
  2173  0005E4  0E01               	movlw	1
  2174  0005E6  6E93               	movwf	3987,c	;volatile
  2175                           
  2176                           ;Lab10p1.c: 108: TRISC = 0x00;
  2177  0005E8  0E00               	movlw	0
  2178  0005EA  6E94               	movwf	3988,c	;volatile
  2179                           
  2180                           ;Lab10p1.c: 109: TRISD = 0x00;
  2181  0005EC  0E00               	movlw	0
  2182  0005EE  6E95               	movwf	3989,c	;volatile
  2183                           
  2184                           ;Lab10p1.c: 110: TRISE = 0x00;
  2185  0005F0  0E00               	movlw	0
  2186  0005F2  6E96               	movwf	3990,c	;volatile
  2187                           
  2188                           ;Lab10p1.c: 111: RBPU=0;
  2189  0005F4  9EF1               	bcf	intcon2,7,c	;volatile
  2190                           
  2191                           ;Lab10p1.c: 112: DS1621_Init();
  2192  0005F6  EC83  F003         	call	_DS1621_Init	;wreg free
  2193                           
  2194                           ;Lab10p1.c: 113: init_INTERRUPT();
  2195  0005FA  EC47  F003         	call	_init_INTERRUPT	;wreg free
  2196                           
  2197                           ;Lab10p1.c: 114: I2C_Init(100000);
  2198  0005FE  0EA0               	movlw	160
  2199  000600  6E40               	movwf	I2C_Init@c,c
  2200  000602  0E86               	movlw	134
  2201  000604  6E41               	movwf	I2C_Init@c+1,c
  2202  000606  0E01               	movlw	1
  2203  000608  6E42               	movwf	I2C_Init@c+2,c
  2204  00060A  0E00               	movlw	0
  2205  00060C  6E43               	movwf	I2C_Init@c+3,c
  2206  00060E  ECFC  F003         	call	_I2C_Init	;wreg free
  2207  000612  0012               	return		;funcret
  2208  000614                     __end_of_Do_Init:
  2209                           	opt stack 0
  2210                           tblptru	equ	0xFF8
  2211                           tblptrh	equ	0xFF7
  2212                           tblptrl	equ	0xFF6
  2213                           tablat	equ	0xFF5
  2214                           prodh	equ	0xFF4
  2215                           prodl	equ	0xFF3
  2216                           intcon	equ	0xFF2
  2217                           intcon2	equ	0xFF1
  2218                           postinc0	equ	0xFEE
  2219                           wreg	equ	0xFE8
  2220                           postdec1	equ	0xFE5
  2221                           fsr1l	equ	0xFE1
  2222                           postinc2	equ	0xFDE
  2223                           postdec2	equ	0xFDD
  2224                           fsr2h	equ	0xFDA
  2225                           fsr2l	equ	0xFD9
  2226                           status	equ	0xFD8
  2227                           
  2228 ;; *************** function _init_UART *****************
  2229 ;; Defined at:
  2230 ;;		line 91 in file "Lab10p1.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;		None               void
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    4
  2251 ;; This function calls:
  2252 ;;		_OpenUSART
  2253 ;; This function is called by:
  2254 ;;		_Do_Init
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text10
  2259  00076E                     __ptext10:
  2260                           	opt stack 0
  2261  00076E                     _init_UART:
  2262                           	opt stack 25
  2263                           
  2264                           ;Lab10p1.c: 93: OpenUSART (0b01111111 & 0b10111111 &
  2265                           ;Lab10p1.c: 94: 0b11111110 & 0b11111101 & 0b11111111 &
  2266                           ;Lab10p1.c: 95: 0b11111111, 25);
  2267                           
  2268                           ;incstack = 0
  2269  00076E  0E00               	movlw	0
  2270  000770  6E41               	movwf	OpenUSART@spbrg+1,c
  2271  000772  0E19               	movlw	25
  2272  000774  6E40               	movwf	OpenUSART@spbrg,c
  2273  000776  0E3C               	movlw	60
  2274  000778  ECE6  F001         	call	_OpenUSART
  2275                           
  2276                           ;Lab10p1.c: 96: OSCCON = 0x70;
  2277  00077C  0E70               	movlw	112
  2278  00077E  6ED3               	movwf	4051,c	;volatile
  2279  000780  0012               	return		;funcret
  2280  000782                     __end_of_init_UART:
  2281                           	opt stack 0
  2282                           tblptru	equ	0xFF8
  2283                           tblptrh	equ	0xFF7
  2284                           tblptrl	equ	0xFF6
  2285                           tablat	equ	0xFF5
  2286                           prodh	equ	0xFF4
  2287                           prodl	equ	0xFF3
  2288                           intcon	equ	0xFF2
  2289                           intcon2	equ	0xFF1
  2290                           postinc0	equ	0xFEE
  2291                           wreg	equ	0xFE8
  2292                           postdec1	equ	0xFE5
  2293                           fsr1l	equ	0xFE1
  2294                           postinc2	equ	0xFDE
  2295                           postdec2	equ	0xFDD
  2296                           fsr2h	equ	0xFDA
  2297                           fsr2l	equ	0xFD9
  2298                           status	equ	0xFD8
  2299                           
  2300 ;; *************** function _OpenUSART *****************
  2301 ;; Defined at:
  2302 ;;		line 73 in file "E:\XC8\sources\pic18\plib\USART\uopen.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  config          1    wreg     unsigned char 
  2305 ;;  spbrg           2   16[COMRAM] unsigned int 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  config          1   18[COMRAM] unsigned char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;		None               void
  2310 ;; Registers used:
  2311 ;;		wreg, status,2
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2317 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;Total ram usage:        3 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    3
  2324 ;; This function calls:
  2325 ;;		Nothing
  2326 ;; This function is called by:
  2327 ;;		_init_UART
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text11
  2332  0003CC                     __ptext11:
  2333                           	opt stack 0
  2334  0003CC                     _OpenUSART:
  2335                           	opt stack 25
  2336                           
  2337                           ;incstack = 0
  2338                           ;OpenUSART@config stored from wreg
  2339  0003CC  6E42               	movwf	OpenUSART@config,c
  2340  0003CE  0E00               	movlw	0
  2341  0003D0  6EAC               	movwf	4012,c	;volatile
  2342  0003D2  0E00               	movlw	0
  2343  0003D4  6EAB               	movwf	4011,c	;volatile
  2344  0003D6  A042               	btfss	OpenUSART@config,0,c
  2345  0003D8  D002               	goto	l2453
  2346  0003DA  88AC               	bsf	4012,4,c	;volatile
  2347  0003DC  D000               	goto	l2453
  2348  0003DE                     l2453:
  2349  0003DE  A242               	btfss	OpenUSART@config,1,c
  2350  0003E0  D003               	goto	l2457
  2351  0003E2  8CAC               	bsf	4012,6,c	;volatile
  2352  0003E4  8CAB               	bsf	4011,6,c	;volatile
  2353  0003E6  D000               	goto	l2457
  2354  0003E8                     l2457:
  2355  0003E8  A442               	btfss	OpenUSART@config,2,c
  2356  0003EA  D002               	goto	l2461
  2357  0003EC  8EAC               	bsf	4012,7,c	;volatile
  2358  0003EE  D000               	goto	l2461
  2359  0003F0                     l2461:
  2360  0003F0  A642               	btfss	OpenUSART@config,3,c
  2361  0003F2  D002               	goto	l568
  2362  0003F4  88AB               	bsf	4011,4,c	;volatile
  2363  0003F6  D002               	goto	l2465
  2364  0003F8                     l568:
  2365  0003F8  8AAB               	bsf	4011,5,c	;volatile
  2366  0003FA  D000               	goto	l2465
  2367  0003FC                     l2465:
  2368  0003FC  B842               	btfsc	OpenUSART@config,4,c
  2369  0003FE  84AC               	bsf	4012,2,c	;volatile
  2370  000400  989E               	bcf	3998,4,c	;volatile
  2371  000402  AA42               	btfss	OpenUSART@config,5,c
  2372  000404  D002               	goto	l2473
  2373  000406  86AB               	bsf	4011,3,c	;volatile
  2374  000408  D000               	goto	l2473
  2375  00040A                     l2473:
  2376  00040A  AC42               	btfss	OpenUSART@config,6,c
  2377  00040C  D002               	goto	l572
  2378  00040E  8A9D               	bsf	3997,5,c	;volatile
  2379  000410  D001               	goto	l573
  2380  000412                     l572:
  2381  000412  9A9D               	bcf	3997,5,c	;volatile
  2382  000414                     l573:
  2383  000414  9A9E               	bcf	3998,5,c	;volatile
  2384  000416  AE42               	btfss	OpenUSART@config,7,c
  2385  000418  D002               	goto	l574
  2386  00041A  889D               	bsf	3997,4,c	;volatile
  2387  00041C  D001               	goto	l575
  2388  00041E                     l574:
  2389  00041E  989D               	bcf	3997,4,c	;volatile
  2390  000420                     l575:
  2391  000420  C040  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2392  000424  5041               	movf	OpenUSART@spbrg+1,w,c
  2393  000426  6EB0               	movwf	4016,c	;volatile
  2394  000428  8AAC               	bsf	4012,5,c	;volatile
  2395  00042A  8EAB               	bsf	4011,7,c	;volatile
  2396  00042C  9C94               	bcf	3988,6,c	;volatile
  2397  00042E  8E94               	bsf	3988,7,c	;volatile
  2398  000430  B8AC               	btfsc	4012,4,c	;volatile
  2399  000432  BEAC               	btfsc	4012,7,c	;volatile
  2400  000434  D002               	goto	l577
  2401  000436  8C94               	bsf	3988,6,c	;volatile
  2402  000438  D000               	goto	l577
  2403  00043A                     l577:
  2404  00043A  0012               	return		;funcret
  2405  00043C                     __end_of_OpenUSART:
  2406                           	opt stack 0
  2407                           tblptru	equ	0xFF8
  2408                           tblptrh	equ	0xFF7
  2409                           tblptrl	equ	0xFF6
  2410                           tablat	equ	0xFF5
  2411                           prodh	equ	0xFF4
  2412                           prodl	equ	0xFF3
  2413                           intcon	equ	0xFF2
  2414                           intcon2	equ	0xFF1
  2415                           postinc0	equ	0xFEE
  2416                           wreg	equ	0xFE8
  2417                           postdec1	equ	0xFE5
  2418                           fsr1l	equ	0xFE1
  2419                           postinc2	equ	0xFDE
  2420                           postdec2	equ	0xFDD
  2421                           fsr2h	equ	0xFDA
  2422                           fsr2l	equ	0xFD9
  2423                           status	equ	0xFD8
  2424                           
  2425 ;; *************** function _init_INTERRUPT *****************
  2426 ;; Defined at:
  2427 ;;		line 13 in file "Interrupt.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;		None               void
  2434 ;; Registers used:
  2435 ;;		wreg, status,2
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    3
  2448 ;; This function calls:
  2449 ;;		Nothing
  2450 ;; This function is called by:
  2451 ;;		_Do_Init
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text12
  2456  00068E                     __ptext12:
  2457                           	opt stack 0
  2458  00068E                     _init_INTERRUPT:
  2459                           	opt stack 26
  2460                           
  2461                           ;Interrupt.c: 15: INTCONbits.INT0IF = 0;
  2462                           
  2463                           ;incstack = 0
  2464  00068E  92F2               	bcf	intcon,1,c	;volatile
  2465                           
  2466                           ;Interrupt.c: 16: INTCON2bits.INTEDG0 = 0;
  2467  000690  9CF1               	bcf	intcon2,6,c	;volatile
  2468                           
  2469                           ;Interrupt.c: 17: INTCONbits.INT0IE = 1;
  2470  000692  88F2               	bsf	intcon,4,c	;volatile
  2471                           
  2472                           ;Interrupt.c: 18: TMR1H = 0;
  2473  000694  0E00               	movlw	0
  2474  000696  6ECF               	movwf	4047,c	;volatile
  2475                           
  2476                           ;Interrupt.c: 19: TMR1L = 0;
  2477  000698  0E00               	movlw	0
  2478  00069A  6ECE               	movwf	4046,c	;volatile
  2479                           
  2480                           ;Interrupt.c: 20: PIR1bits.TMR1IF = 0;
  2481  00069C  909E               	bcf	3998,0,c	;volatile
  2482                           
  2483                           ;Interrupt.c: 21: PIE1bits.TMR1IE = 1;
  2484  00069E  809D               	bsf	3997,0,c	;volatile
  2485                           
  2486                           ;Interrupt.c: 22: INTCONbits.PEIE = 1;
  2487  0006A0  8CF2               	bsf	intcon,6,c	;volatile
  2488                           
  2489                           ;Interrupt.c: 23: INTCONbits.GIE = 1;
  2490  0006A2  8EF2               	bsf	intcon,7,c	;volatile
  2491                           
  2492                           ;Interrupt.c: 24: nec_ok = 0;
  2493  0006A4  0E00               	movlw	0
  2494  0006A6  6E0A               	movwf	_nec_ok+1,c
  2495  0006A8  0E00               	movlw	0
  2496  0006AA  6E09               	movwf	_nec_ok,c
  2497                           
  2498                           ;Interrupt.c: 25: Nec_code = 0x0;
  2499  0006AC  0E00               	movlw	0
  2500  0006AE  6E01               	movwf	_Nec_code,c
  2501  0006B0  0E00               	movlw	0
  2502  0006B2  6E02               	movwf	_Nec_code+1,c
  2503  0006B4  0E00               	movlw	0
  2504  0006B6  6E03               	movwf	_Nec_code+2,c
  2505  0006B8  0E00               	movlw	0
  2506  0006BA  6E04               	movwf	_Nec_code+3,c
  2507  0006BC  0012               	return		;funcret
  2508  0006BE                     __end_of_init_INTERRUPT:
  2509                           	opt stack 0
  2510                           tblptru	equ	0xFF8
  2511                           tblptrh	equ	0xFF7
  2512                           tblptrl	equ	0xFF6
  2513                           tablat	equ	0xFF5
  2514                           prodh	equ	0xFF4
  2515                           prodl	equ	0xFF3
  2516                           intcon	equ	0xFF2
  2517                           intcon2	equ	0xFF1
  2518                           postinc0	equ	0xFEE
  2519                           wreg	equ	0xFE8
  2520                           postdec1	equ	0xFE5
  2521                           fsr1l	equ	0xFE1
  2522                           postinc2	equ	0xFDE
  2523                           postdec2	equ	0xFDD
  2524                           fsr2h	equ	0xFDA
  2525                           fsr2l	equ	0xFD9
  2526                           status	equ	0xFD8
  2527                           
  2528 ;; *************** function _I2C_Init *****************
  2529 ;; Defined at:
  2530 ;;		line 14 in file "I2C.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  c               4   16[COMRAM] unsigned long 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;		None               void
  2537 ;; Registers used:
  2538 ;;		wreg, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;Total ram usage:        4 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:    4
  2551 ;; This function calls:
  2552 ;;		_i2cHighScl
  2553 ;;		_i2cHighSda
  2554 ;; This function is called by:
  2555 ;;		_Do_Init
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text13
  2560  0007F8                     __ptext13:
  2561                           	opt stack 0
  2562  0007F8                     _I2C_Init:
  2563                           	opt stack 25
  2564                           
  2565                           ;I2C.c: 16: i2cHighScl();
  2566                           
  2567                           ;incstack = 0
  2568  0007F8  ECF0  F003         	call	_i2cHighScl	;wreg free
  2569                           
  2570                           ;I2C.c: 17: i2cHighSda();
  2571  0007FC  EC0F  F004         	call	_i2cHighSda	;wreg free
  2572  000800  0012               	return		;funcret
  2573  000802                     __end_of_I2C_Init:
  2574                           	opt stack 0
  2575                           tblptru	equ	0xFF8
  2576                           tblptrh	equ	0xFF7
  2577                           tblptrl	equ	0xFF6
  2578                           tablat	equ	0xFF5
  2579                           prodh	equ	0xFF4
  2580                           prodl	equ	0xFF3
  2581                           intcon	equ	0xFF2
  2582                           intcon2	equ	0xFF1
  2583                           postinc0	equ	0xFEE
  2584                           wreg	equ	0xFE8
  2585                           postdec1	equ	0xFE5
  2586                           fsr1l	equ	0xFE1
  2587                           postinc2	equ	0xFDE
  2588                           postdec2	equ	0xFDD
  2589                           fsr2h	equ	0xFDA
  2590                           fsr2l	equ	0xFD9
  2591                           status	equ	0xFD8
  2592                           
  2593 ;; *************** function _DS1621_Init *****************
  2594 ;; Defined at:
  2595 ;;		line 21 in file "I2C_Support.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  Device          1   21[COMRAM] unsigned char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;		None               void
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;Total ram usage:        1 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    6
  2616 ;; This function calls:
  2617 ;;		_I2C_Write_Cmd_Only
  2618 ;;		_I2C_Write_Cmd_Write_Data
  2619 ;; This function is called by:
  2620 ;;		_Do_Init
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text14
  2625  000706                     __ptext14:
  2626                           	opt stack 0
  2627  000706                     _DS1621_Init:
  2628                           	opt stack 23
  2629                           
  2630                           ;I2C_Support.c: 23: char Device = 0x48;
  2631                           
  2632                           ;incstack = 0
  2633  000706  0E48               	movlw	72
  2634  000708  6E45               	movwf	DS1621_Init@Device,c
  2635                           
  2636                           ;I2C_Support.c: 24: I2C_Write_Cmd_Write_Data (Device, 0xAC, 0x02);
  2637  00070A  0EAC               	movlw	172
  2638  00070C  6E42               	movwf	I2C_Write_Cmd_Write_Data@Cmd,c
  2639  00070E  0E02               	movlw	2
  2640  000710  6E43               	movwf	I2C_Write_Cmd_Write_Data@Data_Out,c
  2641  000712  5045               	movf	DS1621_Init@Device,w,c
  2642  000714  EC73  F003         	call	_I2C_Write_Cmd_Write_Data
  2643                           
  2644                           ;I2C_Support.c: 25: I2C_Write_Cmd_Only(Device, 0xEE);
  2645  000718  0EEE               	movlw	238
  2646  00071A  6E42               	movwf	I2C_Write_Cmd_Only@Cmd,c
  2647  00071C  5045               	movf	DS1621_Init@Device,w,c
  2648  00071E  EC9F  F003         	call	_I2C_Write_Cmd_Only
  2649  000722  0012               	return		;funcret
  2650  000724                     __end_of_DS1621_Init:
  2651                           	opt stack 0
  2652                           tblptru	equ	0xFF8
  2653                           tblptrh	equ	0xFF7
  2654                           tblptrl	equ	0xFF6
  2655                           tablat	equ	0xFF5
  2656                           prodh	equ	0xFF4
  2657                           prodl	equ	0xFF3
  2658                           intcon	equ	0xFF2
  2659                           intcon2	equ	0xFF1
  2660                           postinc0	equ	0xFEE
  2661                           wreg	equ	0xFE8
  2662                           postdec1	equ	0xFE5
  2663                           fsr1l	equ	0xFE1
  2664                           postinc2	equ	0xFDE
  2665                           postdec2	equ	0xFDD
  2666                           fsr2h	equ	0xFDA
  2667                           fsr2l	equ	0xFD9
  2668                           status	equ	0xFD8
  2669                           
  2670 ;; *************** function _I2C_Write_Cmd_Write_Data *****************
  2671 ;; Defined at:
  2672 ;;		line 152 in file "I2C.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  Device          1    wreg     unsigned char 
  2675 ;;  Cmd             1   18[COMRAM] unsigned char 
  2676 ;;  Data_Out        1   19[COMRAM] unsigned char 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  Device          1   20[COMRAM] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;		None               void
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;Total ram usage:        3 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    5
  2695 ;; This function calls:
  2696 ;;		_I2C_Start
  2697 ;;		_I2C_Stop
  2698 ;;		_I2C_Write
  2699 ;; This function is called by:
  2700 ;;		_DS1621_Init
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text15
  2705  0006E6                     __ptext15:
  2706                           	opt stack 0
  2707  0006E6                     _I2C_Write_Cmd_Write_Data:
  2708                           	opt stack 23
  2709                           
  2710                           ;incstack = 0
  2711                           ;I2C_Write_Cmd_Write_Data@Device stored from wreg
  2712  0006E6  6E44               	movwf	I2C_Write_Cmd_Write_Data@Device,c
  2713                           
  2714                           ;I2C.c: 154: I2C_Start();
  2715  0006E8  ECCA  F003         	call	_I2C_Start	;wreg free
  2716                           
  2717                           ;I2C.c: 155: I2C_Write((Device << 1) | 0);
  2718  0006EC  5044               	movf	I2C_Write_Cmd_Write_Data@Device,w,c
  2719  0006EE  2444               	addwf	I2C_Write_Cmd_Write_Data@Device,w,c
  2720  0006F0  EC0A  F003         	call	_I2C_Write
  2721                           
  2722                           ;I2C.c: 156: I2C_Write(Cmd);
  2723  0006F4  5042               	movf	I2C_Write_Cmd_Write_Data@Cmd,w,c
  2724  0006F6  EC0A  F003         	call	_I2C_Write
  2725                           
  2726                           ;I2C.c: 157: I2C_Write(Data_Out);
  2727  0006FA  5043               	movf	I2C_Write_Cmd_Write_Data@Data_Out,w,c
  2728  0006FC  EC0A  F003         	call	_I2C_Write
  2729                           
  2730                           ;I2C.c: 158: I2C_Stop();
  2731  000700  ECC1  F003         	call	_I2C_Stop	;wreg free
  2732  000704  0012               	return		;funcret
  2733  000706                     __end_of_I2C_Write_Cmd_Write_Data:
  2734                           	opt stack 0
  2735                           tblptru	equ	0xFF8
  2736                           tblptrh	equ	0xFF7
  2737                           tblptrl	equ	0xFF6
  2738                           tablat	equ	0xFF5
  2739                           prodh	equ	0xFF4
  2740                           prodl	equ	0xFF3
  2741                           intcon	equ	0xFF2
  2742                           intcon2	equ	0xFF1
  2743                           postinc0	equ	0xFEE
  2744                           wreg	equ	0xFE8
  2745                           postdec1	equ	0xFE5
  2746                           fsr1l	equ	0xFE1
  2747                           postinc2	equ	0xFDE
  2748                           postdec2	equ	0xFDD
  2749                           fsr2h	equ	0xFDA
  2750                           fsr2l	equ	0xFD9
  2751                           status	equ	0xFD8
  2752                           
  2753 ;; *************** function _I2C_Write_Cmd_Only *****************
  2754 ;; Defined at:
  2755 ;;		line 144 in file "I2C.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  Device          1    wreg     unsigned char 
  2758 ;;  Cmd             1   18[COMRAM] unsigned char 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  Device          1   19[COMRAM] unsigned char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;		None               void
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2770 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;Total ram usage:        2 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    5
  2777 ;; This function calls:
  2778 ;;		_I2C_Start
  2779 ;;		_I2C_Stop
  2780 ;;		_I2C_Write
  2781 ;; This function is called by:
  2782 ;;		_DS1621_Init
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text16
  2787  00073E                     __ptext16:
  2788                           	opt stack 0
  2789  00073E                     _I2C_Write_Cmd_Only:
  2790                           	opt stack 23
  2791                           
  2792                           ;incstack = 0
  2793                           ;I2C_Write_Cmd_Only@Device stored from wreg
  2794  00073E  6E43               	movwf	I2C_Write_Cmd_Only@Device,c
  2795                           
  2796                           ;I2C.c: 146: I2C_Start();
  2797  000740  ECCA  F003         	call	_I2C_Start	;wreg free
  2798                           
  2799                           ;I2C.c: 147: I2C_Write((Device << 1) | 0);
  2800  000744  5043               	movf	I2C_Write_Cmd_Only@Device,w,c
  2801  000746  2443               	addwf	I2C_Write_Cmd_Only@Device,w,c
  2802  000748  EC0A  F003         	call	_I2C_Write
  2803                           
  2804                           ;I2C.c: 148: I2C_Write(Cmd);
  2805  00074C  5042               	movf	I2C_Write_Cmd_Only@Cmd,w,c
  2806  00074E  EC0A  F003         	call	_I2C_Write
  2807                           
  2808                           ;I2C.c: 149: I2C_Stop();
  2809  000752  ECC1  F003         	call	_I2C_Stop	;wreg free
  2810  000756  0012               	return		;funcret
  2811  000758                     __end_of_I2C_Write_Cmd_Only:
  2812                           	opt stack 0
  2813                           tblptru	equ	0xFF8
  2814                           tblptrh	equ	0xFF7
  2815                           tblptrl	equ	0xFF6
  2816                           tablat	equ	0xFF5
  2817                           prodh	equ	0xFF4
  2818                           prodl	equ	0xFF3
  2819                           intcon	equ	0xFF2
  2820                           intcon2	equ	0xFF1
  2821                           postinc0	equ	0xFEE
  2822                           wreg	equ	0xFE8
  2823                           postdec1	equ	0xFE5
  2824                           fsr1l	equ	0xFE1
  2825                           postinc2	equ	0xFDE
  2826                           postdec2	equ	0xFDD
  2827                           fsr2h	equ	0xFDA
  2828                           fsr2l	equ	0xFD9
  2829                           status	equ	0xFD8
  2830                           
  2831 ;; *************** function _DS1621_Read_Temp *****************
  2832 ;; Defined at:
  2833 ;;		line 29 in file "I2C_Support.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  Device          1   23[COMRAM] unsigned char 
  2838 ;;  Data_Ret        1   22[COMRAM] unsigned char 
  2839 ;;  Cmd             1   21[COMRAM] unsigned char 
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  2   19[COMRAM] int 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;Total ram usage:        5 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    6
  2856 ;; This function calls:
  2857 ;;		_I2C_ReStart
  2858 ;;		_I2C_Read
  2859 ;;		_I2C_Start
  2860 ;;		_I2C_Stop
  2861 ;;		_I2C_Write
  2862 ;; This function is called by:
  2863 ;;		_main
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text17
  2868  000652                     __ptext17:
  2869                           	opt stack 0
  2870  000652                     _DS1621_Read_Temp:
  2871                           	opt stack 24
  2872                           
  2873                           ;I2C_Support.c: 31: char Device = 0x48;
  2874                           
  2875                           ;incstack = 0
  2876  000652  0E48               	movlw	72
  2877  000654  6E47               	movwf	DS1621_Read_Temp@Device,c
  2878                           
  2879                           ;I2C_Support.c: 32: char Cmd = 0xAA;
  2880  000656  0EAA               	movlw	170
  2881  000658  6E45               	movwf	DS1621_Read_Temp@Cmd,c
  2882                           
  2883                           ;I2C_Support.c: 34: char Data_Ret;
  2884                           ;I2C_Support.c: 35: I2C_Start();
  2885  00065A  ECCA  F003         	call	_I2C_Start	;wreg free
  2886                           
  2887                           ;I2C_Support.c: 36: I2C_Write((Device << 1) | 0);
  2888  00065E  5047               	movf	DS1621_Read_Temp@Device,w,c
  2889  000660  2447               	addwf	DS1621_Read_Temp@Device,w,c
  2890  000662  EC0A  F003         	call	_I2C_Write
  2891                           
  2892                           ;I2C_Support.c: 37: I2C_Write(Cmd);
  2893  000666  5045               	movf	DS1621_Read_Temp@Cmd,w,c
  2894  000668  EC0A  F003         	call	_I2C_Write
  2895                           
  2896                           ;I2C_Support.c: 38: I2C_ReStart();
  2897  00066C  ECAC  F003         	call	_I2C_ReStart	;wreg free
  2898                           
  2899                           ;I2C_Support.c: 39: I2C_Write((Device << 1) | 1);
  2900  000670  80D8               	bsf	status,0,c
  2901  000672  3447               	rlcf	DS1621_Read_Temp@Device,w,c
  2902  000674  EC0A  F003         	call	_I2C_Write
  2903                           
  2904                           ;I2C_Support.c: 40: Data_Ret = I2C_Read(0);
  2905  000678  0E00               	movlw	0
  2906  00067A  ECA5  F002         	call	_I2C_Read
  2907  00067E  6E46               	movwf	DS1621_Read_Temp@Data_Ret,c
  2908                           
  2909                           ;I2C_Support.c: 41: I2C_Stop();
  2910  000680  ECC1  F003         	call	_I2C_Stop	;wreg free
  2911                           
  2912                           ;I2C_Support.c: 42: return Data_Ret;
  2913  000684  C046  F043         	movff	DS1621_Read_Temp@Data_Ret,?_DS1621_Read_Temp
  2914  000688  6A44               	clrf	?_DS1621_Read_Temp+1,c
  2915  00068A  D000               	goto	l181
  2916  00068C                     l181:
  2917  00068C  0012               	return		;funcret
  2918  00068E                     __end_of_DS1621_Read_Temp:
  2919                           	opt stack 0
  2920                           tblptru	equ	0xFF8
  2921                           tblptrh	equ	0xFF7
  2922                           tblptrl	equ	0xFF6
  2923                           tablat	equ	0xFF5
  2924                           prodh	equ	0xFF4
  2925                           prodl	equ	0xFF3
  2926                           intcon	equ	0xFF2
  2927                           intcon2	equ	0xFF1
  2928                           postinc0	equ	0xFEE
  2929                           wreg	equ	0xFE8
  2930                           postdec1	equ	0xFE5
  2931                           fsr1l	equ	0xFE1
  2932                           postinc2	equ	0xFDE
  2933                           postdec2	equ	0xFDD
  2934                           fsr2h	equ	0xFDA
  2935                           fsr2l	equ	0xFD9
  2936                           status	equ	0xFD8
  2937                           
  2938 ;; *************** function _I2C_Write *****************
  2939 ;; Defined at:
  2940 ;;		line 41 in file "I2C.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  outByte         1    wreg     unsigned char 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  outByte         1   16[COMRAM] unsigned char 
  2945 ;;  n               1   17[COMRAM] unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;		None               void
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0, cstack
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;Total ram usage:        2 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    4
  2962 ;; This function calls:
  2963 ;;		_i2cHighScl
  2964 ;;		_i2cHighSda
  2965 ;;		_i2cLowScl
  2966 ;;		_i2cLowSda
  2967 ;; This function is called by:
  2968 ;;		_I2C_Write_Cmd_Only
  2969 ;;		_I2C_Write_Cmd_Write_Data
  2970 ;;		_DS1621_Read_Temp
  2971 ;;		_I2C_Write_Address_Read_One_Byte
  2972 ;;		_I2C_Write_Address_Write_One_Byte
  2973 ;;		_I2C_Write_Cmd_Read_One_Byte
  2974 ;;		_DS3231_Read_Time
  2975 ;;		_DS3231_Setup_Time
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text18
  2980  000614                     __ptext18:
  2981                           	opt stack 0
  2982  000614                     _I2C_Write:
  2983                           	opt stack 23
  2984                           
  2985                           ;incstack = 0
  2986                           ;I2C_Write@outByte stored from wreg
  2987  000614  6E40               	movwf	I2C_Write@outByte,c
  2988                           
  2989                           ;I2C.c: 43: unsigned char n;
  2990                           ;I2C.c: 44: for(n=0; n<8; n++)
  2991  000616  0E00               	movlw	0
  2992  000618  6E41               	movwf	I2C_Write@n,c
  2993  00061A                     l1185:
  2994  00061A  0E07               	movlw	7
  2995  00061C  6441               	cpfsgt	I2C_Write@n,c
  2996  00061E  D001               	goto	l129
  2997  000620  D011               	goto	l1203
  2998  000622                     l129:
  2999                           
  3000                           ;I2C.c: 45: {
  3001                           ;I2C.c: 46: if(outByte&0x80) i2cHighSda();
  3002  000622  AE40               	btfss	I2C_Write@outByte,7,c
  3003  000624  D003               	goto	l1191
  3004  000626  EC0F  F004         	call	_i2cHighSda	;wreg free
  3005  00062A  D003               	goto	l1193
  3006  00062C                     l1191:
  3007                           
  3008                           ;I2C.c: 47: else i2cLowSda();
  3009  00062C  EC06  F004         	call	_i2cLowSda	;wreg free
  3010  000630  D000               	goto	l1193
  3011  000632                     l1193:
  3012                           
  3013                           ;I2C.c: 48: i2cHighScl();
  3014  000632  ECF0  F003         	call	_i2cHighScl	;wreg free
  3015                           
  3016                           ;I2C.c: 49: i2cLowScl();
  3017  000636  EC0B  F004         	call	_i2cLowScl	;wreg free
  3018                           
  3019                           ;I2C.c: 50: outByte = outByte << 1;
  3020  00063A  5040               	movf	I2C_Write@outByte,w,c
  3021  00063C  2440               	addwf	I2C_Write@outByte,w,c
  3022  00063E  6E40               	movwf	I2C_Write@outByte,c
  3023  000640  2A41               	incf	I2C_Write@n,f,c
  3024  000642  D7EB               	goto	l1185
  3025  000644                     l1203:
  3026                           
  3027                           ;I2C.c: 51: }
  3028                           ;I2C.c: 52: i2cHighSda();
  3029  000644  EC0F  F004         	call	_i2cHighSda	;wreg free
  3030                           
  3031                           ;I2C.c: 53: i2cHighScl();
  3032  000648  ECF0  F003         	call	_i2cHighScl	;wreg free
  3033                           
  3034                           ;I2C.c: 54: i2cLowScl();
  3035  00064C  EC0B  F004         	call	_i2cLowScl	;wreg free
  3036  000650  0012               	return		;funcret
  3037  000652                     __end_of_I2C_Write:
  3038                           	opt stack 0
  3039                           tblptru	equ	0xFF8
  3040                           tblptrh	equ	0xFF7
  3041                           tblptrl	equ	0xFF6
  3042                           tablat	equ	0xFF5
  3043                           prodh	equ	0xFF4
  3044                           prodl	equ	0xFF3
  3045                           intcon	equ	0xFF2
  3046                           intcon2	equ	0xFF1
  3047                           postinc0	equ	0xFEE
  3048                           wreg	equ	0xFE8
  3049                           postdec1	equ	0xFE5
  3050                           fsr1l	equ	0xFE1
  3051                           postinc2	equ	0xFDE
  3052                           postdec2	equ	0xFDD
  3053                           fsr2h	equ	0xFDA
  3054                           fsr2l	equ	0xFD9
  3055                           status	equ	0xFD8
  3056                           
  3057 ;; *************** function _I2C_Stop *****************
  3058 ;; Defined at:
  3059 ;;		line 88 in file "I2C.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;		None
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;		None               void
  3066 ;; Registers used:
  3067 ;;		wreg, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;Total ram usage:        0 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    4
  3080 ;; This function calls:
  3081 ;;		_i2cHighScl
  3082 ;;		_i2cHighSda
  3083 ;;		_i2cLowScl
  3084 ;;		_i2cLowSda
  3085 ;; This function is called by:
  3086 ;;		_I2C_Write_Cmd_Only
  3087 ;;		_I2C_Write_Cmd_Write_Data
  3088 ;;		_DS1621_Read_Temp
  3089 ;;		_I2C_Write_Address_Read_One_Byte
  3090 ;;		_I2C_Write_Address_Write_One_Byte
  3091 ;;		_I2C_Write_Cmd_Read_One_Byte
  3092 ;;		_DS3231_Read_Time
  3093 ;;		_DS3231_Setup_Time
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text19
  3098  000782                     __ptext19:
  3099                           	opt stack 0
  3100  000782                     _I2C_Stop:
  3101                           	opt stack 23
  3102                           
  3103                           ;I2C.c: 90: i2cLowScl();
  3104                           
  3105                           ;incstack = 0
  3106  000782  EC0B  F004         	call	_i2cLowScl	;wreg free
  3107                           
  3108                           ;I2C.c: 91: i2cLowSda();
  3109  000786  EC06  F004         	call	_i2cLowSda	;wreg free
  3110                           
  3111                           ;I2C.c: 92: i2cHighScl();
  3112  00078A  ECF0  F003         	call	_i2cHighScl	;wreg free
  3113                           
  3114                           ;I2C.c: 93: i2cHighSda();
  3115  00078E  EC0F  F004         	call	_i2cHighSda	;wreg free
  3116  000792  0012               	return		;funcret
  3117  000794                     __end_of_I2C_Stop:
  3118                           	opt stack 0
  3119                           tblptru	equ	0xFF8
  3120                           tblptrh	equ	0xFF7
  3121                           tblptrl	equ	0xFF6
  3122                           tablat	equ	0xFF5
  3123                           prodh	equ	0xFF4
  3124                           prodl	equ	0xFF3
  3125                           intcon	equ	0xFF2
  3126                           intcon2	equ	0xFF1
  3127                           postinc0	equ	0xFEE
  3128                           wreg	equ	0xFE8
  3129                           postdec1	equ	0xFE5
  3130                           fsr1l	equ	0xFE1
  3131                           postinc2	equ	0xFDE
  3132                           postdec2	equ	0xFDD
  3133                           fsr2h	equ	0xFDA
  3134                           fsr2l	equ	0xFD9
  3135                           status	equ	0xFD8
  3136                           
  3137 ;; *************** function _I2C_Start *****************
  3138 ;; Defined at:
  3139 ;;		line 71 in file "I2C.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;		None
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;		None
  3144 ;; Return value:  Size  Location     Type
  3145 ;;		None               void
  3146 ;; Registers used:
  3147 ;;		wreg, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;Total ram usage:        0 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    4
  3160 ;; This function calls:
  3161 ;;		_i2cHighScl
  3162 ;;		_i2cHighSda
  3163 ;;		_i2cLowScl
  3164 ;;		_i2cLowSda
  3165 ;; This function is called by:
  3166 ;;		_I2C_Write_Cmd_Only
  3167 ;;		_I2C_Write_Cmd_Write_Data
  3168 ;;		_DS1621_Read_Temp
  3169 ;;		_I2C_Write_Address_Read_One_Byte
  3170 ;;		_I2C_Write_Address_Write_One_Byte
  3171 ;;		_I2C_Write_Cmd_Read_One_Byte
  3172 ;;		_DS3231_Read_Time
  3173 ;;		_DS3231_Setup_Time
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text20
  3178  000794                     __ptext20:
  3179                           	opt stack 0
  3180  000794                     _I2C_Start:
  3181                           	opt stack 23
  3182                           
  3183                           ;I2C.c: 73: i2cHighSda();
  3184                           
  3185                           ;incstack = 0
  3186  000794  EC0F  F004         	call	_i2cHighSda	;wreg free
  3187                           
  3188                           ;I2C.c: 74: i2cHighScl();
  3189  000798  ECF0  F003         	call	_i2cHighScl	;wreg free
  3190                           
  3191                           ;I2C.c: 75: i2cLowSda();
  3192  00079C  EC06  F004         	call	_i2cLowSda	;wreg free
  3193                           
  3194                           ;I2C.c: 76: i2cLowScl();
  3195  0007A0  EC0B  F004         	call	_i2cLowScl	;wreg free
  3196  0007A4  0012               	return		;funcret
  3197  0007A6                     __end_of_I2C_Start:
  3198                           	opt stack 0
  3199                           tblptru	equ	0xFF8
  3200                           tblptrh	equ	0xFF7
  3201                           tblptrl	equ	0xFF6
  3202                           tablat	equ	0xFF5
  3203                           prodh	equ	0xFF4
  3204                           prodl	equ	0xFF3
  3205                           intcon	equ	0xFF2
  3206                           intcon2	equ	0xFF1
  3207                           postinc0	equ	0xFEE
  3208                           wreg	equ	0xFE8
  3209                           postdec1	equ	0xFE5
  3210                           fsr1l	equ	0xFE1
  3211                           postinc2	equ	0xFDE
  3212                           postdec2	equ	0xFDD
  3213                           fsr2h	equ	0xFDA
  3214                           fsr2l	equ	0xFD9
  3215                           status	equ	0xFD8
  3216                           
  3217 ;; *************** function _I2C_Read *****************
  3218 ;; Defined at:
  3219 ;;		line 20 in file "I2C.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  ack             1    wreg     unsigned char 
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;  ack             1   16[COMRAM] unsigned char 
  3224 ;;  inByte          1   18[COMRAM] unsigned char 
  3225 ;;  n               1   17[COMRAM] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      unsigned char 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;Total ram usage:        3 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    5
  3242 ;; This function calls:
  3243 ;;		_i2cAck
  3244 ;;		_i2cHighScl
  3245 ;;		_i2cHighSda
  3246 ;;		_i2cLowScl
  3247 ;;		_i2cNack
  3248 ;; This function is called by:
  3249 ;;		_DS1621_Read_Temp
  3250 ;;		_I2C_Write_Address_Read_One_Byte
  3251 ;;		_I2C_Write_Cmd_Read_One_Byte
  3252 ;;		_DS3231_Read_Time
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text21
  3257  00054A                     __ptext21:
  3258                           	opt stack 0
  3259  00054A                     _I2C_Read:
  3260                           	opt stack 24
  3261                           
  3262                           ;incstack = 0
  3263                           ;I2C_Read@ack stored from wreg
  3264  00054A  6E40               	movwf	I2C_Read@ack,c
  3265                           
  3266                           ;I2C.c: 22: unsigned char inByte, n;
  3267                           ;I2C.c: 23: i2cHighSda();
  3268  00054C  EC0F  F004         	call	_i2cHighSda	;wreg free
  3269                           
  3270                           ;I2C.c: 24: for (n=0; n<8; n++)
  3271  000550  0E00               	movlw	0
  3272  000552  6E41               	movwf	I2C_Read@n,c
  3273  000554                     l1325:
  3274  000554  0E07               	movlw	7
  3275  000556  6441               	cpfsgt	I2C_Read@n,c
  3276  000558  D001               	goto	l1329
  3277  00055A  D00F               	goto	l1343
  3278  00055C                     l1329:
  3279                           
  3280                           ;I2C.c: 25: {
  3281                           ;I2C.c: 26: i2cHighScl();
  3282  00055C  ECF0  F003         	call	_i2cHighScl	;wreg free
  3283                           
  3284                           ;I2C.c: 28: if (PORTCbits.RC1)
  3285  000560  A282               	btfss	3970,1,c	;volatile
  3286  000562  D003               	goto	l1335
  3287                           
  3288                           ;I2C.c: 29: inByte = (inByte << 1) | 0x01;
  3289  000564  80D8               	bsf	status,0,c
  3290  000566  3642               	rlcf	I2C_Read@inByte,f,c
  3291  000568  D004               	goto	l1337
  3292  00056A                     l1335:
  3293                           
  3294                           ;I2C.c: 30: else
  3295                           ;I2C.c: 31: inByte = inByte << 1;
  3296  00056A  5042               	movf	I2C_Read@inByte,w,c
  3297  00056C  2442               	addwf	I2C_Read@inByte,w,c
  3298  00056E  6E42               	movwf	I2C_Read@inByte,c
  3299  000570  D000               	goto	l1337
  3300  000572                     l1337:
  3301                           
  3302                           ;I2C.c: 32: i2cLowScl();
  3303  000572  EC0B  F004         	call	_i2cLowScl	;wreg free
  3304  000576  2A41               	incf	I2C_Read@n,f,c
  3305  000578  D7ED               	goto	l1325
  3306  00057A                     l1343:
  3307                           
  3308                           ;I2C.c: 33: }
  3309                           ;I2C.c: 34: if (ack) i2cAck();
  3310  00057A  5040               	movf	I2C_Read@ack,w,c
  3311  00057C  B4D8               	btfsc	status,2,c
  3312  00057E  D003               	goto	l1347
  3313  000580  ECD3  F003         	call	_i2cAck	;wreg free
  3314  000584  D003               	goto	l1349
  3315  000586                     l1347:
  3316                           
  3317                           ;I2C.c: 35: else i2cNack();
  3318  000586  EC01  F004         	call	_i2cNack	;wreg free
  3319  00058A  D000               	goto	l1349
  3320  00058C                     l1349:
  3321                           
  3322                           ;I2C.c: 38: return(inByte);
  3323  00058C  5042               	movf	I2C_Read@inByte,w,c
  3324  00058E  D000               	goto	l126
  3325  000590                     l126:
  3326  000590  0012               	return		;funcret
  3327  000592                     __end_of_I2C_Read:
  3328                           	opt stack 0
  3329                           tblptru	equ	0xFF8
  3330                           tblptrh	equ	0xFF7
  3331                           tblptrl	equ	0xFF6
  3332                           tablat	equ	0xFF5
  3333                           prodh	equ	0xFF4
  3334                           prodl	equ	0xFF3
  3335                           intcon	equ	0xFF2
  3336                           intcon2	equ	0xFF1
  3337                           postinc0	equ	0xFEE
  3338                           wreg	equ	0xFE8
  3339                           postdec1	equ	0xFE5
  3340                           fsr1l	equ	0xFE1
  3341                           postinc2	equ	0xFDE
  3342                           postdec2	equ	0xFDD
  3343                           fsr2h	equ	0xFDA
  3344                           fsr2l	equ	0xFD9
  3345                           status	equ	0xFD8
  3346                           
  3347 ;; *************** function _i2cNack *****************
  3348 ;; Defined at:
  3349 ;;		line 57 in file "I2C.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;		None
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;		None
  3354 ;; Return value:  Size  Location     Type
  3355 ;;		None               void
  3356 ;; Registers used:
  3357 ;;		wreg, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;Total ram usage:        0 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; Hardware stack levels required when called:    4
  3370 ;; This function calls:
  3371 ;;		_i2cHighScl
  3372 ;;		_i2cLowScl
  3373 ;; This function is called by:
  3374 ;;		_I2C_Read
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text22
  3379  000802                     __ptext22:
  3380                           	opt stack 0
  3381  000802                     _i2cNack:
  3382                           	opt stack 24
  3383                           
  3384                           ;I2C.c: 59: i2cHighScl();
  3385                           
  3386                           ;incstack = 0
  3387  000802  ECF0  F003         	call	_i2cHighScl	;wreg free
  3388                           
  3389                           ;I2C.c: 60: i2cLowScl();
  3390  000806  EC0B  F004         	call	_i2cLowScl	;wreg free
  3391  00080A  0012               	return		;funcret
  3392  00080C                     __end_of_i2cNack:
  3393                           	opt stack 0
  3394                           tblptru	equ	0xFF8
  3395                           tblptrh	equ	0xFF7
  3396                           tblptrl	equ	0xFF6
  3397                           tablat	equ	0xFF5
  3398                           prodh	equ	0xFF4
  3399                           prodl	equ	0xFF3
  3400                           intcon	equ	0xFF2
  3401                           intcon2	equ	0xFF1
  3402                           postinc0	equ	0xFEE
  3403                           wreg	equ	0xFE8
  3404                           postdec1	equ	0xFE5
  3405                           fsr1l	equ	0xFE1
  3406                           postinc2	equ	0xFDE
  3407                           postdec2	equ	0xFDD
  3408                           fsr2h	equ	0xFDA
  3409                           fsr2l	equ	0xFD9
  3410                           status	equ	0xFD8
  3411                           
  3412 ;; *************** function _i2cAck *****************
  3413 ;; Defined at:
  3414 ;;		line 63 in file "I2C.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;		None               void
  3421 ;; Registers used:
  3422 ;;		wreg, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;Total ram usage:        0 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    4
  3435 ;; This function calls:
  3436 ;;		_i2cHighScl
  3437 ;;		_i2cHighSda
  3438 ;;		_i2cLowScl
  3439 ;;		_i2cLowSda
  3440 ;; This function is called by:
  3441 ;;		_I2C_Read
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text23
  3446  0007A6                     __ptext23:
  3447                           	opt stack 0
  3448  0007A6                     _i2cAck:
  3449                           	opt stack 24
  3450                           
  3451                           ;I2C.c: 65: i2cLowSda();
  3452                           
  3453                           ;incstack = 0
  3454  0007A6  EC06  F004         	call	_i2cLowSda	;wreg free
  3455                           
  3456                           ;I2C.c: 66: i2cHighScl();
  3457  0007AA  ECF0  F003         	call	_i2cHighScl	;wreg free
  3458                           
  3459                           ;I2C.c: 67: i2cLowScl();
  3460  0007AE  EC0B  F004         	call	_i2cLowScl	;wreg free
  3461                           
  3462                           ;I2C.c: 68: i2cHighSda();
  3463  0007B2  EC0F  F004         	call	_i2cHighSda	;wreg free
  3464  0007B6  0012               	return		;funcret
  3465  0007B8                     __end_of_i2cAck:
  3466                           	opt stack 0
  3467                           tblptru	equ	0xFF8
  3468                           tblptrh	equ	0xFF7
  3469                           tblptrl	equ	0xFF6
  3470                           tablat	equ	0xFF5
  3471                           prodh	equ	0xFF4
  3472                           prodl	equ	0xFF3
  3473                           intcon	equ	0xFF2
  3474                           intcon2	equ	0xFF1
  3475                           postinc0	equ	0xFEE
  3476                           wreg	equ	0xFE8
  3477                           postdec1	equ	0xFE5
  3478                           fsr1l	equ	0xFE1
  3479                           postinc2	equ	0xFDE
  3480                           postdec2	equ	0xFDD
  3481                           fsr2h	equ	0xFDA
  3482                           fsr2l	equ	0xFD9
  3483                           status	equ	0xFD8
  3484                           
  3485 ;; *************** function _I2C_ReStart *****************
  3486 ;; Defined at:
  3487 ;;		line 79 in file "I2C.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;		None
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;		None               void
  3494 ;; Registers used:
  3495 ;;		wreg, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;Total ram usage:        0 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    4
  3508 ;; This function calls:
  3509 ;;		_i2cHighScl
  3510 ;;		_i2cHighSda
  3511 ;;		_i2cLowScl
  3512 ;;		_i2cLowSda
  3513 ;; This function is called by:
  3514 ;;		_DS1621_Read_Temp
  3515 ;;		_I2C_Write_Address_Read_One_Byte
  3516 ;;		_I2C_Write_Cmd_Read_One_Byte
  3517 ;;		_DS3231_Read_Time
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text24
  3522  000758                     __ptext24:
  3523                           	opt stack 0
  3524  000758                     _I2C_ReStart:
  3525                           	opt stack 25
  3526                           
  3527                           ;I2C.c: 81: i2cLowScl();
  3528                           
  3529                           ;incstack = 0
  3530  000758  EC0B  F004         	call	_i2cLowScl	;wreg free
  3531                           
  3532                           ;I2C.c: 82: i2cHighSda();
  3533  00075C  EC0F  F004         	call	_i2cHighSda	;wreg free
  3534                           
  3535                           ;I2C.c: 83: i2cHighScl();
  3536  000760  ECF0  F003         	call	_i2cHighScl	;wreg free
  3537                           
  3538                           ;I2C.c: 84: i2cLowSda();
  3539  000764  EC06  F004         	call	_i2cLowSda	;wreg free
  3540                           
  3541                           ;I2C.c: 85: i2cLowScl();
  3542  000768  EC0B  F004         	call	_i2cLowScl	;wreg free
  3543  00076C  0012               	return		;funcret
  3544  00076E                     __end_of_I2C_ReStart:
  3545                           	opt stack 0
  3546                           tblptru	equ	0xFF8
  3547                           tblptrh	equ	0xFF7
  3548                           tblptrl	equ	0xFF6
  3549                           tablat	equ	0xFF5
  3550                           prodh	equ	0xFF4
  3551                           prodl	equ	0xFF3
  3552                           intcon	equ	0xFF2
  3553                           intcon2	equ	0xFF1
  3554                           postinc0	equ	0xFEE
  3555                           wreg	equ	0xFE8
  3556                           postdec1	equ	0xFE5
  3557                           fsr1l	equ	0xFE1
  3558                           postinc2	equ	0xFDE
  3559                           postdec2	equ	0xFDD
  3560                           fsr2h	equ	0xFDA
  3561                           fsr2l	equ	0xFD9
  3562                           status	equ	0xFD8
  3563                           
  3564 ;; *************** function _i2cLowSda *****************
  3565 ;; Defined at:
  3566 ;;		line 102 in file "I2C.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;		None
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;		None               void
  3573 ;; Registers used:
  3574 ;;		None
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;Total ram usage:        0 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:    3
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_I2C_Write
  3591 ;;		_i2cAck
  3592 ;;		_I2C_Start
  3593 ;;		_I2C_ReStart
  3594 ;;		_I2C_Stop
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text25
  3599  00080C                     __ptext25:
  3600                           	opt stack 0
  3601  00080C                     _i2cLowSda:
  3602                           	opt stack 23
  3603                           
  3604                           ;I2C.c: 104: PORTCbits.RC1 = 0;
  3605                           
  3606                           ;incstack = 0
  3607  00080C  9282               	bcf	3970,1,c	;volatile
  3608                           
  3609                           ;I2C.c: 105: TRISCbits.RC1 = 0;
  3610  00080E  9294               	bcf	3988,1,c	;volatile
  3611                           
  3612                           ;I2C.c: 106: _delay((unsigned long)((2)*(8000000/4000000.0)));
  3613  000810  D000               	nop2		;2 cycle nop
  3614  000812  D000               	nop2		;2 cycle nop
  3615  000814  0012               	return		;funcret
  3616  000816                     __end_of_i2cLowSda:
  3617                           	opt stack 0
  3618                           tblptru	equ	0xFF8
  3619                           tblptrh	equ	0xFF7
  3620                           tblptrl	equ	0xFF6
  3621                           tablat	equ	0xFF5
  3622                           prodh	equ	0xFF4
  3623                           prodl	equ	0xFF3
  3624                           intcon	equ	0xFF2
  3625                           intcon2	equ	0xFF1
  3626                           postinc0	equ	0xFEE
  3627                           wreg	equ	0xFE8
  3628                           postdec1	equ	0xFE5
  3629                           fsr1l	equ	0xFE1
  3630                           postinc2	equ	0xFDE
  3631                           postdec2	equ	0xFDD
  3632                           fsr2h	equ	0xFDA
  3633                           fsr2l	equ	0xFD9
  3634                           status	equ	0xFD8
  3635                           
  3636 ;; *************** function _i2cLowScl *****************
  3637 ;; Defined at:
  3638 ;;		line 115 in file "I2C.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;		None
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;		None
  3643 ;; Return value:  Size  Location     Type
  3644 ;;		None               void
  3645 ;; Registers used:
  3646 ;;		None
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;Total ram usage:        0 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:    3
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_I2C_Read
  3663 ;;		_I2C_Write
  3664 ;;		_i2cNack
  3665 ;;		_i2cAck
  3666 ;;		_I2C_Start
  3667 ;;		_I2C_ReStart
  3668 ;;		_I2C_Stop
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text26
  3673  000816                     __ptext26:
  3674                           	opt stack 0
  3675  000816                     _i2cLowScl:
  3676                           	opt stack 23
  3677                           
  3678                           ;I2C.c: 117: PORTCbits.RC2 = 0;
  3679                           
  3680                           ;incstack = 0
  3681  000816  9482               	bcf	3970,2,c	;volatile
  3682                           
  3683                           ;I2C.c: 118: TRISCbits.RC2 = 0;
  3684  000818  9494               	bcf	3988,2,c	;volatile
  3685                           
  3686                           ;I2C.c: 119: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3687  00081A  D000               	nop2		;2 cycle nop
  3688  00081C  0012               	return		;funcret
  3689  00081E                     __end_of_i2cLowScl:
  3690                           	opt stack 0
  3691                           tblptru	equ	0xFF8
  3692                           tblptrh	equ	0xFF7
  3693                           tblptrl	equ	0xFF6
  3694                           tablat	equ	0xFF5
  3695                           prodh	equ	0xFF4
  3696                           prodl	equ	0xFF3
  3697                           intcon	equ	0xFF2
  3698                           intcon2	equ	0xFF1
  3699                           postinc0	equ	0xFEE
  3700                           wreg	equ	0xFE8
  3701                           postdec1	equ	0xFE5
  3702                           fsr1l	equ	0xFE1
  3703                           postinc2	equ	0xFDE
  3704                           postdec2	equ	0xFDD
  3705                           fsr2h	equ	0xFDA
  3706                           fsr2l	equ	0xFD9
  3707                           status	equ	0xFD8
  3708                           
  3709 ;; *************** function _i2cHighSda *****************
  3710 ;; Defined at:
  3711 ;;		line 96 in file "I2C.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;		None               void
  3718 ;; Registers used:
  3719 ;;		None
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;Total ram usage:        0 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    3
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_I2C_Init
  3736 ;;		_I2C_Read
  3737 ;;		_I2C_Write
  3738 ;;		_i2cAck
  3739 ;;		_I2C_Start
  3740 ;;		_I2C_ReStart
  3741 ;;		_I2C_Stop
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text27
  3746  00081E                     __ptext27:
  3747                           	opt stack 0
  3748  00081E                     _i2cHighSda:
  3749                           	opt stack 25
  3750                           
  3751                           ;I2C.c: 98: TRISCbits.RC1 = 1;
  3752                           
  3753                           ;incstack = 0
  3754  00081E  8294               	bsf	3988,1,c	;volatile
  3755                           
  3756                           ;I2C.c: 99: _delay((unsigned long)((2)*(8000000/4000000.0)));
  3757  000820  D000               	nop2		;2 cycle nop
  3758  000822  D000               	nop2		;2 cycle nop
  3759  000824  0012               	return		;funcret
  3760  000826                     __end_of_i2cHighSda:
  3761                           	opt stack 0
  3762                           tblptru	equ	0xFF8
  3763                           tblptrh	equ	0xFF7
  3764                           tblptrl	equ	0xFF6
  3765                           tablat	equ	0xFF5
  3766                           prodh	equ	0xFF4
  3767                           prodl	equ	0xFF3
  3768                           intcon	equ	0xFF2
  3769                           intcon2	equ	0xFF1
  3770                           postinc0	equ	0xFEE
  3771                           wreg	equ	0xFE8
  3772                           postdec1	equ	0xFE5
  3773                           fsr1l	equ	0xFE1
  3774                           postinc2	equ	0xFDE
  3775                           postdec2	equ	0xFDD
  3776                           fsr2h	equ	0xFDA
  3777                           fsr2l	equ	0xFD9
  3778                           status	equ	0xFD8
  3779                           
  3780 ;; *************** function _i2cHighScl *****************
  3781 ;; Defined at:
  3782 ;;		line 109 in file "I2C.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;		None               void
  3789 ;; Registers used:
  3790 ;;		wreg
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;Total ram usage:        0 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    3
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_I2C_Init
  3807 ;;		_I2C_Read
  3808 ;;		_I2C_Write
  3809 ;;		_i2cNack
  3810 ;;		_i2cAck
  3811 ;;		_I2C_Start
  3812 ;;		_I2C_ReStart
  3813 ;;		_I2C_Stop
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text28
  3818  0007E0                     __ptext28:
  3819                           	opt stack 0
  3820  0007E0                     _i2cHighScl:
  3821                           	opt stack 25
  3822                           
  3823                           ;I2C.c: 111: TRISCbits.RC2 = 1;
  3824                           
  3825                           ;incstack = 0
  3826  0007E0  8494               	bsf	3988,2,c	;volatile
  3827                           
  3828                           ;I2C.c: 112: _delay((unsigned long)((10)*(8000000/4000000.0)));
  3829  0007E2  0E06               	movlw	6
  3830  0007E4                     u1647:
  3831  0007E4  2EE8               	decfsz	wreg,f,c
  3832  0007E6  D7FE               	goto	u1647
  3833  0007E8  D000               	nop2		;nop
  3834  0007EA  0012               	return		;funcret
  3835  0007EC                     __end_of_i2cHighScl:
  3836                           	opt stack 0
  3837                           tblptru	equ	0xFF8
  3838                           tblptrh	equ	0xFF7
  3839                           tblptrl	equ	0xFF6
  3840                           tablat	equ	0xFF5
  3841                           prodh	equ	0xFF4
  3842                           prodl	equ	0xFF3
  3843                           intcon	equ	0xFF2
  3844                           intcon2	equ	0xFF1
  3845                           postinc0	equ	0xFEE
  3846                           wreg	equ	0xFE8
  3847                           postdec1	equ	0xFE5
  3848                           fsr1l	equ	0xFE1
  3849                           postinc2	equ	0xFDE
  3850                           postdec2	equ	0xFDD
  3851                           fsr2h	equ	0xFDA
  3852                           fsr2l	equ	0xFD9
  3853                           status	equ	0xFD8
  3854                           
  3855 ;; *************** function _chkisr *****************
  3856 ;; Defined at:
  3857 ;;		line 28 in file "Interrupt.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;		None
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;		None               void
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3873 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;Total ram usage:       14 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:    2
  3878 ;; This function calls:
  3879 ;;		_INT0_isr
  3880 ;;		_TIMER1_isr
  3881 ;; This function is called by:
  3882 ;;		Interrupt level 2
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	intcode
  3887  000008                     __pintcode:
  3888                           	opt stack 0
  3889  000008                     _chkisr:
  3890                           	opt stack 23
  3891                           
  3892                           ;incstack = 0
  3893  000008  CFFA F032          	movff	pclath,??_chkisr
  3894  00000C  CFFB F033          	movff	pclatu,??_chkisr+1
  3895  000010  CFE9 F034          	movff	fsr0l,??_chkisr+2
  3896  000014  EDA8  F001         	call	int_func,f	;refresh shadow registers
  3897                           pclatu	equ	0xFFB
  3898                           pclath	equ	0xFFA
  3899                           tblptru	equ	0xFF8
  3900                           tblptrh	equ	0xFF7
  3901                           tblptrl	equ	0xFF6
  3902                           tablat	equ	0xFF5
  3903                           prodh	equ	0xFF4
  3904                           prodl	equ	0xFF3
  3905                           intcon	equ	0xFF2
  3906                           intcon2	equ	0xFF1
  3907                           postinc0	equ	0xFEE
  3908                           fsr0l	equ	0xFE9
  3909                           wreg	equ	0xFE8
  3910                           postdec1	equ	0xFE5
  3911                           fsr1l	equ	0xFE1
  3912                           postinc2	equ	0xFDE
  3913                           postdec2	equ	0xFDD
  3914                           fsr2h	equ	0xFDA
  3915                           fsr2l	equ	0xFD9
  3916                           status	equ	0xFD8
  3917                           
  3918                           	psect	intcode_body
  3919  000350                     __pintcode_body:
  3920                           	opt stack 23
  3921  000350                     int_func:
  3922                           	opt stack 23
  3923  000350  0006               	pop		; remove dummy address from shadow register refresh
  3924  000352  CFEA F035          	movff	fsr0h,??_chkisr+3
  3925  000356  CFE1 F036          	movff	fsr1l,??_chkisr+4
  3926  00035A  CFE2 F037          	movff	fsr1h,??_chkisr+5
  3927  00035E  CFD9 F038          	movff	fsr2l,??_chkisr+6
  3928  000362  CFDA F039          	movff	fsr2h,??_chkisr+7
  3929  000366  CFF3 F03A          	movff	prodl,??_chkisr+8
  3930  00036A  CFF4 F03B          	movff	prodh,??_chkisr+9
  3931  00036E  CFF6 F03C          	movff	tblptrl,??_chkisr+10
  3932  000372  CFF7 F03D          	movff	tblptrh,??_chkisr+11
  3933  000376  CFF8 F03E          	movff	tblptru,??_chkisr+12
  3934  00037A  CFF5 F03F          	movff	tablat,??_chkisr+13
  3935                           
  3936                           ;Interrupt.c: 30: if (PIR1bits.TMR1IF == 1) TIMER1_isr();
  3937  00037E  A09E               	btfss	3998,0,c	;volatile
  3938  000380  D003               	goto	i2l2071
  3939  000382  ECF6  F003         	call	_TIMER1_isr	;wreg free
  3940  000386  D000               	goto	i2l2071
  3941  000388                     i2l2071:
  3942                           
  3943                           ;Interrupt.c: 31: if (INTCONbits.INT0IF == 1) INT0_isr();
  3944  000388  A2F2               	btfss	intcon,1,c	;volatile
  3945  00038A  D003               	goto	i2l199
  3946  00038C  EC0E  F000         	call	_INT0_isr	;wreg free
  3947  000390  D000               	goto	i2l199
  3948  000392                     i2l199:
  3949  000392  C03F  FFF5         	movff	??_chkisr+13,tablat
  3950  000396  C03E  FFF8         	movff	??_chkisr+12,tblptru
  3951  00039A  C03D  FFF7         	movff	??_chkisr+11,tblptrh
  3952  00039E  C03C  FFF6         	movff	??_chkisr+10,tblptrl
  3953  0003A2  C03B  FFF4         	movff	??_chkisr+9,prodh
  3954  0003A6  C03A  FFF3         	movff	??_chkisr+8,prodl
  3955  0003AA  C039  FFDA         	movff	??_chkisr+7,fsr2h
  3956  0003AE  C038  FFD9         	movff	??_chkisr+6,fsr2l
  3957  0003B2  C037  FFE2         	movff	??_chkisr+5,fsr1h
  3958  0003B6  C036  FFE1         	movff	??_chkisr+4,fsr1l
  3959  0003BA  C035  FFEA         	movff	??_chkisr+3,fsr0h
  3960  0003BE  C034  FFE9         	movff	??_chkisr+2,fsr0l
  3961  0003C2  C033  FFFB         	movff	??_chkisr+1,pclatu
  3962  0003C6  C032  FFFA         	movff	??_chkisr,pclath
  3963  0003CA  0011               	retfie		f
  3964  0003CC                     __end_of_chkisr:
  3965                           	opt stack 0
  3966                           pclatu	equ	0xFFB
  3967                           pclath	equ	0xFFA
  3968                           tblptru	equ	0xFF8
  3969                           tblptrh	equ	0xFF7
  3970                           tblptrl	equ	0xFF6
  3971                           tablat	equ	0xFF5
  3972                           prodh	equ	0xFF4
  3973                           prodl	equ	0xFF3
  3974                           intcon	equ	0xFF2
  3975                           intcon2	equ	0xFF1
  3976                           postinc0	equ	0xFEE
  3977                           fsr0h	equ	0xFEA
  3978                           fsr0l	equ	0xFE9
  3979                           wreg	equ	0xFE8
  3980                           postdec1	equ	0xFE5
  3981                           fsr1h	equ	0xFE2
  3982                           fsr1l	equ	0xFE1
  3983                           postinc2	equ	0xFDE
  3984                           postdec2	equ	0xFDD
  3985                           fsr2h	equ	0xFDA
  3986                           fsr2l	equ	0xFD9
  3987                           status	equ	0xFD8
  3988                           
  3989 ;; *************** function _TIMER1_isr *****************
  3990 ;; Defined at:
  3991 ;;		line 34 in file "Interrupt.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;		None               void
  3998 ;; Registers used:
  3999 ;;		wreg, status,2
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;Total ram usage:        0 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_chkisr
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text30
  4019  0007EC                     __ptext30:
  4020                           	opt stack 0
  4021  0007EC                     _TIMER1_isr:
  4022                           	opt stack 24
  4023                           
  4024                           ;Interrupt.c: 36: Nec_state = 0;
  4025                           
  4026                           ;incstack = 0
  4027  0007EC  0E00               	movlw	0
  4028  0007EE  6E11               	movwf	_Nec_state,c
  4029                           
  4030                           ;Interrupt.c: 37: INTCON2bits.INTEDG0 = 0;
  4031  0007F0  9CF1               	bcf	intcon2,6,c	;volatile
  4032                           
  4033                           ;Interrupt.c: 38: T1CONbits.TMR1ON = 0;
  4034  0007F2  90CD               	bcf	4045,0,c	;volatile
  4035                           
  4036                           ;Interrupt.c: 39: PIR1bits.TMR1IF = 0;
  4037  0007F4  909E               	bcf	3998,0,c	;volatile
  4038  0007F6  0012               	return		;funcret
  4039  0007F8                     __end_of_TIMER1_isr:
  4040                           	opt stack 0
  4041                           pclatu	equ	0xFFB
  4042                           pclath	equ	0xFFA
  4043                           tblptru	equ	0xFF8
  4044                           tblptrh	equ	0xFF7
  4045                           tblptrl	equ	0xFF6
  4046                           tablat	equ	0xFF5
  4047                           prodh	equ	0xFF4
  4048                           prodl	equ	0xFF3
  4049                           intcon	equ	0xFF2
  4050                           intcon2	equ	0xFF1
  4051                           postinc0	equ	0xFEE
  4052                           fsr0h	equ	0xFEA
  4053                           fsr0l	equ	0xFE9
  4054                           wreg	equ	0xFE8
  4055                           postdec1	equ	0xFE5
  4056                           fsr1h	equ	0xFE2
  4057                           fsr1l	equ	0xFE1
  4058                           postinc2	equ	0xFDE
  4059                           postdec2	equ	0xFDD
  4060                           fsr2h	equ	0xFDA
  4061                           fsr2l	equ	0xFD9
  4062                           status	equ	0xFD8
  4063                           
  4064 ;; *************** function _INT0_isr *****************
  4065 ;; Defined at:
  4066 ;;		line 48 in file "Interrupt.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;		None
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;		None               void
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;Total ram usage:        2 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    1
  4087 ;; This function calls:
  4088 ;;		_force_nec_state0
  4089 ;; This function is called by:
  4090 ;;		_chkisr
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text31
  4095  00001C                     __ptext31:
  4096                           	opt stack 0
  4097  00001C                     _INT0_isr:
  4098                           	opt stack 23
  4099                           
  4100                           ;Interrupt.c: 51: INTCONbits.INT0IF = 0;
  4101                           
  4102                           ;incstack = 0
  4103  00001C  92F2               	bcf	intcon,1,c	;volatile
  4104                           
  4105                           ;Interrupt.c: 52: if (Nec_state != 0)
  4106  00001E  5011               	movf	_Nec_state,w,c
  4107  000020  B4D8               	btfsc	status,2,c
  4108  000022  D09A               	goto	i2l1575
  4109                           
  4110                           ;Interrupt.c: 53: {
  4111                           ;Interrupt.c: 54: Time_Elapsed = (TMR1H << 8) | TMR1L;
  4112  000024  50CE               	movf	4046,w,c	;volatile
  4113  000026  CFCF F030          	movff	4047,??_INT0_isr	;volatile
  4114  00002A  6A31               	clrf	(??_INT0_isr+1)& (0+255),c
  4115  00002C  C030  F031         	movff	??_INT0_isr,??_INT0_isr+1
  4116  000030  6A30               	clrf	??_INT0_isr,c
  4117  000032  1030               	iorwf	??_INT0_isr,w,c
  4118  000034  6E05               	movwf	_Time_Elapsed,c
  4119  000036  5031               	movf	??_INT0_isr+1,w,c
  4120  000038  6E06               	movwf	_Time_Elapsed+1,c
  4121                           
  4122                           ;Interrupt.c: 55: TMR1H = 0;
  4123  00003A  0E00               	movlw	0
  4124  00003C  6ECF               	movwf	4047,c	;volatile
  4125                           
  4126                           ;Interrupt.c: 56: TMR1L = 0;
  4127  00003E  0E00               	movlw	0
  4128  000040  6ECE               	movwf	4046,c	;volatile
  4129                           
  4130                           ;Interrupt.c: 57: }
  4131                           ;Interrupt.c: 59: switch(Nec_state)
  4132  000042  D08A               	goto	i2l1575
  4133  000044                     i2l1509:
  4134                           
  4135                           ;Interrupt.c: 62: {
  4136                           ;Interrupt.c: 63: TMR1H = 0;
  4137  000044  0E00               	movlw	0
  4138  000046  6ECF               	movwf	4047,c	;volatile
  4139                           
  4140                           ;Interrupt.c: 64: TMR1L = 0;
  4141  000048  0E00               	movlw	0
  4142  00004A  6ECE               	movwf	4046,c	;volatile
  4143                           
  4144                           ;Interrupt.c: 65: PIR1bits.TMR1IF = 0;
  4145  00004C  909E               	bcf	3998,0,c	;volatile
  4146                           
  4147                           ;Interrupt.c: 66: T1CON= 0x90;
  4148  00004E  0E90               	movlw	144
  4149  000050  6ECD               	movwf	4045,c	;volatile
  4150                           
  4151                           ;Interrupt.c: 67: T1CONbits.TMR1ON = 1;
  4152  000052  80CD               	bsf	4045,0,c	;volatile
  4153                           
  4154                           ;Interrupt.c: 68: bit_count = 0;
  4155  000054  0E00               	movlw	0
  4156  000056  6E18               	movwf	_bit_count,c
  4157                           
  4158                           ;Interrupt.c: 69: Nec_code = 0;
  4159  000058  0E00               	movlw	0
  4160  00005A  6E01               	movwf	_Nec_code,c
  4161  00005C  0E00               	movlw	0
  4162  00005E  6E02               	movwf	_Nec_code+1,c
  4163  000060  0E00               	movlw	0
  4164  000062  6E03               	movwf	_Nec_code+2,c
  4165  000064  0E00               	movlw	0
  4166  000066  6E04               	movwf	_Nec_code+3,c
  4167                           
  4168                           ;Interrupt.c: 70: Nec_state = 1;
  4169  000068  0E01               	movlw	1
  4170  00006A  6E11               	movwf	_Nec_state,c
  4171  00006C  D073               	goto	i2l1569
  4172                           
  4173                           ;Interrupt.c: 72: return;
  4174                           
  4175                           ;Interrupt.c: 71: INTCON2bits.INTEDG0 = 1;
  4176  00006E  D085               	goto	i2l211
  4177  000070                     i2l1519:
  4178                           
  4179                           ;Interrupt.c: 76: {
  4180                           ;Interrupt.c: 77: if (Time_Elapsed > 8500 && Time_Elapsed < 9500)
  4181  000070  0E35               	movlw	53
  4182  000072  5C05               	subwf	_Time_Elapsed,w,c
  4183  000074  0E21               	movlw	33
  4184  000076  5806               	subwfb	_Time_Elapsed+1,w,c
  4185  000078  A0D8               	btfss	status,0,c
  4186  00007A  D009               	goto	i2l1525
  4187  00007C  0E1C               	movlw	28
  4188  00007E  5C05               	subwf	_Time_Elapsed,w,c
  4189  000080  0E25               	movlw	37
  4190  000082  5806               	subwfb	_Time_Elapsed+1,w,c
  4191  000084  B0D8               	btfsc	status,0,c
  4192  000086  D003               	goto	i2l1525
  4193                           
  4194                           ;Interrupt.c: 78: {
  4195                           ;Interrupt.c: 79: Nec_state = 2;
  4196  000088  0E02               	movlw	2
  4197  00008A  6E11               	movwf	_Nec_state,c
  4198                           
  4199                           ;Interrupt.c: 80: }
  4200  00008C  D02A               	goto	i2l1551
  4201  00008E                     i2l1525:
  4202                           
  4203                           ;Interrupt.c: 81: else
  4204                           ;Interrupt.c: 82: {
  4205                           ;Interrupt.c: 83: force_nec_state0();
  4206  00008E  EC13  F004         	call	_force_nec_state0	;wreg free
  4207  000092  D027               	goto	i2l1551
  4208  000094  D026               	goto	i2l1551
  4209                           
  4210                           ;Interrupt.c: 86: return;
  4211                           
  4212                           ;Interrupt.c: 84: }
  4213                           ;Interrupt.c: 85: INTCON2bits.INTEDG0 = 0;
  4214  000096  D071               	goto	i2l211
  4215  000098                     i2l1531:
  4216                           
  4217                           ;Interrupt.c: 90: {
  4218                           ;Interrupt.c: 91: if (Time_Elapsed > 4000 && Time_Elapsed < 5000 )
  4219  000098  0EA1               	movlw	161
  4220  00009A  5C05               	subwf	_Time_Elapsed,w,c
  4221  00009C  0E0F               	movlw	15
  4222  00009E  5806               	subwfb	_Time_Elapsed+1,w,c
  4223  0000A0  A0D8               	btfss	status,0,c
  4224  0000A2  D009               	goto	i2l1537
  4225  0000A4  0E88               	movlw	136
  4226  0000A6  5C05               	subwf	_Time_Elapsed,w,c
  4227  0000A8  0E13               	movlw	19
  4228  0000AA  5806               	subwfb	_Time_Elapsed+1,w,c
  4229  0000AC  B0D8               	btfsc	status,0,c
  4230  0000AE  D003               	goto	i2l1537
  4231  0000B0                     
  4232                           ;Interrupt.c: 92: {
  4233                           ;Interrupt.c: 93: Nec_state = 3;
  4234  0000B0  0E03               	movlw	3
  4235  0000B2  6E11               	movwf	_Nec_state,c
  4236                           
  4237                           ;Interrupt.c: 94: }
  4238  0000B4  D04F               	goto	i2l1569
  4239  0000B6                     i2l1537:
  4240                           
  4241                           ;Interrupt.c: 95: else
  4242                           ;Interrupt.c: 96: {
  4243                           ;Interrupt.c: 97: force_nec_state0();
  4244  0000B6  EC13  F004         	call	_force_nec_state0	;wreg free
  4245  0000BA  D04C               	goto	i2l1569
  4246  0000BC  D04B               	goto	i2l1569
  4247                           
  4248                           ;Interrupt.c: 100: return;
  4249                           
  4250                           ;Interrupt.c: 98: }
  4251                           ;Interrupt.c: 99: INTCON2bits.INTEDG0 = 1;
  4252  0000BE  D05D               	goto	i2l211
  4253  0000C0                     i2l1543:
  4254                           
  4255                           ;Interrupt.c: 104: {
  4256                           ;Interrupt.c: 105: if (Time_Elapsed > 400 && Time_Elapsed < 700)
  4257  0000C0  0E91               	movlw	145
  4258  0000C2  5C05               	subwf	_Time_Elapsed,w,c
  4259  0000C4  0E01               	movlw	1
  4260  0000C6  5806               	subwfb	_Time_Elapsed+1,w,c
  4261  0000C8  A0D8               	btfss	status,0,c
  4262  0000CA  D008               	goto	i2l1549
  4263  0000CC  0EBC               	movlw	188
  4264  0000CE  5C05               	subwf	_Time_Elapsed,w,c
  4265  0000D0  0E02               	movlw	2
  4266  0000D2  5806               	subwfb	_Time_Elapsed+1,w,c
  4267  0000D4  B0D8               	btfsc	status,0,c
  4268  0000D6  D002               	goto	i2l1549
  4269                           
  4270                           ;Interrupt.c: 106: {
  4271                           ;Interrupt.c: 107: Nec_state = 4;
  4272  0000D8  0E04               	movlw	4
  4273  0000DA  D7D7               	goto	L1
  4274  0000DC                     i2l1549:
  4275                           
  4276                           ;Interrupt.c: 109: else
  4277                           ;Interrupt.c: 110: {
  4278                           ;Interrupt.c: 111: force_nec_state0();
  4279  0000DC  EC13  F004         	call	_force_nec_state0	;wreg free
  4280  0000E0  D000               	goto	i2l1551
  4281  0000E2                     i2l1551:
  4282                           
  4283                           ;Interrupt.c: 112: }
  4284                           ;Interrupt.c: 113: INTCON2bits.INTEDG0 = 0;
  4285  0000E2  9CF1               	bcf	intcon2,6,c	;volatile
  4286                           
  4287                           ;Interrupt.c: 114: return;
  4288  0000E4  D04A               	goto	i2l211
  4289  0000E6                     i2l1555:
  4290                           
  4291                           ;Interrupt.c: 118: {
  4292                           ;Interrupt.c: 119: if (Time_Elapsed > 400 && Time_Elapsed < 1800)
  4293  0000E6  0E91               	movlw	145
  4294  0000E8  5C05               	subwf	_Time_Elapsed,w,c
  4295  0000EA  0E01               	movlw	1
  4296  0000EC  5806               	subwfb	_Time_Elapsed+1,w,c
  4297  0000EE  A0D8               	btfss	status,0,c
  4298  0000F0  D02E               	goto	i2l1567
  4299  0000F2  0E08               	movlw	8
  4300  0000F4  5C05               	subwf	_Time_Elapsed,w,c
  4301  0000F6  0E07               	movlw	7
  4302  0000F8  5806               	subwfb	_Time_Elapsed+1,w,c
  4303  0000FA  B0D8               	btfsc	status,0,c
  4304  0000FC  D028               	goto	i2l1567
  4305                           
  4306                           ;Interrupt.c: 120: {
  4307                           ;Interrupt.c: 121: Nec_code = Nec_code << 1;
  4308  0000FE  90D8               	bcf	status,0,c
  4309  000100  3401               	rlcf	_Nec_code,w,c
  4310  000102  6E01               	movwf	_Nec_code,c
  4311  000104  3402               	rlcf	_Nec_code+1,w,c
  4312  000106  6E02               	movwf	_Nec_code+1,c
  4313  000108  3403               	rlcf	_Nec_code+2,w,c
  4314  00010A  6E03               	movwf	_Nec_code+2,c
  4315  00010C  3404               	rlcf	_Nec_code+3,w,c
  4316  00010E  6E04               	movwf	_Nec_code+3,c
  4317                           
  4318                           ;Interrupt.c: 122: if (Time_Elapsed > 1000)
  4319  000110  0EE9               	movlw	233
  4320  000112  5C05               	subwf	_Time_Elapsed,w,c
  4321  000114  0E03               	movlw	3
  4322  000116  5806               	subwfb	_Time_Elapsed+1,w,c
  4323  000118  A0D8               	btfss	status,0,c
  4324  00011A  D00C               	goto	i2l223
  4325                           
  4326                           ;Interrupt.c: 123: {
  4327                           ;Interrupt.c: 124: Nec_code = Nec_code + 1;
  4328  00011C  0E01               	movlw	1
  4329  00011E  2401               	addwf	_Nec_code,w,c
  4330  000120  6E01               	movwf	_Nec_code,c
  4331  000122  0E00               	movlw	0
  4332  000124  2002               	addwfc	_Nec_code+1,w,c
  4333  000126  6E02               	movwf	_Nec_code+1,c
  4334  000128  0E00               	movlw	0
  4335  00012A  2003               	addwfc	_Nec_code+2,w,c
  4336  00012C  6E03               	movwf	_Nec_code+2,c
  4337  00012E  0E00               	movlw	0
  4338  000130  2004               	addwfc	_Nec_code+3,w,c
  4339  000132  6E04               	movwf	_Nec_code+3,c
  4340  000134                     i2l223:
  4341                           
  4342                           ;Interrupt.c: 125: }
  4343                           ;Interrupt.c: 126: bit_count = bit_count + 1;
  4344  000134  2818               	incf	_bit_count,w,c
  4345  000136  6E18               	movwf	_bit_count,c
  4346                           
  4347                           ;Interrupt.c: 127: if (bit_count > 31)
  4348  000138  0E1F               	movlw	31
  4349  00013A  6418               	cpfsgt	_bit_count,c
  4350  00013C  D7B9               	goto	L2
  4351                           
  4352                           ;Interrupt.c: 128: {
  4353                           ;Interrupt.c: 129: nec_ok = 1;
  4354  00013E  0E00               	movlw	0
  4355  000140  6E0A               	movwf	_nec_ok+1,c
  4356  000142  0E01               	movlw	1
  4357  000144  6E09               	movwf	_nec_ok,c
  4358                           
  4359                           ;Interrupt.c: 130: INTCONbits.INT0IE = 0;
  4360  000146  98F2               	bcf	intcon,4,c	;volatile
  4361                           
  4362                           ;Interrupt.c: 131: Nec_state = 0;
  4363  000148  0E00               	movlw	0
  4364  00014A  6E11               	movwf	_Nec_state,c
  4365  00014C  D7B1               	goto	L2
  4366  00014E                     i2l1567:
  4367                           
  4368                           ;Interrupt.c: 135: else
  4369                           ;Interrupt.c: 136: {
  4370                           ;Interrupt.c: 137: force_nec_state0();
  4371  00014E  EC13  F004         	call	_force_nec_state0	;wreg free
  4372  000152  D000               	goto	i2l1569
  4373  000154                     i2l1569:
  4374                           
  4375                           ;Interrupt.c: 138: }
  4376                           ;Interrupt.c: 139: INTCON2bits.INTEDG0 = 1;
  4377  000154  8CF1               	bsf	intcon2,6,c	;volatile
  4378                           
  4379                           ;Interrupt.c: 141: }
  4380                           ;Interrupt.c: 142: }
  4381                           
  4382                           ;Interrupt.c: 140: return;
  4383  000156  D011               	goto	i2l211
  4384  000158                     i2l1575:
  4385  000158  5011               	movf	_Nec_state,w,c
  4386                           
  4387                           ; Switch size 1, requested type "space"
  4388                           ; Number of cases is 5, Range of values is 0 to 4
  4389                           ; switch strategies available:
  4390                           ; Name         Instructions Cycles
  4391                           ; simple_byte           16     9 (average)
  4392                           ;	Chosen strategy is simple_byte
  4393  00015A  0A00               	xorlw	0	; case 0
  4394  00015C  B4D8               	btfsc	status,2,c
  4395  00015E  D772               	goto	i2l1509
  4396  000160  0A01               	xorlw	1	; case 1
  4397  000162  B4D8               	btfsc	status,2,c
  4398  000164  D785               	goto	i2l1519
  4399  000166  0A03               	xorlw	3	; case 2
  4400  000168  B4D8               	btfsc	status,2,c
  4401  00016A  D796               	goto	i2l1531
  4402  00016C  0A01               	xorlw	1	; case 3
  4403  00016E  B4D8               	btfsc	status,2,c
  4404  000170  D7A7               	goto	i2l1543
  4405  000172  0A07               	xorlw	7	; case 4
  4406  000174  B4D8               	btfsc	status,2,c
  4407  000176  D7B7               	goto	i2l1555
  4408  000178  D000               	goto	i2l211
  4409  00017A                     i2l211:
  4410  00017A  0012               	return		;funcret
  4411  00017C                     __end_of_INT0_isr:
  4412                           	opt stack 0
  4413                           pclatu	equ	0xFFB
  4414                           pclath	equ	0xFFA
  4415                           tblptru	equ	0xFF8
  4416                           tblptrh	equ	0xFF7
  4417                           tblptrl	equ	0xFF6
  4418                           tablat	equ	0xFF5
  4419                           prodh	equ	0xFF4
  4420                           prodl	equ	0xFF3
  4421                           intcon	equ	0xFF2
  4422                           intcon2	equ	0xFF1
  4423                           postinc0	equ	0xFEE
  4424                           fsr0h	equ	0xFEA
  4425                           fsr0l	equ	0xFE9
  4426                           wreg	equ	0xFE8
  4427                           postdec1	equ	0xFE5
  4428                           fsr1h	equ	0xFE2
  4429                           fsr1l	equ	0xFE1
  4430                           postinc2	equ	0xFDE
  4431                           postdec2	equ	0xFDD
  4432                           fsr2h	equ	0xFDA
  4433                           fsr2l	equ	0xFD9
  4434                           status	equ	0xFD8
  4435                           
  4436 ;; *************** function _force_nec_state0 *****************
  4437 ;; Defined at:
  4438 ;;		line 42 in file "Interrupt.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;		None
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;		None               void
  4445 ;; Registers used:
  4446 ;;		wreg, status,2
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;Total ram usage:        0 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_INT0_isr
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text32
  4466  000826                     __ptext32:
  4467                           	opt stack 0
  4468  000826                     _force_nec_state0:
  4469                           	opt stack 23
  4470                           
  4471                           ;Interrupt.c: 44: Nec_state=0;
  4472                           
  4473                           ;incstack = 0
  4474  000826  0E00               	movlw	0
  4475  000828  6E11               	movwf	_Nec_state,c
  4476                           
  4477                           ;Interrupt.c: 45: T1CONbits.TMR1ON = 0;
  4478  00082A  90CD               	bcf	4045,0,c	;volatile
  4479  00082C  0012               	return		;funcret
  4480  00082E                     __end_of_force_nec_state0:
  4481                           	opt stack 0
  4482                           pclatu	equ	0xFFB
  4483                           pclath	equ	0xFFA
  4484                           tblptru	equ	0xFF8
  4485                           tblptrh	equ	0xFF7
  4486                           tblptrl	equ	0xFF6
  4487                           tablat	equ	0xFF5
  4488                           prodh	equ	0xFF4
  4489                           prodl	equ	0xFF3
  4490                           intcon	equ	0xFF2
  4491                           intcon2	equ	0xFF1
  4492                           postinc0	equ	0xFEE
  4493                           fsr0h	equ	0xFEA
  4494                           fsr0l	equ	0xFE9
  4495                           wreg	equ	0xFE8
  4496                           postdec1	equ	0xFE5
  4497                           fsr1h	equ	0xFE2
  4498                           fsr1l	equ	0xFE1
  4499                           postinc2	equ	0xFDE
  4500                           postdec2	equ	0xFDD
  4501                           fsr2h	equ	0xFDA
  4502                           fsr2l	equ	0xFD9
  4503                           status	equ	0xFD8
  4504                           pclatu	equ	0xFFB
  4505                           pclath	equ	0xFFA
  4506                           tblptru	equ	0xFF8
  4507                           tblptrh	equ	0xFF7
  4508                           tblptrl	equ	0xFF6
  4509                           tablat	equ	0xFF5
  4510                           prodh	equ	0xFF4
  4511                           prodl	equ	0xFF3
  4512                           intcon	equ	0xFF2
  4513                           intcon2	equ	0xFF1
  4514                           postinc0	equ	0xFEE
  4515                           fsr0h	equ	0xFEA
  4516                           fsr0l	equ	0xFE9
  4517                           wreg	equ	0xFE8
  4518                           postdec1	equ	0xFE5
  4519                           fsr1h	equ	0xFE2
  4520                           fsr1l	equ	0xFE1
  4521                           postinc2	equ	0xFDE
  4522                           postdec2	equ	0xFDD
  4523                           fsr2h	equ	0xFDA
  4524                           fsr2l	equ	0xFD9
  4525                           status	equ	0xFD8
  4526                           
  4527                           	psect	rparam
  4528  0000                     pclatu	equ	0xFFB
  4529                           pclath	equ	0xFFA
  4530                           tblptru	equ	0xFF8
  4531                           tblptrh	equ	0xFF7
  4532                           tblptrl	equ	0xFF6
  4533                           tablat	equ	0xFF5
  4534                           prodh	equ	0xFF4
  4535                           prodl	equ	0xFF3
  4536                           intcon	equ	0xFF2
  4537                           intcon2	equ	0xFF1
  4538                           postinc0	equ	0xFEE
  4539                           fsr0h	equ	0xFEA
  4540                           fsr0l	equ	0xFE9
  4541                           wreg	equ	0xFE8
  4542                           postdec1	equ	0xFE5
  4543                           fsr1h	equ	0xFE2
  4544                           fsr1l	equ	0xFE1
  4545                           postinc2	equ	0xFDE
  4546                           postdec2	equ	0xFDD
  4547                           fsr2h	equ	0xFDA
  4548                           fsr2l	equ	0xFD9
  4549                           status	equ	0xFD8


Data Sizes:
    Strings     43
    Constant    485
    Data        12
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     44     103
    BANK0           128      0      31
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    txt	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    nbr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_1(CODE[43]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    ___awdiv->___wmul
    _Do_Init->_DS1621_Init
    _init_UART->_OpenUSART
    _DS1621_Init->_I2C_Write_Cmd_Write_Data
    _I2C_Write_Cmd_Write_Data->_I2C_Write
    _I2C_Write_Cmd_Only->_I2C_Write
    _DS1621_Read_Temp->_I2C_Read

Critical Paths under _chkisr in COMRAM

    _chkisr->_INT0_isr

Critical Paths under _main in BANK0

    None.

Critical Paths under _chkisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _chkisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _chkisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chkisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chkisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chkisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _chkisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _chkisr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _chkisr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _chkisr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _chkisr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _chkisr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _chkisr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _chkisr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _chkisr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _chkisr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3045
                                             42 COMRAM     2     2      0
                   _DS1621_Read_Temp
                            _Do_Init
                       _Wait_One_Sec
                            ___awdiv
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              23    17      6     987
                                             28 COMRAM    14     8      6
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     265
                                             23 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     268
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     583
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     406
                                             22 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Wait_One_Sec                                         0     0      0       0
                   _Wait_Half_Second
 ---------------------------------------------------------------------------------
 (2) _Wait_Half_Second                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Do_Init                                              0     0      0     760
                        _DS1621_Init
                           _I2C_Init
                     _init_INTERRUPT
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     273
                                             16 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _init_INTERRUPT                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             4     0      4      53
                                             16 COMRAM     4     0      4
                         _i2cHighScl
                         _i2cHighSda
 ---------------------------------------------------------------------------------
 (2) _DS1621_Init                                          1     1      0     434
                                             21 COMRAM     1     1      0
                 _I2C_Write_Cmd_Only
           _I2C_Write_Cmd_Write_Data
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Write_Data                             3     1      2     232
                                             18 COMRAM     3     1      2
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Only                                   2     1      1     157
                                             18 COMRAM     2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS1621_Read_Temp                                     5     3      2     241
                                             19 COMRAM     5     3      2
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            2     2      0      60
                                             16 COMRAM     2     2      0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      90
                                             16 COMRAM     3     3      0
                             _i2cAck
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                            _i2cNack
 ---------------------------------------------------------------------------------
 (3) _i2cNack                                              0     0      0       0
                         _i2cHighScl
                          _i2cLowScl
 ---------------------------------------------------------------------------------
 (3) _i2cAck                                               0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (5) _i2cLowSda                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2cLowScl                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2cHighSda                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2cHighScl                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _chkisr                                              14    14      0       0
                                              2 COMRAM    14    14      0
                           _INT0_isr
                         _TIMER1_isr
 ---------------------------------------------------------------------------------
 (7) _TIMER1_isr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT0_isr                                             2     2      0       0
                                              0 COMRAM     2     2      0
                   _force_nec_state0
 ---------------------------------------------------------------------------------
 (8) _force_nec_state0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1621_Read_Temp
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _Do_Init
     _DS1621_Init
       _I2C_Write_Cmd_Only
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _I2C_Write_Cmd_Write_Data
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
     _I2C_Init
       _i2cHighScl
       _i2cHighSda
     _init_INTERRUPT
     _init_UART
       _OpenUSART
   _Wait_One_Sec
     _Wait_Half_Second
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch

 _chkisr (ROOT)
   _INT0_isr
     _force_nec_state0
   _TIMER1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      1F       5       24.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2C      67       1       81.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      86      34        0.0%
DATA                 0      0      86       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Nov 06 17:15:02 2021

                                _i 001E                 __size_of_I2C_Start 0012  
                      _SSPSTATbits 000FC7                 __size_of_I2C_Write 003E  
                     ___awdiv@sign 004B                ___wmul@multiplicand 0042  
                              l126 0590                                l129 0622  
                              l181 068C                                l502 0736  
                              l511 0440                                l544 02B8  
                              l490 07BC                                l572 0412  
                              l580 06E4                                l573 0414  
                              l574 041E                                l575 0420  
                              l568 03F8                                l577 043A  
                              l773 034E                  ?_Wait_Half_Second 0030  
                              _Cmd 000E                                _day 001A  
             __size_of_I2C_ReStart 0016                                _dow 001B  
                              _nbr 0007                                _txt 000B  
                              wreg 000FE8                 ??_Wait_Half_Second 0040  
                     __CFG_LVP$OFF 000000                       __CFG_WDT$OFF 000000  
                             l1203 0644                               l1108 0540  
                             l1325 0554                               l1335 056A  
                             l1343 057A                               l1191 062C  
                             l1337 0572                               l1329 055C  
                             l1193 0632                               l1185 061A  
                             l1098 04F4                               l1347 0586  
                             l1349 058C                               l2531 04B8  
                             l2461 03F0                               l2453 03DE  
                             l2533 04C2                               l2543 04E8  
                             l2535 04CA                               l2551 050C  
                             l2473 040A                               l2465 03FC  
                             l2457 03E8                               l2553 0516  
                             l2555 051E                               l2821 02E2  
                             l2831 030A                               l2815 02D0  
                             l2559 0534                               l2761 01A4  
                             l2753 0186                               l2827 02F8  
                             l2843 0334                               l2763 01CA  
                             l2829 0302                               l2773 01F4  
                             l2757 0196                               l2847 0344  
                             l2839 0328                               l2791 0240  
                             l2783 0228                               l2775 01F8  
                             l2793 0246                               l2787 022C  
                             l2779 0204                               l2797 0290  
   I2C_Write_Cmd_Write_Data@Device 0044                               l2799 029C  
                             STR_1 FFD4                               u1647 07E4  
                             _RBPU 007F8F                               _TRMT 007D61  
                             _main 043C                               _font FDEF  
                             _hour 001D                   __end_of_I2C_Init 0802  
                 __end_of_I2C_Read 0592                               _year 002F  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             fsr1l 000FE1                               fsr2l 000FD9  
                             _wrap 0067                   __end_of_I2C_Stop 0794  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 0018  
      __size_of_I2C_Write_Cmd_Only 001A                    __end_of_Do_Init 0614  
                  __end_of_i2cNack 080C                       ___param_bank 000010  
                      ?_TIMER1_isr 0030                   __end_of_INT0_isr 017C  
                            ?_main 0030                    __end_of___awdiv 0350  
                            _T0CON 000FD5                    ___awdiv@divisor 0048  
                            _T1CON 000FCD                              _T3CON 000FB1  
                  __end_of___lwdiv 04FE                    __end_of___lwmod 054A  
                            i2l211 017A                              i2l223 0134  
                            i2l199 0392                    ___awdiv@counter 004A  
                            _RCSTA 000FAB                              _TMR0H 000FD7  
                            _TMR1H 000FCF                              _TMR0L 000FD6  
                            _TMR3H 000FB3                              _TMR1L 000FCE  
                            _TMR3L 000FB2                              _SPBRG 000FAF  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                              _TXREG 000FAD  
                            _TXSTA 000FAC                         _Display_D1 005C  
                       _i2cHighSda 081E                         _i2cHighScl 07E0  
                  __end_of_dpowers FFD4                              _font2 FEEE  
                            _found 001C                              _tempC 002D  
                            _tempF 002E                              _month 0020  
                            _putch 07B8                  __end_of_I2C_Start 07A6  
                __end_of_I2C_Write 0652                     __CFG_BOREN$OFF 000000  
                            tablat 000FF5                              status 000FD8  
                ?_DS1621_Read_Temp 0043                 ??_DS1621_Read_Temp 0045  
                  __initialization 0592                       __end_of_main 04A2  
                     __end_of_font FEEE                             ??_main 005A  
                    __activetblptr 000002            __size_of_init_INTERRUPT 0030  
                        I2C_Init@c 0040                          I2C_Read@n 0041  
                           _ADCON1 000FC1                DS1621_Read_Temp@Cmd 0045  
                 ___awdiv@dividend 0046                 __size_of_i2cLowSda 000A  
               __size_of_i2cLowScl 0008                             ?_putch 0030  
                           i2l2071 0388                             i2l1531 0098  
                           i2l1525 008E                             i2l1509 0044  
                           i2l1551 00E2                             i2l1543 00C0  
                           i2l1519 0070                             i2l1537 00B6  
                           i2l1555 00E6                             i2l1549 00DC  
                           i2l1567 014E                             i2l1575 0158  
                           i2l1569 0154                          ??_Do_Init 0046  
                           _OSCCON 000FD3                __size_of_TIMER1_isr 000C  
                           _SPBRGH 000FB0                             _SSPBUF 000FC9  
                        ??_i2cNack 0040                   _force_nec_state0 0826  
                           _Device 000F                             _i2cAck 07A6  
                       _TempSecond 0012                 __size_of_OpenUSART 0070  
                           ___wmul 06BE                          ??___awdiv 004A  
                           _chkisr 0008                          ??___lwdiv 0044  
                        ??___lwmod 004B                             _buffer 0080  
                           _nec_ok 0009                             clear_0 0598  
                           clear_1 05A4                   ___awdiv@quotient 004C  
                           _minute 001F                             _second 0023  
                           _printf 017C                       __pdataCOMRAM 005C  
                        ?_I2C_Init 0040                          ?_I2C_Read 0030  
                        ?_I2C_Stop 0030                       __mediumconst FDEE  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8   __end_of_I2C_Write_Cmd_Write_Data 0706  
                      ?_i2cHighSda 0030                        ?_i2cHighScl 0030  
                           putch@c 0040                         __accesstop 0080  
          __end_of__initialization 05CA                          ?_INT0_isr 0030  
               _setup_alarm_minute 0025                 _setup_alarm_second 0026  
                    ___rparam_used 000001                     __pcstackCOMRAM 0030  
                    __end_of_font2 FFCA                  __end_of_i2cLowSda 0816  
                __end_of_i2cLowScl 081E                      __end_of_putch 07C6  
                       ??_I2C_Init 0044                         ??_I2C_Read 0040  
                     _alarm_minute 0016                       _alarm_second 0017  
                       ??_I2C_Stop 0040                  __end_of_OpenUSART 043C  
                          ??_putch 0040                         __pbssBANK0 0080  
                 _setup_alarm_hour 0024                      ??_DS1621_Init 0045  
               __size_of_init_UART 0014          __size_of_Wait_Half_Second 001A  
                       _alarm_date 0014                         ??_INT0_isr 0030  
                       _alarm_hour 0015                      ?_Wait_One_Sec 0030  
                          ?_i2cAck 0030                 __CFG_CCP2MX$PORTBE 000000  
                   I2C_Read@inByte 0042                            ?___wmul 0040  
              __size_of_i2cHighSda 0008                __size_of_i2cHighScl 000C  
                          ?_chkisr 0030   I2C_Write_Cmd_Write_Data@Data_Out 0043  
                     ??_TIMER1_isr 0030                      ??_I2C_ReStart 0040  
                       I2C_Write@n 0041                            ?_printf 004C  
                   _init_INTERRUPT 068E                            _SSPCON1 000FC6  
                          _SSPSTAT 000FC7                            _Address 000D  
                          _Do_Init 05D4           _I2C_Write_Cmd_Write_Data 06E6  
       __end_of_I2C_Write_Cmd_Only 0758             DS1621_Read_Temp@Device 0047  
                   ??_Wait_One_Sec 0040                            _i2cNack 0802  
               __end_of_TIMER1_isr 07F8                          _I2C_Start 0794  
                        _I2C_Write 0614                    __size_of_i2cAck 0012  
                          __Hparam 0000                            __Lparam 0000  
              __end_of_DS1621_Init 0724                            ___awdiv 02BA  
                  __size_of___wmul 0028                            ___lwdiv 04A2  
                          ___lwmod 04FE                    __size_of_chkisr 03C4  
                          __pcinit 0592                            __ramtop 1000  
                          __ptext0 043C                            __ptext1 017C  
                          __ptext2 07B8                            __ptext3 04FE  
                          __ptext4 04A2                            __ptext5 06BE  
        __size_of_DS1621_Read_Temp 003C                            __ptext6 02BA  
                          __ptext7 07C6                            __ptext8 0724  
                          __ptext9 05D4                    __size_of_printf 013E  
                __end_of_init_UART 0782             __end_of_init_INTERRUPT 06BE  
                        _T0CONbits 000FD5           __end_of_force_nec_state0 082E  
                        _T1CONbits 000FCD                            _dpowers FFCA  
                        _T3CONbits 000FB1                __end_of_I2C_ReStart 076E  
                   __pintcode_body 0350               end_of_initialization 05CA  
                    __Lmediumconst FDEE                            int_func 0350  
                       ?_I2C_Start 0030                         ?_I2C_Write 0030  
                       _tempSecond 0066                          _RCSTAbits 000FAB  
                          printf@c 0059                            printf@f 004C  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
      I2C_Write_Cmd_Write_Data@Cmd 0042                          _PORTCbits 000F82  
                        _PORTDbits 000F83                          _PORTEbits 000F84  
                 I2C_Write@outByte 0040                    ?_init_INTERRUPT 0030  
                       _setup_hour 0028                         _setup_year 002C  
                        _TRISCbits 000F94                       ??_i2cHighSda 0040  
                     ??_i2cHighScl 0040                  __size_of_I2C_Init 000A  
                __size_of_I2C_Read 0048                  __size_of_I2C_Stop 0012  
                 _Wait_Half_Second 0724                        _DS1621_Init 0706  
                        _TXSTAbits 000FAC                  __size_of_INT0_isr 0160  
                   __end_of_i2cAck 07B8           DS1621_Read_Temp@Data_Ret 0046  
               __end_of_i2cHighSda 0826                 __end_of_i2cHighScl 07EC  
                   __end_of___wmul 06E6                      __pidataCOMRAM 07D4  
                   __end_of_chkisr 03CC                        _I2C_ReStart 0758  
                        _Nec_code1 0010                          _i2cLowSda 080C  
                        _i2cLowScl 0816               __end_of_Wait_One_Sec 07D4  
                   __end_of_printf 02BA                          _Nec_state 0011  
              start_initialization 0592                          _OpenUSART 03CC  
                 __CFG_OSC$INTIO67 000000                        ??_I2C_Start 0040  
                      ??_I2C_Write 0040                           ??_i2cAck 0040  
                         ??___wmul 0044                           ??_chkisr 0032  
                         ??_printf 0052                   _DS1621_Read_Temp 0652  
                       ?_i2cLowSda 0030                         ?_i2cLowScl 0030  
                      __pbssCOMRAM 0001         ??_I2C_Write_Cmd_Write_Data 0044  
                         ?_Do_Init 0030                         ?_OpenUSART 0040  
                         ?_i2cNack 0030                   ___lwdiv@dividend 0040  
                      I2C_Read@ack 0040                          _bit_count 0018  
                        __pintcode 0008                      __pmediumconst FDEE  
                         ?___awdiv 0046                          __tft_type 0013  
                         ?___lwdiv 0040                 _I2C_Write_Cmd_Only 073E  
                         ?___lwmod 0047                ?_I2C_Write_Cmd_Only 0042  
                ?_force_nec_state0 0030                           _I2C_Init 07F8  
                         _I2C_Read 054A                           _I2C_Stop 0782  
                        _init_UART 076E                 ??_force_nec_state0 0030  
         I2C_Write_Cmd_Only@Device 0043                   ___lwdiv@quotient 0044  
                   __size_of_putch 000E                     ___wmul@product 0044  
                         _INT0_isr 001C               ??_I2C_Write_Cmd_Only 0043  
                         _PIE1bits 000F9D                           _PIR1bits 000F9E  
                         _PIR2bits 000FA1                   ??_init_INTERRUPT 0040  
            __size_of_Wait_One_Sec 000E                          _setup_day 0027  
                DS1621_Init@Device 0045           __end_of_Wait_Half_Second 073E  
                ___wmul@multiplier 0040                        ??_i2cLowSda 0040  
                      ??_i2cLowScl 0040                         printf@flag 0055  
                       printf@prec 0056                          main@tempC 005B  
                        main@tempF 005A                         ?_init_UART 0030  
                      _INTCON2bits 000FF1                          copy_data0 05BE  
                         _Nec_code 0001                        ??_OpenUSART 0042  
                     ?_DS1621_Init 0030                   __size_of_Do_Init 0040  
                  OpenUSART@config 0042                       _Time_Elapsed 0005  
                 __size_of_i2cNack 000A                       _Wait_One_Sec 07C6  
                         __Hrparam 0000                           __Lrparam 0000  
                 __size_of___awdiv 0096                   __size_of___lwdiv 005C  
                 __size_of___lwmod 004C                       ?_I2C_ReStart 0030  
                  ___lwdiv@divisor 0042                    ___lwdiv@counter 0046  
                         __ptext10 076E                           __ptext11 03CC  
                         __ptext20 0794                           __ptext12 068E  
                         __ptext21 054A                           __ptext13 07F8  
                         __ptext30 07EC                           __ptext22 0802  
                         __ptext14 0706                           __ptext31 001C  
                         __ptext23 07A6                           __ptext15 06E6  
                         __ptext32 0826                           __ptext24 0758  
                         __ptext16 073E                           __ptext25 080C  
                         __ptext17 0652                           __ptext26 0816  
                         __ptext18 0614                           __ptext27 081E  
                         __ptext19 0782                           __ptext28 07E0  
                         _colstart 0019           __end_of_DS1621_Read_Temp 068E  
                    __size_of_main 0066                          printf@val 0057  
                         _rowstart 0022                         _INTCONbits 000FF2  
                   OpenUSART@spbrg 0040                        ??_init_UART 0043  
                         intlevel2 0000                   ___lwmod@dividend 0047  
                         printf@ap 0053                         _TIMER1_isr 07EC  
                  ___lwmod@divisor 0049              I2C_Write_Cmd_Only@Cmd 0042  
                  ___lwmod@counter 004B                       _setup_minute 0029  
                     _setup_second 002B                        _prev_second 0021  
                      _setup_month 002A          __size_of_force_nec_state0 0008  
__size_of_I2C_Write_Cmd_Write_Data 0020               __size_of_DS1621_Init 001E  
        ?_I2C_Write_Cmd_Write_Data 0042  
