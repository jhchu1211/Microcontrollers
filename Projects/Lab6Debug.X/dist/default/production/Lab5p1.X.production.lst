

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Sep 25 01:01:34 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	idataBANK0
    46  002A74                     __pidataBANK0:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _array
    50  002A74  0040               	dw	64
    51  002A76  0079               	dw	121
    52  002A78  0024               	dw	36
    53  002A7A  0030               	dw	48
    54  002A7C  0019               	dw	25
    55  002A7E  0012               	dw	18
    56  002A80  0002               	dw	2
    57  002A82  0078               	dw	120
    58  002A84  0000               	dw	0
    59  002A86  0010               	dw	16
    60                           
    61                           	psect	smallconst
    62  001000                     __psmallconst:
    63                           	opt stack 0
    64  001000  00                 	db	0
    65  001001                     _dpowers:
    66                           	opt stack 0
    67  001001  0001               	dw	1
    68  001003  0000               	dw	0
    69  001005  000A               	dw	10
    70  001007  0000               	dw	0
    71  001009  0064               	dw	100
    72  00100B  0000               	dw	0
    73  00100D  03E8               	dw	1000
    74  00100F  0000               	dw	0
    75  001011  2710               	dw	10000
    76  001013  0000               	dw	0
    77  001015  86A0               	dw	34464
    78  001017  0001               	dw	1
    79  001019  4240               	dw	16960
    80  00101B  000F               	dw	15
    81  00101D  9680               	dw	38528
    82  00101F  0098               	dw	152
    83  001021  E100               	dw	57600
    84  001023  05F5               	dw	1525
    85  001025  CA00               	dw	51712
    86  001027  3B9A               	dw	15258
    87  001029                     __end_of_dpowers:
    88                           	opt stack 0
    89  001029                     __npowers_:
    90                           	opt stack 0
    91  001029  00                 	db	0
    92  00102A  80                 	db	128
    93  00102B  3F                 	db	63
    94  00102C  CD                 	db	205
    95  00102D  CC                 	db	204
    96  00102E  3D                 	db	61
    97  00102F  D7                 	db	215
    98  001030  23                 	db	35
    99  001031  3C                 	db	60
   100  001032  12                 	db	18
   101  001033  83                 	db	131
   102  001034  3A                 	db	58
   103  001035  B7                 	db	183
   104  001036  D1                 	db	209
   105  001037  38                 	db	56
   106  001038  C6                 	db	198
   107  001039  27                 	db	39
   108  00103A  37                 	db	55
   109  00103B  38                 	db	56
   110  00103C  86                 	db	134
   111  00103D  35                 	db	53
   112  00103E  C0                 	db	192
   113  00103F  D6                 	db	214
   114  001040  33                 	db	51
   115  001041  CC                 	db	204
   116  001042  2B                 	db	43
   117  001043  32                 	db	50
   118  001044  70                 	db	112
   119  001045  89                 	db	137
   120  001046  30                 	db	48
   121  001047  E7                 	db	231
   122  001048  DB                 	db	219
   123  001049  2E                 	db	46
   124  00104A  E5                 	db	229
   125  00104B  3C                 	db	60
   126  00104C  1E                 	db	30
   127  00104D  42                 	db	66
   128  00104E  A2                 	db	162
   129  00104F  0D                 	db	13
   130  001050                     __end_of__npowers_:
   131                           	opt stack 0
   132  001050                     __powers_:
   133                           	opt stack 0
   134  001050  00                 	db	0
   135  001051  80                 	db	128
   136  001052  3F                 	db	63
   137  001053  00                 	db	0
   138  001054  20                 	db	32
   139  001055  41                 	db	65
   140  001056  00                 	db	0
   141  001057  C8                 	db	200
   142  001058  42                 	db	66
   143  001059  00                 	db	0
   144  00105A  7A                 	db	122
   145  00105B  44                 	db	68
   146  00105C  40                 	db	64
   147  00105D  1C                 	db	28
   148  00105E  46                 	db	70
   149  00105F  50                 	db	80
   150  001060  C3                 	db	195
   151  001061  47                 	db	71
   152  001062  24                 	db	36
   153  001063  74                 	db	116
   154  001064  49                 	db	73
   155  001065  97                 	db	151
   156  001066  18                 	db	24
   157  001067  4B                 	db	75
   158  001068  BC                 	db	188
   159  001069  BE                 	db	190
   160  00106A  4C                 	db	76
   161  00106B  6B                 	db	107
   162  00106C  6E                 	db	110
   163  00106D  4E                 	db	78
   164  00106E  03                 	db	3
   165  00106F  15                 	db	21
   166  001070  50                 	db	80
   167  001071  79                 	db	121
   168  001072  AD                 	db	173
   169  001073  60                 	db	96
   170  001074  F3                 	db	243
   171  001075  49                 	db	73
   172  001076  71                 	db	113
   173  001077                     __end_of__powers_:
   174                           	opt stack 0
   175  0000                     _ADCON0	set	4034
   176  0000                     _ADCON0bits	set	4034
   177  0000                     _ADCON1	set	4033
   178  0000                     _ADCON2	set	4032
   179  0000                     _ADRESH	set	4036
   180  0000                     _ADRESL	set	4035
   181  0000                     _OSCCON	set	4051
   182  0000                     _PIE1bits	set	3997
   183  0000                     _PIR1bits	set	3998
   184  0000                     _PORTC	set	3970
   185  0000                     _PORTD	set	3971
   186  0000                     _PORTDbits	set	3971
   187  0000                     _PORTE	set	3972
   188  0000                     _RCSTA	set	4011
   189  0000                     _RCSTAbits	set	4011
   190  0000                     _SPBRG	set	4015
   191  0000                     _SPBRGH	set	4016
   192  0000                     _TRISA	set	3986
   193  0000                     _TRISB	set	3987
   194  0000                     _TRISC	set	3988
   195  0000                     _TRISCbits	set	3988
   196  0000                     _TRISD	set	3989
   197  0000                     _TRISE	set	3990
   198  0000                     _TXREG	set	4013
   199  0000                     _TXSTA	set	4012
   200  0000                     _TXSTAbits	set	4012
   201  0000                     _TRMT	set	32097
   202  001077                     STR_1:
   203  001077  76                 	db	118	;'v'
   204  001078  6F                 	db	111	;'o'
   205  001079  6C                 	db	108	;'l'
   206  00107A  74                 	db	116	;'t'
   207  00107B  20                 	db	32
   208  00107C  3D                 	db	61	;'='
   209  00107D  20                 	db	32
   210  00107E  25                 	db	37
   211  00107F  66                 	db	102	;'f'
   212  001080  0D                 	db	13
   213  001081  0A                 	db	10
   214  001082  00                 	db	0
   215                           
   216                           ; #config settings
   217  001083  00                 	db	0	; dummy byte at the end
   218  0000                     
   219                           	psect	cinit
   220  00299A                     __pcinit:
   221                           	opt stack 0
   222  00299A                     start_initialization:
   223                           	opt stack 0
   224  00299A                     __initialization:
   225                           	opt stack 0
   226                           
   227                           ; Clear objects allocated to BANK0 (2 bytes)
   228  00299A  0100               	movlb	0
   229  00299C  6B95               	clrf	(__pbssBANK0+1)& (0+255),b
   230  00299E  6B94               	clrf	__pbssBANK0& (0+255),b
   231                           
   232                           ; Clear objects allocated to COMRAM (2 bytes)
   233  0029A0  6A7F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   234  0029A2  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   235                           
   236                           ; Initialize objects allocated to BANK0 (20 bytes)
   237                           ; load TBLPTR registers with __pidataBANK0
   238  0029A4  0E74               	movlw	low __pidataBANK0
   239  0029A6  6EF6               	movwf	tblptrl,c
   240  0029A8  0E2A               	movlw	high __pidataBANK0
   241  0029AA  6EF7               	movwf	tblptrh,c
   242  0029AC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   243  0029AE  6EF8               	movwf	tblptru,c
   244  0029B0  EE00  F080         	lfsr	0,__pdataBANK0
   245  0029B4  EE10 F014          	lfsr	1,20
   246  0029B8                     copy_data0:
   247  0029B8  0009               	tblrd		*+
   248  0029BA  CFF5 FFEE          	movff	tablat,postinc0
   249  0029BE  50E5               	movf	postdec1,w,c
   250  0029C0  50E1               	movf	fsr1l,w,c
   251  0029C2  E1FA               	bnz	copy_data0
   252  0029C4                     end_of_initialization:
   253                           	opt stack 0
   254  0029C4                     __end_of__initialization:
   255                           	opt stack 0
   256  0029C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   257  0029C6  6EF8               	movwf	tblptru,c
   258  0029C8  0100               	movlb	0
   259  0029CA  EFD2  F010         	goto	_main	;jump to C main() function
   260                           tblptru	equ	0xFF8
   261                           tblptrh	equ	0xFF7
   262                           tblptrl	equ	0xFF6
   263                           tablat	equ	0xFF5
   264                           postinc0	equ	0xFEE
   265                           postdec1	equ	0xFE5
   266                           fsr1l	equ	0xFE1
   267                           
   268                           	psect	bssCOMRAM
   269  00007E                     __pbssCOMRAM:
   270                           	opt stack 0
   271  00007E                     _U:
   272                           	opt stack 0
   273  00007E                     	ds	2
   274                           tblptru	equ	0xFF8
   275                           tblptrh	equ	0xFF7
   276                           tblptrl	equ	0xFF6
   277                           tablat	equ	0xFF5
   278                           postinc0	equ	0xFEE
   279                           postdec1	equ	0xFE5
   280                           fsr1l	equ	0xFE1
   281                           
   282                           	psect	bssBANK0
   283  000094                     __pbssBANK0:
   284                           	opt stack 0
   285  000094                     _L:
   286                           	opt stack 0
   287  000094                     	ds	2
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           postdec1	equ	0xFE5
   294                           fsr1l	equ	0xFE1
   295                           
   296                           	psect	dataBANK0
   297  000080                     __pdataBANK0:
   298                           	opt stack 0
   299  000080                     _array:
   300                           	opt stack 0
   301  000080                     	ds	20
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           tblptrl	equ	0xFF6
   305                           tablat	equ	0xFF5
   306                           postinc0	equ	0xFEE
   307                           postdec1	equ	0xFE5
   308                           fsr1l	equ	0xFE1
   309                           
   310                           	psect	cstackCOMRAM
   311  000001                     __pcstackCOMRAM:
   312                           	opt stack 0
   313  000001                     ?_GET_FULL_ADC:
   314                           	opt stack 0
   315  000001                     ?___ftpack:
   316                           	opt stack 0
   317  000001                     ?___ftneg:
   318                           	opt stack 0
   319  000001                     ?__tdiv_to_l_:
   320                           	opt stack 0
   321  000001                     ?__div_to_l_:
   322                           	opt stack 0
   323  000001                     ?___lldiv:
   324                           	opt stack 0
   325  000001                     ?___llmod:
   326                           	opt stack 0
   327  000001                     putch@c:
   328                           	opt stack 0
   329  000001                     DO_DISPLAY_7SEG_Upper@digit:
   330                           	opt stack 0
   331  000001                     DO_DISPLAY_7SEG_Lower@digit:
   332                           	opt stack 0
   333  000001                     SET_ADC_CH@ADC_CH:
   334                           	opt stack 0
   335  000001                     OpenUSART@spbrg:
   336                           	opt stack 0
   337  000001                     __div_to_l_@f1:
   338                           	opt stack 0
   339  000001                     ___ftpack@arg:
   340                           	opt stack 0
   341  000001                     __tdiv_to_l_@f1:
   342                           	opt stack 0
   343  000001                     ___ftge@ff1:
   344                           	opt stack 0
   345  000001                     ___ftneg@f1:
   346                           	opt stack 0
   347  000001                     ___lldiv@dividend:
   348                           	opt stack 0
   349  000001                     ___llmod@dividend:
   350                           	opt stack 0
   351                           
   352                           ; 4 bytes @ 0x0
   353  000001                     	ds	1
   354  000002                     DO_DISPLAY_7SEG_Upper@PC:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x1
   358  000002                     	ds	1
   359  000003                     ??_GET_FULL_ADC:
   360  000003                     DO_DISPLAY_7SEG_Upper@PE:
   361                           	opt stack 0
   362  000003                     OpenUSART@config:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x2
   366  000003                     	ds	1
   367  000004                     ___ftpack@exp:
   368                           	opt stack 0
   369  000004                     __div_to_l_@f2:
   370                           	opt stack 0
   371  000004                     __tdiv_to_l_@f2:
   372                           	opt stack 0
   373  000004                     ___ftge@ff2:
   374                           	opt stack 0
   375                           
   376                           ; 3 bytes @ 0x3
   377  000004                     	ds	1
   378  000005                     ___ftpack@sign:
   379                           	opt stack 0
   380  000005                     GET_FULL_ADC@result:
   381                           	opt stack 0
   382  000005                     ___lldiv@divisor:
   383                           	opt stack 0
   384  000005                     ___llmod@divisor:
   385                           	opt stack 0
   386                           
   387                           ; 4 bytes @ 0x4
   388  000005                     	ds	1
   389  000006                     ??___ftpack:
   390                           
   391                           ; 0 bytes @ 0x5
   392  000006                     	ds	1
   393  000007                     ??__tdiv_to_l_:
   394  000007                     ??___ftge:
   395  000007                     __div_to_l_@quot:
   396                           	opt stack 0
   397                           
   398                           ; 4 bytes @ 0x6
   399  000007                     	ds	2
   400  000009                     ?___ftmul:
   401                           	opt stack 0
   402  000009                     ?___awtoft:
   403                           	opt stack 0
   404  000009                     ?___lltoft:
   405                           	opt stack 0
   406  000009                     ___llmod@counter:
   407                           	opt stack 0
   408  000009                     ___awtoft@c:
   409                           	opt stack 0
   410  000009                     ___ftmul@f1:
   411                           	opt stack 0
   412  000009                     ___lldiv@quotient:
   413                           	opt stack 0
   414  000009                     ___lltoft@c:
   415                           	opt stack 0
   416                           
   417                           ; 4 bytes @ 0x8
   418  000009                     	ds	1
   419  00000A                     __tdiv_to_l_@quot:
   420                           	opt stack 0
   421                           
   422                           ; 4 bytes @ 0x9
   423  00000A                     	ds	1
   424  00000B                     __div_to_l_@cntr:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0xA
   428  00000B                     	ds	1
   429  00000C                     ___awtoft@sign:
   430                           	opt stack 0
   431  00000C                     __div_to_l_@exp1:
   432                           	opt stack 0
   433  00000C                     ___ftmul@f2:
   434                           	opt stack 0
   435                           
   436                           ; 3 bytes @ 0xB
   437  00000C                     	ds	1
   438  00000D                     ??___lltoft:
   439  00000D                     ?___ftdiv:
   440                           	opt stack 0
   441  00000D                     ___lldiv@counter:
   442                           	opt stack 0
   443  00000D                     ___ftdiv@f1:
   444                           	opt stack 0
   445                           
   446                           ; 3 bytes @ 0xC
   447  00000D                     	ds	1
   448  00000E                     __tdiv_to_l_@cntr:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0xD
   452  00000E                     	ds	1
   453  00000F                     ??___ftmul:
   454  00000F                     __tdiv_to_l_@exp1:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0xE
   458  00000F                     	ds	1
   459  000010                     ___ftdiv@f2:
   460                           	opt stack 0
   461                           
   462                           ; 3 bytes @ 0xF
   463  000010                     	ds	1
   464  000011                     ___lltoft@exp:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x10
   468  000011                     	ds	1
   469  000012                     ___ftmul@exp:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0x11
   473  000012                     	ds	1
   474  000013                     ??___ftdiv:
   475  000013                     ___ftmul@f3_as_product:
   476                           	opt stack 0
   477                           
   478                           ; 3 bytes @ 0x12
   479  000013                     	ds	3
   480  000016                     ___ftdiv@cntr:
   481                           	opt stack 0
   482  000016                     ___ftmul@cntr:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x15
   486  000016                     	ds	1
   487  000017                     ___ftmul@sign:
   488                           	opt stack 0
   489  000017                     ___ftdiv@f3:
   490                           	opt stack 0
   491                           
   492                           ; 3 bytes @ 0x16
   493  000017                     	ds	1
   494  000018                     ?___fttol:
   495                           	opt stack 0
   496  000018                     ___fttol@f1:
   497                           	opt stack 0
   498                           
   499                           ; 3 bytes @ 0x17
   500  000018                     	ds	2
   501  00001A                     ___ftdiv@exp:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x19
   505  00001A                     	ds	1
   506  00001B                     ___ftdiv@sign:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x1A
   510  00001B                     	ds	1
   511  00001C                     ??___fttol:
   512                           
   513                           ; 0 bytes @ 0x1B
   514  00001C                     	ds	5
   515  000021                     ___fttol@sign1:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x20
   519  000021                     	ds	1
   520  000022                     ___fttol@lval:
   521                           	opt stack 0
   522                           
   523                           ; 4 bytes @ 0x21
   524  000022                     	ds	4
   525  000026                     ___fttol@exp1:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0x25
   529  000026                     	ds	1
   530  000027                     ?___awmod:
   531                           	opt stack 0
   532  000027                     ___awmod@dividend:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x26
   536  000027                     	ds	2
   537  000029                     ___awmod@divisor:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x28
   541  000029                     	ds	2
   542  00002B                     ___awmod@counter:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x2A
   546  00002B                     	ds	1
   547  00002C                     ___awmod@sign:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x2B
   551  00002C                     	ds	1
   552  00002D                     ?___awdiv:
   553                           	opt stack 0
   554  00002D                     ___awdiv@dividend:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x2C
   558  00002D                     	ds	2
   559  00002F                     ___awdiv@divisor:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x2E
   563  00002F                     	ds	2
   564  000031                     ___awdiv@counter:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x30
   568  000031                     	ds	1
   569  000032                     ___awdiv@sign:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x31
   573  000032                     	ds	1
   574  000033                     ___awdiv@quotient:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x32
   578  000033                     	ds	2
   579  000035                     ?___wmul:
   580                           	opt stack 0
   581  000035                     ___wmul@multiplier:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x34
   585  000035                     	ds	2
   586  000037                     ___wmul@multiplicand:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x36
   590  000037                     	ds	2
   591  000039                     ___wmul@product:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0x38
   595  000039                     	ds	2
   596  00003B                     ?_fround:
   597                           	opt stack 0
   598  00003B                     ?_scale:
   599                           	opt stack 0
   600                           
   601                           ; 3 bytes @ 0x3A
   602  00003B                     	ds	3
   603  00003E                     _fround$1099:
   604                           	opt stack 0
   605  00003E                     _scale$1100:
   606                           	opt stack 0
   607                           
   608                           ; 3 bytes @ 0x3D
   609  00003E                     	ds	3
   610  000041                     scale@scl:
   611                           	opt stack 0
   612  000041                     _fround$1098:
   613                           	opt stack 0
   614                           
   615                           ; 3 bytes @ 0x40
   616  000041                     	ds	3
   617  000044                     fround@prec:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x43
   621  000044                     	ds	1
   622  000045                     ?___ftadd:
   623                           	opt stack 0
   624  000045                     ___ftadd@f1:
   625                           	opt stack 0
   626                           
   627                           ; 3 bytes @ 0x44
   628  000045                     	ds	3
   629  000048                     ___ftadd@f2:
   630                           	opt stack 0
   631                           
   632                           ; 3 bytes @ 0x47
   633  000048                     	ds	3
   634  00004B                     ??___ftadd:
   635                           
   636                           ; 0 bytes @ 0x4A
   637  00004B                     	ds	3
   638  00004E                     ___ftadd@sign:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x4D
   642  00004E                     	ds	1
   643  00004F                     ___ftadd@exp2:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x4E
   647  00004F                     	ds	1
   648  000050                     ___ftadd@exp1:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x4F
   652  000050                     	ds	1
   653  000051                     ?___ftsub:
   654                           	opt stack 0
   655  000051                     ___ftsub@f1:
   656                           	opt stack 0
   657                           
   658                           ; 3 bytes @ 0x50
   659  000051                     	ds	3
   660  000054                     ___ftsub@f2:
   661                           	opt stack 0
   662                           
   663                           ; 3 bytes @ 0x53
   664  000054                     	ds	3
   665  000057                     ?_printf:
   666                           	opt stack 0
   667  000057                     printf@f:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x56
   671  000057                     	ds	5
   672  00005C                     ??_printf:
   673                           
   674                           ; 0 bytes @ 0x5B
   675  00005C                     	ds	6
   676  000062                     _printf$1101:
   677                           	opt stack 0
   678                           
   679                           ; 3 bytes @ 0x61
   680  000062                     	ds	3
   681  000065                     printf@ap:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x64
   685  000065                     	ds	2
   686  000067                     printf@flag:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x66
   690  000067                     	ds	2
   691  000069                     printf@prec:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x68
   695  000069                     	ds	2
   696  00006B                     printf@val:
   697                           	opt stack 0
   698                           
   699                           ; 4 bytes @ 0x6A
   700  00006B                     	ds	4
   701  00006F                     printf@exp:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x6E
   705  00006F                     	ds	2
   706  000071                     printf@tmpval:
   707                           	opt stack 0
   708                           
   709                           ; 4 bytes @ 0x70
   710  000071                     	ds	4
   711  000075                     printf@fval:
   712                           	opt stack 0
   713                           
   714                           ; 3 bytes @ 0x74
   715  000075                     	ds	3
   716  000078                     printf@c:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x77
   720  000078                     	ds	1
   721  000079                     main@ivolt:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0x78
   725  000079                     	ds	2
   726  00007B                     main@volt:
   727                           	opt stack 0
   728                           
   729                           ; 3 bytes @ 0x7A
   730  00007B                     	ds	3
   731                           tblptru	equ	0xFF8
   732                           tblptrh	equ	0xFF7
   733                           tblptrl	equ	0xFF6
   734                           tablat	equ	0xFF5
   735                           postinc0	equ	0xFEE
   736                           postdec1	equ	0xFE5
   737                           fsr1l	equ	0xFE1
   738                           
   739 ;;
   740 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   741 ;;
   742 ;; *************** function _main *****************
   743 ;; Defined at:
   744 ;;		line 50 in file "Lab5p1.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  volt            3  122[COMRAM] float 
   749 ;;  ivolt           2  120[COMRAM] int 
   750 ;; Return value:  Size  Location     Type
   751 ;;		None               void
   752 ;; Registers used:
   753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;Total ram usage:        5 bytes
   764 ;; Hardware stack levels required when called:    4
   765 ;; This function calls:
   766 ;;		_DO_DISPLAY_7SEG_Lower
   767 ;;		_DO_DISPLAY_7SEG_Upper
   768 ;;		_DO_INIT
   769 ;;		_GET_FULL_ADC
   770 ;;		_SET_ADC_CH
   771 ;;		___awmod
   772 ;;		___awtoft
   773 ;;		___ftdiv
   774 ;;		___ftmul
   775 ;;		___fttol
   776 ;;		_printf
   777 ;; This function is called by:
   778 ;;		Startup code after reset
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text0
   783  0021A4                     __ptext0:
   784                           	opt stack 0
   785  0021A4                     _main:
   786                           	opt stack 27
   787                           
   788                           ;Lab5p1.c: 52: DO_INIT();
   789                           
   790                           ;incstack = 0
   791  0021A4  EC20  F015         	call	_DO_INIT	;wreg free
   792  0021A8  D000               	goto	l2597
   793  0021AA                     l2597:
   794                           
   795                           ;Lab5p1.c: 54: {
   796                           ;Lab5p1.c: 55: SET_ADC_CH(0);
   797  0021AA  0E00               	movlw	0
   798  0021AC  EC5C  F015         	call	_SET_ADC_CH
   799                           
   800                           ;Lab5p1.c: 56: int ivolt = GET_FULL_ADC() * 4;
   801  0021B0  ECFB  F014         	call	_GET_FULL_ADC	;wreg free
   802  0021B4  90D8               	bcf	status,0,c
   803  0021B6  3601               	rlcf	?_GET_FULL_ADC,f,c
   804  0021B8  3602               	rlcf	?_GET_FULL_ADC+1,f,c
   805  0021BA  90D8               	bcf	status,0,c
   806  0021BC  3601               	rlcf	?_GET_FULL_ADC,f,c
   807  0021BE  3602               	rlcf	?_GET_FULL_ADC+1,f,c
   808  0021C0  C001  F079         	movff	?_GET_FULL_ADC,main@ivolt
   809  0021C4  C002  F07A         	movff	?_GET_FULL_ADC+1,main@ivolt+1
   810                           
   811                           ;Lab5p1.c: 57: float volt = ivolt / 1000.0;
   812  0021C8  C079  F009         	movff	main@ivolt,___awtoft@c
   813  0021CC  C07A  F00A         	movff	main@ivolt+1,___awtoft@c+1
   814  0021D0  ECAF  F014         	call	___awtoft	;wreg free
   815  0021D4  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   816  0021D8  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   817  0021DC  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   818  0021E0  0E00               	movlw	0
   819  0021E2  6E10               	movwf	___ftdiv@f2,c
   820  0021E4  0E7A               	movlw	122
   821  0021E6  6E11               	movwf	___ftdiv@f2+1,c
   822  0021E8  0E44               	movlw	68
   823  0021EA  6E12               	movwf	___ftdiv@f2+2,c
   824  0021EC  ECB8  F011         	call	___ftdiv	;wreg free
   825  0021F0  C00D  F07B         	movff	?___ftdiv,main@volt
   826  0021F4  C00E  F07C         	movff	?___ftdiv+1,main@volt+1
   827  0021F8  C00F  F07D         	movff	?___ftdiv+2,main@volt+2
   828                           
   829                           ;Lab5p1.c: 58: printf ("volt = %f\r\n",volt);
   830  0021FC  0E77               	movlw	low STR_1
   831  0021FE  6E57               	movwf	printf@f,c
   832  002200  0E10               	movlw	high STR_1
   833  002202  6E58               	movwf	printf@f+1,c
   834  002204  C07B  F059         	movff	main@volt,?_printf+2
   835  002208  C07C  F05A         	movff	main@volt+1,?_printf+3
   836  00220C  C07D  F05B         	movff	main@volt+2,?_printf+4
   837  002210  EC42  F008         	call	_printf	;wreg free
   838                           
   839                           ;Lab5p1.c: 59: U = ((int)(volt));
   840  002214  C07B  F018         	movff	main@volt,___fttol@f1
   841  002218  C07C  F019         	movff	main@volt+1,___fttol@f1+1
   842  00221C  C07D  F01A         	movff	main@volt+2,___fttol@f1+2
   843  002220  EC45  F011         	call	___fttol	;wreg free
   844  002224  C018  F07E         	movff	?___fttol,_U
   845  002228  C019  F07F         	movff	?___fttol+1,_U+1
   846                           
   847                           ;Lab5p1.c: 60: L = ((int)(volt*10)%10);
   848  00222C  0E00               	movlw	0
   849  00222E  6E0C               	movwf	___ftmul@f2,c
   850  002230  0E20               	movlw	32
   851  002232  6E0D               	movwf	___ftmul@f2+1,c
   852  002234  0E41               	movlw	65
   853  002236  6E0E               	movwf	___ftmul@f2+2,c
   854  002238  C07B  F009         	movff	main@volt,___ftmul@f1
   855  00223C  C07C  F00A         	movff	main@volt+1,___ftmul@f1+1
   856  002240  C07D  F00B         	movff	main@volt+2,___ftmul@f1+2
   857  002244  EC56  F010         	call	___ftmul	;wreg free
   858  002248  C009  F018         	movff	?___ftmul,___fttol@f1
   859  00224C  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
   860  002250  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
   861  002254  EC45  F011         	call	___fttol	;wreg free
   862  002258  C018  F027         	movff	?___fttol,___awmod@dividend
   863  00225C  C019  F028         	movff	?___fttol+1,___awmod@dividend+1
   864  002260  0E00               	movlw	0
   865  002262  6E2A               	movwf	___awmod@divisor+1,c
   866  002264  0E0A               	movlw	10
   867  002266  6E29               	movwf	___awmod@divisor,c
   868  002268  ECAC  F013         	call	___awmod	;wreg free
   869  00226C  C027  F094         	movff	?___awmod,_L
   870  002270  C028  F095         	movff	?___awmod+1,_L+1
   871                           
   872                           ;Lab5p1.c: 61: DO_DISPLAY_7SEG_Upper(U);
   873  002274  507E               	movf	_U,w,c
   874  002276  EC68  F013         	call	_DO_DISPLAY_7SEG_Upper
   875                           
   876                           ;Lab5p1.c: 62: DO_DISPLAY_7SEG_Lower(L);
   877  00227A  0100               	movlb	0	; () banked
   878  00227C  5194               	movf	_L& (0+255),w,b
   879  00227E  EC2E  F015         	call	_DO_DISPLAY_7SEG_Lower
   880                           
   881                           ;Lab5p1.c: 63: PORTDbits.RD7 = 0;
   882  002282  9E83               	bcf	3971,7,c	;volatile
   883  002284  D792               	goto	l2597
   884  002286  EF00  F000         	goto	start
   885  00228A                     __end_of_main:
   886                           	opt stack 0
   887                           tblptru	equ	0xFF8
   888                           tblptrh	equ	0xFF7
   889                           tblptrl	equ	0xFF6
   890                           tablat	equ	0xFF5
   891                           postinc0	equ	0xFEE
   892                           postdec1	equ	0xFE5
   893                           fsr1l	equ	0xFE1
   894                           status	equ	0xFD8
   895                           
   896 ;; *************** function _printf *****************
   897 ;; Defined at:
   898 ;;		line 464 in file "E:\XC8\sources\common\doprnt.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  f               2   86[COMRAM] PTR const unsigned char 
   901 ;;		 -> STR_1(12), 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  tmpval          4  112[COMRAM] struct .
   904 ;;  val             4  106[COMRAM] unsigned long 
   905 ;;  fval            3  116[COMRAM] unsigned long 
   906 ;;  cp              3    0        PTR const unsigned char 
   907 ;;  exp             2  110[COMRAM] int 
   908 ;;  prec            2  104[COMRAM] int 
   909 ;;  flag            2  102[COMRAM] unsigned short 
   910 ;;  ap              2  100[COMRAM] PTR void [1]
   911 ;;		 -> ?_printf(2), 
   912 ;;  len             2    0        unsigned int 
   913 ;;  width           2    0        int 
   914 ;;  c               1  119[COMRAM] char 
   915 ;;  d               1    0        unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  2   86[COMRAM] int 
   918 ;; Registers used:
   919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   925 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;Total ram usage:       34 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; Hardware stack levels required when called:    3
   932 ;; This function calls:
   933 ;;		___awdiv
   934 ;;		___ftadd
   935 ;;		___ftge
   936 ;;		___ftmul
   937 ;;		___ftneg
   938 ;;		___ftsub
   939 ;;		___fttol
   940 ;;		___lldiv
   941 ;;		___llmod
   942 ;;		___lltoft
   943 ;;		___wmul
   944 ;;		__div_to_l_
   945 ;;		__tdiv_to_l_
   946 ;;		_fround
   947 ;;		_putch
   948 ;;		_scale
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text1
   955  001084                     __ptext1:
   956                           	opt stack 0
   957  001084                     _printf:
   958                           	opt stack 27
   959                           
   960                           ;doprnt.c: 466: va_list ap;
   961                           ;doprnt.c: 499: signed char c;
   962                           ;doprnt.c: 501: int width;
   963                           ;doprnt.c: 504: int prec;
   964                           ;doprnt.c: 508: unsigned short flag;
   965                           ;doprnt.c: 515: char d;
   966                           ;doprnt.c: 516: double fval;
   967                           ;doprnt.c: 517: int exp;
   968                           ;doprnt.c: 523: union {
   969                           ;doprnt.c: 524: unsigned long vd;
   970                           ;doprnt.c: 525: double integ;
   971                           ;doprnt.c: 526: } tmpval;
   972                           ;doprnt.c: 528: unsigned long val;
   973                           ;doprnt.c: 529: unsigned len;
   974                           ;doprnt.c: 530: const char * cp;
   975                           ;doprnt.c: 533: *ap = __va_start();
   976                           
   977                           ;incstack = 0
   978  001084  0E59               	movlw	low (?_printf+2)
   979  001086  6E65               	movwf	printf@ap,c
   980  001088  0E00               	movlw	high (?_printf+2)
   981  00108A  6E66               	movwf	printf@ap+1,c
   982                           
   983                           ;doprnt.c: 536: while(c = *f++) {
   984  00108C  D2FF               	goto	l2535
   985  00108E                     l2387:
   986                           
   987                           ;doprnt.c: 538: if(c != '%')
   988  00108E  0E25               	movlw	37
   989  001090  1878               	xorwf	printf@c,w,c
   990  001092  B4D8               	btfsc	status,2,c
   991  001094  D004               	goto	l2391
   992                           
   993                           ;doprnt.c: 540: {
   994                           ;doprnt.c: 541: (putch(c) );
   995  001096  5078               	movf	printf@c,w,c
   996  001098  EC4E  F015         	call	_putch
   997                           
   998                           ;doprnt.c: 542: continue;
   999  00109C  D2F7               	goto	l2535
  1000  00109E                     l2391:
  1001                           
  1002                           ;doprnt.c: 543: }
  1003                           ;doprnt.c: 548: flag = 0;
  1004  00109E  0E00               	movlw	0
  1005  0010A0  6E68               	movwf	printf@flag+1,c
  1006  0010A2  0E00               	movlw	0
  1007  0010A4  6E67               	movwf	printf@flag,c
  1008                           
  1009                           ;doprnt.c: 635: switch(c = *f++) {
  1010  0010A6  D005               	goto	l2397
  1011                           
  1012                           ;doprnt.c: 638: goto alldone;
  1013                           
  1014                           ;doprnt.c: 637: case 0:
  1015  0010A8  D2FF               	goto	l178
  1016  0010AA                     l2393:
  1017                           
  1018                           ;doprnt.c: 663: flag |= 0x400;
  1019  0010AA  8468               	bsf	printf@flag+1,2,c
  1020                           
  1021                           ;doprnt.c: 664: break;
  1022  0010AC  D013               	goto	l2399
  1023                           
  1024                           ;doprnt.c: 813: continue;
  1025                           
  1026                           ;doprnt.c: 802: default:
  1027  0010AE  D2EE               	goto	l2535
  1028                           
  1029                           ;doprnt.c: 822: }
  1030  0010B0  D011               	goto	l2399
  1031  0010B2                     l2397:
  1032  0010B2  C057  FFF6         	movff	printf@f,tblptrl
  1033  0010B6  C058  FFF7         	movff	printf@f+1,tblptrh
  1034  0010BA  4A57               	infsnz	printf@f,f,c
  1035  0010BC  2A58               	incf	printf@f+1,f,c
  1036  0010BE                     	if	0	;tblptru may be non-zero
  1037  0010BE                     	endif
  1038  0010BE                     	if	0	;tblptru may be non-zero
  1039  0010BE                     	endif
  1040  0010BE  0008               	tblrd		*
  1041  0010C0  CFF5 F078          	movff	tablat,printf@c
  1042  0010C4  5078               	movf	printf@c,w,c
  1043                           
  1044                           ; Switch size 1, requested type "space"
  1045                           ; Number of cases is 2, Range of values is 0 to 102
  1046                           ; switch strategies available:
  1047                           ; Name         Instructions Cycles
  1048                           ; simple_byte            7     4 (average)
  1049                           ;	Chosen strategy is simple_byte
  1050  0010C6  0A00               	xorlw	0	; case 0
  1051  0010C8  B4D8               	btfsc	status,2,c
  1052  0010CA  D2EE               	goto	l178
  1053  0010CC  0A66               	xorlw	102	; case 102
  1054  0010CE  B4D8               	btfsc	status,2,c
  1055  0010D0  D7EC               	goto	l2393
  1056  0010D2  D2DC               	goto	l2535
  1057  0010D4                     l2399:
  1058                           
  1059                           ;doprnt.c: 825: if(flag & (0x700)) {
  1060  0010D4  0E07               	movlw	7
  1061  0010D6  1468               	andwf	printf@flag+1,w,c
  1062  0010D8  B4D8               	btfsc	status,2,c
  1063  0010DA  D2CA               	goto	l2531
  1064                           
  1065                           ;doprnt.c: 829: prec = 6;
  1066  0010DC  0E00               	movlw	0
  1067  0010DE  6E6A               	movwf	printf@prec+1,c
  1068  0010E0  0E06               	movlw	6
  1069  0010E2  6E69               	movwf	printf@prec,c
  1070                           
  1071                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1072  0010E4  C065  FFD9         	movff	printf@ap,fsr2l
  1073  0010E8  C066  FFDA         	movff	printf@ap+1,fsr2h
  1074  0010EC  CFDE F075          	movff	postinc2,printf@fval
  1075  0010F0  CFDE F076          	movff	postinc2,printf@fval+1
  1076  0010F4  CFDD F077          	movff	postdec2,printf@fval+2
  1077  0010F8  0E03               	movlw	3
  1078  0010FA  2665               	addwf	printf@ap,f,c
  1079  0010FC  0E00               	movlw	0
  1080  0010FE  2266               	addwfc	printf@ap+1,f,c
  1081                           
  1082                           ;doprnt.c: 831: if(fval < 0.0) {
  1083  001100  AE77               	btfss	printf@fval+2,7,c
  1084  001102  D011               	goto	l2413
  1085                           
  1086                           ;doprnt.c: 832: fval = -fval;
  1087  001104  C075  F001         	movff	printf@fval,___ftneg@f1
  1088  001108  C076  F002         	movff	printf@fval+1,___ftneg@f1+1
  1089  00110C  C077  F003         	movff	printf@fval+2,___ftneg@f1+2
  1090  001110  EC0E  F015         	call	___ftneg	;wreg free
  1091  001114  C001  F075         	movff	?___ftneg,printf@fval
  1092  001118  C002  F076         	movff	?___ftneg+1,printf@fval+1
  1093  00111C  C003  F077         	movff	?___ftneg+2,printf@fval+2
  1094                           
  1095                           ;doprnt.c: 833: flag |= 0x03;
  1096  001120  0E03               	movlw	3
  1097  001122  1267               	iorwf	printf@flag,f,c
  1098  001124  D000               	goto	l2413
  1099  001126                     l2413:
  1100                           
  1101                           ;doprnt.c: 834: }
  1102                           ;doprnt.c: 835: exp = 0;
  1103  001126  0E00               	movlw	0
  1104  001128  6E70               	movwf	printf@exp+1,c
  1105  00112A  0E00               	movlw	0
  1106  00112C  6E6F               	movwf	printf@exp,c
  1107                           
  1108                           ;doprnt.c: 836: if( fval!=0) {
  1109  00112E  5075               	movf	printf@fval,w,c
  1110  001130  1076               	iorwf	printf@fval+1,w,c
  1111  001132  1077               	iorwf	printf@fval+2,w,c
  1112  001134  B4D8               	btfsc	status,2,c
  1113  001136  D085               	goto	l2441
  1114                           
  1115                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1116  001138  0E82               	movlw	130
  1117  00113A  6E5C               	movwf	??_printf& (0+255),c
  1118  00113C  0EFF               	movlw	255
  1119  00113E  6E5D               	movwf	(??_printf+1)& (0+255),c
  1120  001140  C075  F05E         	movff	printf@fval,??_printf+2
  1121  001144  C076  F05F         	movff	printf@fval+1,??_printf+3
  1122  001148  C077  F060         	movff	printf@fval+2,??_printf+4
  1123  00114C  C078  F061         	movff	printf@fval+3,??_printf+5
  1124  001150  0E10               	movlw	16
  1125  001152  D005               	goto	u2570
  1126  001154                     u2575:
  1127  001154  90D8               	bcf	status,0,c
  1128  001156  3261               	rrcf	??_printf+5,f,c
  1129  001158  3260               	rrcf	??_printf+4,f,c
  1130  00115A  325F               	rrcf	??_printf+3,f,c
  1131  00115C  325E               	rrcf	??_printf+2,f,c
  1132  00115E                     u2570:
  1133  00115E  2EE8               	decfsz	wreg,f,c
  1134  001160  D7F9               	goto	u2575
  1135  001162  505E               	movf	??_printf+2,w,c
  1136  001164  245C               	addwf	??_printf,w,c
  1137  001166  6E6F               	movwf	printf@exp,c
  1138  001168  0E00               	movlw	0
  1139  00116A  205D               	addwfc	??_printf+1,w,c
  1140  00116C  6E70               	movwf	printf@exp+1,c
  1141                           
  1142                           ;doprnt.c: 838: exp--;
  1143  00116E  066F               	decf	printf@exp,f,c
  1144  001170  A0D8               	btfss	status,0,c
  1145  001172  0670               	decf	printf@exp+1,f,c
  1146                           
  1147                           ;doprnt.c: 839: exp *= 3;
  1148  001174  C06F  F035         	movff	printf@exp,___wmul@multiplier
  1149  001178  C070  F036         	movff	printf@exp+1,___wmul@multiplier+1
  1150  00117C  0E00               	movlw	0
  1151  00117E  6E38               	movwf	___wmul@multiplicand+1,c
  1152  001180  0E03               	movlw	3
  1153  001182  6E37               	movwf	___wmul@multiplicand,c
  1154  001184  ECE7  F014         	call	___wmul	;wreg free
  1155  001188  C035  F06F         	movff	?___wmul,printf@exp
  1156  00118C  C036  F070         	movff	?___wmul+1,printf@exp+1
  1157                           
  1158                           ;doprnt.c: 840: exp /= 10;
  1159  001190  C06F  F02D         	movff	printf@exp,___awdiv@dividend
  1160  001194  C070  F02E         	movff	printf@exp+1,___awdiv@dividend+1
  1161  001198  0E00               	movlw	0
  1162  00119A  6E30               	movwf	___awdiv@divisor+1,c
  1163  00119C  0E0A               	movlw	10
  1164  00119E  6E2F               	movwf	___awdiv@divisor,c
  1165  0011A0  EC8C  F012         	call	___awdiv	;wreg free
  1166  0011A4  C02D  F06F         	movff	?___awdiv,printf@exp
  1167  0011A8  C02E  F070         	movff	?___awdiv+1,printf@exp+1
  1168                           
  1169                           ;doprnt.c: 841: if(exp < 0)
  1170  0011AC  AE70               	btfss	printf@exp+1,7,c
  1171  0011AE  D004               	goto	l2429
  1172                           
  1173                           ;doprnt.c: 842: exp--;
  1174  0011B0  066F               	decf	printf@exp,f,c
  1175  0011B2  A0D8               	btfss	status,0,c
  1176  0011B4  0670               	decf	printf@exp+1,f,c
  1177  0011B6  D000               	goto	l2429
  1178  0011B8                     l2429:
  1179                           
  1180                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1181  0011B8  506F               	movf	printf@exp,w,c
  1182  0011BA  0800               	sublw	0
  1183  0011BC  EC55  F00B         	call	_scale
  1184  0011C0  C03B  F071         	movff	?_scale,printf@tmpval
  1185  0011C4  C03C  F072         	movff	?_scale+1,printf@tmpval+1
  1186  0011C8  C03D  F073         	movff	?_scale+2,printf@tmpval+2
  1187                           
  1188                           ;doprnt.c: 847: tmpval.integ *= fval;
  1189  0011CC  C071  F009         	movff	printf@tmpval,___ftmul@f1
  1190  0011D0  C072  F00A         	movff	printf@tmpval+1,___ftmul@f1+1
  1191  0011D4  C073  F00B         	movff	printf@tmpval+2,___ftmul@f1+2
  1192  0011D8  C075  F00C         	movff	printf@fval,___ftmul@f2
  1193  0011DC  C076  F00D         	movff	printf@fval+1,___ftmul@f2+1
  1194  0011E0  C077  F00E         	movff	printf@fval+2,___ftmul@f2+2
  1195  0011E4  EC56  F010         	call	___ftmul	;wreg free
  1196  0011E8  C009  F071         	movff	?___ftmul,printf@tmpval
  1197  0011EC  C00A  F072         	movff	?___ftmul+1,printf@tmpval+1
  1198  0011F0  C00B  F073         	movff	?___ftmul+2,printf@tmpval+2
  1199                           
  1200                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1201  0011F4  C071  F001         	movff	printf@tmpval,___ftge@ff1
  1202  0011F8  C072  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1203  0011FC  C073  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1204  001200  0E00               	movlw	0
  1205  001202  6E04               	movwf	___ftge@ff2,c
  1206  001204  0E80               	movlw	128
  1207  001206  6E05               	movwf	___ftge@ff2+1,c
  1208  001208  0E3F               	movlw	63
  1209  00120A  6E06               	movwf	___ftge@ff2+2,c
  1210  00120C  ECD7  F012         	call	___ftge	;wreg free
  1211  001210  B0D8               	btfsc	status,0,c
  1212  001212  D004               	goto	l2437
  1213                           
  1214                           ;doprnt.c: 849: exp--;
  1215  001214  066F               	decf	printf@exp,f,c
  1216  001216  A0D8               	btfss	status,0,c
  1217  001218  0670               	decf	printf@exp+1,f,c
  1218  00121A  D013               	goto	l2441
  1219  00121C                     l2437:
  1220                           
  1221                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1222  00121C  C071  F001         	movff	printf@tmpval,___ftge@ff1
  1223  001220  C072  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1224  001224  C073  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1225  001228  0E00               	movlw	0
  1226  00122A  6E04               	movwf	___ftge@ff2,c
  1227  00122C  0E20               	movlw	32
  1228  00122E  6E05               	movwf	___ftge@ff2+1,c
  1229  001230  0E41               	movlw	65
  1230  001232  6E06               	movwf	___ftge@ff2+2,c
  1231  001234  ECD7  F012         	call	___ftge	;wreg free
  1232  001238  A0D8               	btfss	status,0,c
  1233  00123A  D003               	goto	l2441
  1234                           
  1235                           ;doprnt.c: 851: exp++;
  1236  00123C  4A6F               	infsnz	printf@exp,f,c
  1237  00123E  2A70               	incf	printf@exp+1,f,c
  1238  001240  D000               	goto	l2441
  1239  001242                     l2441:
  1240                           
  1241                           ;doprnt.c: 852: }
  1242                           ;doprnt.c: 1112: if(prec <= 12)
  1243  001242  BE6A               	btfsc	printf@prec+1,7,c
  1244  001244  D006               	goto	l2443
  1245  001246  506A               	movf	printf@prec+1,w,c
  1246  001248  E11C               	bnz	l2445
  1247  00124A  0E0D               	movlw	13
  1248  00124C  5C69               	subwf	printf@prec,w,c
  1249  00124E  B0D8               	btfsc	status,0,c
  1250  001250  D018               	goto	l2445
  1251  001252                     l2443:
  1252                           
  1253                           ;doprnt.c: 1113: fval += fround(prec);
  1254  001252  C075  F045         	movff	printf@fval,___ftadd@f1
  1255  001256  C076  F046         	movff	printf@fval+1,___ftadd@f1+1
  1256  00125A  C077  F047         	movff	printf@fval+2,___ftadd@f1+2
  1257  00125E  5069               	movf	printf@prec,w,c
  1258  001260  EC45  F00D         	call	_fround
  1259  001264  C03B  F048         	movff	?_fround,___ftadd@f2
  1260  001268  C03C  F049         	movff	?_fround+1,___ftadd@f2+1
  1261  00126C  C03D  F04A         	movff	?_fround+2,___ftadd@f2+2
  1262  001270  EC67  F00E         	call	___ftadd	;wreg free
  1263  001274  C045  F075         	movff	?___ftadd,printf@fval
  1264  001278  C046  F076         	movff	?___ftadd+1,printf@fval+1
  1265  00127C  C047  F077         	movff	?___ftadd+2,printf@fval+2
  1266  001280  D000               	goto	l2445
  1267  001282                     l2445:
  1268                           
  1269                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1270  001282  BE70               	btfsc	printf@exp+1,7,c
  1271  001284  D006               	goto	l2447
  1272  001286  5070               	movf	printf@exp+1,w,c
  1273  001288  E120               	bnz	l2453
  1274  00128A  0E0A               	movlw	10
  1275  00128C  5C6F               	subwf	printf@exp,w,c
  1276  00128E  B0D8               	btfsc	status,0,c
  1277  001290  D01C               	goto	l2453
  1278  001292                     l2447:
  1279  001292  5075               	movf	printf@fval,w,c
  1280  001294  1076               	iorwf	printf@fval+1,w,c
  1281  001296  1077               	iorwf	printf@fval+2,w,c
  1282  001298  B4D8               	btfsc	status,2,c
  1283  00129A  D06D               	goto	l2467
  1284  00129C  C075  F018         	movff	printf@fval,___fttol@f1
  1285  0012A0  C076  F019         	movff	printf@fval+1,___fttol@f1+1
  1286  0012A4  C077  F01A         	movff	printf@fval+2,___fttol@f1+2
  1287  0012A8  EC45  F011         	call	___fttol	;wreg free
  1288  0012AC  5018               	movf	?___fttol,w,c
  1289  0012AE  1019               	iorwf	?___fttol+1,w,c
  1290  0012B0  101A               	iorwf	?___fttol+2,w,c
  1291  0012B2  101B               	iorwf	?___fttol+3,w,c
  1292  0012B4  B4D8               	btfsc	status,2,c
  1293  0012B6  BE70               	btfsc	printf@exp+1,7,c
  1294  0012B8  D05E               	goto	l2467
  1295  0012BA  5070               	movf	printf@exp+1,w,c
  1296  0012BC  E106               	bnz	l2453
  1297  0012BE  0E02               	movlw	2
  1298  0012C0  5C6F               	subwf	printf@exp,w,c
  1299  0012C2  B0D8               	btfsc	status,0,c
  1300  0012C4  D002               	goto	l2453
  1301  0012C6  D057               	goto	l2467
  1302  0012C8  D000               	goto	l2453
  1303  0012CA                     l2453:
  1304                           
  1305                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1306  0012CA  C071  F001         	movff	printf@tmpval,___ftge@ff1
  1307  0012CE  C072  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1308  0012D2  C073  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1309  0012D6  0E70               	movlw	112
  1310  0012D8  6E04               	movwf	___ftge@ff2,c
  1311  0012DA  0E89               	movlw	137
  1312  0012DC  6E05               	movwf	___ftge@ff2+1,c
  1313  0012DE  0E40               	movlw	64
  1314  0012E0  6E06               	movwf	___ftge@ff2+2,c
  1315  0012E2  ECD7  F012         	call	___ftge	;wreg free
  1316  0012E6  B0D8               	btfsc	status,0,c
  1317  0012E8  D002               	goto	l2457
  1318                           
  1319                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1320  0012EA  0EF7               	movlw	247
  1321  0012EC  D001               	goto	L1
  1322  0012EE                     l2457:
  1323                           
  1324                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1325  0012EE  0EF8               	movlw	248
  1326  0012F0                     L1:
  1327  0012F0  266F               	addwf	printf@exp,f,c
  1328  0012F2  0EFF               	movlw	255
  1329  0012F4  2270               	addwfc	printf@exp+1,f,c
  1330  0012F6  D000               	goto	l2459
  1331  0012F8                     l2459:
  1332                           
  1333                           ;doprnt.c: 1124: }
  1334                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1335  0012F8  506F               	movf	printf@exp,w,c
  1336  0012FA  EC55  F00B         	call	_scale
  1337  0012FE  C03B  F071         	movff	?_scale,printf@tmpval
  1338  001302  C03C  F072         	movff	?_scale+1,printf@tmpval+1
  1339  001306  C03D  F073         	movff	?_scale+2,printf@tmpval+2
  1340                           
  1341                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1342  00130A  D017               	goto	l2463
  1343  00130C  C075  F001         	movff	printf@fval,__div_to_l_@f1
  1344  001310  C076  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1345  001314  C077  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1346  001318  C071  F004         	movff	printf@tmpval,__div_to_l_@f2
  1347  00131C  C072  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1348  001320  C073  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1349  001324  ECD1  F00F         	call	__div_to_l_	;wreg free
  1350  001328  C001  F06B         	movff	?__div_to_l_,printf@val
  1351  00132C  C002  F06C         	movff	?__div_to_l_+1,printf@val+1
  1352  001330  C003  F06D         	movff	?__div_to_l_+2,printf@val+2
  1353  001334  C004  F06E         	movff	?__div_to_l_+3,printf@val+3
  1354  001338  D017               	goto	l2465
  1355  00133A                     l2463:
  1356  00133A  C075  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1357  00133E  C076  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1358  001342  C077  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1359  001346  C071  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1360  00134A  C072  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1361  00134E  C073  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1362  001352  EC49  F00F         	call	__tdiv_to_l_	;wreg free
  1363  001356  C001  F06B         	movff	?__tdiv_to_l_,printf@val
  1364  00135A  C002  F06C         	movff	?__tdiv_to_l_+1,printf@val+1
  1365  00135E  C003  F06D         	movff	?__tdiv_to_l_+2,printf@val+2
  1366  001362  C004  F06E         	movff	?__tdiv_to_l_+3,printf@val+3
  1367  001366  D000               	goto	l2465
  1368  001368                     l2465:
  1369                           
  1370                           ;doprnt.c: 1129: fval = 0.0;
  1371  001368  0E00               	movlw	0
  1372  00136A  6E75               	movwf	printf@fval,c
  1373  00136C  0E00               	movlw	0
  1374  00136E  6E76               	movwf	printf@fval+1,c
  1375  001370  0E00               	movlw	0
  1376  001372  6E77               	movwf	printf@fval+2,c
  1377                           
  1378                           ;doprnt.c: 1130: } else {
  1379  001374  D033               	goto	l2471
  1380  001376                     l2467:
  1381                           
  1382                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1383  001376  C075  F018         	movff	printf@fval,___fttol@f1
  1384  00137A  C076  F019         	movff	printf@fval+1,___fttol@f1+1
  1385  00137E  C077  F01A         	movff	printf@fval+2,___fttol@f1+2
  1386  001382  EC45  F011         	call	___fttol	;wreg free
  1387  001386  C018  F06B         	movff	?___fttol,printf@val
  1388  00138A  C019  F06C         	movff	?___fttol+1,printf@val+1
  1389  00138E  C01A  F06D         	movff	?___fttol+2,printf@val+2
  1390  001392  C01B  F06E         	movff	?___fttol+3,printf@val+3
  1391                           
  1392                           ;doprnt.c: 1132: fval -= (double)val;
  1393  001396  C075  F051         	movff	printf@fval,___ftsub@f1
  1394  00139A  C076  F052         	movff	printf@fval+1,___ftsub@f1+1
  1395  00139E  C077  F053         	movff	printf@fval+2,___ftsub@f1+2
  1396  0013A2  C06B  F009         	movff	printf@val,___lltoft@c
  1397  0013A6  C06C  F00A         	movff	printf@val+1,___lltoft@c+1
  1398  0013AA  C06D  F00B         	movff	printf@val+2,___lltoft@c+2
  1399  0013AE  C06E  F00C         	movff	printf@val+3,___lltoft@c+3
  1400  0013B2  EC5D  F014         	call	___lltoft	;wreg free
  1401  0013B6  C009  F054         	movff	?___lltoft,___ftsub@f2
  1402  0013BA  C00A  F055         	movff	?___lltoft+1,___ftsub@f2+1
  1403  0013BE  C00B  F056         	movff	?___lltoft+2,___ftsub@f2+2
  1404  0013C2  EC8D  F014         	call	___ftsub	;wreg free
  1405  0013C6  C051  F075         	movff	?___ftsub,printf@fval
  1406  0013CA  C052  F076         	movff	?___ftsub+1,printf@fval+1
  1407  0013CE  C053  F077         	movff	?___ftsub+2,printf@fval+2
  1408                           
  1409                           ;doprnt.c: 1133: exp = 0;
  1410  0013D2  0E00               	movlw	0
  1411  0013D4  6E70               	movwf	printf@exp+1,c
  1412  0013D6  0E00               	movlw	0
  1413  0013D8  6E6F               	movwf	printf@exp,c
  1414  0013DA  D000               	goto	l2471
  1415  0013DC                     l2471:
  1416                           
  1417                           ;doprnt.c: 1134: }
  1418                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1419  0013DC  0E01               	movlw	1
  1420  0013DE  6E78               	movwf	printf@c,c
  1421  0013E0                     l2473:
  1422  0013E0  0E0A               	movlw	10
  1423  0013E2  1878               	xorwf	printf@c,w,c
  1424  0013E4  B4D8               	btfsc	status,2,c
  1425  0013E6  D01C               	goto	l2485
  1426  0013E8  D001               	goto	l2477
  1427  0013EA  D01A               	goto	l2485
  1428  0013EC                     l2477:
  1429                           
  1430                           ;doprnt.c: 1137: if(val < dpowers[c])
  1431  0013EC  5078               	movf	printf@c,w,c
  1432  0013EE  0D04               	mullw	4
  1433  0013F0  0E01               	movlw	low _dpowers
  1434  0013F2  24F3               	addwf	prodl,w,c
  1435  0013F4  6EF6               	movwf	tblptrl,c
  1436  0013F6  0E10               	movlw	high _dpowers
  1437  0013F8  20F4               	addwfc	prodh,w,c
  1438  0013FA  6EF7               	movwf	tblptrh,c
  1439  0013FC                     	if	0	;There are less than 3 active tblptr bytes
  1440  0013FC                     	endif
  1441  0013FC  0009               	tblrd		*+
  1442  0013FE  50F5               	movf	tablat,w,c
  1443  001400  5C6B               	subwf	printf@val,w,c
  1444  001402  0009               	tblrd		*+
  1445  001404  50F5               	movf	tablat,w,c
  1446  001406  586C               	subwfb	printf@val+1,w,c
  1447  001408  0009               	tblrd		*+
  1448  00140A  50F5               	movf	tablat,w,c
  1449  00140C  586D               	subwfb	printf@val+2,w,c
  1450  00140E  0009               	tblrd		*+
  1451  001410  50F5               	movf	tablat,w,c
  1452  001412  586E               	subwfb	printf@val+3,w,c
  1453  001414  A0D8               	btfss	status,0,c
  1454  001416  D004               	goto	l2485
  1455  001418  D001               	goto	l2481
  1456                           
  1457                           ;doprnt.c: 1138: break;
  1458  00141A  D002               	goto	l2485
  1459  00141C                     l2481:
  1460  00141C  2A78               	incf	printf@c,f,c
  1461  00141E  D7E0               	goto	l2473
  1462  001420                     l2485:
  1463                           
  1464                           ;doprnt.c: 1175: {
  1465                           ;doprnt.c: 1188: if(flag & 0x03)
  1466  001420  0E03               	movlw	3
  1467  001422  1467               	andwf	printf@flag,w,c
  1468  001424  6E5C               	movwf	??_printf& (0+255),c
  1469  001426  0E00               	movlw	0
  1470  001428  1468               	andwf	printf@flag+1,w,c
  1471  00142A  6E5D               	movwf	(??_printf+1)& (0+255),c
  1472  00142C  505C               	movf	??_printf,w,c
  1473  00142E  105D               	iorwf	??_printf+1,w,c
  1474  001430  B4D8               	btfsc	status,2,c
  1475  001432  D049               	goto	l2495
  1476                           
  1477                           ;doprnt.c: 1190: (putch('-') );
  1478  001434  0E2D               	movlw	45
  1479  001436  EC4E  F015         	call	_putch
  1480                           
  1481                           ;doprnt.c: 1195: }
  1482                           ;doprnt.c: 1196: while(c--) {
  1483  00143A  D045               	goto	l2495
  1484  00143C                     l2489:
  1485                           
  1486                           ;doprnt.c: 1200: {
  1487                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1488  00143C  C06B  F001         	movff	printf@val,___lldiv@dividend
  1489  001440  C06C  F002         	movff	printf@val+1,___lldiv@dividend+1
  1490  001444  C06D  F003         	movff	printf@val+2,___lldiv@dividend+2
  1491  001448  C06E  F004         	movff	printf@val+3,___lldiv@dividend+3
  1492  00144C  5078               	movf	printf@c,w,c
  1493  00144E  0D04               	mullw	4
  1494  001450  0E01               	movlw	low _dpowers
  1495  001452  24F3               	addwf	prodl,w,c
  1496  001454  6EF6               	movwf	tblptrl,c
  1497  001456  0E10               	movlw	high _dpowers
  1498  001458  20F4               	addwfc	prodh,w,c
  1499  00145A  6EF7               	movwf	tblptrh,c
  1500  00145C                     	if	0	;There are less than 3 active tblptr bytes
  1501  00145C                     	endif
  1502  00145C  0009               	tblrd		*+
  1503  00145E  CFF5 F005          	movff	tablat,___lldiv@divisor
  1504  001462  0009               	tblrd		*+
  1505  001464  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1506  001468  0009               	tblrd		*+
  1507  00146A  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1508  00146E  000A               	tblrd		*-
  1509  001470  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1510  001474  EC22  F013         	call	___lldiv	;wreg free
  1511  001478  C001  F071         	movff	?___lldiv,printf@tmpval
  1512  00147C  C002  F072         	movff	?___lldiv+1,printf@tmpval+1
  1513  001480  C003  F073         	movff	?___lldiv+2,printf@tmpval+2
  1514  001484  C004  F074         	movff	?___lldiv+3,printf@tmpval+3
  1515                           
  1516                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1517  001488  C071  F001         	movff	printf@tmpval,___llmod@dividend
  1518  00148C  C072  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1519  001490  C073  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1520  001494  C074  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1521  001498  0E0A               	movlw	10
  1522  00149A  6E05               	movwf	___llmod@divisor,c
  1523  00149C  0E00               	movlw	0
  1524  00149E  6E06               	movwf	___llmod@divisor+1,c
  1525  0014A0  0E00               	movlw	0
  1526  0014A2  6E07               	movwf	___llmod@divisor+2,c
  1527  0014A4  0E00               	movlw	0
  1528  0014A6  6E08               	movwf	___llmod@divisor+3,c
  1529  0014A8  ECED  F013         	call	___llmod	;wreg free
  1530  0014AC  C001  F071         	movff	?___llmod,printf@tmpval
  1531  0014B0  C002  F072         	movff	?___llmod+1,printf@tmpval+1
  1532  0014B4  C003  F073         	movff	?___llmod+2,printf@tmpval+2
  1533  0014B8  C004  F074         	movff	?___llmod+3,printf@tmpval+3
  1534                           
  1535                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1536  0014BC  5071               	movf	printf@tmpval,w,c
  1537  0014BE  0F30               	addlw	48
  1538  0014C0  EC4E  F015         	call	_putch
  1539  0014C4  D000               	goto	l2495
  1540  0014C6                     l2495:
  1541  0014C6  0678               	decf	printf@c,f,c
  1542  0014C8  2878               	incf	printf@c,w,c
  1543  0014CA  B4D8               	btfsc	status,2,c
  1544  0014CC  D009               	goto	l2501
  1545  0014CE  D7B6               	goto	l2489
  1546                           
  1547                           ;doprnt.c: 1204: }
  1548                           ;doprnt.c: 1206: }
  1549                           ;doprnt.c: 1207: while(exp > 0) {
  1550  0014D0  D007               	goto	l2501
  1551  0014D2                     l2497:
  1552                           
  1553                           ;doprnt.c: 1208: (putch('0') );
  1554  0014D2  0E30               	movlw	48
  1555  0014D4  EC4E  F015         	call	_putch
  1556                           
  1557                           ;doprnt.c: 1209: exp--;
  1558  0014D8  066F               	decf	printf@exp,f,c
  1559  0014DA  A0D8               	btfss	status,0,c
  1560  0014DC  0670               	decf	printf@exp+1,f,c
  1561  0014DE  D000               	goto	l2501
  1562  0014E0                     l2501:
  1563  0014E0  BE70               	btfsc	printf@exp+1,7,c
  1564  0014E2  D005               	goto	l2503
  1565  0014E4  5070               	movf	printf@exp+1,w,c
  1566  0014E6  E1F5               	bnz	l2497
  1567  0014E8  046F               	decf	printf@exp,w,c
  1568  0014EA  B0D8               	btfsc	status,0,c
  1569  0014EC  D7F2               	goto	l2497
  1570  0014EE                     l2503:
  1571                           
  1572                           ;doprnt.c: 1210: }
  1573                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1574  0014EE  BE6A               	btfsc	printf@prec+1,7,c
  1575  0014F0  D009               	goto	l167
  1576  0014F2  506A               	movf	printf@prec+1,w,c
  1577  0014F4  E104               	bnz	u2730
  1578  0014F6  0E09               	movlw	9
  1579  0014F8  5C69               	subwf	printf@prec,w,c
  1580  0014FA  A0D8               	btfss	status,0,c
  1581  0014FC  D003               	goto	l167
  1582  0014FE                     u2730:
  1583                           
  1584                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1585  0014FE  0E08               	movlw	8
  1586  001500  6E78               	movwf	printf@c,c
  1587  001502  D003               	goto	l2507
  1588  001504                     l167:
  1589                           
  1590                           ;doprnt.c: 1213: else
  1591                           ;doprnt.c: 1214: c = prec;
  1592  001504  C069  F078         	movff	printf@prec,printf@c
  1593  001508  D000               	goto	l2507
  1594  00150A                     l2507:
  1595                           
  1596                           ;doprnt.c: 1215: prec -= c;
  1597  00150A  5078               	movf	printf@c,w,c
  1598  00150C  5E69               	subwf	printf@prec,f,c
  1599  00150E  0E00               	movlw	0
  1600  001510  BE78               	btfsc	printf@c,7,c
  1601  001512  0EFF               	movlw	255
  1602  001514  5A6A               	subwfb	printf@prec+1,f,c
  1603                           
  1604                           ;doprnt.c: 1219: if(c)
  1605  001516  5078               	movf	printf@c,w,c
  1606  001518  B4D8               	btfsc	status,2,c
  1607  00151A  D004               	goto	l2513
  1608                           
  1609                           ;doprnt.c: 1221: (putch('.') );
  1610  00151C  0E2E               	movlw	46
  1611  00151E  EC4E  F015         	call	_putch
  1612  001522  D000               	goto	l2513
  1613  001524                     l2513:
  1614                           
  1615                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1616  001524  5078               	movf	printf@c,w,c
  1617  001526  EC55  F00B         	call	_scale
  1618  00152A  C03B  F062         	movff	?_scale,_printf$1101
  1619  00152E  C03C  F063         	movff	?_scale+1,_printf$1101+1
  1620  001532  C03D  F064         	movff	?_scale+2,_printf$1101+2
  1621                           
  1622                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1623  001536  C075  F00C         	movff	printf@fval,___ftmul@f2
  1624  00153A  C076  F00D         	movff	printf@fval+1,___ftmul@f2+1
  1625  00153E  C077  F00E         	movff	printf@fval+2,___ftmul@f2+2
  1626  001542  C062  F009         	movff	_printf$1101,___ftmul@f1
  1627  001546  C063  F00A         	movff	_printf$1101+1,___ftmul@f1+1
  1628  00154A  C064  F00B         	movff	_printf$1101+2,___ftmul@f1+2
  1629  00154E  EC56  F010         	call	___ftmul	;wreg free
  1630  001552  C009  F018         	movff	?___ftmul,___fttol@f1
  1631  001556  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
  1632  00155A  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
  1633  00155E  EC45  F011         	call	___fttol	;wreg free
  1634  001562  C018  F06B         	movff	?___fttol,printf@val
  1635  001566  C019  F06C         	movff	?___fttol+1,printf@val+1
  1636  00156A  C01A  F06D         	movff	?___fttol+2,printf@val+2
  1637  00156E  C01B  F06E         	movff	?___fttol+3,printf@val+3
  1638                           
  1639                           ;doprnt.c: 1228: while(c--) {
  1640  001572  D06B               	goto	l2523
  1641  001574                     l2517:
  1642                           
  1643                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  1644  001574  C06B  F001         	movff	printf@val,___lldiv@dividend
  1645  001578  C06C  F002         	movff	printf@val+1,___lldiv@dividend+1
  1646  00157C  C06D  F003         	movff	printf@val+2,___lldiv@dividend+2
  1647  001580  C06E  F004         	movff	printf@val+3,___lldiv@dividend+3
  1648  001584  5078               	movf	printf@c,w,c
  1649  001586  0D04               	mullw	4
  1650  001588  0E01               	movlw	low _dpowers
  1651  00158A  24F3               	addwf	prodl,w,c
  1652  00158C  6EF6               	movwf	tblptrl,c
  1653  00158E  0E10               	movlw	high _dpowers
  1654  001590  20F4               	addwfc	prodh,w,c
  1655  001592  6EF7               	movwf	tblptrh,c
  1656  001594                     	if	0	;There are less than 3 active tblptr bytes
  1657  001594                     	endif
  1658  001594  0009               	tblrd		*+
  1659  001596  CFF5 F005          	movff	tablat,___lldiv@divisor
  1660  00159A  0009               	tblrd		*+
  1661  00159C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1662  0015A0  0009               	tblrd		*+
  1663  0015A2  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1664  0015A6  000A               	tblrd		*-
  1665  0015A8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1666  0015AC  EC22  F013         	call	___lldiv	;wreg free
  1667  0015B0  C001  F071         	movff	?___lldiv,printf@tmpval
  1668  0015B4  C002  F072         	movff	?___lldiv+1,printf@tmpval+1
  1669  0015B8  C003  F073         	movff	?___lldiv+2,printf@tmpval+2
  1670  0015BC  C004  F074         	movff	?___lldiv+3,printf@tmpval+3
  1671                           
  1672                           ;doprnt.c: 1230: tmpval.vd %= 10;
  1673  0015C0  C071  F001         	movff	printf@tmpval,___llmod@dividend
  1674  0015C4  C072  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1675  0015C8  C073  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1676  0015CC  C074  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1677  0015D0  0E0A               	movlw	10
  1678  0015D2  6E05               	movwf	___llmod@divisor,c
  1679  0015D4  0E00               	movlw	0
  1680  0015D6  6E06               	movwf	___llmod@divisor+1,c
  1681  0015D8  0E00               	movlw	0
  1682  0015DA  6E07               	movwf	___llmod@divisor+2,c
  1683  0015DC  0E00               	movlw	0
  1684  0015DE  6E08               	movwf	___llmod@divisor+3,c
  1685  0015E0  ECED  F013         	call	___llmod	;wreg free
  1686  0015E4  C001  F071         	movff	?___llmod,printf@tmpval
  1687  0015E8  C002  F072         	movff	?___llmod+1,printf@tmpval+1
  1688  0015EC  C003  F073         	movff	?___llmod+2,printf@tmpval+2
  1689  0015F0  C004  F074         	movff	?___llmod+3,printf@tmpval+3
  1690                           
  1691                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  1692  0015F4  5071               	movf	printf@tmpval,w,c
  1693  0015F6  0F30               	addlw	48
  1694  0015F8  EC4E  F015         	call	_putch
  1695                           
  1696                           ;doprnt.c: 1232: val %= dpowers[c];
  1697  0015FC  C06B  F001         	movff	printf@val,___llmod@dividend
  1698  001600  C06C  F002         	movff	printf@val+1,___llmod@dividend+1
  1699  001604  C06D  F003         	movff	printf@val+2,___llmod@dividend+2
  1700  001608  C06E  F004         	movff	printf@val+3,___llmod@dividend+3
  1701  00160C  5078               	movf	printf@c,w,c
  1702  00160E  0D04               	mullw	4
  1703  001610  0E01               	movlw	low _dpowers
  1704  001612  24F3               	addwf	prodl,w,c
  1705  001614  6EF6               	movwf	tblptrl,c
  1706  001616  0E10               	movlw	high _dpowers
  1707  001618  20F4               	addwfc	prodh,w,c
  1708  00161A  6EF7               	movwf	tblptrh,c
  1709  00161C                     	if	0	;There are less than 3 active tblptr bytes
  1710  00161C                     	endif
  1711  00161C  0009               	tblrd		*+
  1712  00161E  CFF5 F005          	movff	tablat,___llmod@divisor
  1713  001622  0009               	tblrd		*+
  1714  001624  CFF5 F006          	movff	tablat,___llmod@divisor+1
  1715  001628  0009               	tblrd		*+
  1716  00162A  CFF5 F007          	movff	tablat,___llmod@divisor+2
  1717  00162E  000A               	tblrd		*-
  1718  001630  CFF5 F008          	movff	tablat,___llmod@divisor+3
  1719  001634  ECED  F013         	call	___llmod	;wreg free
  1720  001638  C001  F06B         	movff	?___llmod,printf@val
  1721  00163C  C002  F06C         	movff	?___llmod+1,printf@val+1
  1722  001640  C003  F06D         	movff	?___llmod+2,printf@val+2
  1723  001644  C004  F06E         	movff	?___llmod+3,printf@val+3
  1724  001648  D000               	goto	l2523
  1725  00164A                     l2523:
  1726  00164A  0678               	decf	printf@c,f,c
  1727  00164C  2878               	incf	printf@c,w,c
  1728  00164E  B4D8               	btfsc	status,2,c
  1729  001650  D009               	goto	l2529
  1730  001652  D790               	goto	l2517
  1731                           
  1732                           ;doprnt.c: 1233: }
  1733                           ;doprnt.c: 1235: while(prec) {
  1734  001654  D007               	goto	l2529
  1735  001656                     l2525:
  1736                           
  1737                           ;doprnt.c: 1236: (putch('0') );
  1738  001656  0E30               	movlw	48
  1739  001658  EC4E  F015         	call	_putch
  1740                           
  1741                           ;doprnt.c: 1237: prec--;
  1742  00165C  0669               	decf	printf@prec,f,c
  1743  00165E  A0D8               	btfss	status,0,c
  1744  001660  066A               	decf	printf@prec+1,f,c
  1745  001662  D000               	goto	l2529
  1746  001664                     l2529:
  1747  001664  5069               	movf	printf@prec,w,c
  1748  001666  106A               	iorwf	printf@prec+1,w,c
  1749  001668  B4D8               	btfsc	status,2,c
  1750  00166A  D010               	goto	l2535
  1751  00166C  D7F4               	goto	l2525
  1752                           
  1753                           ;doprnt.c: 1238: }
  1754                           ;doprnt.c: 1245: continue;
  1755  00166E  D00E               	goto	l2535
  1756  001670                     l2531:
  1757                           
  1758                           ;doprnt.c: 1246: }
  1759                           ;doprnt.c: 1422: {
  1760                           ;doprnt.c: 1438: if(flag & 0x03)
  1761  001670  0E03               	movlw	3
  1762  001672  1467               	andwf	printf@flag,w,c
  1763  001674  6E5C               	movwf	??_printf& (0+255),c
  1764  001676  0E00               	movlw	0
  1765  001678  1468               	andwf	printf@flag+1,w,c
  1766  00167A  6E5D               	movwf	(??_printf+1)& (0+255),c
  1767  00167C  505C               	movf	??_printf,w,c
  1768  00167E  105D               	iorwf	??_printf+1,w,c
  1769  001680  B4D8               	btfsc	status,2,c
  1770  001682  D004               	goto	l2535
  1771                           
  1772                           ;doprnt.c: 1439: (putch('-') );
  1773  001684  0E2D               	movlw	45
  1774  001686  EC4E  F015         	call	_putch
  1775  00168A  D000               	goto	l2535
  1776  00168C                     l2535:
  1777  00168C  C057  FFF6         	movff	printf@f,tblptrl
  1778  001690  C058  FFF7         	movff	printf@f+1,tblptrh
  1779  001694  4A57               	infsnz	printf@f,f,c
  1780  001696  2A58               	incf	printf@f+1,f,c
  1781  001698                     	if	0	;tblptru may be non-zero
  1782  001698                     	endif
  1783  001698                     	if	0	;tblptru may be non-zero
  1784  001698                     	endif
  1785  001698  0008               	tblrd		*
  1786  00169A  CFF5 F078          	movff	tablat,printf@c
  1787  00169E  5078               	movf	printf@c,w,c
  1788  0016A0  B4D8               	btfsc	status,2,c
  1789  0016A2  D002               	goto	l178
  1790  0016A4  D4F4               	goto	l2387
  1791  0016A6  D000               	goto	l178
  1792  0016A8                     l178:
  1793  0016A8  0012               	return		;funcret
  1794  0016AA                     __end_of_printf:
  1795                           	opt stack 0
  1796                           tblptru	equ	0xFF8
  1797                           tblptrh	equ	0xFF7
  1798                           tblptrl	equ	0xFF6
  1799                           tablat	equ	0xFF5
  1800                           prodh	equ	0xFF4
  1801                           prodl	equ	0xFF3
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           postdec1	equ	0xFE5
  1805                           fsr1l	equ	0xFE1
  1806                           postinc2	equ	0xFDE
  1807                           postdec2	equ	0xFDD
  1808                           fsr2h	equ	0xFDA
  1809                           fsr2l	equ	0xFD9
  1810                           status	equ	0xFD8
  1811                           
  1812 ;; *************** function _scale *****************
  1813 ;; Defined at:
  1814 ;;		line 425 in file "E:\XC8\sources\common\doprnt.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  scl             1    wreg     char 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  scl             1   64[COMRAM] char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  3   58[COMRAM] char 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1828 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;Total ram usage:        7 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    2
  1835 ;; This function calls:
  1836 ;;		___awdiv
  1837 ;;		___awmod
  1838 ;;		___ftmul
  1839 ;;		___wmul
  1840 ;; This function is called by:
  1841 ;;		_printf
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text2
  1846  0016AA                     __ptext2:
  1847                           	opt stack 0
  1848  0016AA                     _scale:
  1849                           	opt stack 27
  1850                           
  1851                           ;incstack = 0
  1852                           ;scale@scl stored from wreg
  1853  0016AA  6E41               	movwf	scale@scl,c
  1854                           
  1855                           ;doprnt.c: 428: if(scl < 0) {
  1856  0016AC  AE41               	btfss	scale@scl,7,c
  1857  0016AE  D0EF               	goto	l2077
  1858                           
  1859                           ;doprnt.c: 429: scl = -scl;
  1860  0016B0  6C41               	negf	scale@scl,c
  1861                           
  1862                           ;doprnt.c: 430: if(scl>=110)
  1863  0016B2  5041               	movf	scale@scl,w,c
  1864  0016B4  0A80               	xorlw	128
  1865  0016B6  0F12               	addlw	-238
  1866  0016B8  A0D8               	btfss	status,0,c
  1867  0016BA  D08D               	goto	l2067
  1868                           
  1869                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  1870  0016BC  0E00               	movlw	0
  1871  0016BE  6E38               	movwf	___wmul@multiplicand+1,c
  1872  0016C0  0E03               	movlw	3
  1873  0016C2  6E37               	movwf	___wmul@multiplicand,c
  1874  0016C4  0E00               	movlw	0
  1875  0016C6  6E30               	movwf	___awdiv@divisor+1,c
  1876  0016C8  0E0A               	movlw	10
  1877  0016CA  6E2F               	movwf	___awdiv@divisor,c
  1878  0016CC  0E00               	movlw	0
  1879  0016CE  6E2A               	movwf	___awmod@divisor+1,c
  1880  0016D0  0E64               	movlw	100
  1881  0016D2  6E29               	movwf	___awmod@divisor,c
  1882  0016D4  5041               	movf	scale@scl,w,c
  1883  0016D6  6E27               	movwf	___awmod@dividend,c
  1884  0016D8  6A28               	clrf	___awmod@dividend+1,c
  1885  0016DA  BE27               	btfsc	___awmod@dividend,7,c
  1886  0016DC  0628               	decf	___awmod@dividend+1,f,c
  1887  0016DE  ECAC  F013         	call	___awmod	;wreg free
  1888  0016E2  C027  F02D         	movff	?___awmod,___awdiv@dividend
  1889  0016E6  C028  F02E         	movff	?___awmod+1,___awdiv@dividend+1
  1890  0016EA  EC8C  F012         	call	___awdiv	;wreg free
  1891  0016EE  0E09               	movlw	9
  1892  0016F0  242D               	addwf	?___awdiv,w,c
  1893  0016F2  6E35               	movwf	___wmul@multiplier,c
  1894  0016F4  0E00               	movlw	0
  1895  0016F6  202E               	addwfc	?___awdiv+1,w,c
  1896  0016F8  6E36               	movwf	___wmul@multiplier+1,c
  1897  0016FA  ECE7  F014         	call	___wmul	;wreg free
  1898  0016FE  0E29               	movlw	low __npowers_
  1899  001700  2435               	addwf	?___wmul,w,c
  1900  001702  6EF6               	movwf	tblptrl,c
  1901  001704  0E10               	movlw	high __npowers_
  1902  001706  2036               	addwfc	?___wmul+1,w,c
  1903  001708  6EF7               	movwf	tblptrh,c
  1904  00170A                     	if	0	;There are less than 3 active tblptr bytes
  1905  00170A                     	endif
  1906  00170A  0009               	tblrd		*+
  1907  00170C  CFF5 F00C          	movff	tablat,___ftmul@f2
  1908  001710  0009               	tblrd		*+
  1909  001712  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  1910  001716  000A               	tblrd		*-
  1911  001718  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  1912  00171C  0E00               	movlw	0
  1913  00171E  6E30               	movwf	___awdiv@divisor+1,c
  1914  001720  0E64               	movlw	100
  1915  001722  6E2F               	movwf	___awdiv@divisor,c
  1916  001724  5041               	movf	scale@scl,w,c
  1917  001726  6E2D               	movwf	___awdiv@dividend,c
  1918  001728  6A2E               	clrf	___awdiv@dividend+1,c
  1919  00172A  BE2D               	btfsc	___awdiv@dividend,7,c
  1920  00172C  062E               	decf	___awdiv@dividend+1,f,c
  1921  00172E  EC8C  F012         	call	___awdiv	;wreg free
  1922  001732  0E12               	movlw	18
  1923  001734  242D               	addwf	?___awdiv,w,c
  1924  001736  6E35               	movwf	___wmul@multiplier,c
  1925  001738  0E00               	movlw	0
  1926  00173A  202E               	addwfc	?___awdiv+1,w,c
  1927  00173C  6E36               	movwf	___wmul@multiplier+1,c
  1928  00173E  0E00               	movlw	0
  1929  001740  6E38               	movwf	___wmul@multiplicand+1,c
  1930  001742  0E03               	movlw	3
  1931  001744  6E37               	movwf	___wmul@multiplicand,c
  1932  001746  ECE7  F014         	call	___wmul	;wreg free
  1933  00174A  0E29               	movlw	low __npowers_
  1934  00174C  2435               	addwf	?___wmul,w,c
  1935  00174E  6EF6               	movwf	tblptrl,c
  1936  001750  0E10               	movlw	high __npowers_
  1937  001752  2036               	addwfc	?___wmul+1,w,c
  1938  001754  6EF7               	movwf	tblptrh,c
  1939  001756                     	if	0	;There are less than 3 active tblptr bytes
  1940  001756                     	endif
  1941  001756  0009               	tblrd		*+
  1942  001758  CFF5 F009          	movff	tablat,___ftmul@f1
  1943  00175C  0009               	tblrd		*+
  1944  00175E  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  1945  001762  000A               	tblrd		*-
  1946  001764  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  1947  001768  EC56  F010         	call	___ftmul	;wreg free
  1948  00176C  C009  F03E         	movff	?___ftmul,_scale$1100
  1949  001770  C00A  F03F         	movff	?___ftmul+1,_scale$1100+1
  1950  001774  C00B  F040         	movff	?___ftmul+2,_scale$1100+2
  1951                           
  1952                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  1953  001778  C03E  F009         	movff	_scale$1100,___ftmul@f1
  1954  00177C  C03F  F00A         	movff	_scale$1100+1,___ftmul@f1+1
  1955  001780  C040  F00B         	movff	_scale$1100+2,___ftmul@f1+2
  1956  001784  0E00               	movlw	0
  1957  001786  6E38               	movwf	___wmul@multiplicand+1,c
  1958  001788  0E03               	movlw	3
  1959  00178A  6E37               	movwf	___wmul@multiplicand,c
  1960  00178C  0E00               	movlw	0
  1961  00178E  6E2A               	movwf	___awmod@divisor+1,c
  1962  001790  0E0A               	movlw	10
  1963  001792  6E29               	movwf	___awmod@divisor,c
  1964  001794  5041               	movf	scale@scl,w,c
  1965  001796  6E27               	movwf	___awmod@dividend,c
  1966  001798  6A28               	clrf	___awmod@dividend+1,c
  1967  00179A  BE27               	btfsc	___awmod@dividend,7,c
  1968  00179C  0628               	decf	___awmod@dividend+1,f,c
  1969  00179E  ECAC  F013         	call	___awmod	;wreg free
  1970  0017A2  C027  F035         	movff	?___awmod,___wmul@multiplier
  1971  0017A6  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  1972  0017AA  ECE7  F014         	call	___wmul	;wreg free
  1973  0017AE  0E29               	movlw	low __npowers_
  1974  0017B0  2435               	addwf	?___wmul,w,c
  1975  0017B2  6EF6               	movwf	tblptrl,c
  1976  0017B4  0E10               	movlw	high __npowers_
  1977  0017B6  2036               	addwfc	?___wmul+1,w,c
  1978  0017B8  6EF7               	movwf	tblptrh,c
  1979  0017BA                     	if	0	;There are less than 3 active tblptr bytes
  1980  0017BA                     	endif
  1981  0017BA  0009               	tblrd		*+
  1982  0017BC  CFF5 F00C          	movff	tablat,___ftmul@f2
  1983  0017C0  0009               	tblrd		*+
  1984  0017C2  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  1985  0017C6  000A               	tblrd		*-
  1986  0017C8  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  1987  0017CC  EC56  F010         	call	___ftmul	;wreg free
  1988  0017D0  D141               	goto	L5
  1989  0017D2  D15A               	goto	l122
  1990  0017D4  D054               	goto	l2073
  1991  0017D6                     l2067:
  1992                           
  1993                           ;doprnt.c: 432: else if(scl > 10)
  1994  0017D6  5041               	movf	scale@scl,w,c
  1995  0017D8  0A80               	xorlw	128
  1996  0017DA  0F75               	addlw	-139
  1997  0017DC  A0D8               	btfss	status,0,c
  1998  0017DE  D04F               	goto	l2073
  1999                           
  2000                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2001  0017E0  0E00               	movlw	0
  2002  0017E2  6E30               	movwf	___awdiv@divisor+1,c
  2003  0017E4  0E0A               	movlw	10
  2004  0017E6  6E2F               	movwf	___awdiv@divisor,c
  2005  0017E8  5041               	movf	scale@scl,w,c
  2006  0017EA  6E2D               	movwf	___awdiv@dividend,c
  2007  0017EC  6A2E               	clrf	___awdiv@dividend+1,c
  2008  0017EE  BE2D               	btfsc	___awdiv@dividend,7,c
  2009  0017F0  062E               	decf	___awdiv@dividend+1,f,c
  2010  0017F2  EC8C  F012         	call	___awdiv	;wreg free
  2011  0017F6  0E09               	movlw	9
  2012  0017F8  242D               	addwf	?___awdiv,w,c
  2013  0017FA  6E35               	movwf	___wmul@multiplier,c
  2014  0017FC  0E00               	movlw	0
  2015  0017FE  202E               	addwfc	?___awdiv+1,w,c
  2016  001800  6E36               	movwf	___wmul@multiplier+1,c
  2017  001802  0E00               	movlw	0
  2018  001804  6E38               	movwf	___wmul@multiplicand+1,c
  2019  001806  0E03               	movlw	3
  2020  001808  6E37               	movwf	___wmul@multiplicand,c
  2021  00180A  ECE7  F014         	call	___wmul	;wreg free
  2022  00180E  0E29               	movlw	low __npowers_
  2023  001810  2435               	addwf	?___wmul,w,c
  2024  001812  6EF6               	movwf	tblptrl,c
  2025  001814  0E10               	movlw	high __npowers_
  2026  001816  2036               	addwfc	?___wmul+1,w,c
  2027  001818  6EF7               	movwf	tblptrh,c
  2028  00181A                     	if	0	;There are less than 3 active tblptr bytes
  2029  00181A                     	endif
  2030  00181A  0009               	tblrd		*+
  2031  00181C  CFF5 F009          	movff	tablat,___ftmul@f1
  2032  001820  0009               	tblrd		*+
  2033  001822  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2034  001826  000A               	tblrd		*-
  2035  001828  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2036  00182C  0E00               	movlw	0
  2037  00182E  6E38               	movwf	___wmul@multiplicand+1,c
  2038  001830  0E03               	movlw	3
  2039  001832  6E37               	movwf	___wmul@multiplicand,c
  2040  001834  0E00               	movlw	0
  2041  001836  6E2A               	movwf	___awmod@divisor+1,c
  2042  001838  0E0A               	movlw	10
  2043  00183A  6E29               	movwf	___awmod@divisor,c
  2044  00183C  5041               	movf	scale@scl,w,c
  2045  00183E  6E27               	movwf	___awmod@dividend,c
  2046  001840  6A28               	clrf	___awmod@dividend+1,c
  2047  001842  BE27               	btfsc	___awmod@dividend,7,c
  2048  001844  0628               	decf	___awmod@dividend+1,f,c
  2049  001846  ECAC  F013         	call	___awmod	;wreg free
  2050  00184A  C027  F035         	movff	?___awmod,___wmul@multiplier
  2051  00184E  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2052  001852  ECE7  F014         	call	___wmul	;wreg free
  2053  001856  0E29               	movlw	low __npowers_
  2054  001858  2435               	addwf	?___wmul,w,c
  2055  00185A  6EF6               	movwf	tblptrl,c
  2056  00185C  0E10               	movlw	high __npowers_
  2057  00185E  2036               	addwfc	?___wmul+1,w,c
  2058  001860  6EF7               	movwf	tblptrh,c
  2059  001862                     	if	0	;There are less than 3 active tblptr bytes
  2060  001862                     	endif
  2061  001862  0009               	tblrd		*+
  2062  001864  CFF5 F00C          	movff	tablat,___ftmul@f2
  2063  001868  0009               	tblrd		*+
  2064  00186A  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2065  00186E  000A               	tblrd		*-
  2066  001870  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2067  001874  EC56  F010         	call	___ftmul	;wreg free
  2068  001878  D0ED               	goto	L5
  2069  00187A  D106               	goto	l122
  2070  00187C  D000               	goto	l2073
  2071  00187E                     l2073:
  2072                           
  2073                           ;doprnt.c: 434: return _npowers_[scl];
  2074  00187E  5041               	movf	scale@scl,w,c
  2075  001880  0D03               	mullw	3
  2076  001882  0E29               	movlw	low __npowers_
  2077  001884  24F3               	addwf	prodl,w,c
  2078  001886  6EF6               	movwf	tblptrl,c
  2079  001888  0E10               	movlw	high __npowers_
  2080  00188A  D0F2               	goto	L4
  2081  00188C  D0FD               	goto	l122
  2082  00188E                     l2077:
  2083                           
  2084                           ;doprnt.c: 435: }
  2085                           ;doprnt.c: 436: if(scl>=110)
  2086  00188E  5041               	movf	scale@scl,w,c
  2087  001890  0A80               	xorlw	128
  2088  001892  0F12               	addlw	-238
  2089  001894  A0D8               	btfss	status,0,c
  2090  001896  D08D               	goto	l2085
  2091                           
  2092                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2093  001898  0E00               	movlw	0
  2094  00189A  6E38               	movwf	___wmul@multiplicand+1,c
  2095  00189C  0E03               	movlw	3
  2096  00189E  6E37               	movwf	___wmul@multiplicand,c
  2097  0018A0  0E00               	movlw	0
  2098  0018A2  6E30               	movwf	___awdiv@divisor+1,c
  2099  0018A4  0E0A               	movlw	10
  2100  0018A6  6E2F               	movwf	___awdiv@divisor,c
  2101  0018A8  0E00               	movlw	0
  2102  0018AA  6E2A               	movwf	___awmod@divisor+1,c
  2103  0018AC  0E64               	movlw	100
  2104  0018AE  6E29               	movwf	___awmod@divisor,c
  2105  0018B0  5041               	movf	scale@scl,w,c
  2106  0018B2  6E27               	movwf	___awmod@dividend,c
  2107  0018B4  6A28               	clrf	___awmod@dividend+1,c
  2108  0018B6  BE27               	btfsc	___awmod@dividend,7,c
  2109  0018B8  0628               	decf	___awmod@dividend+1,f,c
  2110  0018BA  ECAC  F013         	call	___awmod	;wreg free
  2111  0018BE  C027  F02D         	movff	?___awmod,___awdiv@dividend
  2112  0018C2  C028  F02E         	movff	?___awmod+1,___awdiv@dividend+1
  2113  0018C6  EC8C  F012         	call	___awdiv	;wreg free
  2114  0018CA  0E09               	movlw	9
  2115  0018CC  242D               	addwf	?___awdiv,w,c
  2116  0018CE  6E35               	movwf	___wmul@multiplier,c
  2117  0018D0  0E00               	movlw	0
  2118  0018D2  202E               	addwfc	?___awdiv+1,w,c
  2119  0018D4  6E36               	movwf	___wmul@multiplier+1,c
  2120  0018D6  ECE7  F014         	call	___wmul	;wreg free
  2121  0018DA  0E50               	movlw	low __powers_
  2122  0018DC  2435               	addwf	?___wmul,w,c
  2123  0018DE  6EF6               	movwf	tblptrl,c
  2124  0018E0  0E10               	movlw	high __powers_
  2125  0018E2  2036               	addwfc	?___wmul+1,w,c
  2126  0018E4  6EF7               	movwf	tblptrh,c
  2127  0018E6                     	if	0	;There are less than 3 active tblptr bytes
  2128  0018E6                     	endif
  2129  0018E6  0009               	tblrd		*+
  2130  0018E8  CFF5 F00C          	movff	tablat,___ftmul@f2
  2131  0018EC  0009               	tblrd		*+
  2132  0018EE  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2133  0018F2  000A               	tblrd		*-
  2134  0018F4  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2135  0018F8  0E00               	movlw	0
  2136  0018FA  6E30               	movwf	___awdiv@divisor+1,c
  2137  0018FC  0E64               	movlw	100
  2138  0018FE  6E2F               	movwf	___awdiv@divisor,c
  2139  001900  5041               	movf	scale@scl,w,c
  2140  001902  6E2D               	movwf	___awdiv@dividend,c
  2141  001904  6A2E               	clrf	___awdiv@dividend+1,c
  2142  001906  BE2D               	btfsc	___awdiv@dividend,7,c
  2143  001908  062E               	decf	___awdiv@dividend+1,f,c
  2144  00190A  EC8C  F012         	call	___awdiv	;wreg free
  2145  00190E  0E12               	movlw	18
  2146  001910  242D               	addwf	?___awdiv,w,c
  2147  001912  6E35               	movwf	___wmul@multiplier,c
  2148  001914  0E00               	movlw	0
  2149  001916  202E               	addwfc	?___awdiv+1,w,c
  2150  001918  6E36               	movwf	___wmul@multiplier+1,c
  2151  00191A  0E00               	movlw	0
  2152  00191C  6E38               	movwf	___wmul@multiplicand+1,c
  2153  00191E  0E03               	movlw	3
  2154  001920  6E37               	movwf	___wmul@multiplicand,c
  2155  001922  ECE7  F014         	call	___wmul	;wreg free
  2156  001926  0E50               	movlw	low __powers_
  2157  001928  2435               	addwf	?___wmul,w,c
  2158  00192A  6EF6               	movwf	tblptrl,c
  2159  00192C  0E10               	movlw	high __powers_
  2160  00192E  2036               	addwfc	?___wmul+1,w,c
  2161  001930  6EF7               	movwf	tblptrh,c
  2162  001932                     	if	0	;There are less than 3 active tblptr bytes
  2163  001932                     	endif
  2164  001932  0009               	tblrd		*+
  2165  001934  CFF5 F009          	movff	tablat,___ftmul@f1
  2166  001938  0009               	tblrd		*+
  2167  00193A  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2168  00193E  000A               	tblrd		*-
  2169  001940  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2170  001944  EC56  F010         	call	___ftmul	;wreg free
  2171  001948  C009  F03E         	movff	?___ftmul,_scale$1100
  2172  00194C  C00A  F03F         	movff	?___ftmul+1,_scale$1100+1
  2173  001950  C00B  F040         	movff	?___ftmul+2,_scale$1100+2
  2174                           
  2175                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2176  001954  C03E  F009         	movff	_scale$1100,___ftmul@f1
  2177  001958  C03F  F00A         	movff	_scale$1100+1,___ftmul@f1+1
  2178  00195C  C040  F00B         	movff	_scale$1100+2,___ftmul@f1+2
  2179  001960  0E00               	movlw	0
  2180  001962  6E38               	movwf	___wmul@multiplicand+1,c
  2181  001964  0E03               	movlw	3
  2182  001966  6E37               	movwf	___wmul@multiplicand,c
  2183  001968  0E00               	movlw	0
  2184  00196A  6E2A               	movwf	___awmod@divisor+1,c
  2185  00196C  0E0A               	movlw	10
  2186  00196E  6E29               	movwf	___awmod@divisor,c
  2187  001970  5041               	movf	scale@scl,w,c
  2188  001972  6E27               	movwf	___awmod@dividend,c
  2189  001974  6A28               	clrf	___awmod@dividend+1,c
  2190  001976  BE27               	btfsc	___awmod@dividend,7,c
  2191  001978  0628               	decf	___awmod@dividend+1,f,c
  2192  00197A  ECAC  F013         	call	___awmod	;wreg free
  2193  00197E  C027  F035         	movff	?___awmod,___wmul@multiplier
  2194  001982  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2195  001986  ECE7  F014         	call	___wmul	;wreg free
  2196  00198A  0E50               	movlw	low __powers_
  2197  00198C  2435               	addwf	?___wmul,w,c
  2198  00198E  6EF6               	movwf	tblptrl,c
  2199  001990  0E10               	movlw	high __powers_
  2200  001992  2036               	addwfc	?___wmul+1,w,c
  2201  001994  6EF7               	movwf	tblptrh,c
  2202  001996                     	if	0	;There are less than 3 active tblptr bytes
  2203  001996                     	endif
  2204  001996  0009               	tblrd		*+
  2205  001998  CFF5 F00C          	movff	tablat,___ftmul@f2
  2206  00199C  0009               	tblrd		*+
  2207  00199E  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2208  0019A2  000A               	tblrd		*-
  2209  0019A4  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2210  0019A8  EC56  F010         	call	___ftmul	;wreg free
  2211  0019AC  D053               	goto	L5
  2212  0019AE  D06C               	goto	l122
  2213  0019B0  D059               	goto	l2091
  2214  0019B2                     l2085:
  2215                           
  2216                           ;doprnt.c: 438: else if(scl > 10)
  2217  0019B2  5041               	movf	scale@scl,w,c
  2218  0019B4  0A80               	xorlw	128
  2219  0019B6  0F75               	addlw	-139
  2220  0019B8  A0D8               	btfss	status,0,c
  2221  0019BA  D054               	goto	l2091
  2222                           
  2223                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2224  0019BC  0E00               	movlw	0
  2225  0019BE  6E30               	movwf	___awdiv@divisor+1,c
  2226  0019C0  0E0A               	movlw	10
  2227  0019C2  6E2F               	movwf	___awdiv@divisor,c
  2228  0019C4  5041               	movf	scale@scl,w,c
  2229  0019C6  6E2D               	movwf	___awdiv@dividend,c
  2230  0019C8  6A2E               	clrf	___awdiv@dividend+1,c
  2231  0019CA  BE2D               	btfsc	___awdiv@dividend,7,c
  2232  0019CC  062E               	decf	___awdiv@dividend+1,f,c
  2233  0019CE  EC8C  F012         	call	___awdiv	;wreg free
  2234  0019D2  0E09               	movlw	9
  2235  0019D4  242D               	addwf	?___awdiv,w,c
  2236  0019D6  6E35               	movwf	___wmul@multiplier,c
  2237  0019D8  0E00               	movlw	0
  2238  0019DA  202E               	addwfc	?___awdiv+1,w,c
  2239  0019DC  6E36               	movwf	___wmul@multiplier+1,c
  2240  0019DE  0E00               	movlw	0
  2241  0019E0  6E38               	movwf	___wmul@multiplicand+1,c
  2242  0019E2  0E03               	movlw	3
  2243  0019E4  6E37               	movwf	___wmul@multiplicand,c
  2244  0019E6  ECE7  F014         	call	___wmul	;wreg free
  2245  0019EA  0E50               	movlw	low __powers_
  2246  0019EC  2435               	addwf	?___wmul,w,c
  2247  0019EE  6EF6               	movwf	tblptrl,c
  2248  0019F0  0E10               	movlw	high __powers_
  2249  0019F2  2036               	addwfc	?___wmul+1,w,c
  2250  0019F4  6EF7               	movwf	tblptrh,c
  2251  0019F6                     	if	0	;There are less than 3 active tblptr bytes
  2252  0019F6                     	endif
  2253  0019F6  0009               	tblrd		*+
  2254  0019F8  CFF5 F009          	movff	tablat,___ftmul@f1
  2255  0019FC  0009               	tblrd		*+
  2256  0019FE  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2257  001A02  000A               	tblrd		*-
  2258  001A04  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2259  001A08  0E00               	movlw	0
  2260  001A0A  6E38               	movwf	___wmul@multiplicand+1,c
  2261  001A0C  0E03               	movlw	3
  2262  001A0E  6E37               	movwf	___wmul@multiplicand,c
  2263  001A10  0E00               	movlw	0
  2264  001A12  6E2A               	movwf	___awmod@divisor+1,c
  2265  001A14  0E0A               	movlw	10
  2266  001A16  6E29               	movwf	___awmod@divisor,c
  2267  001A18  5041               	movf	scale@scl,w,c
  2268  001A1A  6E27               	movwf	___awmod@dividend,c
  2269  001A1C  6A28               	clrf	___awmod@dividend+1,c
  2270  001A1E  BE27               	btfsc	___awmod@dividend,7,c
  2271  001A20  0628               	decf	___awmod@dividend+1,f,c
  2272  001A22  ECAC  F013         	call	___awmod	;wreg free
  2273  001A26  C027  F035         	movff	?___awmod,___wmul@multiplier
  2274  001A2A  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2275  001A2E  ECE7  F014         	call	___wmul	;wreg free
  2276  001A32  0E50               	movlw	low __powers_
  2277  001A34  2435               	addwf	?___wmul,w,c
  2278  001A36  6EF6               	movwf	tblptrl,c
  2279  001A38  0E10               	movlw	high __powers_
  2280  001A3A  2036               	addwfc	?___wmul+1,w,c
  2281  001A3C  6EF7               	movwf	tblptrh,c
  2282  001A3E                     	if	0	;There are less than 3 active tblptr bytes
  2283  001A3E                     	endif
  2284  001A3E  0009               	tblrd		*+
  2285  001A40  CFF5 F00C          	movff	tablat,___ftmul@f2
  2286  001A44  0009               	tblrd		*+
  2287  001A46  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2288  001A4A  000A               	tblrd		*-
  2289  001A4C  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2290  001A50  EC56  F010         	call	___ftmul	;wreg free
  2291  001A54                     L5:
  2292  001A54  C009  F03B         	movff	?___ftmul,?_scale
  2293  001A58  C00A  F03C         	movff	?___ftmul+1,?_scale+1
  2294  001A5C  C00B  F03D         	movff	?___ftmul+2,?_scale+2
  2295  001A60  D013               	goto	l122
  2296  001A62  D000               	goto	l2091
  2297  001A64                     l2091:
  2298                           
  2299                           ;doprnt.c: 440: return _powers_[scl];
  2300  001A64  5041               	movf	scale@scl,w,c
  2301  001A66  0D03               	mullw	3
  2302  001A68  0E50               	movlw	low __powers_
  2303  001A6A  24F3               	addwf	prodl,w,c
  2304  001A6C  6EF6               	movwf	tblptrl,c
  2305  001A6E  0E10               	movlw	high __powers_
  2306  001A70                     L4:
  2307  001A70  20F4               	addwfc	prodh,w,c
  2308  001A72  6EF7               	movwf	tblptrh,c
  2309  001A74                     	if	0	;There are less than 3 active tblptr bytes
  2310  001A74                     	endif
  2311  001A74  0009               	tblrd		*+
  2312  001A76  CFF5 F03B          	movff	tablat,?_scale
  2313  001A7A  0009               	tblrd		*+
  2314  001A7C  CFF5 F03C          	movff	tablat,?_scale+1
  2315  001A80  000A               	tblrd		*-
  2316  001A82  CFF5 F03D          	movff	tablat,?_scale+2
  2317  001A86  D000               	goto	l122
  2318  001A88                     l122:
  2319  001A88  0012               	return		;funcret
  2320  001A8A                     __end_of_scale:
  2321                           	opt stack 0
  2322                           tblptru	equ	0xFF8
  2323                           tblptrh	equ	0xFF7
  2324                           tblptrl	equ	0xFF6
  2325                           tablat	equ	0xFF5
  2326                           prodh	equ	0xFF4
  2327                           prodl	equ	0xFF3
  2328                           postinc0	equ	0xFEE
  2329                           wreg	equ	0xFE8
  2330                           postdec1	equ	0xFE5
  2331                           fsr1l	equ	0xFE1
  2332                           postinc2	equ	0xFDE
  2333                           postdec2	equ	0xFDD
  2334                           fsr2h	equ	0xFDA
  2335                           fsr2l	equ	0xFD9
  2336                           status	equ	0xFD8
  2337                           
  2338 ;; *************** function _putch *****************
  2339 ;; Defined at:
  2340 ;;		line 21 in file "Lab5p1.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  c               1    wreg     unsigned char 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  c               1    0[COMRAM] unsigned char 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;		None               void
  2347 ;; Registers used:
  2348 ;;		wreg
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;Total ram usage:        1 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_printf
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text3
  2368  002A9C                     __ptext3:
  2369                           	opt stack 0
  2370  002A9C                     _putch:
  2371                           	opt stack 29
  2372                           
  2373                           ;incstack = 0
  2374                           ;putch@c stored from wreg
  2375  002A9C  6E01               	movwf	putch@c,c
  2376                           
  2377                           ;Lab5p1.c: 23: while (!TRMT);
  2378  002A9E  D000               	goto	l55
  2379  002AA0                     l55:
  2380  002AA0  A2AC               	btfss	4012,1,c	;volatile
  2381  002AA2  D7FE               	goto	l55
  2382                           
  2383                           ;Lab5p1.c: 24: TXREG = c;
  2384  002AA4  C001  FFAD         	movff	putch@c,4013	;volatile
  2385  002AA8  0012               	return		;funcret
  2386  002AAA                     __end_of_putch:
  2387                           	opt stack 0
  2388                           tblptru	equ	0xFF8
  2389                           tblptrh	equ	0xFF7
  2390                           tblptrl	equ	0xFF6
  2391                           tablat	equ	0xFF5
  2392                           prodh	equ	0xFF4
  2393                           prodl	equ	0xFF3
  2394                           postinc0	equ	0xFEE
  2395                           wreg	equ	0xFE8
  2396                           postdec1	equ	0xFE5
  2397                           fsr1l	equ	0xFE1
  2398                           postinc2	equ	0xFDE
  2399                           postdec2	equ	0xFDD
  2400                           fsr2h	equ	0xFDA
  2401                           fsr2l	equ	0xFD9
  2402                           status	equ	0xFD8
  2403                           
  2404 ;; *************** function _fround *****************
  2405 ;; Defined at:
  2406 ;;		line 409 in file "E:\XC8\sources\common\doprnt.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  prec            1    wreg     unsigned char 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  prec            1   67[COMRAM] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  3   58[COMRAM] unsigned char 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2420 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;Total ram usage:       10 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    2
  2427 ;; This function calls:
  2428 ;;		___awdiv
  2429 ;;		___awmod
  2430 ;;		___ftmul
  2431 ;;		___wmul
  2432 ;; This function is called by:
  2433 ;;		_printf
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text4
  2438  001A8A                     __ptext4:
  2439                           	opt stack 0
  2440  001A8A                     _fround:
  2441                           	opt stack 27
  2442                           
  2443                           ;incstack = 0
  2444                           ;fround@prec stored from wreg
  2445  001A8A  6E44               	movwf	fround@prec,c
  2446                           
  2447                           ;doprnt.c: 413: if(prec>=110)
  2448  001A8C  0E6D               	movlw	109
  2449  001A8E  6444               	cpfsgt	fround@prec,c
  2450  001A90  D09B               	goto	l2045
  2451                           
  2452                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2453  001A92  0E00               	movlw	0
  2454  001A94  6E38               	movwf	___wmul@multiplicand+1,c
  2455  001A96  0E03               	movlw	3
  2456  001A98  6E37               	movwf	___wmul@multiplicand,c
  2457  001A9A  0E00               	movlw	0
  2458  001A9C  6E30               	movwf	___awdiv@divisor+1,c
  2459  001A9E  0E0A               	movlw	10
  2460  001AA0  6E2F               	movwf	___awdiv@divisor,c
  2461  001AA2  0E00               	movlw	0
  2462  001AA4  6E2A               	movwf	___awmod@divisor+1,c
  2463  001AA6  0E64               	movlw	100
  2464  001AA8  6E29               	movwf	___awmod@divisor,c
  2465  001AAA  C044  F027         	movff	fround@prec,___awmod@dividend
  2466  001AAE  6A28               	clrf	___awmod@dividend+1,c
  2467  001AB0  ECAC  F013         	call	___awmod	;wreg free
  2468  001AB4  C027  F02D         	movff	?___awmod,___awdiv@dividend
  2469  001AB8  C028  F02E         	movff	?___awmod+1,___awdiv@dividend+1
  2470  001ABC  EC8C  F012         	call	___awdiv	;wreg free
  2471  001AC0  0E09               	movlw	9
  2472  001AC2  242D               	addwf	?___awdiv,w,c
  2473  001AC4  6E35               	movwf	___wmul@multiplier,c
  2474  001AC6  0E00               	movlw	0
  2475  001AC8  202E               	addwfc	?___awdiv+1,w,c
  2476  001ACA  6E36               	movwf	___wmul@multiplier+1,c
  2477  001ACC  ECE7  F014         	call	___wmul	;wreg free
  2478  001AD0  0E29               	movlw	low __npowers_
  2479  001AD2  2435               	addwf	?___wmul,w,c
  2480  001AD4  6EF6               	movwf	tblptrl,c
  2481  001AD6  0E10               	movlw	high __npowers_
  2482  001AD8  2036               	addwfc	?___wmul+1,w,c
  2483  001ADA  6EF7               	movwf	tblptrh,c
  2484  001ADC                     	if	0	;There are less than 3 active tblptr bytes
  2485  001ADC                     	endif
  2486  001ADC  0009               	tblrd		*+
  2487  001ADE  CFF5 F00C          	movff	tablat,___ftmul@f2
  2488  001AE2  0009               	tblrd		*+
  2489  001AE4  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2490  001AE8  000A               	tblrd		*-
  2491  001AEA  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2492  001AEE  0E00               	movlw	0
  2493  001AF0  6E30               	movwf	___awdiv@divisor+1,c
  2494  001AF2  0E64               	movlw	100
  2495  001AF4  6E2F               	movwf	___awdiv@divisor,c
  2496  001AF6  C044  F02D         	movff	fround@prec,___awdiv@dividend
  2497  001AFA  6A2E               	clrf	___awdiv@dividend+1,c
  2498  001AFC  EC8C  F012         	call	___awdiv	;wreg free
  2499  001B00  0E12               	movlw	18
  2500  001B02  242D               	addwf	?___awdiv,w,c
  2501  001B04  6E35               	movwf	___wmul@multiplier,c
  2502  001B06  0E00               	movlw	0
  2503  001B08  202E               	addwfc	?___awdiv+1,w,c
  2504  001B0A  6E36               	movwf	___wmul@multiplier+1,c
  2505  001B0C  0E00               	movlw	0
  2506  001B0E  6E38               	movwf	___wmul@multiplicand+1,c
  2507  001B10  0E03               	movlw	3
  2508  001B12  6E37               	movwf	___wmul@multiplicand,c
  2509  001B14  ECE7  F014         	call	___wmul	;wreg free
  2510  001B18  0E29               	movlw	low __npowers_
  2511  001B1A  2435               	addwf	?___wmul,w,c
  2512  001B1C  6EF6               	movwf	tblptrl,c
  2513  001B1E  0E10               	movlw	high __npowers_
  2514  001B20  2036               	addwfc	?___wmul+1,w,c
  2515  001B22  6EF7               	movwf	tblptrh,c
  2516  001B24                     	if	0	;There are less than 3 active tblptr bytes
  2517  001B24                     	endif
  2518  001B24  0009               	tblrd		*+
  2519  001B26  CFF5 F009          	movff	tablat,___ftmul@f1
  2520  001B2A  0009               	tblrd		*+
  2521  001B2C  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2522  001B30  000A               	tblrd		*-
  2523  001B32  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2524  001B36  EC56  F010         	call	___ftmul	;wreg free
  2525  001B3A  C009  F041         	movff	?___ftmul,_fround$1098
  2526  001B3E  C00A  F042         	movff	?___ftmul+1,_fround$1098+1
  2527  001B42  C00B  F043         	movff	?___ftmul+2,_fround$1098+2
  2528                           
  2529                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2530  001B46  0E00               	movlw	0
  2531  001B48  6E38               	movwf	___wmul@multiplicand+1,c
  2532  001B4A  0E03               	movlw	3
  2533  001B4C  6E37               	movwf	___wmul@multiplicand,c
  2534  001B4E  0E00               	movlw	0
  2535  001B50  6E2A               	movwf	___awmod@divisor+1,c
  2536  001B52  0E0A               	movlw	10
  2537  001B54  6E29               	movwf	___awmod@divisor,c
  2538  001B56  C044  F027         	movff	fround@prec,___awmod@dividend
  2539  001B5A  6A28               	clrf	___awmod@dividend+1,c
  2540  001B5C  ECAC  F013         	call	___awmod	;wreg free
  2541  001B60  C027  F035         	movff	?___awmod,___wmul@multiplier
  2542  001B64  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2543  001B68  ECE7  F014         	call	___wmul	;wreg free
  2544  001B6C  0E29               	movlw	low __npowers_
  2545  001B6E  2435               	addwf	?___wmul,w,c
  2546  001B70  6EF6               	movwf	tblptrl,c
  2547  001B72  0E10               	movlw	high __npowers_
  2548  001B74  2036               	addwfc	?___wmul+1,w,c
  2549  001B76  6EF7               	movwf	tblptrh,c
  2550  001B78                     	if	0	;There are less than 3 active tblptr bytes
  2551  001B78                     	endif
  2552  001B78  0009               	tblrd		*+
  2553  001B7A  CFF5 F00C          	movff	tablat,___ftmul@f2
  2554  001B7E  0009               	tblrd		*+
  2555  001B80  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2556  001B84  000A               	tblrd		*-
  2557  001B86  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2558  001B8A  C041  F009         	movff	_fround$1098,___ftmul@f1
  2559  001B8E  C042  F00A         	movff	_fround$1098+1,___ftmul@f1+1
  2560  001B92  C043  F00B         	movff	_fround$1098+2,___ftmul@f1+2
  2561  001B96  EC56  F010         	call	___ftmul	;wreg free
  2562  001B9A  C009  F03E         	movff	?___ftmul,_fround$1099
  2563  001B9E  C00A  F03F         	movff	?___ftmul+1,_fround$1099+1
  2564  001BA2  C00B  F040         	movff	?___ftmul+2,_fround$1099+2
  2565                           
  2566                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2567  001BA6  C03E  F009         	movff	_fround$1099,___ftmul@f1
  2568  001BAA  C03F  F00A         	movff	_fround$1099+1,___ftmul@f1+1
  2569  001BAE  C040  F00B         	movff	_fround$1099+2,___ftmul@f1+2
  2570  001BB2  0E00               	movlw	0
  2571  001BB4  6E0C               	movwf	___ftmul@f2,c
  2572  001BB6  0E00               	movlw	0
  2573  001BB8  6E0D               	movwf	___ftmul@f2+1,c
  2574  001BBA  0E3F               	movlw	63
  2575  001BBC  6E0E               	movwf	___ftmul@f2+2,c
  2576  001BBE  EC56  F010         	call	___ftmul	;wreg free
  2577  001BC2  D07D               	goto	L7
  2578  001BC4  D083               	goto	l115
  2579  001BC6  D062               	goto	l2053
  2580  001BC8                     l2045:
  2581                           
  2582                           ;doprnt.c: 415: else if(prec > 10)
  2583  001BC8  0E0A               	movlw	10
  2584  001BCA  6444               	cpfsgt	fround@prec,c
  2585  001BCC  D05F               	goto	l2053
  2586                           
  2587                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2588  001BCE  0E00               	movlw	0
  2589  001BD0  6E38               	movwf	___wmul@multiplicand+1,c
  2590  001BD2  0E03               	movlw	3
  2591  001BD4  6E37               	movwf	___wmul@multiplicand,c
  2592  001BD6  0E00               	movlw	0
  2593  001BD8  6E2A               	movwf	___awmod@divisor+1,c
  2594  001BDA  0E0A               	movlw	10
  2595  001BDC  6E29               	movwf	___awmod@divisor,c
  2596  001BDE  C044  F027         	movff	fround@prec,___awmod@dividend
  2597  001BE2  6A28               	clrf	___awmod@dividend+1,c
  2598  001BE4  ECAC  F013         	call	___awmod	;wreg free
  2599  001BE8  C027  F035         	movff	?___awmod,___wmul@multiplier
  2600  001BEC  C028  F036         	movff	?___awmod+1,___wmul@multiplier+1
  2601  001BF0  ECE7  F014         	call	___wmul	;wreg free
  2602  001BF4  0E29               	movlw	low __npowers_
  2603  001BF6  2435               	addwf	?___wmul,w,c
  2604  001BF8  6EF6               	movwf	tblptrl,c
  2605  001BFA  0E10               	movlw	high __npowers_
  2606  001BFC  2036               	addwfc	?___wmul+1,w,c
  2607  001BFE  6EF7               	movwf	tblptrh,c
  2608  001C00                     	if	0	;There are less than 3 active tblptr bytes
  2609  001C00                     	endif
  2610  001C00  0009               	tblrd		*+
  2611  001C02  CFF5 F00C          	movff	tablat,___ftmul@f2
  2612  001C06  0009               	tblrd		*+
  2613  001C08  CFF5 F00D          	movff	tablat,___ftmul@f2+1
  2614  001C0C  000A               	tblrd		*-
  2615  001C0E  CFF5 F00E          	movff	tablat,___ftmul@f2+2
  2616  001C12  0E00               	movlw	0
  2617  001C14  6E30               	movwf	___awdiv@divisor+1,c
  2618  001C16  0E0A               	movlw	10
  2619  001C18  6E2F               	movwf	___awdiv@divisor,c
  2620  001C1A  C044  F02D         	movff	fround@prec,___awdiv@dividend
  2621  001C1E  6A2E               	clrf	___awdiv@dividend+1,c
  2622  001C20  EC8C  F012         	call	___awdiv	;wreg free
  2623  001C24  0E09               	movlw	9
  2624  001C26  242D               	addwf	?___awdiv,w,c
  2625  001C28  6E35               	movwf	___wmul@multiplier,c
  2626  001C2A  0E00               	movlw	0
  2627  001C2C  202E               	addwfc	?___awdiv+1,w,c
  2628  001C2E  6E36               	movwf	___wmul@multiplier+1,c
  2629  001C30  0E00               	movlw	0
  2630  001C32  6E38               	movwf	___wmul@multiplicand+1,c
  2631  001C34  0E03               	movlw	3
  2632  001C36  6E37               	movwf	___wmul@multiplicand,c
  2633  001C38  ECE7  F014         	call	___wmul	;wreg free
  2634  001C3C  0E29               	movlw	low __npowers_
  2635  001C3E  2435               	addwf	?___wmul,w,c
  2636  001C40  6EF6               	movwf	tblptrl,c
  2637  001C42  0E10               	movlw	high __npowers_
  2638  001C44  2036               	addwfc	?___wmul+1,w,c
  2639  001C46  6EF7               	movwf	tblptrh,c
  2640  001C48                     	if	0	;There are less than 3 active tblptr bytes
  2641  001C48                     	endif
  2642  001C48  0009               	tblrd		*+
  2643  001C4A  CFF5 F009          	movff	tablat,___ftmul@f1
  2644  001C4E  0009               	tblrd		*+
  2645  001C50  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2646  001C54  000A               	tblrd		*-
  2647  001C56  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2648  001C5A  EC56  F010         	call	___ftmul	;wreg free
  2649  001C5E  C009  F041         	movff	?___ftmul,_fround$1098
  2650  001C62  C00A  F042         	movff	?___ftmul+1,_fround$1098+1
  2651  001C66  C00B  F043         	movff	?___ftmul+2,_fround$1098+2
  2652                           
  2653                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2654  001C6A  C041  F009         	movff	_fround$1098,___ftmul@f1
  2655  001C6E  C042  F00A         	movff	_fround$1098+1,___ftmul@f1+1
  2656  001C72  C043  F00B         	movff	_fround$1098+2,___ftmul@f1+2
  2657  001C76  0E00               	movlw	0
  2658  001C78  6E0C               	movwf	___ftmul@f2,c
  2659  001C7A  0E00               	movlw	0
  2660  001C7C  6E0D               	movwf	___ftmul@f2+1,c
  2661  001C7E  0E3F               	movlw	63
  2662  001C80  6E0E               	movwf	___ftmul@f2+2,c
  2663  001C82  EC56  F010         	call	___ftmul	;wreg free
  2664  001C86  D01B               	goto	L7
  2665  001C88  D021               	goto	l115
  2666  001C8A  D000               	goto	l2053
  2667  001C8C                     l2053:
  2668                           
  2669                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  2670  001C8C  5044               	movf	fround@prec,w,c
  2671  001C8E  0D03               	mullw	3
  2672  001C90  0E29               	movlw	low __npowers_
  2673  001C92  24F3               	addwf	prodl,w,c
  2674  001C94  6EF6               	movwf	tblptrl,c
  2675  001C96  0E10               	movlw	high __npowers_
  2676  001C98  20F4               	addwfc	prodh,w,c
  2677  001C9A  6EF7               	movwf	tblptrh,c
  2678  001C9C                     	if	0	;There are less than 3 active tblptr bytes
  2679  001C9C                     	endif
  2680  001C9C  0009               	tblrd		*+
  2681  001C9E  CFF5 F009          	movff	tablat,___ftmul@f1
  2682  001CA2  0009               	tblrd		*+
  2683  001CA4  CFF5 F00A          	movff	tablat,___ftmul@f1+1
  2684  001CA8  000A               	tblrd		*-
  2685  001CAA  CFF5 F00B          	movff	tablat,___ftmul@f1+2
  2686  001CAE  0E00               	movlw	0
  2687  001CB0  6E0C               	movwf	___ftmul@f2,c
  2688  001CB2  0E00               	movlw	0
  2689  001CB4  6E0D               	movwf	___ftmul@f2+1,c
  2690  001CB6  0E3F               	movlw	63
  2691  001CB8  6E0E               	movwf	___ftmul@f2+2,c
  2692  001CBA  EC56  F010         	call	___ftmul	;wreg free
  2693  001CBE                     L7:
  2694  001CBE  C009  F03B         	movff	?___ftmul,?_fround
  2695  001CC2  C00A  F03C         	movff	?___ftmul+1,?_fround+1
  2696  001CC6  C00B  F03D         	movff	?___ftmul+2,?_fround+2
  2697  001CCA  D000               	goto	l115
  2698  001CCC                     l115:
  2699  001CCC  0012               	return		;funcret
  2700  001CCE                     __end_of_fround:
  2701                           	opt stack 0
  2702                           tblptru	equ	0xFF8
  2703                           tblptrh	equ	0xFF7
  2704                           tblptrl	equ	0xFF6
  2705                           tablat	equ	0xFF5
  2706                           prodh	equ	0xFF4
  2707                           prodl	equ	0xFF3
  2708                           postinc0	equ	0xFEE
  2709                           wreg	equ	0xFE8
  2710                           postdec1	equ	0xFE5
  2711                           fsr1l	equ	0xFE1
  2712                           postinc2	equ	0xFDE
  2713                           postdec2	equ	0xFDD
  2714                           fsr2h	equ	0xFDA
  2715                           fsr2l	equ	0xFD9
  2716                           status	equ	0xFD8
  2717                           
  2718 ;; *************** function ___wmul *****************
  2719 ;; Defined at:
  2720 ;;		line 15 in file "E:\XC8\sources\common\Umul16.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  multiplier      2   52[COMRAM] unsigned int 
  2723 ;;  multiplicand    2   54[COMRAM] unsigned int 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  product         2   56[COMRAM] unsigned int 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  2   52[COMRAM] unsigned int 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0, prodl, prodh
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2735 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;Total ram usage:        6 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_fround
  2745 ;;		_scale
  2746 ;;		_printf
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text5
  2751  0029CE                     __ptext5:
  2752                           	opt stack 0
  2753  0029CE                     ___wmul:
  2754                           	opt stack 28
  2755                           
  2756                           ;incstack = 0
  2757  0029CE  5035               	movf	___wmul@multiplier,w,c
  2758  0029D0  0237               	mulwf	___wmul@multiplicand,c
  2759  0029D2  CFF3 F039          	movff	prodl,___wmul@product
  2760  0029D6  CFF4 F03A          	movff	prodh,___wmul@product+1
  2761  0029DA  5035               	movf	___wmul@multiplier,w,c
  2762  0029DC  0238               	mulwf	___wmul@multiplicand+1,c
  2763  0029DE  50F3               	movf	prodl,w,c
  2764  0029E0  263A               	addwf	___wmul@product+1,f,c
  2765  0029E2  5036               	movf	___wmul@multiplier+1,w,c
  2766  0029E4  0237               	mulwf	___wmul@multiplicand,c
  2767  0029E6  50F3               	movf	prodl,w,c
  2768  0029E8  263A               	addwf	___wmul@product+1,f,c
  2769  0029EA  C039  F035         	movff	___wmul@product,?___wmul
  2770  0029EE  C03A  F036         	movff	___wmul@product+1,?___wmul+1
  2771  0029F2  D000               	goto	l214
  2772  0029F4                     l214:
  2773  0029F4  0012               	return		;funcret
  2774  0029F6                     __end_of___wmul:
  2775                           	opt stack 0
  2776                           tblptru	equ	0xFF8
  2777                           tblptrh	equ	0xFF7
  2778                           tblptrl	equ	0xFF6
  2779                           tablat	equ	0xFF5
  2780                           prodh	equ	0xFF4
  2781                           prodl	equ	0xFF3
  2782                           postinc0	equ	0xFEE
  2783                           wreg	equ	0xFE8
  2784                           postdec1	equ	0xFE5
  2785                           fsr1l	equ	0xFE1
  2786                           postinc2	equ	0xFDE
  2787                           postdec2	equ	0xFDD
  2788                           fsr2h	equ	0xFDA
  2789                           fsr2l	equ	0xFD9
  2790                           status	equ	0xFD8
  2791                           
  2792 ;; *************** function ___ftmul *****************
  2793 ;; Defined at:
  2794 ;;		line 62 in file "E:\XC8\sources\common\ftmul.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  f1              3    8[COMRAM] float 
  2797 ;;  f2              3   11[COMRAM] float 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  2800 ;;  sign            1   22[COMRAM] unsigned char 
  2801 ;;  cntr            1   21[COMRAM] unsigned char 
  2802 ;;  exp             1   17[COMRAM] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  3    8[COMRAM] float 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2812 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;Total ram usage:       15 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    1
  2819 ;; This function calls:
  2820 ;;		___ftpack
  2821 ;; This function is called by:
  2822 ;;		_main
  2823 ;;		_fround
  2824 ;;		_scale
  2825 ;;		_printf
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text6
  2830  0020AC                     __ptext6:
  2831                           	opt stack 0
  2832  0020AC                     ___ftmul:
  2833                           	opt stack 27
  2834                           
  2835                           ;incstack = 0
  2836  0020AC  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  2837  0020B0  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2838  0020B2  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2839  0020B4  340A               	rlcf	___ftmul@f1+1,w,c
  2840  0020B6  360F               	rlcf	??___ftmul& (0+255),f,c
  2841  0020B8  E301               	bnc	u1821
  2842  0020BA  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2843  0020BC                     u1821:
  2844  0020BC  500F               	movf	??___ftmul,w,c
  2845  0020BE  6E12               	movwf	___ftmul@exp,c
  2846  0020C0  5012               	movf	___ftmul@exp,w,c
  2847  0020C2  A4D8               	btfss	status,2,c
  2848  0020C4  D002               	goto	l1903
  2849  0020C6  D00E               	goto	l1905
  2850  0020C8  D06C               	goto	l643
  2851  0020CA                     l1903:
  2852  0020CA  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  2853  0020CE  6A10               	clrf	(??___ftmul+1)& (0+255),c
  2854  0020D0  6A11               	clrf	(??___ftmul+2)& (0+255),c
  2855  0020D2  340D               	rlcf	___ftmul@f2+1,w,c
  2856  0020D4  360F               	rlcf	??___ftmul& (0+255),f,c
  2857  0020D6  E301               	bnc	u1841
  2858  0020D8  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  2859  0020DA                     u1841:
  2860  0020DA  500F               	movf	??___ftmul,w,c
  2861  0020DC  6E17               	movwf	___ftmul@sign,c
  2862  0020DE  5017               	movf	___ftmul@sign,w,c
  2863  0020E0  A4D8               	btfss	status,2,c
  2864  0020E2  D007               	goto	l1909
  2865  0020E4                     l1905:
  2866  0020E4  0E00               	movlw	0
  2867  0020E6  6E09               	movwf	?___ftmul,c
  2868  0020E8  0E00               	movlw	0
  2869  0020EA  6E0A               	movwf	?___ftmul+1,c
  2870  0020EC  0E00               	movlw	0
  2871  0020EE  6E0B               	movwf	?___ftmul+2,c
  2872  0020F0  D058               	goto	l643
  2873  0020F2                     l1909:
  2874  0020F2  5017               	movf	___ftmul@sign,w,c
  2875  0020F4  0F7B               	addlw	123
  2876  0020F6  2612               	addwf	___ftmul@exp,f,c
  2877  0020F8  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  2878  0020FC  500E               	movf	___ftmul@f2+2,w,c
  2879  0020FE  1A17               	xorwf	___ftmul@sign,f,c
  2880  002100  0E80               	movlw	128
  2881  002102  1617               	andwf	___ftmul@sign,f,c
  2882  002104  8E0A               	bsf	___ftmul@f1+1,7,c
  2883  002106  8E0D               	bsf	___ftmul@f2+1,7,c
  2884  002108  0EFF               	movlw	255
  2885  00210A  160C               	andwf	___ftmul@f2,f,c
  2886  00210C  0EFF               	movlw	255
  2887  00210E  160D               	andwf	___ftmul@f2+1,f,c
  2888  002110  0E00               	movlw	0
  2889  002112  160E               	andwf	___ftmul@f2+2,f,c
  2890  002114  0E00               	movlw	0
  2891  002116  6E13               	movwf	___ftmul@f3_as_product,c
  2892  002118  0E00               	movlw	0
  2893  00211A  6E14               	movwf	___ftmul@f3_as_product+1,c
  2894  00211C  0E00               	movlw	0
  2895  00211E  6E15               	movwf	___ftmul@f3_as_product+2,c
  2896  002120  0E07               	movlw	7
  2897  002122  6E16               	movwf	___ftmul@cntr,c
  2898  002124  D000               	goto	l1923
  2899  002126                     l1923:
  2900  002126  A009               	btfss	___ftmul@f1,0,c
  2901  002128  D007               	goto	l1927
  2902  00212A  500C               	movf	___ftmul@f2,w,c
  2903  00212C  2613               	addwf	___ftmul@f3_as_product,f,c
  2904  00212E  500D               	movf	___ftmul@f2+1,w,c
  2905  002130  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2906  002132  500E               	movf	___ftmul@f2+2,w,c
  2907  002134  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2908  002136  D000               	goto	l1927
  2909  002138                     l1927:
  2910  002138  90D8               	bcf	status,0,c
  2911  00213A  320B               	rrcf	___ftmul@f1+2,f,c
  2912  00213C  320A               	rrcf	___ftmul@f1+1,f,c
  2913  00213E  3209               	rrcf	___ftmul@f1,f,c
  2914  002140  90D8               	bcf	status,0,c
  2915  002142  360C               	rlcf	___ftmul@f2,f,c
  2916  002144  360D               	rlcf	___ftmul@f2+1,f,c
  2917  002146  360E               	rlcf	___ftmul@f2+2,f,c
  2918  002148  2E16               	decfsz	___ftmul@cntr,f,c
  2919  00214A  D7ED               	goto	l1923
  2920  00214C  D000               	goto	l1931
  2921  00214E                     l1931:
  2922  00214E  0E09               	movlw	9
  2923  002150  6E16               	movwf	___ftmul@cntr,c
  2924  002152  D000               	goto	l1933
  2925  002154                     l1933:
  2926  002154  A009               	btfss	___ftmul@f1,0,c
  2927  002156  D007               	goto	l1937
  2928  002158  500C               	movf	___ftmul@f2,w,c
  2929  00215A  2613               	addwf	___ftmul@f3_as_product,f,c
  2930  00215C  500D               	movf	___ftmul@f2+1,w,c
  2931  00215E  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  2932  002160  500E               	movf	___ftmul@f2+2,w,c
  2933  002162  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  2934  002164  D000               	goto	l1937
  2935  002166                     l1937:
  2936  002166  90D8               	bcf	status,0,c
  2937  002168  320B               	rrcf	___ftmul@f1+2,f,c
  2938  00216A  320A               	rrcf	___ftmul@f1+1,f,c
  2939  00216C  3209               	rrcf	___ftmul@f1,f,c
  2940  00216E  90D8               	bcf	status,0,c
  2941  002170  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  2942  002172  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  2943  002174  3213               	rrcf	___ftmul@f3_as_product,f,c
  2944  002176  2E16               	decfsz	___ftmul@cntr,f,c
  2945  002178  D7ED               	goto	l1933
  2946  00217A  D000               	goto	l1941
  2947  00217C                     l1941:
  2948  00217C  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2949  002180  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2950  002184  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2951  002188  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  2952  00218C  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  2953  002190  EC29  F012         	call	___ftpack	;wreg free
  2954  002194  C001  F009         	movff	?___ftpack,?___ftmul
  2955  002198  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  2956  00219C  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  2957  0021A0  D000               	goto	l643
  2958  0021A2                     l643:
  2959  0021A2  0012               	return		;funcret
  2960  0021A4                     __end_of___ftmul:
  2961                           	opt stack 0
  2962                           tblptru	equ	0xFF8
  2963                           tblptrh	equ	0xFF7
  2964                           tblptrl	equ	0xFF6
  2965                           tablat	equ	0xFF5
  2966                           prodh	equ	0xFF4
  2967                           prodl	equ	0xFF3
  2968                           postinc0	equ	0xFEE
  2969                           wreg	equ	0xFE8
  2970                           postdec1	equ	0xFE5
  2971                           fsr1l	equ	0xFE1
  2972                           postinc2	equ	0xFDE
  2973                           postdec2	equ	0xFDD
  2974                           fsr2h	equ	0xFDA
  2975                           fsr2l	equ	0xFD9
  2976                           status	equ	0xFD8
  2977                           
  2978 ;; *************** function ___awmod *****************
  2979 ;; Defined at:
  2980 ;;		line 8 in file "E:\XC8\sources\common\awmod.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  dividend        2   38[COMRAM] int 
  2983 ;;  divisor         2   40[COMRAM] int 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  sign            1   43[COMRAM] unsigned char 
  2986 ;;  counter         1   42[COMRAM] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  2   38[COMRAM] int 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2, status,0
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2996 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2997 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;Total ram usage:        6 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_main
  3006 ;;		_fround
  3007 ;;		_scale
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text7
  3012  002758                     __ptext7:
  3013                           	opt stack 0
  3014  002758                     ___awmod:
  3015                           	opt stack 28
  3016                           
  3017                           ;incstack = 0
  3018  002758  0E00               	movlw	0
  3019  00275A  6E2C               	movwf	___awmod@sign,c
  3020  00275C  AE28               	btfss	___awmod@dividend+1,7,c
  3021  00275E  D007               	goto	l1997
  3022  002760  6C27               	negf	___awmod@dividend,c
  3023  002762  1E28               	comf	___awmod@dividend+1,f,c
  3024  002764  B0D8               	btfsc	status,0,c
  3025  002766  2A28               	incf	___awmod@dividend+1,f,c
  3026  002768  0E01               	movlw	1
  3027  00276A  6E2C               	movwf	___awmod@sign,c
  3028  00276C  D000               	goto	l1997
  3029  00276E                     l1997:
  3030  00276E  AE2A               	btfss	___awmod@divisor+1,7,c
  3031  002770  D005               	goto	l2001
  3032  002772  6C29               	negf	___awmod@divisor,c
  3033  002774  1E2A               	comf	___awmod@divisor+1,f,c
  3034  002776  B0D8               	btfsc	status,0,c
  3035  002778  2A2A               	incf	___awmod@divisor+1,f,c
  3036  00277A  D000               	goto	l2001
  3037  00277C                     l2001:
  3038  00277C  5029               	movf	___awmod@divisor,w,c
  3039  00277E  102A               	iorwf	___awmod@divisor+1,w,c
  3040  002780  B4D8               	btfsc	status,2,c
  3041  002782  D01D               	goto	l2017
  3042  002784  0E01               	movlw	1
  3043  002786  6E2B               	movwf	___awmod@counter,c
  3044  002788  D005               	goto	l2007
  3045  00278A                     l2005:
  3046  00278A  90D8               	bcf	status,0,c
  3047  00278C  3629               	rlcf	___awmod@divisor,f,c
  3048  00278E  362A               	rlcf	___awmod@divisor+1,f,c
  3049  002790  2A2B               	incf	___awmod@counter,f,c
  3050  002792  D000               	goto	l2007
  3051  002794                     l2007:
  3052  002794  BE2A               	btfsc	___awmod@divisor+1,7,c
  3053  002796  D002               	goto	l2009
  3054  002798  D7F8               	goto	l2005
  3055  00279A  D000               	goto	l2009
  3056  00279C                     l2009:
  3057  00279C  5029               	movf	___awmod@divisor,w,c
  3058  00279E  5C27               	subwf	___awmod@dividend,w,c
  3059  0027A0  502A               	movf	___awmod@divisor+1,w,c
  3060  0027A2  5828               	subwfb	___awmod@dividend+1,w,c
  3061  0027A4  A0D8               	btfss	status,0,c
  3062  0027A6  D005               	goto	l2013
  3063  0027A8  5029               	movf	___awmod@divisor,w,c
  3064  0027AA  5E27               	subwf	___awmod@dividend,f,c
  3065  0027AC  502A               	movf	___awmod@divisor+1,w,c
  3066  0027AE  5A28               	subwfb	___awmod@dividend+1,f,c
  3067  0027B0  D000               	goto	l2013
  3068  0027B2                     l2013:
  3069  0027B2  90D8               	bcf	status,0,c
  3070  0027B4  322A               	rrcf	___awmod@divisor+1,f,c
  3071  0027B6  3229               	rrcf	___awmod@divisor,f,c
  3072  0027B8  2E2B               	decfsz	___awmod@counter,f,c
  3073  0027BA  D7F0               	goto	l2009
  3074  0027BC  D000               	goto	l2017
  3075  0027BE                     l2017:
  3076  0027BE  502C               	movf	___awmod@sign,w,c
  3077  0027C0  B4D8               	btfsc	status,2,c
  3078  0027C2  D005               	goto	l2021
  3079  0027C4  6C27               	negf	___awmod@dividend,c
  3080  0027C6  1E28               	comf	___awmod@dividend+1,f,c
  3081  0027C8  B0D8               	btfsc	status,0,c
  3082  0027CA  2A28               	incf	___awmod@dividend+1,f,c
  3083  0027CC  D000               	goto	l2021
  3084  0027CE                     l2021:
  3085  0027CE  C027  F027         	movff	___awmod@dividend,?___awmod
  3086  0027D2  C028  F028         	movff	___awmod@dividend+1,?___awmod+1
  3087  0027D6  D000               	goto	l420
  3088  0027D8                     l420:
  3089  0027D8  0012               	return		;funcret
  3090  0027DA                     __end_of___awmod:
  3091                           	opt stack 0
  3092                           tblptru	equ	0xFF8
  3093                           tblptrh	equ	0xFF7
  3094                           tblptrl	equ	0xFF6
  3095                           tablat	equ	0xFF5
  3096                           prodh	equ	0xFF4
  3097                           prodl	equ	0xFF3
  3098                           postinc0	equ	0xFEE
  3099                           wreg	equ	0xFE8
  3100                           postdec1	equ	0xFE5
  3101                           fsr1l	equ	0xFE1
  3102                           postinc2	equ	0xFDE
  3103                           postdec2	equ	0xFDD
  3104                           fsr2h	equ	0xFDA
  3105                           fsr2l	equ	0xFD9
  3106                           status	equ	0xFD8
  3107                           
  3108 ;; *************** function ___awdiv *****************
  3109 ;; Defined at:
  3110 ;;		line 8 in file "E:\XC8\sources\common\awdiv.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  dividend        2   44[COMRAM] int 
  3113 ;;  divisor         2   46[COMRAM] int 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;  quotient        2   50[COMRAM] int 
  3116 ;;  sign            1   49[COMRAM] unsigned char 
  3117 ;;  counter         1   48[COMRAM] unsigned char 
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  2   44[COMRAM] int 
  3120 ;; Registers used:
  3121 ;;		wreg, status,2, status,0
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3127 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;Total ram usage:        8 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_fround
  3137 ;;		_scale
  3138 ;;		_printf
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text8
  3143  002518                     __ptext8:
  3144                           	opt stack 0
  3145  002518                     ___awdiv:
  3146                           	opt stack 28
  3147                           
  3148                           ;incstack = 0
  3149  002518  0E00               	movlw	0
  3150  00251A  6E32               	movwf	___awdiv@sign,c
  3151  00251C  AE30               	btfss	___awdiv@divisor+1,7,c
  3152  00251E  D007               	goto	l1953
  3153  002520  6C2F               	negf	___awdiv@divisor,c
  3154  002522  1E30               	comf	___awdiv@divisor+1,f,c
  3155  002524  B0D8               	btfsc	status,0,c
  3156  002526  2A30               	incf	___awdiv@divisor+1,f,c
  3157  002528  0E01               	movlw	1
  3158  00252A  6E32               	movwf	___awdiv@sign,c
  3159  00252C  D000               	goto	l1953
  3160  00252E                     l1953:
  3161  00252E  AE2E               	btfss	___awdiv@dividend+1,7,c
  3162  002530  D007               	goto	l1959
  3163  002532  6C2D               	negf	___awdiv@dividend,c
  3164  002534  1E2E               	comf	___awdiv@dividend+1,f,c
  3165  002536  B0D8               	btfsc	status,0,c
  3166  002538  2A2E               	incf	___awdiv@dividend+1,f,c
  3167  00253A  0E01               	movlw	1
  3168  00253C  1A32               	xorwf	___awdiv@sign,f,c
  3169  00253E  D000               	goto	l1959
  3170  002540                     l1959:
  3171  002540  0E00               	movlw	0
  3172  002542  6E34               	movwf	___awdiv@quotient+1,c
  3173  002544  0E00               	movlw	0
  3174  002546  6E33               	movwf	___awdiv@quotient,c
  3175  002548  502F               	movf	___awdiv@divisor,w,c
  3176  00254A  1030               	iorwf	___awdiv@divisor+1,w,c
  3177  00254C  B4D8               	btfsc	status,2,c
  3178  00254E  D021               	goto	l1981
  3179  002550  0E01               	movlw	1
  3180  002552  6E31               	movwf	___awdiv@counter,c
  3181  002554  D005               	goto	l1967
  3182  002556                     l1965:
  3183  002556  90D8               	bcf	status,0,c
  3184  002558  362F               	rlcf	___awdiv@divisor,f,c
  3185  00255A  3630               	rlcf	___awdiv@divisor+1,f,c
  3186  00255C  2A31               	incf	___awdiv@counter,f,c
  3187  00255E  D000               	goto	l1967
  3188  002560                     l1967:
  3189  002560  BE30               	btfsc	___awdiv@divisor+1,7,c
  3190  002562  D002               	goto	l1969
  3191  002564  D7F8               	goto	l1965
  3192  002566  D000               	goto	l1969
  3193  002568                     l1969:
  3194  002568  90D8               	bcf	status,0,c
  3195  00256A  3633               	rlcf	___awdiv@quotient,f,c
  3196  00256C  3634               	rlcf	___awdiv@quotient+1,f,c
  3197  00256E  502F               	movf	___awdiv@divisor,w,c
  3198  002570  5C2D               	subwf	___awdiv@dividend,w,c
  3199  002572  5030               	movf	___awdiv@divisor+1,w,c
  3200  002574  582E               	subwfb	___awdiv@dividend+1,w,c
  3201  002576  A0D8               	btfss	status,0,c
  3202  002578  D006               	goto	l1977
  3203  00257A  502F               	movf	___awdiv@divisor,w,c
  3204  00257C  5E2D               	subwf	___awdiv@dividend,f,c
  3205  00257E  5030               	movf	___awdiv@divisor+1,w,c
  3206  002580  5A2E               	subwfb	___awdiv@dividend+1,f,c
  3207  002582  8033               	bsf	___awdiv@quotient,0,c
  3208  002584  D000               	goto	l1977
  3209  002586                     l1977:
  3210  002586  90D8               	bcf	status,0,c
  3211  002588  3230               	rrcf	___awdiv@divisor+1,f,c
  3212  00258A  322F               	rrcf	___awdiv@divisor,f,c
  3213  00258C  2E31               	decfsz	___awdiv@counter,f,c
  3214  00258E  D7EC               	goto	l1969
  3215  002590  D000               	goto	l1981
  3216  002592                     l1981:
  3217  002592  5032               	movf	___awdiv@sign,w,c
  3218  002594  B4D8               	btfsc	status,2,c
  3219  002596  D005               	goto	l1985
  3220  002598  6C33               	negf	___awdiv@quotient,c
  3221  00259A  1E34               	comf	___awdiv@quotient+1,f,c
  3222  00259C  B0D8               	btfsc	status,0,c
  3223  00259E  2A34               	incf	___awdiv@quotient+1,f,c
  3224  0025A0  D000               	goto	l1985
  3225  0025A2                     l1985:
  3226  0025A2  C033  F02D         	movff	___awdiv@quotient,?___awdiv
  3227  0025A6  C034  F02E         	movff	___awdiv@quotient+1,?___awdiv+1
  3228  0025AA  D000               	goto	l407
  3229  0025AC                     l407:
  3230  0025AC  0012               	return		;funcret
  3231  0025AE                     __end_of___awdiv:
  3232                           	opt stack 0
  3233                           tblptru	equ	0xFF8
  3234                           tblptrh	equ	0xFF7
  3235                           tblptrl	equ	0xFF6
  3236                           tablat	equ	0xFF5
  3237                           prodh	equ	0xFF4
  3238                           prodl	equ	0xFF3
  3239                           postinc0	equ	0xFEE
  3240                           wreg	equ	0xFE8
  3241                           postdec1	equ	0xFE5
  3242                           fsr1l	equ	0xFE1
  3243                           postinc2	equ	0xFDE
  3244                           postdec2	equ	0xFDD
  3245                           fsr2h	equ	0xFDA
  3246                           fsr2l	equ	0xFD9
  3247                           status	equ	0xFD8
  3248                           
  3249 ;; *************** function __tdiv_to_l_ *****************
  3250 ;; Defined at:
  3251 ;;		line 60 in file "E:\XC8\sources\common\ftdivl.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  f1              3    0[COMRAM] float 
  3254 ;;  f2              3    3[COMRAM] float 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  quot            4    9[COMRAM] unsigned long 
  3257 ;;  exp1            1   14[COMRAM] unsigned char 
  3258 ;;  cntr            1   13[COMRAM] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  4    0[COMRAM] unsigned long 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3268 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3269 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;Total ram usage:       15 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_printf
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text9
  3282  001E92                     __ptext9:
  3283                           	opt stack 0
  3284  001E92                     __tdiv_to_l_:
  3285                           	opt stack 29
  3286                           
  3287                           ;incstack = 0
  3288  001E92  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3289  001E96  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3290  001E98  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3291  001E9A  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3292  001E9C  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3293  001E9E  E301               	bnc	u2081
  3294  001EA0  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3295  001EA2                     u2081:
  3296  001EA2  5007               	movf	??__tdiv_to_l_,w,c
  3297  001EA4  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3298  001EA6  500F               	movf	__tdiv_to_l_@exp1,w,c
  3299  001EA8  A4D8               	btfss	status,2,c
  3300  001EAA  D002               	goto	l2101
  3301  001EAC  D05D               	goto	l2143
  3302  001EAE  D078               	goto	l619
  3303  001EB0                     l2101:
  3304  001EB0  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3305  001EB4  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3306  001EB6  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3307  001EB8  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3308  001EBA  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3309  001EBC  E301               	bnc	u2101
  3310  001EBE  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3311  001EC0                     u2101:
  3312  001EC0  5007               	movf	??__tdiv_to_l_,w,c
  3313  001EC2  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3314  001EC4  500E               	movf	__tdiv_to_l_@cntr,w,c
  3315  001EC6  A4D8               	btfss	status,2,c
  3316  001EC8  D002               	goto	l2107
  3317  001ECA  D04E               	goto	l2143
  3318  001ECC  D069               	goto	l619
  3319  001ECE                     l2107:
  3320  001ECE  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3321  001ED0  0EFF               	movlw	255
  3322  001ED2  1601               	andwf	__tdiv_to_l_@f1,f,c
  3323  001ED4  0EFF               	movlw	255
  3324  001ED6  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3325  001ED8  0E00               	movlw	0
  3326  001EDA  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3327  001EDC  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3328  001EDE  0EFF               	movlw	255
  3329  001EE0  1604               	andwf	__tdiv_to_l_@f2,f,c
  3330  001EE2  0EFF               	movlw	255
  3331  001EE4  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3332  001EE6  0E00               	movlw	0
  3333  001EE8  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3334  001EEA  0E00               	movlw	0
  3335  001EEC  6E0A               	movwf	__tdiv_to_l_@quot,c
  3336  001EEE  0E00               	movlw	0
  3337  001EF0  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3338  001EF2  0E00               	movlw	0
  3339  001EF4  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3340  001EF6  0E00               	movlw	0
  3341  001EF8  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3342  001EFA  0E7F               	movlw	127
  3343  001EFC  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3344  001EFE  500E               	movf	__tdiv_to_l_@cntr,w,c
  3345  001F00  0F98               	addlw	152
  3346  001F02  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3347  001F04  0E18               	movlw	24
  3348  001F06  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3349  001F08                     l621:
  3350  001F08  90D8               	bcf	status,0,c
  3351  001F0A  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3352  001F0C  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3353  001F0E  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3354  001F10  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3355  001F12  5004               	movf	__tdiv_to_l_@f2,w,c
  3356  001F14  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3357  001F16  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3358  001F18  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3359  001F1A  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3360  001F1C  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3361  001F1E  A0D8               	btfss	status,0,c
  3362  001F20  D007               	goto	l622
  3363  001F22  5004               	movf	__tdiv_to_l_@f2,w,c
  3364  001F24  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3365  001F26  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3366  001F28  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3367  001F2A  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3368  001F2C  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3369  001F2E  800A               	bsf	__tdiv_to_l_@quot,0,c
  3370  001F30                     l622:
  3371  001F30  90D8               	bcf	status,0,c
  3372  001F32  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3373  001F34  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3374  001F36  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3375  001F38  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3376  001F3A  D7E6               	goto	l621
  3377  001F3C  D000               	goto	l2129
  3378  001F3E                     l2129:
  3379  001F3E  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3380  001F40  D010               	goto	l2141
  3381  001F42  500F               	movf	__tdiv_to_l_@exp1,w,c
  3382  001F44  0A80               	xorlw	128
  3383  001F46  0F97               	addlw	151
  3384  001F48  B0D8               	btfsc	status,0,c
  3385  001F4A  D003               	goto	l2137
  3386  001F4C  D00D               	goto	l2143
  3387  001F4E  D028               	goto	l619
  3388  001F50  D000               	goto	l2137
  3389  001F52                     l2137:
  3390  001F52  90D8               	bcf	status,0,c
  3391  001F54  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3392  001F56  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3393  001F58  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3394  001F5A  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3395  001F5C  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3396  001F5E  D7F9               	goto	l2137
  3397  001F60  D017               	goto	l628
  3398  001F62                     l2141:
  3399  001F62  0E17               	movlw	23
  3400  001F64  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3401  001F66  D011               	goto	l2149
  3402  001F68                     l2143:
  3403  001F68  0E00               	movlw	0
  3404  001F6A  6E01               	movwf	?__tdiv_to_l_,c
  3405  001F6C  0E00               	movlw	0
  3406  001F6E  6E02               	movwf	?__tdiv_to_l_+1,c
  3407  001F70  0E00               	movlw	0
  3408  001F72  6E03               	movwf	?__tdiv_to_l_+2,c
  3409  001F74  0E00               	movlw	0
  3410  001F76  6E04               	movwf	?__tdiv_to_l_+3,c
  3411  001F78  D013               	goto	l619
  3412  001F7A  D007               	goto	l2149
  3413  001F7C                     l2147:
  3414  001F7C  90D8               	bcf	status,0,c
  3415  001F7E  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3416  001F80  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3417  001F82  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3418  001F84  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3419  001F86  060F               	decf	__tdiv_to_l_@exp1,f,c
  3420  001F88  D000               	goto	l2149
  3421  001F8A                     l2149:
  3422  001F8A  500F               	movf	__tdiv_to_l_@exp1,w,c
  3423  001F8C  A4D8               	btfss	status,2,c
  3424  001F8E  D7F6               	goto	l2147
  3425  001F90                     l628:
  3426  001F90  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3427  001F94  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3428  001F98  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3429  001F9C  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3430  001FA0                     l619:
  3431  001FA0  0012               	return		;funcret
  3432  001FA2                     __end_of__tdiv_to_l_:
  3433                           	opt stack 0
  3434                           tblptru	equ	0xFF8
  3435                           tblptrh	equ	0xFF7
  3436                           tblptrl	equ	0xFF6
  3437                           tablat	equ	0xFF5
  3438                           prodh	equ	0xFF4
  3439                           prodl	equ	0xFF3
  3440                           postinc0	equ	0xFEE
  3441                           wreg	equ	0xFE8
  3442                           postdec1	equ	0xFE5
  3443                           fsr1l	equ	0xFE1
  3444                           postinc2	equ	0xFDE
  3445                           postdec2	equ	0xFDD
  3446                           fsr2h	equ	0xFDA
  3447                           fsr2l	equ	0xFD9
  3448                           status	equ	0xFD8
  3449                           
  3450 ;; *************** function __div_to_l_ *****************
  3451 ;; Defined at:
  3452 ;;		line 60 in file "E:\XC8\sources\common\fldivl.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  f1              3    0[COMRAM] unsigned long 
  3455 ;;  f2              3    3[COMRAM] unsigned long 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  quot            4    6[COMRAM] unsigned long 
  3458 ;;  exp1            1   11[COMRAM] unsigned char 
  3459 ;;  cntr            1   10[COMRAM] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  4    0[COMRAM] unsigned long 
  3462 ;; Registers used:
  3463 ;;		wreg, status,2, status,0
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3469 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;Total ram usage:       12 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; This function calls:
  3476 ;;		Nothing
  3477 ;; This function is called by:
  3478 ;;		_printf
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           	psect	text10
  3483  001FA2                     __ptext10:
  3484                           	opt stack 0
  3485  001FA2                     __div_to_l_:
  3486                           	opt stack 29
  3487                           
  3488                           ;incstack = 0
  3489  001FA2  3403               	rlcf	__div_to_l_@f1+2,w,c
  3490  001FA4  3404               	rlcf	__div_to_l_@f1+3,w,c
  3491  001FA6  6E0C               	movwf	__div_to_l_@exp1,c
  3492  001FA8  500C               	movf	__div_to_l_@exp1,w,c
  3493  001FAA  A4D8               	btfss	status,2,c
  3494  001FAC  D002               	goto	l2157
  3495  001FAE  D061               	goto	l2203
  3496  001FB0  D07C               	goto	l498
  3497  001FB2                     l2157:
  3498  001FB2  3406               	rlcf	__div_to_l_@f2+2,w,c
  3499  001FB4  3407               	rlcf	__div_to_l_@f2+3,w,c
  3500  001FB6  6E0B               	movwf	__div_to_l_@cntr,c
  3501  001FB8  500B               	movf	__div_to_l_@cntr,w,c
  3502  001FBA  A4D8               	btfss	status,2,c
  3503  001FBC  D002               	goto	l2163
  3504  001FBE  D059               	goto	l2203
  3505  001FC0  D074               	goto	l498
  3506  001FC2                     l2163:
  3507  001FC2  8E03               	bsf	__div_to_l_@f1+2,7,c
  3508  001FC4  0EFF               	movlw	255
  3509  001FC6  1601               	andwf	__div_to_l_@f1,f,c
  3510  001FC8  0EFF               	movlw	255
  3511  001FCA  1602               	andwf	__div_to_l_@f1+1,f,c
  3512  001FCC  0EFF               	movlw	255
  3513  001FCE  1603               	andwf	__div_to_l_@f1+2,f,c
  3514  001FD0  0E00               	movlw	0
  3515  001FD2  1604               	andwf	__div_to_l_@f1+3,f,c
  3516  001FD4  8E06               	bsf	__div_to_l_@f2+2,7,c
  3517  001FD6  0EFF               	movlw	255
  3518  001FD8  1604               	andwf	__div_to_l_@f2,f,c
  3519  001FDA  0EFF               	movlw	255
  3520  001FDC  1605               	andwf	__div_to_l_@f2+1,f,c
  3521  001FDE  0EFF               	movlw	255
  3522  001FE0  1606               	andwf	__div_to_l_@f2+2,f,c
  3523  001FE2  0E00               	movlw	0
  3524  001FE4  1607               	andwf	__div_to_l_@f2+3,f,c
  3525  001FE6  0E00               	movlw	0
  3526  001FE8  6E07               	movwf	__div_to_l_@quot,c
  3527  001FEA  0E00               	movlw	0
  3528  001FEC  6E08               	movwf	__div_to_l_@quot+1,c
  3529  001FEE  0E00               	movlw	0
  3530  001FF0  6E09               	movwf	__div_to_l_@quot+2,c
  3531  001FF2  0E00               	movlw	0
  3532  001FF4  6E0A               	movwf	__div_to_l_@quot+3,c
  3533  001FF6  0E7F               	movlw	127
  3534  001FF8  5E0C               	subwf	__div_to_l_@exp1,f,c
  3535  001FFA  500B               	movf	__div_to_l_@cntr,w,c
  3536  001FFC  0FA0               	addlw	160
  3537  001FFE  5E0C               	subwf	__div_to_l_@exp1,f,c
  3538  002000  0E20               	movlw	32
  3539  002002  6E0B               	movwf	__div_to_l_@cntr,c
  3540  002004  D000               	goto	l2177
  3541  002006                     l2177:
  3542  002006  90D8               	bcf	status,0,c
  3543  002008  3607               	rlcf	__div_to_l_@quot,f,c
  3544  00200A  3608               	rlcf	__div_to_l_@quot+1,f,c
  3545  00200C  3609               	rlcf	__div_to_l_@quot+2,f,c
  3546  00200E  360A               	rlcf	__div_to_l_@quot+3,f,c
  3547  002010  5004               	movf	__div_to_l_@f2,w,c
  3548  002012  5C01               	subwf	__div_to_l_@f1,w,c
  3549  002014  5005               	movf	__div_to_l_@f2+1,w,c
  3550  002016  5802               	subwfb	__div_to_l_@f1+1,w,c
  3551  002018  5006               	movf	__div_to_l_@f2+2,w,c
  3552  00201A  5803               	subwfb	__div_to_l_@f1+2,w,c
  3553  00201C  5007               	movf	__div_to_l_@f2+3,w,c
  3554  00201E  5804               	subwfb	__div_to_l_@f1+3,w,c
  3555  002020  A0D8               	btfss	status,0,c
  3556  002022  D00A               	goto	l2185
  3557  002024  5004               	movf	__div_to_l_@f2,w,c
  3558  002026  5E01               	subwf	__div_to_l_@f1,f,c
  3559  002028  5005               	movf	__div_to_l_@f2+1,w,c
  3560  00202A  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3561  00202C  5006               	movf	__div_to_l_@f2+2,w,c
  3562  00202E  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3563  002030  5007               	movf	__div_to_l_@f2+3,w,c
  3564  002032  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3565  002034  8007               	bsf	__div_to_l_@quot,0,c
  3566  002036  D000               	goto	l2185
  3567  002038                     l2185:
  3568  002038  90D8               	bcf	status,0,c
  3569  00203A  3601               	rlcf	__div_to_l_@f1,f,c
  3570  00203C  3602               	rlcf	__div_to_l_@f1+1,f,c
  3571  00203E  3603               	rlcf	__div_to_l_@f1+2,f,c
  3572  002040  3604               	rlcf	__div_to_l_@f1+3,f,c
  3573  002042  2E0B               	decfsz	__div_to_l_@cntr,f,c
  3574  002044  D7E0               	goto	l2177
  3575  002046  D000               	goto	l2189
  3576  002048                     l2189:
  3577  002048  AE0C               	btfss	__div_to_l_@exp1,7,c
  3578  00204A  D010               	goto	l2201
  3579  00204C  500C               	movf	__div_to_l_@exp1,w,c
  3580  00204E  0A80               	xorlw	128
  3581  002050  0F9F               	addlw	159
  3582  002052  B0D8               	btfsc	status,0,c
  3583  002054  D003               	goto	l2197
  3584  002056  D00D               	goto	l2203
  3585  002058  D028               	goto	l498
  3586  00205A  D000               	goto	l2197
  3587  00205C                     l2197:
  3588  00205C  90D8               	bcf	status,0,c
  3589  00205E  320A               	rrcf	__div_to_l_@quot+3,f,c
  3590  002060  3209               	rrcf	__div_to_l_@quot+2,f,c
  3591  002062  3208               	rrcf	__div_to_l_@quot+1,f,c
  3592  002064  3207               	rrcf	__div_to_l_@quot,f,c
  3593  002066  3E0C               	incfsz	__div_to_l_@exp1,f,c
  3594  002068  D7F9               	goto	l2197
  3595  00206A  D017               	goto	l507
  3596  00206C                     l2201:
  3597  00206C  0E1F               	movlw	31
  3598  00206E  640C               	cpfsgt	__div_to_l_@exp1,c
  3599  002070  D011               	goto	l2209
  3600  002072                     l2203:
  3601  002072  0E00               	movlw	0
  3602  002074  6E01               	movwf	?__div_to_l_,c
  3603  002076  0E00               	movlw	0
  3604  002078  6E02               	movwf	?__div_to_l_+1,c
  3605  00207A  0E00               	movlw	0
  3606  00207C  6E03               	movwf	?__div_to_l_+2,c
  3607  00207E  0E00               	movlw	0
  3608  002080  6E04               	movwf	?__div_to_l_+3,c
  3609  002082  D013               	goto	l498
  3610  002084  D007               	goto	l2209
  3611  002086                     l2207:
  3612  002086  90D8               	bcf	status,0,c
  3613  002088  3607               	rlcf	__div_to_l_@quot,f,c
  3614  00208A  3608               	rlcf	__div_to_l_@quot+1,f,c
  3615  00208C  3609               	rlcf	__div_to_l_@quot+2,f,c
  3616  00208E  360A               	rlcf	__div_to_l_@quot+3,f,c
  3617  002090  060C               	decf	__div_to_l_@exp1,f,c
  3618  002092  D000               	goto	l2209
  3619  002094                     l2209:
  3620  002094  500C               	movf	__div_to_l_@exp1,w,c
  3621  002096  A4D8               	btfss	status,2,c
  3622  002098  D7F6               	goto	l2207
  3623  00209A                     l507:
  3624  00209A  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3625  00209E  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3626  0020A2  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3627  0020A6  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3628  0020AA                     l498:
  3629  0020AA  0012               	return		;funcret
  3630  0020AC                     __end_of__div_to_l_:
  3631                           	opt stack 0
  3632                           tblptru	equ	0xFF8
  3633                           tblptrh	equ	0xFF7
  3634                           tblptrl	equ	0xFF6
  3635                           tablat	equ	0xFF5
  3636                           prodh	equ	0xFF4
  3637                           prodl	equ	0xFF3
  3638                           postinc0	equ	0xFEE
  3639                           wreg	equ	0xFE8
  3640                           postdec1	equ	0xFE5
  3641                           fsr1l	equ	0xFE1
  3642                           postinc2	equ	0xFDE
  3643                           postdec2	equ	0xFDD
  3644                           fsr2h	equ	0xFDA
  3645                           fsr2l	equ	0xFD9
  3646                           status	equ	0xFD8
  3647                           
  3648 ;; *************** function ___lltoft *****************
  3649 ;; Defined at:
  3650 ;;		line 35 in file "E:\XC8\sources\common\lltoft.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  c               4    8[COMRAM] unsigned long 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  exp             1   16[COMRAM] unsigned char 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  3    8[COMRAM] float 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, status,0, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;Total ram usage:        9 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:    1
  3671 ;; This function calls:
  3672 ;;		___ftpack
  3673 ;; This function is called by:
  3674 ;;		_printf
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text11
  3679  0028BA                     __ptext11:
  3680                           	opt stack 0
  3681  0028BA                     ___lltoft:
  3682                           	opt stack 28
  3683                           
  3684                           ;incstack = 0
  3685  0028BA  0E8E               	movlw	142
  3686  0028BC  6E11               	movwf	___lltoft@exp,c
  3687  0028BE  D007               	goto	l2329
  3688  0028C0                     l2327:
  3689  0028C0  90D8               	bcf	status,0,c
  3690  0028C2  320C               	rrcf	___lltoft@c+3,f,c
  3691  0028C4  320B               	rrcf	___lltoft@c+2,f,c
  3692  0028C6  320A               	rrcf	___lltoft@c+1,f,c
  3693  0028C8  3209               	rrcf	___lltoft@c,f,c
  3694  0028CA  2A11               	incf	___lltoft@exp,f,c
  3695  0028CC  D000               	goto	l2329
  3696  0028CE                     l2329:
  3697  0028CE  0E00               	movlw	0
  3698  0028D0  1409               	andwf	___lltoft@c,w,c
  3699  0028D2  6E0D               	movwf	??___lltoft& (0+255),c
  3700  0028D4  0E00               	movlw	0
  3701  0028D6  140A               	andwf	___lltoft@c+1,w,c
  3702  0028D8  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  3703  0028DA  0E00               	movlw	0
  3704  0028DC  140B               	andwf	___lltoft@c+2,w,c
  3705  0028DE  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  3706  0028E0  0EFF               	movlw	255
  3707  0028E2  140C               	andwf	___lltoft@c+3,w,c
  3708  0028E4  6E10               	movwf	(??___lltoft+3)& (0+255),c
  3709  0028E6  500D               	movf	??___lltoft,w,c
  3710  0028E8  100E               	iorwf	??___lltoft+1,w,c
  3711  0028EA  100F               	iorwf	??___lltoft+2,w,c
  3712  0028EC  1010               	iorwf	??___lltoft+3,w,c
  3713  0028EE  A4D8               	btfss	status,2,c
  3714  0028F0  D7E7               	goto	l2327
  3715  0028F2  C009  F001         	movff	___lltoft@c,___ftpack@arg
  3716  0028F6  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  3717  0028FA  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  3718  0028FE  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  3719  002902  0E00               	movlw	0
  3720  002904  6E05               	movwf	___ftpack@sign,c
  3721  002906  EC29  F012         	call	___ftpack	;wreg free
  3722  00290A  C001  F009         	movff	?___ftpack,?___lltoft
  3723  00290E  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  3724  002912  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  3725  002916  D000               	goto	l733
  3726  002918                     l733:
  3727  002918  0012               	return		;funcret
  3728  00291A                     __end_of___lltoft:
  3729                           	opt stack 0
  3730                           tblptru	equ	0xFF8
  3731                           tblptrh	equ	0xFF7
  3732                           tblptrl	equ	0xFF6
  3733                           tablat	equ	0xFF5
  3734                           prodh	equ	0xFF4
  3735                           prodl	equ	0xFF3
  3736                           postinc0	equ	0xFEE
  3737                           wreg	equ	0xFE8
  3738                           postdec1	equ	0xFE5
  3739                           fsr1l	equ	0xFE1
  3740                           postinc2	equ	0xFDE
  3741                           postdec2	equ	0xFDD
  3742                           fsr2h	equ	0xFDA
  3743                           fsr2l	equ	0xFD9
  3744                           status	equ	0xFD8
  3745                           
  3746 ;; *************** function ___llmod *****************
  3747 ;; Defined at:
  3748 ;;		line 8 in file "E:\XC8\sources\common\llmod.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  dividend        4    0[COMRAM] unsigned long 
  3751 ;;  divisor         4    4[COMRAM] unsigned long 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  counter         1    8[COMRAM] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  4    0[COMRAM] unsigned long 
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3763 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;Total ram usage:        9 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_printf
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text12
  3777  0027DA                     __ptext12:
  3778                           	opt stack 0
  3779  0027DA                     ___llmod:
  3780                           	opt stack 29
  3781                           
  3782                           ;incstack = 0
  3783  0027DA  5005               	movf	___llmod@divisor,w,c
  3784  0027DC  1006               	iorwf	___llmod@divisor+1,w,c
  3785  0027DE  1007               	iorwf	___llmod@divisor+2,w,c
  3786  0027E0  1008               	iorwf	___llmod@divisor+3,w,c
  3787  0027E2  B4D8               	btfsc	status,2,c
  3788  0027E4  D029               	goto	l713
  3789  0027E6  0E01               	movlw	1
  3790  0027E8  6E09               	movwf	___llmod@counter,c
  3791  0027EA  D007               	goto	l2315
  3792  0027EC                     l2313:
  3793  0027EC  90D8               	bcf	status,0,c
  3794  0027EE  3605               	rlcf	___llmod@divisor,f,c
  3795  0027F0  3606               	rlcf	___llmod@divisor+1,f,c
  3796  0027F2  3607               	rlcf	___llmod@divisor+2,f,c
  3797  0027F4  3608               	rlcf	___llmod@divisor+3,f,c
  3798  0027F6  2A09               	incf	___llmod@counter,f,c
  3799  0027F8  D000               	goto	l2315
  3800  0027FA                     l2315:
  3801  0027FA  BE08               	btfsc	___llmod@divisor+3,7,c
  3802  0027FC  D002               	goto	l2317
  3803  0027FE  D7F6               	goto	l2313
  3804  002800  D000               	goto	l2317
  3805  002802                     l2317:
  3806  002802  5005               	movf	___llmod@divisor,w,c
  3807  002804  5C01               	subwf	___llmod@dividend,w,c
  3808  002806  5006               	movf	___llmod@divisor+1,w,c
  3809  002808  5802               	subwfb	___llmod@dividend+1,w,c
  3810  00280A  5007               	movf	___llmod@divisor+2,w,c
  3811  00280C  5803               	subwfb	___llmod@dividend+2,w,c
  3812  00280E  5008               	movf	___llmod@divisor+3,w,c
  3813  002810  5804               	subwfb	___llmod@dividend+3,w,c
  3814  002812  A0D8               	btfss	status,0,c
  3815  002814  D009               	goto	l2321
  3816  002816  5005               	movf	___llmod@divisor,w,c
  3817  002818  5E01               	subwf	___llmod@dividend,f,c
  3818  00281A  5006               	movf	___llmod@divisor+1,w,c
  3819  00281C  5A02               	subwfb	___llmod@dividend+1,f,c
  3820  00281E  5007               	movf	___llmod@divisor+2,w,c
  3821  002820  5A03               	subwfb	___llmod@dividend+2,f,c
  3822  002822  5008               	movf	___llmod@divisor+3,w,c
  3823  002824  5A04               	subwfb	___llmod@dividend+3,f,c
  3824  002826  D000               	goto	l2321
  3825  002828                     l2321:
  3826  002828  90D8               	bcf	status,0,c
  3827  00282A  3208               	rrcf	___llmod@divisor+3,f,c
  3828  00282C  3207               	rrcf	___llmod@divisor+2,f,c
  3829  00282E  3206               	rrcf	___llmod@divisor+1,f,c
  3830  002830  3205               	rrcf	___llmod@divisor,f,c
  3831  002832  2E09               	decfsz	___llmod@counter,f,c
  3832  002834  D7E6               	goto	l2317
  3833  002836  D000               	goto	l713
  3834  002838                     l713:
  3835  002838  C001  F001         	movff	___llmod@dividend,?___llmod
  3836  00283C  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3837  002840  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3838  002844  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3839  002848  0012               	return		;funcret
  3840  00284A                     __end_of___llmod:
  3841                           	opt stack 0
  3842                           tblptru	equ	0xFF8
  3843                           tblptrh	equ	0xFF7
  3844                           tblptrl	equ	0xFF6
  3845                           tablat	equ	0xFF5
  3846                           prodh	equ	0xFF4
  3847                           prodl	equ	0xFF3
  3848                           postinc0	equ	0xFEE
  3849                           wreg	equ	0xFE8
  3850                           postdec1	equ	0xFE5
  3851                           fsr1l	equ	0xFE1
  3852                           postinc2	equ	0xFDE
  3853                           postdec2	equ	0xFDD
  3854                           fsr2h	equ	0xFDA
  3855                           fsr2l	equ	0xFD9
  3856                           status	equ	0xFD8
  3857                           
  3858 ;; *************** function ___lldiv *****************
  3859 ;; Defined at:
  3860 ;;		line 8 in file "E:\XC8\sources\common\lldiv.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;  dividend        4    0[COMRAM] unsigned long 
  3863 ;;  divisor         4    4[COMRAM] unsigned long 
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;  quotient        4    8[COMRAM] unsigned long 
  3866 ;;  counter         1   12[COMRAM] unsigned char 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  4    0[COMRAM] unsigned long 
  3869 ;; Registers used:
  3870 ;;		wreg, status,2, status,0
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3876 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;Total ram usage:       13 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; This function calls:
  3883 ;;		Nothing
  3884 ;; This function is called by:
  3885 ;;		_printf
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text13
  3890  002644                     __ptext13:
  3891                           	opt stack 0
  3892  002644                     ___lldiv:
  3893                           	opt stack 29
  3894                           
  3895                           ;incstack = 0
  3896  002644  0E00               	movlw	0
  3897  002646  6E09               	movwf	___lldiv@quotient,c
  3898  002648  0E00               	movlw	0
  3899  00264A  6E0A               	movwf	___lldiv@quotient+1,c
  3900  00264C  0E00               	movlw	0
  3901  00264E  6E0B               	movwf	___lldiv@quotient+2,c
  3902  002650  0E00               	movlw	0
  3903  002652  6E0C               	movwf	___lldiv@quotient+3,c
  3904  002654  5005               	movf	___lldiv@divisor,w,c
  3905  002656  1006               	iorwf	___lldiv@divisor+1,w,c
  3906  002658  1007               	iorwf	___lldiv@divisor+2,w,c
  3907  00265A  1008               	iorwf	___lldiv@divisor+3,w,c
  3908  00265C  B4D8               	btfsc	status,2,c
  3909  00265E  D02F               	goto	l703
  3910  002660  0E01               	movlw	1
  3911  002662  6E0D               	movwf	___lldiv@counter,c
  3912  002664  D007               	goto	l2295
  3913  002666                     l2293:
  3914  002666  90D8               	bcf	status,0,c
  3915  002668  3605               	rlcf	___lldiv@divisor,f,c
  3916  00266A  3606               	rlcf	___lldiv@divisor+1,f,c
  3917  00266C  3607               	rlcf	___lldiv@divisor+2,f,c
  3918  00266E  3608               	rlcf	___lldiv@divisor+3,f,c
  3919  002670  2A0D               	incf	___lldiv@counter,f,c
  3920  002672  D000               	goto	l2295
  3921  002674                     l2295:
  3922  002674  BE08               	btfsc	___lldiv@divisor+3,7,c
  3923  002676  D002               	goto	l2297
  3924  002678  D7F6               	goto	l2293
  3925  00267A  D000               	goto	l2297
  3926  00267C                     l2297:
  3927  00267C  90D8               	bcf	status,0,c
  3928  00267E  3609               	rlcf	___lldiv@quotient,f,c
  3929  002680  360A               	rlcf	___lldiv@quotient+1,f,c
  3930  002682  360B               	rlcf	___lldiv@quotient+2,f,c
  3931  002684  360C               	rlcf	___lldiv@quotient+3,f,c
  3932  002686  5005               	movf	___lldiv@divisor,w,c
  3933  002688  5C01               	subwf	___lldiv@dividend,w,c
  3934  00268A  5006               	movf	___lldiv@divisor+1,w,c
  3935  00268C  5802               	subwfb	___lldiv@dividend+1,w,c
  3936  00268E  5007               	movf	___lldiv@divisor+2,w,c
  3937  002690  5803               	subwfb	___lldiv@dividend+2,w,c
  3938  002692  5008               	movf	___lldiv@divisor+3,w,c
  3939  002694  5804               	subwfb	___lldiv@dividend+3,w,c
  3940  002696  A0D8               	btfss	status,0,c
  3941  002698  D00A               	goto	l2305
  3942  00269A  5005               	movf	___lldiv@divisor,w,c
  3943  00269C  5E01               	subwf	___lldiv@dividend,f,c
  3944  00269E  5006               	movf	___lldiv@divisor+1,w,c
  3945  0026A0  5A02               	subwfb	___lldiv@dividend+1,f,c
  3946  0026A2  5007               	movf	___lldiv@divisor+2,w,c
  3947  0026A4  5A03               	subwfb	___lldiv@dividend+2,f,c
  3948  0026A6  5008               	movf	___lldiv@divisor+3,w,c
  3949  0026A8  5A04               	subwfb	___lldiv@dividend+3,f,c
  3950  0026AA  8009               	bsf	___lldiv@quotient,0,c
  3951  0026AC  D000               	goto	l2305
  3952  0026AE                     l2305:
  3953  0026AE  90D8               	bcf	status,0,c
  3954  0026B0  3208               	rrcf	___lldiv@divisor+3,f,c
  3955  0026B2  3207               	rrcf	___lldiv@divisor+2,f,c
  3956  0026B4  3206               	rrcf	___lldiv@divisor+1,f,c
  3957  0026B6  3205               	rrcf	___lldiv@divisor,f,c
  3958  0026B8  2E0D               	decfsz	___lldiv@counter,f,c
  3959  0026BA  D7E0               	goto	l2297
  3960  0026BC  D000               	goto	l703
  3961  0026BE                     l703:
  3962  0026BE  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3963  0026C2  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3964  0026C6  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3965  0026CA  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3966  0026CE  0012               	return		;funcret
  3967  0026D0                     __end_of___lldiv:
  3968                           	opt stack 0
  3969                           tblptru	equ	0xFF8
  3970                           tblptrh	equ	0xFF7
  3971                           tblptrl	equ	0xFF6
  3972                           tablat	equ	0xFF5
  3973                           prodh	equ	0xFF4
  3974                           prodl	equ	0xFF3
  3975                           postinc0	equ	0xFEE
  3976                           wreg	equ	0xFE8
  3977                           postdec1	equ	0xFE5
  3978                           fsr1l	equ	0xFE1
  3979                           postinc2	equ	0xFDE
  3980                           postdec2	equ	0xFDD
  3981                           fsr2h	equ	0xFDA
  3982                           fsr2l	equ	0xFD9
  3983                           status	equ	0xFD8
  3984                           
  3985 ;; *************** function ___fttol *****************
  3986 ;; Defined at:
  3987 ;;		line 44 in file "E:\XC8\sources\common\fttol.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;  f1              3   23[COMRAM] float 
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;  lval            4   33[COMRAM] unsigned long 
  3992 ;;  exp1            1   37[COMRAM] unsigned char 
  3993 ;;  sign1           1   32[COMRAM] unsigned char 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  4   23[COMRAM] long 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2, status,0
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4003 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;Total ram usage:       15 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; This function calls:
  4010 ;;		Nothing
  4011 ;; This function is called by:
  4012 ;;		_main
  4013 ;;		_printf
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text14
  4018  00228A                     __ptext14:
  4019                           	opt stack 0
  4020  00228A                     ___fttol:
  4021                           	opt stack 29
  4022                           
  4023                           ;incstack = 0
  4024  00228A  C01A  F01C         	movff	___fttol@f1+2,??___fttol
  4025  00228E  6A1D               	clrf	(??___fttol+1)& (0+255),c
  4026  002290  6A1E               	clrf	(??___fttol+2)& (0+255),c
  4027  002292  3419               	rlcf	___fttol@f1+1,w,c
  4028  002294  361C               	rlcf	??___fttol& (0+255),f,c
  4029  002296  E301               	bnc	u2291
  4030  002298  801D               	bsf	(??___fttol+1)& (0+255),0,c
  4031  00229A                     u2291:
  4032  00229A  501C               	movf	??___fttol,w,c
  4033  00229C  6E26               	movwf	___fttol@exp1,c
  4034  00229E  5026               	movf	___fttol@exp1,w,c
  4035  0022A0  A4D8               	btfss	status,2,c
  4036  0022A2  D002               	goto	l2247
  4037  0022A4  D039               	goto	l2271
  4038  0022A6  D063               	goto	l664
  4039  0022A8                     l2247:
  4040  0022A8  0E17               	movlw	23
  4041  0022AA  6E1C               	movwf	??___fttol& (0+255),c
  4042  0022AC  C018  F01D         	movff	___fttol@f1,??___fttol+1
  4043  0022B0  C019  F01E         	movff	___fttol@f1+1,??___fttol+2
  4044  0022B4  C01A  F01F         	movff	___fttol@f1+2,??___fttol+3
  4045  0022B8  281C               	incf	??___fttol,w,c
  4046  0022BA  6E20               	movwf	(??___fttol+4)& (0+255),c
  4047  0022BC  D004               	goto	u2310
  4048  0022BE                     u2315:
  4049  0022BE  90D8               	bcf	status,0,c
  4050  0022C0  321F               	rrcf	??___fttol+3,f,c
  4051  0022C2  321E               	rrcf	??___fttol+2,f,c
  4052  0022C4  321D               	rrcf	??___fttol+1,f,c
  4053  0022C6                     u2310:
  4054  0022C6  2E20               	decfsz	(??___fttol+4)& (0+255),f,c
  4055  0022C8  D7FA               	goto	u2315
  4056  0022CA  501D               	movf	??___fttol+1,w,c
  4057  0022CC  6E21               	movwf	___fttol@sign1,c
  4058  0022CE  8E19               	bsf	___fttol@f1+1,7,c
  4059  0022D0  0EFF               	movlw	255
  4060  0022D2  1618               	andwf	___fttol@f1,f,c
  4061  0022D4  0EFF               	movlw	255
  4062  0022D6  1619               	andwf	___fttol@f1+1,f,c
  4063  0022D8  0E00               	movlw	0
  4064  0022DA  161A               	andwf	___fttol@f1+2,f,c
  4065  0022DC  5018               	movf	___fttol@f1,w,c
  4066  0022DE  6E22               	movwf	___fttol@lval,c
  4067  0022E0  5019               	movf	___fttol@f1+1,w,c
  4068  0022E2  6E23               	movwf	___fttol@lval+1,c
  4069  0022E4  501A               	movf	___fttol@f1+2,w,c
  4070  0022E6  6E24               	movwf	___fttol@lval+2,c
  4071  0022E8  6A25               	clrf	___fttol@lval+3,c
  4072  0022EA  0E8E               	movlw	142
  4073  0022EC  5E26               	subwf	___fttol@exp1,f,c
  4074  0022EE  AE26               	btfss	___fttol@exp1,7,c
  4075  0022F0  D010               	goto	l2269
  4076  0022F2  5026               	movf	___fttol@exp1,w,c
  4077  0022F4  0A80               	xorlw	128
  4078  0022F6  0F8F               	addlw	143
  4079  0022F8  B0D8               	btfsc	status,0,c
  4080  0022FA  D003               	goto	l2265
  4081  0022FC  D00D               	goto	l2271
  4082  0022FE  D037               	goto	l664
  4083  002300  D000               	goto	l2265
  4084  002302                     l2265:
  4085  002302  90D8               	bcf	status,0,c
  4086  002304  3225               	rrcf	___fttol@lval+3,f,c
  4087  002306  3224               	rrcf	___fttol@lval+2,f,c
  4088  002308  3223               	rrcf	___fttol@lval+1,f,c
  4089  00230A  3222               	rrcf	___fttol@lval,f,c
  4090  00230C  3E26               	incfsz	___fttol@exp1,f,c
  4091  00230E  D7F9               	goto	l2265
  4092  002310  D019               	goto	l2279
  4093  002312                     l2269:
  4094  002312  0E17               	movlw	23
  4095  002314  6426               	cpfsgt	___fttol@exp1,c
  4096  002316  D011               	goto	l2277
  4097  002318                     l2271:
  4098  002318  0E00               	movlw	0
  4099  00231A  6E18               	movwf	?___fttol,c
  4100  00231C  0E00               	movlw	0
  4101  00231E  6E19               	movwf	?___fttol+1,c
  4102  002320  0E00               	movlw	0
  4103  002322  6E1A               	movwf	?___fttol+2,c
  4104  002324  0E00               	movlw	0
  4105  002326  6E1B               	movwf	?___fttol+3,c
  4106  002328  D022               	goto	l664
  4107  00232A  D007               	goto	l2277
  4108  00232C                     l2275:
  4109  00232C  90D8               	bcf	status,0,c
  4110  00232E  3622               	rlcf	___fttol@lval,f,c
  4111  002330  3623               	rlcf	___fttol@lval+1,f,c
  4112  002332  3624               	rlcf	___fttol@lval+2,f,c
  4113  002334  3625               	rlcf	___fttol@lval+3,f,c
  4114  002336  0626               	decf	___fttol@exp1,f,c
  4115  002338  D000               	goto	l2277
  4116  00233A                     l2277:
  4117  00233A  5026               	movf	___fttol@exp1,w,c
  4118  00233C  B4D8               	btfsc	status,2,c
  4119  00233E  D002               	goto	l2279
  4120  002340  D7F5               	goto	l2275
  4121  002342  D000               	goto	l2279
  4122  002344                     l2279:
  4123  002344  5021               	movf	___fttol@sign1,w,c
  4124  002346  B4D8               	btfsc	status,2,c
  4125  002348  D009               	goto	l2283
  4126  00234A  1E25               	comf	___fttol@lval+3,f,c
  4127  00234C  1E24               	comf	___fttol@lval+2,f,c
  4128  00234E  1E23               	comf	___fttol@lval+1,f,c
  4129  002350  6C22               	negf	___fttol@lval,c
  4130  002352  0E00               	movlw	0
  4131  002354  2223               	addwfc	___fttol@lval+1,f,c
  4132  002356  2224               	addwfc	___fttol@lval+2,f,c
  4133  002358  2225               	addwfc	___fttol@lval+3,f,c
  4134  00235A  D000               	goto	l2283
  4135  00235C                     l2283:
  4136  00235C  C022  F018         	movff	___fttol@lval,?___fttol
  4137  002360  C023  F019         	movff	___fttol@lval+1,?___fttol+1
  4138  002364  C024  F01A         	movff	___fttol@lval+2,?___fttol+2
  4139  002368  C025  F01B         	movff	___fttol@lval+3,?___fttol+3
  4140  00236C  D000               	goto	l664
  4141  00236E                     l664:
  4142  00236E  0012               	return		;funcret
  4143  002370                     __end_of___fttol:
  4144                           	opt stack 0
  4145                           tblptru	equ	0xFF8
  4146                           tblptrh	equ	0xFF7
  4147                           tblptrl	equ	0xFF6
  4148                           tablat	equ	0xFF5
  4149                           prodh	equ	0xFF4
  4150                           prodl	equ	0xFF3
  4151                           postinc0	equ	0xFEE
  4152                           wreg	equ	0xFE8
  4153                           postdec1	equ	0xFE5
  4154                           fsr1l	equ	0xFE1
  4155                           postinc2	equ	0xFDE
  4156                           postdec2	equ	0xFDD
  4157                           fsr2h	equ	0xFDA
  4158                           fsr2l	equ	0xFD9
  4159                           status	equ	0xFD8
  4160                           
  4161 ;; *************** function ___ftsub *****************
  4162 ;; Defined at:
  4163 ;;		line 20 in file "E:\XC8\sources\common\ftsub.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;  f1              3   80[COMRAM] float 
  4166 ;;  f2              3   83[COMRAM] float 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  3   80[COMRAM] float 
  4171 ;; Registers used:
  4172 ;;		wreg, status,2, status,0, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4178 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;Total ram usage:        6 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    2
  4185 ;; This function calls:
  4186 ;;		___ftadd
  4187 ;; This function is called by:
  4188 ;;		_printf
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text15
  4193  00291A                     __ptext15:
  4194                           	opt stack 0
  4195  00291A                     ___ftsub:
  4196                           	opt stack 27
  4197                           
  4198                           ;incstack = 0
  4199  00291A  5054               	movf	___ftsub@f2,w,c
  4200  00291C  1055               	iorwf	___ftsub@f2+1,w,c
  4201  00291E  1056               	iorwf	___ftsub@f2+2,w,c
  4202  002920  B4D8               	btfsc	status,2,c
  4203  002922  D007               	goto	l2215
  4204  002924  0E00               	movlw	0
  4205  002926  1A54               	xorwf	___ftsub@f2,f,c
  4206  002928  0E00               	movlw	0
  4207  00292A  1A55               	xorwf	___ftsub@f2+1,f,c
  4208  00292C  0E80               	movlw	128
  4209  00292E  1A56               	xorwf	___ftsub@f2+2,f,c
  4210  002930  D000               	goto	l2215
  4211  002932                     l2215:
  4212  002932  C051  F045         	movff	___ftsub@f1,___ftadd@f1
  4213  002936  C052  F046         	movff	___ftsub@f1+1,___ftadd@f1+1
  4214  00293A  C053  F047         	movff	___ftsub@f1+2,___ftadd@f1+2
  4215  00293E  C054  F048         	movff	___ftsub@f2,___ftadd@f2
  4216  002942  C055  F049         	movff	___ftsub@f2+1,___ftadd@f2+1
  4217  002946  C056  F04A         	movff	___ftsub@f2+2,___ftadd@f2+2
  4218  00294A  EC67  F00E         	call	___ftadd	;wreg free
  4219  00294E  C045  F051         	movff	?___ftadd,?___ftsub
  4220  002952  C046  F052         	movff	?___ftadd+1,?___ftsub+1
  4221  002956  C047  F053         	movff	?___ftadd+2,?___ftsub+2
  4222  00295A  D000               	goto	l660
  4223  00295C                     l660:
  4224  00295C  0012               	return		;funcret
  4225  00295E                     __end_of___ftsub:
  4226                           	opt stack 0
  4227                           tblptru	equ	0xFF8
  4228                           tblptrh	equ	0xFF7
  4229                           tblptrl	equ	0xFF6
  4230                           tablat	equ	0xFF5
  4231                           prodh	equ	0xFF4
  4232                           prodl	equ	0xFF3
  4233                           postinc0	equ	0xFEE
  4234                           wreg	equ	0xFE8
  4235                           postdec1	equ	0xFE5
  4236                           fsr1l	equ	0xFE1
  4237                           postinc2	equ	0xFDE
  4238                           postdec2	equ	0xFDD
  4239                           fsr2h	equ	0xFDA
  4240                           fsr2l	equ	0xFD9
  4241                           status	equ	0xFD8
  4242                           
  4243 ;; *************** function ___ftadd *****************
  4244 ;; Defined at:
  4245 ;;		line 86 in file "E:\XC8\sources\common\ftadd.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  f1              3   68[COMRAM] float 
  4248 ;;  f2              3   71[COMRAM] float 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  exp1            1   79[COMRAM] unsigned char 
  4251 ;;  exp2            1   78[COMRAM] unsigned char 
  4252 ;;  sign            1   77[COMRAM] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  3   68[COMRAM] float 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4262 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;Total ram usage:       12 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    1
  4269 ;; This function calls:
  4270 ;;		___ftpack
  4271 ;; This function is called by:
  4272 ;;		_printf
  4273 ;;		___ftsub
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text16
  4278  001CCE                     __ptext16:
  4279                           	opt stack 0
  4280  001CCE                     ___ftadd:
  4281                           	opt stack 27
  4282                           
  4283                           ;incstack = 0
  4284  001CCE  C047  F04B         	movff	___ftadd@f1+2,??___ftadd
  4285  001CD2  6A4C               	clrf	(??___ftadd+1)& (0+255),c
  4286  001CD4  6A4D               	clrf	(??___ftadd+2)& (0+255),c
  4287  001CD6  3446               	rlcf	___ftadd@f1+1,w,c
  4288  001CD8  364B               	rlcf	??___ftadd& (0+255),f,c
  4289  001CDA  E301               	bnc	u1611
  4290  001CDC  804C               	bsf	(??___ftadd+1)& (0+255),0,c
  4291  001CDE                     u1611:
  4292  001CDE  504B               	movf	??___ftadd,w,c
  4293  001CE0  6E50               	movwf	___ftadd@exp1,c
  4294  001CE2  C04A  F04B         	movff	___ftadd@f2+2,??___ftadd
  4295  001CE6  6A4C               	clrf	(??___ftadd+1)& (0+255),c
  4296  001CE8  6A4D               	clrf	(??___ftadd+2)& (0+255),c
  4297  001CEA  3449               	rlcf	___ftadd@f2+1,w,c
  4298  001CEC  364B               	rlcf	??___ftadd& (0+255),f,c
  4299  001CEE  E301               	bnc	u1621
  4300  001CF0  804C               	bsf	(??___ftadd+1)& (0+255),0,c
  4301  001CF2                     u1621:
  4302  001CF2  504B               	movf	??___ftadd,w,c
  4303  001CF4  6E4F               	movwf	___ftadd@exp2,c
  4304  001CF6  5050               	movf	___ftadd@exp1,w,c
  4305  001CF8  B4D8               	btfsc	status,2,c
  4306  001CFA  D00B               	goto	l579
  4307  001CFC  504F               	movf	___ftadd@exp2,w,c
  4308  001CFE  5C50               	subwf	___ftadd@exp1,w,c
  4309  001D00  B0D8               	btfsc	status,0,c
  4310  001D02  D00E               	goto	l1835
  4311  001D04  5050               	movf	___ftadd@exp1,w,c
  4312  001D06  0800               	sublw	0
  4313  001D08  244F               	addwf	___ftadd@exp2,w,c
  4314  001D0A  6E4B               	movwf	??___ftadd& (0+255),c
  4315  001D0C  0E18               	movlw	24
  4316  001D0E  644B               	cpfsgt	??___ftadd,c
  4317  001D10  D007               	goto	l1835
  4318  001D12                     l579:
  4319  001D12  C048  F045         	movff	___ftadd@f2,?___ftadd
  4320  001D16  C049  F046         	movff	___ftadd@f2+1,?___ftadd+1
  4321  001D1A  C04A  F047         	movff	___ftadd@f2+2,?___ftadd+2
  4322  001D1E  D0B8               	goto	l580
  4323  001D20                     l1835:
  4324  001D20  504F               	movf	___ftadd@exp2,w,c
  4325  001D22  B4D8               	btfsc	status,2,c
  4326  001D24  D00B               	goto	l583
  4327  001D26  5050               	movf	___ftadd@exp1,w,c
  4328  001D28  5C4F               	subwf	___ftadd@exp2,w,c
  4329  001D2A  B0D8               	btfsc	status,0,c
  4330  001D2C  D00E               	goto	l1841
  4331  001D2E  504F               	movf	___ftadd@exp2,w,c
  4332  001D30  0800               	sublw	0
  4333  001D32  2450               	addwf	___ftadd@exp1,w,c
  4334  001D34  6E4B               	movwf	??___ftadd& (0+255),c
  4335  001D36  0E18               	movlw	24
  4336  001D38  644B               	cpfsgt	??___ftadd,c
  4337  001D3A  D007               	goto	l1841
  4338  001D3C                     l583:
  4339  001D3C  C045  F045         	movff	___ftadd@f1,?___ftadd
  4340  001D40  C046  F046         	movff	___ftadd@f1+1,?___ftadd+1
  4341  001D44  C047  F047         	movff	___ftadd@f1+2,?___ftadd+2
  4342  001D48  D0A3               	goto	l580
  4343  001D4A                     l1841:
  4344  001D4A  0E06               	movlw	6
  4345  001D4C  6E4E               	movwf	___ftadd@sign,c
  4346  001D4E  AE47               	btfss	___ftadd@f1+2,7,c
  4347  001D50  D002               	goto	l1847
  4348  001D52  8E4E               	bsf	___ftadd@sign,7,c
  4349  001D54  D000               	goto	l1847
  4350  001D56                     l1847:
  4351  001D56  BE4A               	btfsc	___ftadd@f2+2,7,c
  4352  001D58  8C4E               	bsf	___ftadd@sign,6,c
  4353  001D5A  8E46               	bsf	___ftadd@f1+1,7,c
  4354  001D5C  0EFF               	movlw	255
  4355  001D5E  1645               	andwf	___ftadd@f1,f,c
  4356  001D60  0EFF               	movlw	255
  4357  001D62  1646               	andwf	___ftadd@f1+1,f,c
  4358  001D64  0E00               	movlw	0
  4359  001D66  1647               	andwf	___ftadd@f1+2,f,c
  4360  001D68  8E49               	bsf	___ftadd@f2+1,7,c
  4361  001D6A  0EFF               	movlw	255
  4362  001D6C  1648               	andwf	___ftadd@f2,f,c
  4363  001D6E  0EFF               	movlw	255
  4364  001D70  1649               	andwf	___ftadd@f2+1,f,c
  4365  001D72  0E00               	movlw	0
  4366  001D74  164A               	andwf	___ftadd@f2+2,f,c
  4367  001D76  504F               	movf	___ftadd@exp2,w,c
  4368  001D78  5C50               	subwf	___ftadd@exp1,w,c
  4369  001D7A  B0D8               	btfsc	status,0,c
  4370  001D7C  D01E               	goto	l1867
  4371  001D7E                     l1857:
  4372  001D7E  90D8               	bcf	status,0,c
  4373  001D80  3648               	rlcf	___ftadd@f2,f,c
  4374  001D82  3649               	rlcf	___ftadd@f2+1,f,c
  4375  001D84  364A               	rlcf	___ftadd@f2+2,f,c
  4376  001D86  064F               	decf	___ftadd@exp2,f,c
  4377  001D88  5050               	movf	___ftadd@exp1,w,c
  4378  001D8A  184F               	xorwf	___ftadd@exp2,w,c
  4379  001D8C  B4D8               	btfsc	status,2,c
  4380  001D8E  D00F               	goto	l1865
  4381  001D90  064E               	decf	___ftadd@sign,f,c
  4382  001D92  C04E  F04B         	movff	___ftadd@sign,??___ftadd
  4383  001D96  0E07               	movlw	7
  4384  001D98  164B               	andwf	??___ftadd,f,c
  4385  001D9A  B4D8               	btfsc	status,2,c
  4386  001D9C  D008               	goto	l1865
  4387  001D9E  D7EF               	goto	l1857
  4388  001DA0  D006               	goto	l1865
  4389  001DA2                     l1863:
  4390  001DA2  90D8               	bcf	status,0,c
  4391  001DA4  3247               	rrcf	___ftadd@f1+2,f,c
  4392  001DA6  3246               	rrcf	___ftadd@f1+1,f,c
  4393  001DA8  3245               	rrcf	___ftadd@f1,f,c
  4394  001DAA  2A50               	incf	___ftadd@exp1,f,c
  4395  001DAC  D000               	goto	l1865
  4396  001DAE                     l1865:
  4397  001DAE  504F               	movf	___ftadd@exp2,w,c
  4398  001DB0  1850               	xorwf	___ftadd@exp1,w,c
  4399  001DB2  B4D8               	btfsc	status,2,c
  4400  001DB4  D024               	goto	l594
  4401  001DB6  D7F5               	goto	l1863
  4402  001DB8  D022               	goto	l594
  4403  001DBA                     l1867:
  4404  001DBA  5050               	movf	___ftadd@exp1,w,c
  4405  001DBC  5C4F               	subwf	___ftadd@exp2,w,c
  4406  001DBE  B0D8               	btfsc	status,0,c
  4407  001DC0  D01E               	goto	l594
  4408  001DC2                     l1869:
  4409  001DC2  90D8               	bcf	status,0,c
  4410  001DC4  3645               	rlcf	___ftadd@f1,f,c
  4411  001DC6  3646               	rlcf	___ftadd@f1+1,f,c
  4412  001DC8  3647               	rlcf	___ftadd@f1+2,f,c
  4413  001DCA  0650               	decf	___ftadd@exp1,f,c
  4414  001DCC  5050               	movf	___ftadd@exp1,w,c
  4415  001DCE  184F               	xorwf	___ftadd@exp2,w,c
  4416  001DD0  B4D8               	btfsc	status,2,c
  4417  001DD2  D00F               	goto	l1877
  4418  001DD4  064E               	decf	___ftadd@sign,f,c
  4419  001DD6  C04E  F04B         	movff	___ftadd@sign,??___ftadd
  4420  001DDA  0E07               	movlw	7
  4421  001DDC  164B               	andwf	??___ftadd,f,c
  4422  001DDE  B4D8               	btfsc	status,2,c
  4423  001DE0  D008               	goto	l1877
  4424  001DE2  D7EF               	goto	l1869
  4425  001DE4  D006               	goto	l1877
  4426  001DE6                     l1875:
  4427  001DE6  90D8               	bcf	status,0,c
  4428  001DE8  324A               	rrcf	___ftadd@f2+2,f,c
  4429  001DEA  3249               	rrcf	___ftadd@f2+1,f,c
  4430  001DEC  3248               	rrcf	___ftadd@f2,f,c
  4431  001DEE  2A4F               	incf	___ftadd@exp2,f,c
  4432  001DF0  D000               	goto	l1877
  4433  001DF2                     l1877:
  4434  001DF2  504F               	movf	___ftadd@exp2,w,c
  4435  001DF4  1850               	xorwf	___ftadd@exp1,w,c
  4436  001DF6  B4D8               	btfsc	status,2,c
  4437  001DF8  D002               	goto	l594
  4438  001DFA  D7F5               	goto	l1875
  4439  001DFC  D000               	goto	l594
  4440  001DFE                     l594:
  4441  001DFE  AE4E               	btfss	___ftadd@sign,7,c
  4442  001E00  D00C               	goto	l603
  4443  001E02  0EFF               	movlw	255
  4444  001E04  1A45               	xorwf	___ftadd@f1,f,c
  4445  001E06  0EFF               	movlw	255
  4446  001E08  1A46               	xorwf	___ftadd@f1+1,f,c
  4447  001E0A  0EFF               	movlw	255
  4448  001E0C  1A47               	xorwf	___ftadd@f1+2,f,c
  4449  001E0E  0E01               	movlw	1
  4450  001E10  2645               	addwf	___ftadd@f1,f,c
  4451  001E12  0E00               	movlw	0
  4452  001E14  2246               	addwfc	___ftadd@f1+1,f,c
  4453  001E16  0E00               	movlw	0
  4454  001E18  2247               	addwfc	___ftadd@f1+2,f,c
  4455  001E1A                     l603:
  4456  001E1A  AC4E               	btfss	___ftadd@sign,6,c
  4457  001E1C  D00D               	goto	l1883
  4458  001E1E  0EFF               	movlw	255
  4459  001E20  1A48               	xorwf	___ftadd@f2,f,c
  4460  001E22  0EFF               	movlw	255
  4461  001E24  1A49               	xorwf	___ftadd@f2+1,f,c
  4462  001E26  0EFF               	movlw	255
  4463  001E28  1A4A               	xorwf	___ftadd@f2+2,f,c
  4464  001E2A  0E01               	movlw	1
  4465  001E2C  2648               	addwf	___ftadd@f2,f,c
  4466  001E2E  0E00               	movlw	0
  4467  001E30  2249               	addwfc	___ftadd@f2+1,f,c
  4468  001E32  0E00               	movlw	0
  4469  001E34  224A               	addwfc	___ftadd@f2+2,f,c
  4470  001E36  D000               	goto	l1883
  4471  001E38                     l1883:
  4472  001E38  0E00               	movlw	0
  4473  001E3A  6E4E               	movwf	___ftadd@sign,c
  4474  001E3C  5045               	movf	___ftadd@f1,w,c
  4475  001E3E  2648               	addwf	___ftadd@f2,f,c
  4476  001E40  5046               	movf	___ftadd@f1+1,w,c
  4477  001E42  2249               	addwfc	___ftadd@f2+1,f,c
  4478  001E44  5047               	movf	___ftadd@f1+2,w,c
  4479  001E46  224A               	addwfc	___ftadd@f2+2,f,c
  4480  001E48  AE4A               	btfss	___ftadd@f2+2,7,c
  4481  001E4A  D00F               	goto	l1893
  4482  001E4C  0EFF               	movlw	255
  4483  001E4E  1A48               	xorwf	___ftadd@f2,f,c
  4484  001E50  0EFF               	movlw	255
  4485  001E52  1A49               	xorwf	___ftadd@f2+1,f,c
  4486  001E54  0EFF               	movlw	255
  4487  001E56  1A4A               	xorwf	___ftadd@f2+2,f,c
  4488  001E58  0E01               	movlw	1
  4489  001E5A  2648               	addwf	___ftadd@f2,f,c
  4490  001E5C  0E00               	movlw	0
  4491  001E5E  2249               	addwfc	___ftadd@f2+1,f,c
  4492  001E60  0E00               	movlw	0
  4493  001E62  224A               	addwfc	___ftadd@f2+2,f,c
  4494  001E64  0E01               	movlw	1
  4495  001E66  6E4E               	movwf	___ftadd@sign,c
  4496  001E68  D000               	goto	l1893
  4497  001E6A                     l1893:
  4498  001E6A  C048  F001         	movff	___ftadd@f2,___ftpack@arg
  4499  001E6E  C049  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4500  001E72  C04A  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4501  001E76  C050  F004         	movff	___ftadd@exp1,___ftpack@exp
  4502  001E7A  C04E  F005         	movff	___ftadd@sign,___ftpack@sign
  4503  001E7E  EC29  F012         	call	___ftpack	;wreg free
  4504  001E82  C001  F045         	movff	?___ftpack,?___ftadd
  4505  001E86  C002  F046         	movff	?___ftpack+1,?___ftadd+1
  4506  001E8A  C003  F047         	movff	?___ftpack+2,?___ftadd+2
  4507  001E8E  D000               	goto	l580
  4508  001E90                     l580:
  4509  001E90  0012               	return		;funcret
  4510  001E92                     __end_of___ftadd:
  4511                           	opt stack 0
  4512                           tblptru	equ	0xFF8
  4513                           tblptrh	equ	0xFF7
  4514                           tblptrl	equ	0xFF6
  4515                           tablat	equ	0xFF5
  4516                           prodh	equ	0xFF4
  4517                           prodl	equ	0xFF3
  4518                           postinc0	equ	0xFEE
  4519                           wreg	equ	0xFE8
  4520                           postdec1	equ	0xFE5
  4521                           fsr1l	equ	0xFE1
  4522                           postinc2	equ	0xFDE
  4523                           postdec2	equ	0xFDD
  4524                           fsr2h	equ	0xFDA
  4525                           fsr2l	equ	0xFD9
  4526                           status	equ	0xFD8
  4527                           
  4528 ;; *************** function ___ftneg *****************
  4529 ;; Defined at:
  4530 ;;		line 15 in file "E:\XC8\sources\common\ftneg.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  f1              3    0[COMRAM] float 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  3    0[COMRAM] float 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2, status,0
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4544 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;Total ram usage:        3 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; This function calls:
  4551 ;;		Nothing
  4552 ;; This function is called by:
  4553 ;;		_printf
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text17
  4558  002A1C                     __ptext17:
  4559                           	opt stack 0
  4560  002A1C                     ___ftneg:
  4561                           	opt stack 29
  4562                           
  4563                           ;incstack = 0
  4564  002A1C  5001               	movf	___ftneg@f1,w,c
  4565  002A1E  1002               	iorwf	___ftneg@f1+1,w,c
  4566  002A20  1003               	iorwf	___ftneg@f1+2,w,c
  4567  002A22  B4D8               	btfsc	status,2,c
  4568  002A24  D006               	goto	l653
  4569  002A26  0E00               	movlw	0
  4570  002A28  1A01               	xorwf	___ftneg@f1,f,c
  4571  002A2A  0E00               	movlw	0
  4572  002A2C  1A02               	xorwf	___ftneg@f1+1,f,c
  4573  002A2E  0E80               	movlw	128
  4574  002A30  1A03               	xorwf	___ftneg@f1+2,f,c
  4575  002A32                     l653:
  4576  002A32  C001  F001         	movff	___ftneg@f1,?___ftneg
  4577  002A36  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4578  002A3A  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4579  002A3E  0012               	return		;funcret
  4580  002A40                     __end_of___ftneg:
  4581                           	opt stack 0
  4582                           tblptru	equ	0xFF8
  4583                           tblptrh	equ	0xFF7
  4584                           tblptrl	equ	0xFF6
  4585                           tablat	equ	0xFF5
  4586                           prodh	equ	0xFF4
  4587                           prodl	equ	0xFF3
  4588                           postinc0	equ	0xFEE
  4589                           wreg	equ	0xFE8
  4590                           postdec1	equ	0xFE5
  4591                           fsr1l	equ	0xFE1
  4592                           postinc2	equ	0xFDE
  4593                           postdec2	equ	0xFDD
  4594                           fsr2h	equ	0xFDA
  4595                           fsr2l	equ	0xFD9
  4596                           status	equ	0xFD8
  4597                           
  4598 ;; *************** function ___ftge *****************
  4599 ;; Defined at:
  4600 ;;		line 4 in file "E:\XC8\sources\common\ftge.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  ff1             3    0[COMRAM] float 
  4603 ;;  ff2             3    3[COMRAM] float 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;		None               void
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4615 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;Total ram usage:        9 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; This function calls:
  4622 ;;		Nothing
  4623 ;; This function is called by:
  4624 ;;		_printf
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text18
  4629  0025AE                     __ptext18:
  4630                           	opt stack 0
  4631  0025AE                     ___ftge:
  4632                           	opt stack 29
  4633                           
  4634                           ;incstack = 0
  4635  0025AE  AE03               	btfss	___ftge@ff1+2,7,c
  4636  0025B0  D017               	goto	l2223
  4637  0025B2  C001  F007         	movff	___ftge@ff1,??___ftge
  4638  0025B6  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4639  0025BA  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4640  0025BE  1E07               	comf	??___ftge,f,c
  4641  0025C0  1E08               	comf	??___ftge+1,f,c
  4642  0025C2  1E09               	comf	??___ftge+2,f,c
  4643  0025C4  2A07               	incf	??___ftge,f,c
  4644  0025C6  0E00               	movlw	0
  4645  0025C8  2208               	addwfc	??___ftge+1,f,c
  4646  0025CA  2209               	addwfc	??___ftge+2,f,c
  4647  0025CC  0E00               	movlw	0
  4648  0025CE  2407               	addwf	??___ftge,w,c
  4649  0025D0  6E01               	movwf	___ftge@ff1,c
  4650  0025D2  0E00               	movlw	0
  4651  0025D4  2008               	addwfc	??___ftge+1,w,c
  4652  0025D6  6E02               	movwf	___ftge@ff1+1,c
  4653  0025D8  0E80               	movlw	128
  4654  0025DA  2009               	addwfc	??___ftge+2,w,c
  4655  0025DC  6E03               	movwf	___ftge@ff1+2,c
  4656  0025DE  D000               	goto	l2223
  4657  0025E0                     l2223:
  4658  0025E0  AE06               	btfss	___ftge@ff2+2,7,c
  4659  0025E2  D017               	goto	l2227
  4660  0025E4  C004  F007         	movff	___ftge@ff2,??___ftge
  4661  0025E8  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4662  0025EC  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4663  0025F0  1E07               	comf	??___ftge,f,c
  4664  0025F2  1E08               	comf	??___ftge+1,f,c
  4665  0025F4  1E09               	comf	??___ftge+2,f,c
  4666  0025F6  2A07               	incf	??___ftge,f,c
  4667  0025F8  0E00               	movlw	0
  4668  0025FA  2208               	addwfc	??___ftge+1,f,c
  4669  0025FC  2209               	addwfc	??___ftge+2,f,c
  4670  0025FE  0E00               	movlw	0
  4671  002600  2407               	addwf	??___ftge,w,c
  4672  002602  6E04               	movwf	___ftge@ff2,c
  4673  002604  0E00               	movlw	0
  4674  002606  2008               	addwfc	??___ftge+1,w,c
  4675  002608  6E05               	movwf	___ftge@ff2+1,c
  4676  00260A  0E80               	movlw	128
  4677  00260C  2009               	addwfc	??___ftge+2,w,c
  4678  00260E  6E06               	movwf	___ftge@ff2+2,c
  4679  002610  D000               	goto	l2227
  4680  002612                     l2227:
  4681  002612  0E00               	movlw	0
  4682  002614  1A01               	xorwf	___ftge@ff1,f,c
  4683  002616  0E00               	movlw	0
  4684  002618  1A02               	xorwf	___ftge@ff1+1,f,c
  4685  00261A  0E80               	movlw	128
  4686  00261C  1A03               	xorwf	___ftge@ff1+2,f,c
  4687  00261E  0E00               	movlw	0
  4688  002620  1A04               	xorwf	___ftge@ff2,f,c
  4689  002622  0E00               	movlw	0
  4690  002624  1A05               	xorwf	___ftge@ff2+1,f,c
  4691  002626  0E80               	movlw	128
  4692  002628  1A06               	xorwf	___ftge@ff2+2,f,c
  4693  00262A  5004               	movf	___ftge@ff2,w,c
  4694  00262C  5C01               	subwf	___ftge@ff1,w,c
  4695  00262E  5005               	movf	___ftge@ff2+1,w,c
  4696  002630  5802               	subwfb	___ftge@ff1+1,w,c
  4697  002632  5006               	movf	___ftge@ff2+2,w,c
  4698  002634  5803               	subwfb	___ftge@ff1+2,w,c
  4699  002636  B0D8               	btfsc	status,0,c
  4700  002638  D002               	goto	l2233
  4701  00263A  90D8               	bcf	status,0,c
  4702  00263C  D002               	goto	l637
  4703  00263E                     l2233:
  4704  00263E  80D8               	bsf	status,0,c
  4705  002640  D000               	goto	l637
  4706  002642                     l637:
  4707  002642  0012               	return		;funcret
  4708  002644                     __end_of___ftge:
  4709                           	opt stack 0
  4710                           tblptru	equ	0xFF8
  4711                           tblptrh	equ	0xFF7
  4712                           tblptrl	equ	0xFF6
  4713                           tablat	equ	0xFF5
  4714                           prodh	equ	0xFF4
  4715                           prodl	equ	0xFF3
  4716                           postinc0	equ	0xFEE
  4717                           wreg	equ	0xFE8
  4718                           postdec1	equ	0xFE5
  4719                           fsr1l	equ	0xFE1
  4720                           postinc2	equ	0xFDE
  4721                           postdec2	equ	0xFDD
  4722                           fsr2h	equ	0xFDA
  4723                           fsr2l	equ	0xFD9
  4724                           status	equ	0xFD8
  4725                           
  4726 ;; *************** function ___ftdiv *****************
  4727 ;; Defined at:
  4728 ;;		line 54 in file "E:\XC8\sources\common\ftdiv.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  f1              3   12[COMRAM] float 
  4731 ;;  f2              3   15[COMRAM] float 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  f3              3   22[COMRAM] float 
  4734 ;;  sign            1   26[COMRAM] unsigned char 
  4735 ;;  exp             1   25[COMRAM] unsigned char 
  4736 ;;  cntr            1   21[COMRAM] unsigned char 
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  3   12[COMRAM] float 
  4739 ;; Registers used:
  4740 ;;		wreg, status,2, status,0, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4746 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;Total ram usage:       15 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:    1
  4753 ;; This function calls:
  4754 ;;		___ftpack
  4755 ;; This function is called by:
  4756 ;;		_main
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           	psect	text19
  4761  002370                     __ptext19:
  4762                           	opt stack 0
  4763  002370                     ___ftdiv:
  4764                           	opt stack 29
  4765                           
  4766                           ;incstack = 0
  4767  002370  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  4768  002374  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  4769  002376  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  4770  002378  340E               	rlcf	___ftdiv@f1+1,w,c
  4771  00237A  3613               	rlcf	??___ftdiv& (0+255),f,c
  4772  00237C  E301               	bnc	u2791
  4773  00237E  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  4774  002380                     u2791:
  4775  002380  5013               	movf	??___ftdiv,w,c
  4776  002382  6E1A               	movwf	___ftdiv@exp,c
  4777  002384  501A               	movf	___ftdiv@exp,w,c
  4778  002386  A4D8               	btfss	status,2,c
  4779  002388  D002               	goto	l2543
  4780  00238A  D00E               	goto	l2545
  4781  00238C  D061               	goto	l611
  4782  00238E                     l2543:
  4783  00238E  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  4784  002392  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  4785  002394  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  4786  002396  3411               	rlcf	___ftdiv@f2+1,w,c
  4787  002398  3613               	rlcf	??___ftdiv& (0+255),f,c
  4788  00239A  E301               	bnc	u2811
  4789  00239C  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  4790  00239E                     u2811:
  4791  00239E  5013               	movf	??___ftdiv,w,c
  4792  0023A0  6E1B               	movwf	___ftdiv@sign,c
  4793  0023A2  501B               	movf	___ftdiv@sign,w,c
  4794  0023A4  A4D8               	btfss	status,2,c
  4795  0023A6  D007               	goto	l2549
  4796  0023A8                     l2545:
  4797  0023A8  0E00               	movlw	0
  4798  0023AA  6E0D               	movwf	?___ftdiv,c
  4799  0023AC  0E00               	movlw	0
  4800  0023AE  6E0E               	movwf	?___ftdiv+1,c
  4801  0023B0  0E00               	movlw	0
  4802  0023B2  6E0F               	movwf	?___ftdiv+2,c
  4803  0023B4  D04D               	goto	l611
  4804  0023B6                     l2549:
  4805  0023B6  0E00               	movlw	0
  4806  0023B8  6E17               	movwf	___ftdiv@f3,c
  4807  0023BA  0E00               	movlw	0
  4808  0023BC  6E18               	movwf	___ftdiv@f3+1,c
  4809  0023BE  0E00               	movlw	0
  4810  0023C0  6E19               	movwf	___ftdiv@f3+2,c
  4811  0023C2  501B               	movf	___ftdiv@sign,w,c
  4812  0023C4  0F89               	addlw	137
  4813  0023C6  5E1A               	subwf	___ftdiv@exp,f,c
  4814  0023C8  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  4815  0023CC  5012               	movf	___ftdiv@f2+2,w,c
  4816  0023CE  1A1B               	xorwf	___ftdiv@sign,f,c
  4817  0023D0  0E80               	movlw	128
  4818  0023D2  161B               	andwf	___ftdiv@sign,f,c
  4819  0023D4  8E0E               	bsf	___ftdiv@f1+1,7,c
  4820  0023D6  0EFF               	movlw	255
  4821  0023D8  160D               	andwf	___ftdiv@f1,f,c
  4822  0023DA  0EFF               	movlw	255
  4823  0023DC  160E               	andwf	___ftdiv@f1+1,f,c
  4824  0023DE  0E00               	movlw	0
  4825  0023E0  160F               	andwf	___ftdiv@f1+2,f,c
  4826  0023E2  8E11               	bsf	___ftdiv@f2+1,7,c
  4827  0023E4  0EFF               	movlw	255
  4828  0023E6  1610               	andwf	___ftdiv@f2,f,c
  4829  0023E8  0EFF               	movlw	255
  4830  0023EA  1611               	andwf	___ftdiv@f2+1,f,c
  4831  0023EC  0E00               	movlw	0
  4832  0023EE  1612               	andwf	___ftdiv@f2+2,f,c
  4833  0023F0  0E18               	movlw	24
  4834  0023F2  6E16               	movwf	___ftdiv@cntr,c
  4835  0023F4  D000               	goto	l2569
  4836  0023F6                     l2569:
  4837  0023F6  90D8               	bcf	status,0,c
  4838  0023F8  3617               	rlcf	___ftdiv@f3,f,c
  4839  0023FA  3618               	rlcf	___ftdiv@f3+1,f,c
  4840  0023FC  3619               	rlcf	___ftdiv@f3+2,f,c
  4841  0023FE  5010               	movf	___ftdiv@f2,w,c
  4842  002400  5C0D               	subwf	___ftdiv@f1,w,c
  4843  002402  5011               	movf	___ftdiv@f2+1,w,c
  4844  002404  580E               	subwfb	___ftdiv@f1+1,w,c
  4845  002406  5012               	movf	___ftdiv@f2+2,w,c
  4846  002408  580F               	subwfb	___ftdiv@f1+2,w,c
  4847  00240A  A0D8               	btfss	status,0,c
  4848  00240C  D007               	goto	l614
  4849  00240E  5010               	movf	___ftdiv@f2,w,c
  4850  002410  5E0D               	subwf	___ftdiv@f1,f,c
  4851  002412  5011               	movf	___ftdiv@f2+1,w,c
  4852  002414  5A0E               	subwfb	___ftdiv@f1+1,f,c
  4853  002416  5012               	movf	___ftdiv@f2+2,w,c
  4854  002418  5A0F               	subwfb	___ftdiv@f1+2,f,c
  4855  00241A  8017               	bsf	___ftdiv@f3,0,c
  4856  00241C                     l614:
  4857  00241C  90D8               	bcf	status,0,c
  4858  00241E  360D               	rlcf	___ftdiv@f1,f,c
  4859  002420  360E               	rlcf	___ftdiv@f1+1,f,c
  4860  002422  360F               	rlcf	___ftdiv@f1+2,f,c
  4861  002424  2E16               	decfsz	___ftdiv@cntr,f,c
  4862  002426  D7E7               	goto	l2569
  4863  002428  D000               	goto	l2579
  4864  00242A                     l2579:
  4865  00242A  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  4866  00242E  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4867  002432  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4868  002436  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  4869  00243A  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  4870  00243E  EC29  F012         	call	___ftpack	;wreg free
  4871  002442  C001  F00D         	movff	?___ftpack,?___ftdiv
  4872  002446  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  4873  00244A  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  4874  00244E  D000               	goto	l611
  4875  002450                     l611:
  4876  002450  0012               	return		;funcret
  4877  002452                     __end_of___ftdiv:
  4878                           	opt stack 0
  4879                           tblptru	equ	0xFF8
  4880                           tblptrh	equ	0xFF7
  4881                           tblptrl	equ	0xFF6
  4882                           tablat	equ	0xFF5
  4883                           prodh	equ	0xFF4
  4884                           prodl	equ	0xFF3
  4885                           postinc0	equ	0xFEE
  4886                           wreg	equ	0xFE8
  4887                           postdec1	equ	0xFE5
  4888                           fsr1l	equ	0xFE1
  4889                           postinc2	equ	0xFDE
  4890                           postdec2	equ	0xFDD
  4891                           fsr2h	equ	0xFDA
  4892                           fsr2l	equ	0xFD9
  4893                           status	equ	0xFD8
  4894                           
  4895 ;; *************** function ___awtoft *****************
  4896 ;; Defined at:
  4897 ;;		line 32 in file "E:\XC8\sources\common\awtoft.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  c               2    8[COMRAM] int 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  sign            1   11[COMRAM] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  3    8[COMRAM] float 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0, cstack
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4911 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4914 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;Total ram usage:        4 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    1
  4918 ;; This function calls:
  4919 ;;		___ftpack
  4920 ;; This function is called by:
  4921 ;;		_main
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	text20
  4926  00295E                     __ptext20:
  4927                           	opt stack 0
  4928  00295E                     ___awtoft:
  4929                           	opt stack 29
  4930                           
  4931                           ;incstack = 0
  4932  00295E  0E00               	movlw	0
  4933  002960  6E0C               	movwf	___awtoft@sign,c
  4934  002962  AE0A               	btfss	___awtoft@c+1,7,c
  4935  002964  D007               	goto	l2591
  4936  002966  6C09               	negf	___awtoft@c,c
  4937  002968  1E0A               	comf	___awtoft@c+1,f,c
  4938  00296A  B0D8               	btfsc	status,0,c
  4939  00296C  2A0A               	incf	___awtoft@c+1,f,c
  4940  00296E  0E01               	movlw	1
  4941  002970  6E0C               	movwf	___awtoft@sign,c
  4942  002972  D000               	goto	l2591
  4943  002974                     l2591:
  4944  002974  C009  F001         	movff	___awtoft@c,___ftpack@arg
  4945  002978  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  4946  00297C  6A03               	clrf	___ftpack@arg+2,c
  4947  00297E  0E8E               	movlw	142
  4948  002980  6E04               	movwf	___ftpack@exp,c
  4949  002982  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  4950  002986  EC29  F012         	call	___ftpack	;wreg free
  4951  00298A  C001  F009         	movff	?___ftpack,?___awtoft
  4952  00298E  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  4953  002992  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  4954  002996  D000               	goto	l432
  4955  002998                     l432:
  4956  002998  0012               	return		;funcret
  4957  00299A                     __end_of___awtoft:
  4958                           	opt stack 0
  4959                           tblptru	equ	0xFF8
  4960                           tblptrh	equ	0xFF7
  4961                           tblptrl	equ	0xFF6
  4962                           tablat	equ	0xFF5
  4963                           prodh	equ	0xFF4
  4964                           prodl	equ	0xFF3
  4965                           postinc0	equ	0xFEE
  4966                           wreg	equ	0xFE8
  4967                           postdec1	equ	0xFE5
  4968                           fsr1l	equ	0xFE1
  4969                           postinc2	equ	0xFDE
  4970                           postdec2	equ	0xFDD
  4971                           fsr2h	equ	0xFDA
  4972                           fsr2l	equ	0xFD9
  4973                           status	equ	0xFD8
  4974                           
  4975 ;; *************** function ___ftpack *****************
  4976 ;; Defined at:
  4977 ;;		line 62 in file "E:\XC8\sources\common\float.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;  arg             3    0[COMRAM] unsigned um
  4980 ;;  exp             1    3[COMRAM] unsigned char 
  4981 ;;  sign            1    4[COMRAM] unsigned char 
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;		None
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  3    0[COMRAM] float 
  4986 ;; Registers used:
  4987 ;;		wreg, status,2, status,0
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4993 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4995 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4996 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4997 ;;Total ram usage:        8 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; This function calls:
  5000 ;;		Nothing
  5001 ;; This function is called by:
  5002 ;;		___awtoft
  5003 ;;		___ftadd
  5004 ;;		___ftdiv
  5005 ;;		___ftmul
  5006 ;;		___lltoft
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           	psect	text21
  5011  002452                     __ptext21:
  5012                           	opt stack 0
  5013  002452                     ___ftpack:
  5014                           	opt stack 27
  5015                           
  5016                           ;incstack = 0
  5017  002452  5004               	movf	___ftpack@exp,w,c
  5018  002454  B4D8               	btfsc	status,2,c
  5019  002456  D005               	goto	l1739
  5020  002458  5001               	movf	___ftpack@arg,w,c
  5021  00245A  1002               	iorwf	___ftpack@arg+1,w,c
  5022  00245C  1003               	iorwf	___ftpack@arg+2,w,c
  5023  00245E  A4D8               	btfss	status,2,c
  5024  002460  D00E               	goto	l1745
  5025  002462                     l1739:
  5026  002462  0E00               	movlw	0
  5027  002464  6E01               	movwf	?___ftpack,c
  5028  002466  0E00               	movlw	0
  5029  002468  6E02               	movwf	?___ftpack+1,c
  5030  00246A  0E00               	movlw	0
  5031  00246C  6E03               	movwf	?___ftpack+2,c
  5032  00246E  D053               	goto	l539
  5033  002470  D006               	goto	l1745
  5034  002472                     l1743:
  5035  002472  2A04               	incf	___ftpack@exp,f,c
  5036  002474  90D8               	bcf	status,0,c
  5037  002476  3203               	rrcf	___ftpack@arg+2,f,c
  5038  002478  3202               	rrcf	___ftpack@arg+1,f,c
  5039  00247A  3201               	rrcf	___ftpack@arg,f,c
  5040  00247C  D000               	goto	l1745
  5041  00247E                     l1745:
  5042  00247E  0E00               	movlw	0
  5043  002480  1401               	andwf	___ftpack@arg,w,c
  5044  002482  6E06               	movwf	??___ftpack& (0+255),c
  5045  002484  0E00               	movlw	0
  5046  002486  1402               	andwf	___ftpack@arg+1,w,c
  5047  002488  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5048  00248A  0EFE               	movlw	254
  5049  00248C  1403               	andwf	___ftpack@arg+2,w,c
  5050  00248E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5051  002490  5006               	movf	??___ftpack,w,c
  5052  002492  1007               	iorwf	??___ftpack+1,w,c
  5053  002494  1008               	iorwf	??___ftpack+2,w,c
  5054  002496  B4D8               	btfsc	status,2,c
  5055  002498  D00E               	goto	l1751
  5056  00249A  D7EB               	goto	l1743
  5057  00249C  D00C               	goto	l1751
  5058  00249E                     l1747:
  5059  00249E  2A04               	incf	___ftpack@exp,f,c
  5060  0024A0  0E01               	movlw	1
  5061  0024A2  2601               	addwf	___ftpack@arg,f,c
  5062  0024A4  0E00               	movlw	0
  5063  0024A6  2202               	addwfc	___ftpack@arg+1,f,c
  5064  0024A8  0E00               	movlw	0
  5065  0024AA  2203               	addwfc	___ftpack@arg+2,f,c
  5066  0024AC  90D8               	bcf	status,0,c
  5067  0024AE  3203               	rrcf	___ftpack@arg+2,f,c
  5068  0024B0  3202               	rrcf	___ftpack@arg+1,f,c
  5069  0024B2  3201               	rrcf	___ftpack@arg,f,c
  5070  0024B4  D000               	goto	l1751
  5071  0024B6                     l1751:
  5072  0024B6  0E00               	movlw	0
  5073  0024B8  1401               	andwf	___ftpack@arg,w,c
  5074  0024BA  6E06               	movwf	??___ftpack& (0+255),c
  5075  0024BC  0E00               	movlw	0
  5076  0024BE  1402               	andwf	___ftpack@arg+1,w,c
  5077  0024C0  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5078  0024C2  0EFF               	movlw	255
  5079  0024C4  1403               	andwf	___ftpack@arg+2,w,c
  5080  0024C6  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5081  0024C8  5006               	movf	??___ftpack,w,c
  5082  0024CA  1007               	iorwf	??___ftpack+1,w,c
  5083  0024CC  1008               	iorwf	??___ftpack+2,w,c
  5084  0024CE  B4D8               	btfsc	status,2,c
  5085  0024D0  D008               	goto	l1755
  5086  0024D2  D7E5               	goto	l1747
  5087  0024D4  D006               	goto	l1755
  5088  0024D6                     l1753:
  5089  0024D6  0604               	decf	___ftpack@exp,f,c
  5090  0024D8  90D8               	bcf	status,0,c
  5091  0024DA  3601               	rlcf	___ftpack@arg,f,c
  5092  0024DC  3602               	rlcf	___ftpack@arg+1,f,c
  5093  0024DE  3603               	rlcf	___ftpack@arg+2,f,c
  5094  0024E0  D000               	goto	l1755
  5095  0024E2                     l1755:
  5096  0024E2  BE02               	btfsc	___ftpack@arg+1,7,c
  5097  0024E4  D004               	goto	l550
  5098  0024E6  0E02               	movlw	2
  5099  0024E8  6004               	cpfslt	___ftpack@exp,c
  5100  0024EA  D7F5               	goto	l1753
  5101  0024EC  D000               	goto	l550
  5102  0024EE                     l550:
  5103  0024EE  B004               	btfsc	___ftpack@exp,0,c
  5104  0024F0  D002               	goto	l1761
  5105  0024F2  9E02               	bcf	___ftpack@arg+1,7,c
  5106  0024F4  D000               	goto	l1761
  5107  0024F6                     l1761:
  5108  0024F6  90D8               	bcf	status,0,c
  5109  0024F8  3204               	rrcf	___ftpack@exp,f,c
  5110  0024FA  5004               	movf	___ftpack@exp,w,c
  5111  0024FC  1203               	iorwf	___ftpack@arg+2,f,c
  5112  0024FE  5005               	movf	___ftpack@sign,w,c
  5113  002500  B4D8               	btfsc	status,2,c
  5114  002502  D002               	goto	l1767
  5115  002504  8E03               	bsf	___ftpack@arg+2,7,c
  5116  002506  D000               	goto	l1767
  5117  002508                     l1767:
  5118  002508  C001  F001         	movff	___ftpack@arg,?___ftpack
  5119  00250C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5120  002510  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5121  002514  D000               	goto	l539
  5122  002516                     l539:
  5123  002516  0012               	return		;funcret
  5124  002518                     __end_of___ftpack:
  5125                           	opt stack 0
  5126                           tblptru	equ	0xFF8
  5127                           tblptrh	equ	0xFF7
  5128                           tblptrl	equ	0xFF6
  5129                           tablat	equ	0xFF5
  5130                           prodh	equ	0xFF4
  5131                           prodl	equ	0xFF3
  5132                           postinc0	equ	0xFEE
  5133                           wreg	equ	0xFE8
  5134                           postdec1	equ	0xFE5
  5135                           fsr1l	equ	0xFE1
  5136                           postinc2	equ	0xFDE
  5137                           postdec2	equ	0xFDD
  5138                           fsr2h	equ	0xFDA
  5139                           fsr2l	equ	0xFD9
  5140                           status	equ	0xFD8
  5141                           
  5142 ;; *************** function _SET_ADC_CH *****************
  5143 ;; Defined at:
  5144 ;;		line 67 in file "Lab5p1.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  ADC_CH          1    wreg     unsigned char 
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;  ADC_CH          1    0[COMRAM] unsigned char 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;		None               void
  5151 ;; Registers used:
  5152 ;;		wreg, status,2, status,0, prodl, prodh
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;Total ram usage:        1 bytes
  5163 ;; Hardware stack levels used:    1
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_main
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text22
  5172  002AB8                     __ptext22:
  5173                           	opt stack 0
  5174  002AB8                     _SET_ADC_CH:
  5175                           	opt stack 30
  5176                           
  5177                           ;incstack = 0
  5178                           ;SET_ADC_CH@ADC_CH stored from wreg
  5179  002AB8  6E01               	movwf	SET_ADC_CH@ADC_CH,c
  5180                           
  5181                           ;Lab5p1.c: 69: ADCON0 = (ADC_CH * 4) + 1;
  5182  002ABA  5001               	movf	SET_ADC_CH@ADC_CH,w,c
  5183  002ABC  0D04               	mullw	4
  5184  002ABE  28F3               	incf	prodl,w,c
  5185  002AC0  6EC2               	movwf	4034,c	;volatile
  5186  002AC2  0012               	return		;funcret
  5187  002AC4                     __end_of_SET_ADC_CH:
  5188                           	opt stack 0
  5189                           tblptru	equ	0xFF8
  5190                           tblptrh	equ	0xFF7
  5191                           tblptrl	equ	0xFF6
  5192                           tablat	equ	0xFF5
  5193                           prodh	equ	0xFF4
  5194                           prodl	equ	0xFF3
  5195                           postinc0	equ	0xFEE
  5196                           wreg	equ	0xFE8
  5197                           postdec1	equ	0xFE5
  5198                           fsr1l	equ	0xFE1
  5199                           postinc2	equ	0xFDE
  5200                           postdec2	equ	0xFDD
  5201                           fsr2h	equ	0xFDA
  5202                           fsr2l	equ	0xFD9
  5203                           status	equ	0xFD8
  5204                           
  5205 ;; *************** function _GET_FULL_ADC *****************
  5206 ;; Defined at:
  5207 ;;		line 94 in file "Lab5p1.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;		None
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;  result          2    4[COMRAM] int 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  2    0[COMRAM] unsigned int 
  5214 ;; Registers used:
  5215 ;;		wreg, status,2, status,0
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;Total ram usage:        6 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_main
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text23
  5235  0029F6                     __ptext23:
  5236                           	opt stack 0
  5237  0029F6                     _GET_FULL_ADC:
  5238                           	opt stack 30
  5239                           
  5240                           ;Lab5p1.c: 96: int result;
  5241                           ;Lab5p1.c: 97: ADCON0bits.GO = 1;
  5242                           
  5243                           ;incstack = 0
  5244  0029F6  82C2               	bsf	4034,1,c	;volatile
  5245                           
  5246                           ;Lab5p1.c: 98: while(ADCON0bits.DONE == 1);
  5247  0029F8  D000               	goto	l92
  5248  0029FA                     l92:
  5249  0029FA  B2C2               	btfsc	4034,1,c	;volatile
  5250  0029FC  D7FE               	goto	l92
  5251                           
  5252                           ;Lab5p1.c: 99: result = (ADRESH * 0x100 + ADRESL);
  5253  0029FE  50C4               	movf	4036,w,c	;volatile
  5254  002A00  6E04               	movwf	(??_GET_FULL_ADC+1)& (0+255),c
  5255  002A02  6A03               	clrf	??_GET_FULL_ADC& (0+255),c
  5256  002A04  50C3               	movf	4035,w,c	;volatile
  5257  002A06  2403               	addwf	??_GET_FULL_ADC,w,c
  5258  002A08  6E05               	movwf	GET_FULL_ADC@result,c
  5259  002A0A  0E00               	movlw	0
  5260  002A0C  2004               	addwfc	??_GET_FULL_ADC+1,w,c
  5261  002A0E  6E06               	movwf	GET_FULL_ADC@result+1,c
  5262                           
  5263                           ;Lab5p1.c: 101: return result;
  5264  002A10  C005  F001         	movff	GET_FULL_ADC@result,?_GET_FULL_ADC
  5265  002A14  C006  F002         	movff	GET_FULL_ADC@result+1,?_GET_FULL_ADC+1
  5266  002A18  D000               	goto	l95
  5267  002A1A                     l95:
  5268  002A1A  0012               	return		;funcret
  5269  002A1C                     __end_of_GET_FULL_ADC:
  5270                           	opt stack 0
  5271                           tblptru	equ	0xFF8
  5272                           tblptrh	equ	0xFF7
  5273                           tblptrl	equ	0xFF6
  5274                           tablat	equ	0xFF5
  5275                           prodh	equ	0xFF4
  5276                           prodl	equ	0xFF3
  5277                           postinc0	equ	0xFEE
  5278                           wreg	equ	0xFE8
  5279                           postdec1	equ	0xFE5
  5280                           fsr1l	equ	0xFE1
  5281                           postinc2	equ	0xFDE
  5282                           postdec2	equ	0xFDD
  5283                           fsr2h	equ	0xFDA
  5284                           fsr2l	equ	0xFD9
  5285                           status	equ	0xFD8
  5286                           
  5287 ;; *************** function _DO_INIT *****************
  5288 ;; Defined at:
  5289 ;;		line 84 in file "Lab5p1.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;		None
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;		None
  5294 ;; Return value:  Size  Location     Type
  5295 ;;		None               void
  5296 ;; Registers used:
  5297 ;;		wreg, status,2, cstack
  5298 ;; Tracked objects:
  5299 ;;		On entry : 0/0
  5300 ;;		On exit  : 0/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;Total ram usage:        0 bytes
  5308 ;; Hardware stack levels used:    1
  5309 ;; Hardware stack levels required when called:    2
  5310 ;; This function calls:
  5311 ;;		_INIT_ADC
  5312 ;;		_init_UART
  5313 ;; This function is called by:
  5314 ;;		_main
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text24
  5319  002A40                     __ptext24:
  5320                           	opt stack 0
  5321  002A40                     _DO_INIT:
  5322                           	opt stack 28
  5323                           
  5324                           ;Lab5p1.c: 86: init_UART();
  5325                           
  5326                           ;incstack = 0
  5327  002A40  EC44  F015         	call	_init_UART	;wreg free
  5328                           
  5329                           ;Lab5p1.c: 87: TRISA = 0xFF;
  5330  002A44  6892               	setf	3986,c	;volatile
  5331                           
  5332                           ;Lab5p1.c: 88: TRISB = 0x00;
  5333  002A46  0E00               	movlw	0
  5334  002A48  6E93               	movwf	3987,c	;volatile
  5335                           
  5336                           ;Lab5p1.c: 89: TRISC = 0x00;
  5337  002A4A  0E00               	movlw	0
  5338  002A4C  6E94               	movwf	3988,c	;volatile
  5339                           
  5340                           ;Lab5p1.c: 90: TRISD = 0x00;
  5341  002A4E  0E00               	movlw	0
  5342  002A50  6E95               	movwf	3989,c	;volatile
  5343                           
  5344                           ;Lab5p1.c: 91: TRISE = 0x00;
  5345  002A52  0E00               	movlw	0
  5346  002A54  6E96               	movwf	3990,c	;volatile
  5347                           
  5348                           ;Lab5p1.c: 92: INIT_ADC();
  5349  002A56  EC55  F015         	call	_INIT_ADC	;wreg free
  5350  002A5A  0012               	return		;funcret
  5351  002A5C                     __end_of_DO_INIT:
  5352                           	opt stack 0
  5353                           tblptru	equ	0xFF8
  5354                           tblptrh	equ	0xFF7
  5355                           tblptrl	equ	0xFF6
  5356                           tablat	equ	0xFF5
  5357                           prodh	equ	0xFF4
  5358                           prodl	equ	0xFF3
  5359                           postinc0	equ	0xFEE
  5360                           wreg	equ	0xFE8
  5361                           postdec1	equ	0xFE5
  5362                           fsr1l	equ	0xFE1
  5363                           postinc2	equ	0xFDE
  5364                           postdec2	equ	0xFDD
  5365                           fsr2h	equ	0xFDA
  5366                           fsr2l	equ	0xFD9
  5367                           status	equ	0xFD8
  5368                           
  5369 ;; *************** function _init_UART *****************
  5370 ;; Defined at:
  5371 ;;		line 77 in file "Lab5p1.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;		None
  5374 ;; Auto vars:     Size  Location     Type
  5375 ;;		None
  5376 ;; Return value:  Size  Location     Type
  5377 ;;		None               void
  5378 ;; Registers used:
  5379 ;;		wreg, status,2, cstack
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;Total ram usage:        0 bytes
  5390 ;; Hardware stack levels used:    1
  5391 ;; Hardware stack levels required when called:    1
  5392 ;; This function calls:
  5393 ;;		_OpenUSART
  5394 ;; This function is called by:
  5395 ;;		_DO_INIT
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           	psect	text25
  5400  002A88                     __ptext25:
  5401                           	opt stack 0
  5402  002A88                     _init_UART:
  5403                           	opt stack 28
  5404                           
  5405                           ;Lab5p1.c: 79: OpenUSART (0b01111111 & 0b10111111 &
  5406                           ;Lab5p1.c: 80: 0b11111110 & 0b11111101 & 0b11111111 &
  5407                           ;Lab5p1.c: 81: 0b11111111, 25);
  5408                           
  5409                           ;incstack = 0
  5410  002A88  0E00               	movlw	0
  5411  002A8A  6E02               	movwf	OpenUSART@spbrg+1,c
  5412  002A8C  0E19               	movlw	25
  5413  002A8E  6E01               	movwf	OpenUSART@spbrg,c
  5414  002A90  0E3C               	movlw	60
  5415  002A92  EC25  F014         	call	_OpenUSART
  5416                           
  5417                           ;Lab5p1.c: 82: OSCCON = 0x60;
  5418  002A96  0E60               	movlw	96
  5419  002A98  6ED3               	movwf	4051,c	;volatile
  5420  002A9A  0012               	return		;funcret
  5421  002A9C                     __end_of_init_UART:
  5422                           	opt stack 0
  5423                           tblptru	equ	0xFF8
  5424                           tblptrh	equ	0xFF7
  5425                           tblptrl	equ	0xFF6
  5426                           tablat	equ	0xFF5
  5427                           prodh	equ	0xFF4
  5428                           prodl	equ	0xFF3
  5429                           postinc0	equ	0xFEE
  5430                           wreg	equ	0xFE8
  5431                           postdec1	equ	0xFE5
  5432                           fsr1l	equ	0xFE1
  5433                           postinc2	equ	0xFDE
  5434                           postdec2	equ	0xFDD
  5435                           fsr2h	equ	0xFDA
  5436                           fsr2l	equ	0xFD9
  5437                           status	equ	0xFD8
  5438                           
  5439 ;; *************** function _OpenUSART *****************
  5440 ;; Defined at:
  5441 ;;		line 73 in file "E:\XC8\sources\pic18\plib\USART\uopen.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;  config          1    wreg     unsigned char 
  5444 ;;  spbrg           2    0[COMRAM] unsigned int 
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;  config          1    2[COMRAM] unsigned char 
  5447 ;; Return value:  Size  Location     Type
  5448 ;;		None               void
  5449 ;; Registers used:
  5450 ;;		wreg, status,2
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5456 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5459 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5460 ;;Total ram usage:        3 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_init_UART
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           	psect	text26
  5470  00284A                     __ptext26:
  5471                           	opt stack 0
  5472  00284A                     _OpenUSART:
  5473                           	opt stack 28
  5474                           
  5475                           ;incstack = 0
  5476                           ;OpenUSART@config stored from wreg
  5477  00284A  6E03               	movwf	OpenUSART@config,c
  5478  00284C  0E00               	movlw	0
  5479  00284E  6EAC               	movwf	4012,c	;volatile
  5480  002850  0E00               	movlw	0
  5481  002852  6EAB               	movwf	4011,c	;volatile
  5482  002854  A003               	btfss	OpenUSART@config,0,c
  5483  002856  D002               	goto	l1777
  5484  002858  88AC               	bsf	4012,4,c	;volatile
  5485  00285A  D000               	goto	l1777
  5486  00285C                     l1777:
  5487  00285C  A203               	btfss	OpenUSART@config,1,c
  5488  00285E  D003               	goto	l1781
  5489  002860  8CAC               	bsf	4012,6,c	;volatile
  5490  002862  8CAB               	bsf	4011,6,c	;volatile
  5491  002864  D000               	goto	l1781
  5492  002866                     l1781:
  5493  002866  A403               	btfss	OpenUSART@config,2,c
  5494  002868  D002               	goto	l1785
  5495  00286A  8EAC               	bsf	4012,7,c	;volatile
  5496  00286C  D000               	goto	l1785
  5497  00286E                     l1785:
  5498  00286E  A603               	btfss	OpenUSART@config,3,c
  5499  002870  D002               	goto	l202
  5500  002872  88AB               	bsf	4011,4,c	;volatile
  5501  002874  D002               	goto	l1789
  5502  002876                     l202:
  5503  002876  8AAB               	bsf	4011,5,c	;volatile
  5504  002878  D000               	goto	l1789
  5505  00287A                     l1789:
  5506  00287A  B803               	btfsc	OpenUSART@config,4,c
  5507  00287C  84AC               	bsf	4012,2,c	;volatile
  5508  00287E  989E               	bcf	3998,4,c	;volatile
  5509  002880  AA03               	btfss	OpenUSART@config,5,c
  5510  002882  D002               	goto	l1797
  5511  002884  86AB               	bsf	4011,3,c	;volatile
  5512  002886  D000               	goto	l1797
  5513  002888                     l1797:
  5514  002888  AC03               	btfss	OpenUSART@config,6,c
  5515  00288A  D002               	goto	l206
  5516  00288C  8A9D               	bsf	3997,5,c	;volatile
  5517  00288E  D001               	goto	l207
  5518  002890                     l206:
  5519  002890  9A9D               	bcf	3997,5,c	;volatile
  5520  002892                     l207:
  5521  002892  9A9E               	bcf	3998,5,c	;volatile
  5522  002894  AE03               	btfss	OpenUSART@config,7,c
  5523  002896  D002               	goto	l208
  5524  002898  889D               	bsf	3997,4,c	;volatile
  5525  00289A  D001               	goto	l209
  5526  00289C                     l208:
  5527  00289C  989D               	bcf	3997,4,c	;volatile
  5528  00289E                     l209:
  5529  00289E  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5530  0028A2  5002               	movf	OpenUSART@spbrg+1,w,c
  5531  0028A4  6EB0               	movwf	4016,c	;volatile
  5532  0028A6  8AAC               	bsf	4012,5,c	;volatile
  5533  0028A8  8EAB               	bsf	4011,7,c	;volatile
  5534  0028AA  9C94               	bcf	3988,6,c	;volatile
  5535  0028AC  8E94               	bsf	3988,7,c	;volatile
  5536  0028AE  B8AC               	btfsc	4012,4,c	;volatile
  5537  0028B0  BEAC               	btfsc	4012,7,c	;volatile
  5538  0028B2  D002               	goto	l211
  5539  0028B4  8C94               	bsf	3988,6,c	;volatile
  5540  0028B6  D000               	goto	l211
  5541  0028B8                     l211:
  5542  0028B8  0012               	return		;funcret
  5543  0028BA                     __end_of_OpenUSART:
  5544                           	opt stack 0
  5545                           tblptru	equ	0xFF8
  5546                           tblptrh	equ	0xFF7
  5547                           tblptrl	equ	0xFF6
  5548                           tablat	equ	0xFF5
  5549                           prodh	equ	0xFF4
  5550                           prodl	equ	0xFF3
  5551                           postinc0	equ	0xFEE
  5552                           wreg	equ	0xFE8
  5553                           postdec1	equ	0xFE5
  5554                           fsr1l	equ	0xFE1
  5555                           postinc2	equ	0xFDE
  5556                           postdec2	equ	0xFDD
  5557                           fsr2h	equ	0xFDA
  5558                           fsr2l	equ	0xFD9
  5559                           status	equ	0xFD8
  5560                           
  5561 ;; *************** function _INIT_ADC *****************
  5562 ;; Defined at:
  5563 ;;		line 71 in file "Lab5p1.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;		None
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;		None
  5568 ;; Return value:  Size  Location     Type
  5569 ;;		None               void
  5570 ;; Registers used:
  5571 ;;		wreg, status,2
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5581 ;;Total ram usage:        0 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_DO_INIT
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text27
  5591  002AAA                     __ptext27:
  5592                           	opt stack 0
  5593  002AAA                     _INIT_ADC:
  5594                           	opt stack 29
  5595                           
  5596                           ;Lab5p1.c: 73: ADCON0=0x01;
  5597                           
  5598                           ;incstack = 0
  5599  002AAA  0E01               	movlw	1
  5600  002AAC  6EC2               	movwf	4034,c	;volatile
  5601                           
  5602                           ;Lab5p1.c: 74: ADCON1=0x1B ;
  5603  002AAE  0E1B               	movlw	27
  5604  002AB0  6EC1               	movwf	4033,c	;volatile
  5605                           
  5606                           ;Lab5p1.c: 75: ADCON2=0xA9;
  5607  002AB2  0EA9               	movlw	169
  5608  002AB4  6EC0               	movwf	4032,c	;volatile
  5609  002AB6  0012               	return		;funcret
  5610  002AB8                     __end_of_INIT_ADC:
  5611                           	opt stack 0
  5612                           tblptru	equ	0xFF8
  5613                           tblptrh	equ	0xFF7
  5614                           tblptrl	equ	0xFF6
  5615                           tablat	equ	0xFF5
  5616                           prodh	equ	0xFF4
  5617                           prodl	equ	0xFF3
  5618                           postinc0	equ	0xFEE
  5619                           wreg	equ	0xFE8
  5620                           postdec1	equ	0xFE5
  5621                           fsr1l	equ	0xFE1
  5622                           postinc2	equ	0xFDE
  5623                           postdec2	equ	0xFDD
  5624                           fsr2h	equ	0xFDA
  5625                           fsr2l	equ	0xFD9
  5626                           status	equ	0xFD8
  5627                           
  5628 ;; *************** function _DO_DISPLAY_7SEG_Upper *****************
  5629 ;; Defined at:
  5630 ;;		line 28 in file "Lab5p1.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  digit           1    wreg     unsigned char 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  digit           1    0[COMRAM] unsigned char 
  5635 ;;  PE              1    2[COMRAM] unsigned char 
  5636 ;;  PC              1    1[COMRAM] unsigned char 
  5637 ;; Return value:  Size  Location     Type
  5638 ;;		None               void
  5639 ;; Registers used:
  5640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;Total ram usage:        3 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		_main
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           	psect	text28
  5660  0026D0                     __ptext28:
  5661                           	opt stack 0
  5662  0026D0                     _DO_DISPLAY_7SEG_Upper:
  5663                           	opt stack 30
  5664                           
  5665                           ;incstack = 0
  5666                           ;DO_DISPLAY_7SEG_Upper@digit stored from wreg
  5667  0026D0  6E01               	movwf	DO_DISPLAY_7SEG_Upper@digit,c
  5668                           
  5669                           ;Lab5p1.c: 30: PORTC = array[digit] & 0x3F;
  5670  0026D2  5001               	movf	DO_DISPLAY_7SEG_Upper@digit,w,c
  5671  0026D4  0D02               	mullw	2
  5672  0026D6  0E80               	movlw	low _array
  5673  0026D8  24F3               	addwf	prodl,w,c
  5674  0026DA  6ED9               	movwf	fsr2l,c
  5675  0026DC  0E00               	movlw	high _array
  5676  0026DE  20F4               	addwfc	prodh,w,c
  5677  0026E0  6EDA               	movwf	fsr2h,c
  5678  0026E2  50DF               	movf	indf2,w,c
  5679  0026E4  0B3F               	andlw	63
  5680  0026E6  6E82               	movwf	3970,c	;volatile
  5681                           
  5682                           ;Lab5p1.c: 31: char PC = array[digit] & 0x01;
  5683  0026E8  5001               	movf	DO_DISPLAY_7SEG_Upper@digit,w,c
  5684  0026EA  0D02               	mullw	2
  5685  0026EC  0E80               	movlw	low _array
  5686  0026EE  24F3               	addwf	prodl,w,c
  5687  0026F0  6ED9               	movwf	fsr2l,c
  5688  0026F2  0E00               	movlw	high _array
  5689  0026F4  20F4               	addwfc	prodh,w,c
  5690  0026F6  6EDA               	movwf	fsr2h,c
  5691  0026F8  50DF               	movf	indf2,w,c
  5692  0026FA  0B01               	andlw	1
  5693  0026FC  6E02               	movwf	DO_DISPLAY_7SEG_Upper@PC,c
  5694                           
  5695                           ;Lab5p1.c: 32: char PE = array[digit] & 0x40;
  5696  0026FE  5001               	movf	DO_DISPLAY_7SEG_Upper@digit,w,c
  5697  002700  0D02               	mullw	2
  5698  002702  0E80               	movlw	low _array
  5699  002704  24F3               	addwf	prodl,w,c
  5700  002706  6ED9               	movwf	fsr2l,c
  5701  002708  0E00               	movlw	high _array
  5702  00270A  20F4               	addwfc	prodh,w,c
  5703  00270C  6EDA               	movwf	fsr2h,c
  5704  00270E  50DF               	movf	indf2,w,c
  5705  002710  0B40               	andlw	64
  5706  002712  6E03               	movwf	DO_DISPLAY_7SEG_Upper@PE,c
  5707                           
  5708                           ;Lab5p1.c: 33: if (PE == 0 && PC ==0)
  5709  002714  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  5710  002716  A4D8               	btfss	status,2,c
  5711  002718  D005               	goto	l2343
  5712  00271A  5002               	movf	DO_DISPLAY_7SEG_Upper@PC,w,c
  5713  00271C  A4D8               	btfss	status,2,c
  5714  00271E  D002               	goto	l2343
  5715                           
  5716                           ;Lab5p1.c: 34: PORTE = 0x00;
  5717  002720  0E00               	movlw	0
  5718  002722  D017               	goto	L10
  5719  002724                     l2343:
  5720                           
  5721                           ;Lab5p1.c: 35: else if (PC == 0 && PE != 0)
  5722  002724  5002               	movf	DO_DISPLAY_7SEG_Upper@PC,w,c
  5723  002726  A4D8               	btfss	status,2,c
  5724  002728  D005               	goto	l2349
  5725  00272A  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  5726  00272C  B4D8               	btfsc	status,2,c
  5727  00272E  D002               	goto	l2349
  5728                           
  5729                           ;Lab5p1.c: 36: PORTE = 0x01;
  5730  002730  0E01               	movlw	1
  5731  002732  D00F               	goto	L10
  5732  002734                     l2349:
  5733                           
  5734                           ;Lab5p1.c: 37: else if (PC == 1 && PE == 0)
  5735  002734  0402               	decf	DO_DISPLAY_7SEG_Upper@PC,w,c
  5736  002736  A4D8               	btfss	status,2,c
  5737  002738  D005               	goto	l2355
  5738  00273A  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  5739  00273C  A4D8               	btfss	status,2,c
  5740  00273E  D002               	goto	l2355
  5741                           
  5742                           ;Lab5p1.c: 38: PORTE = 0x02;
  5743  002740  0E02               	movlw	2
  5744  002742  D007               	goto	L10
  5745  002744                     l2355:
  5746                           
  5747                           ;Lab5p1.c: 39: else if (PC == 1 && PE != 0)
  5748  002744  0402               	decf	DO_DISPLAY_7SEG_Upper@PC,w,c
  5749  002746  A4D8               	btfss	status,2,c
  5750  002748  D006               	goto	l68
  5751  00274A  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  5752  00274C  B4D8               	btfsc	status,2,c
  5753  00274E  D003               	goto	l68
  5754                           
  5755                           ;Lab5p1.c: 40: PORTE = 0x03;
  5756  002750  0E03               	movlw	3
  5757  002752                     L10:
  5758  002752  6E84               	movwf	3972,c	;volatile
  5759  002754  D000               	goto	l68
  5760  002756                     l68:
  5761  002756  0012               	return		;funcret
  5762  002758                     __end_of_DO_DISPLAY_7SEG_Upper:
  5763                           	opt stack 0
  5764                           tblptru	equ	0xFF8
  5765                           tblptrh	equ	0xFF7
  5766                           tblptrl	equ	0xFF6
  5767                           tablat	equ	0xFF5
  5768                           prodh	equ	0xFF4
  5769                           prodl	equ	0xFF3
  5770                           postinc0	equ	0xFEE
  5771                           wreg	equ	0xFE8
  5772                           postdec1	equ	0xFE5
  5773                           fsr1l	equ	0xFE1
  5774                           indf2	equ	0xFDF
  5775                           postinc2	equ	0xFDE
  5776                           postdec2	equ	0xFDD
  5777                           fsr2h	equ	0xFDA
  5778                           fsr2l	equ	0xFD9
  5779                           status	equ	0xFD8
  5780                           
  5781 ;; *************** function _DO_DISPLAY_7SEG_Lower *****************
  5782 ;; Defined at:
  5783 ;;		line 45 in file "Lab5p1.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  digit           1    wreg     unsigned char 
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;  digit           1    0[COMRAM] unsigned char 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;		None               void
  5790 ;; Registers used:
  5791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;Total ram usage:        1 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_main
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           	psect	text29
  5811  002A5C                     __ptext29:
  5812                           	opt stack 0
  5813  002A5C                     _DO_DISPLAY_7SEG_Lower:
  5814                           	opt stack 30
  5815                           
  5816                           ;incstack = 0
  5817                           ;DO_DISPLAY_7SEG_Lower@digit stored from wreg
  5818  002A5C  6E01               	movwf	DO_DISPLAY_7SEG_Lower@digit,c
  5819                           
  5820                           ;Lab5p1.c: 47: PORTD = array[digit];
  5821  002A5E  5001               	movf	DO_DISPLAY_7SEG_Lower@digit,w,c
  5822  002A60  0D02               	mullw	2
  5823  002A62  0E80               	movlw	low _array
  5824  002A64  24F3               	addwf	prodl,w,c
  5825  002A66  6ED9               	movwf	fsr2l,c
  5826  002A68  0E00               	movlw	high _array
  5827  002A6A  20F4               	addwfc	prodh,w,c
  5828  002A6C  6EDA               	movwf	fsr2h,c
  5829  002A6E  50DF               	movf	indf2,w,c
  5830  002A70  6E83               	movwf	3971,c	;volatile
  5831  002A72  0012               	return		;funcret
  5832  002A74                     __end_of_DO_DISPLAY_7SEG_Lower:
  5833                           	opt stack 0
  5834                           tblptru	equ	0xFF8
  5835                           tblptrh	equ	0xFF7
  5836                           tblptrl	equ	0xFF6
  5837                           tablat	equ	0xFF5
  5838                           prodh	equ	0xFF4
  5839                           prodl	equ	0xFF3
  5840                           postinc0	equ	0xFEE
  5841                           wreg	equ	0xFE8
  5842                           postdec1	equ	0xFE5
  5843                           fsr1l	equ	0xFE1
  5844                           indf2	equ	0xFDF
  5845                           postinc2	equ	0xFDE
  5846                           postdec2	equ	0xFDD
  5847                           fsr2h	equ	0xFDA
  5848                           fsr2l	equ	0xFD9
  5849                           status	equ	0xFD8
  5850                           tblptru	equ	0xFF8
  5851                           tblptrh	equ	0xFF7
  5852                           tblptrl	equ	0xFF6
  5853                           tablat	equ	0xFF5
  5854                           prodh	equ	0xFF4
  5855                           prodl	equ	0xFF3
  5856                           postinc0	equ	0xFEE
  5857                           wreg	equ	0xFE8
  5858                           postdec1	equ	0xFE5
  5859                           fsr1l	equ	0xFE1
  5860                           indf2	equ	0xFDF
  5861                           postinc2	equ	0xFDE
  5862                           postdec2	equ	0xFDD
  5863                           fsr2h	equ	0xFDA
  5864                           fsr2l	equ	0xFD9
  5865                           status	equ	0xFD8
  5866                           
  5867                           	psect	rparam
  5868  0000                     tblptru	equ	0xFF8
  5869                           tblptrh	equ	0xFF7
  5870                           tblptrl	equ	0xFF6
  5871                           tablat	equ	0xFF5
  5872                           prodh	equ	0xFF4
  5873                           prodl	equ	0xFF3
  5874                           postinc0	equ	0xFEE
  5875                           wreg	equ	0xFE8
  5876                           postdec1	equ	0xFE5
  5877                           fsr1l	equ	0xFE1
  5878                           indf2	equ	0xFDF
  5879                           postinc2	equ	0xFDE
  5880                           postdec2	equ	0xFDD
  5881                           fsr2h	equ	0xFDA
  5882                           fsr2l	equ	0xFD9
  5883                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    118
    Data        20
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    125     127
    BANK0           128      0      22
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___ftpack
    ___awmod->___fttol
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _init_UART->_OpenUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   46974
                                            120 COMRAM     5     5      0
              _DO_DISPLAY_7SEG_Lower
              _DO_DISPLAY_7SEG_Upper
                            _DO_INIT
                       _GET_FULL_ADC
                         _SET_ADC_CH
                            ___awmod
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   36583
                                             86 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    8802
                                             58 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8604
                                             58 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             52 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3742
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1356
                                             38 COMRAM     6     2      4
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1360
                                             44 COMRAM     8     4      4
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1868
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     477
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     374
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     517
                                             23 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3131
                                             80 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    2878
                                             68 COMRAM    12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     454
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2212
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1890
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SET_ADC_CH                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _GET_FULL_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _DO_INIT                                              0     0      0     273
                           _INIT_ADC
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _INIT_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_7SEG_Upper                                3     3      0     244
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_7SEG_Lower                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DO_DISPLAY_7SEG_Lower
   _DO_DISPLAY_7SEG_Upper
   _DO_INIT
     _INIT_ADC
     _init_UART
       _OpenUSART
   _GET_FULL_ADC
   _SET_ADC_CH
   ___awmod
     ___ftmul (ARG)
       ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
   _printf
     ___awdiv
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___ftpack
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftpack
         ___awmod
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___ftmul (ARG)
               ___ftpack
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftpack
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___ftmul (ARG)
               ___ftpack
           ___awmod
             ___ftmul (ARG)
               ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___ftpack
               ___ftmul (ARG)
                 ___ftpack
             ___awmod (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___ftmul (ARG)
               ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftpack
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___ftpack
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftpack
       ___awmod
         ___ftmul (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftpack
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftpack
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftpack
       ___awmod
         ___ftmul (ARG)
           ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul
         ___ftpack
       ___fttol (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftpack
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      16       5       17.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7D      7F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      95      34        0.0%
DATA                 0      0      95       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Sep 25 01:01:34 2021

                             _L 0094                               _U 007E                              l55 2AA0  
                            l68 2756                              l92 29FA                              l95 2A1A  
                  ___awdiv@sign 0032             ___wmul@multiplicand 0037                    ___ftadd@exp1 0050  
                  ___ftadd@exp2 004F                    ___ftadd@sign 004E                             l202 2876  
                           l122 1A88                             l211 28B8                             l115 1CCC  
                           l206 2890                             l214 29F4                             l207 2892  
                           l208 289C                             l209 289E                             l420 27D8  
                           l407 25AC                             l167 1504                             l432 2998  
                           l178 16A8                             l611 2450                             l603 1E1A  
                           l507 209A                             l621 1F08                             l550 24EE  
                           l614 241C                             l622 1F30                             l703 26BE  
                           l713 2838                             l539 2516                             l619 1FA0  
                           l643 21A2                             l580 1E90                             l660 295C  
                           l628 1F90                             l637 2642                             l653 2A32  
                           l733 2918                             l583 1D3C                             l664 236E  
                           l594 1DFE                             l498 20AA                             l579 1D12  
                  ___awmod@sign 002C                             prod 000FF3                             wreg 000FE8  
                ??_GET_FULL_ADC 0003                    __CFG_LVP$OFF 000000                 __end_of_DO_INIT 2A5C  
                  ___ftdiv@cntr 0016                    ___ftdiv@sign 001B                    __CFG_WDT$OFF 000000  
                          l2001 277C                            l2101 1EB0                            l2021 27CE  
                          l2013 27B2                            l2005 278A                            l2007 2794  
                          l2201 206C                            l2009 279C                            l2017 27BE  
                          l2203 2072                            l2107 1ECE                            l2141 1F62  
                          l2053 1C8C                            l2045 1BC8                            l2223 25E0  
                          l2215 2932                            l2207 2086                            l2143 1F68  
                          l2233 263E                            l2305 26AE                            l2321 2828  
                          l2313 27EC                            l2209 2094                            l2137 1F52  
                          l2129 1F3E                            l2073 187E                            l2227 2612  
                          l2315 27FA                            l2163 1FC2                            l2147 1F7C  
                          l2091 1A64                            l2067 17D6                            l2317 2802  
                          l2157 1FB2                            l2149 1F8A                            l2085 19B2  
                          l2077 188E                            l2501 14E0                            l2413 1126  
                          l2343 2724                            l2271 2318                            l2247 22A8  
                          l2327 28C0                            l2503 14EE                            l2265 2302  
                          l2329 28CE                            l2185 2038                            l2177 2006  
                          l2513 1524                            l2441 1242                            l2355 2744  
                          l2283 235C                            l2275 232C                            l2523 164A  
                          l2507 150A                            l2443 1252                            l2531 1670  
                          l2349 2734                            l2277 233A                            l2269 2312  
                          l2293 2666                            l2197 205C                            l2189 2048  
                          l2525 1656                            l2517 1574                            l2453 12CA  
                          l2445 1282                            l2437 121C                            l2429 11B8  
                          l1751 24B6                            l1743 2472                            l2543 238E  
                          l2279 2344                            l2295 2674                            l1903 20CA  
                          l2471 13DC                            l2463 133A                            l2447 1292  
                          l2391 109E                            l2535 168C                            l1761 24F6  
                          l1753 24D6                            l1745 247E                            l2545 23A8  
                          l1841 1D4A                            l2297 267C                            l1905 20E4  
                          l2529 1664                            l2481 141C                            l2473 13E0  
                          l2465 1368                            l2457 12EE                            l2393 10AA  
                          l1755 24E2                            l1747 249E                            l1739 2462  
                          l1835 1D20                            l1931 214E                            l1923 2126  
                          l2459 12F8                            l2467 1376                            l2387 108E  
                          l1781 2866                            l2549 23B6                            l1941 217C  
                          l1933 2154                            l1909 20F2                            l2485 1420  
                          l2477 13EC                            l2397 10B2                            l1767 2508  
                          l2591 2974                            l1863 1DA2                            l1847 1D56  
                          l1927 2138                            l2495 14C6                            l2399 10D4  
                          l1785 286E                            l1777 285C                            l2569 23F6  
                          l1865 1DAE                            l1857 1D7E                            l1953 252E  
                          l1937 2166                            l2497 14D2                            l2489 143C  
                          l2579 242A                            l1883 1E38                            l1875 1DE6  
                          l1867 1DBA                            l1797 2888                            l1789 287A  
                          l1893 1E6A                            l1877 1DF2                            l1869 1DC2  
                          l1965 2556                            l1981 2592                            l2597 21AA  
                          l1967 2560                            l1959 2540                            l1985 25A2  
                          l1977 2586                            l1969 2568                            l1997 276E  
                          STR_1 1077                            u2101 1EC0                            u2310 22C6  
                          u2081 1EA2                            u1611 1CDE                            u2315 22BE  
                          u1621 1CF2                            u2291 229A                            u1821 20BC  
                          u1841 20DA                            u2730 14FE                            u2570 115E  
                          u2811 239E                    printf@tmpval 0071                            u2575 1154  
                          u2791 2380                            _TRMT 007D61                            _main 21A4  
                  ___ftpack@arg 0001                    ___ftpack@exp 0004                            fsr2h 000FDA  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          prodh 000FF4                            prodl 000FF3                            start 0000  
                  ___ftmul@cntr 0016                    ___param_bank 000010                    ___ftmul@sign 0017  
                  ___fttol@exp1 0026                    ___fttol@lval 0022                __end_of_INIT_ADC 2AB8  
                         ?_main 0001                     ?_SET_ADC_CH 0001                 __end_of___awdiv 25AE  
               __end_of___ftadd 1E92                 __end_of___awmod 27DA                 __end_of___ftdiv 2452  
               __end_of___ftneg 2A40                 __end_of___lldiv 26D0                 __end_of___ftmul 21A4  
               ___awdiv@divisor 002F                 __end_of___llmod 284A                 __end_of___ftsub 295E  
               __end_of___fttol 2370                 ___awdiv@counter 0031                           _RCSTA 000FAB  
                         _SPBRG 000FAF                           _PORTC 000F82                           _PORTD 000F83  
                         _PORTE 000F84                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                         _TXREG 000FAD                           _TXSTA 000FAC                    ___lltoft@exp 0011  
                 ___awtoft@sign 000C                 __end_of_dpowers 1029                           _array 0080  
                         _scale 16AA                   ___ftpack@sign 0005                           _putch 2A9C  
                __CFG_BOREN$OFF 000000                           tablat 000FF5                           status 000FD8  
        ?_DO_DISPLAY_7SEG_Lower 0001          ?_DO_DISPLAY_7SEG_Upper 0001                SET_ADC_CH@ADC_CH 0001  
               __initialization 299A                    __end_of_main 228A                          ??_main 0079  
                 ___fttol@sign1 0021                   __activetblptr 000002                       ??_DO_INIT 0004  
          __size_of__tdiv_to_l_ 0110                          _ADCON0 000FC2                          _ADCON1 000FC1  
                        _ADCON2 000FC0                ___llmod@dividend 0001                          ?_scale 003B  
                        _ADRESH 000FC4                          _ADRESL 000FC3                ___awdiv@dividend 002D  
              __end_of___awtoft 299A                          ?_putch 0001                __end_of___ftpack 2518  
              __end_of___lltoft 291A                          _OSCCON 000FD3                          _SPBRGH 000FB0  
           __size_of_SET_ADC_CH 000C                __end_of__powers_ 1077            __end_of_GET_FULL_ADC 2A1C  
            __size_of_OpenUSART 0070                          ___ftge 25AE                          ___wmul 29CE  
                     ??___awdiv 0031                       ??___ftadd 004B                       ??___awmod 002B  
                     ??___ftdiv 0013                       ??___ftneg 0004                       ??___lldiv 0009  
                     ??___ftmul 000F                       ??___llmod 0009                       ??___ftsub 0057  
                     ??___fttol 001C                          _fround 1A8A                ___awdiv@quotient 0033  
               ___awmod@divisor 0029                 ___awmod@counter 002B                          _printf 1084  
         ___ftmul@f3_as_product 0013                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                          putch@c 0001  
                    __accesstop 0080         __end_of__initialization 29C4                      ___ftadd@f1 0045  
                    ___ftadd@f2 0048                       ?_INIT_ADC 0001                      ___ftge@ff1 0001  
                    ___ftge@ff2 0004                   ___rparam_used 000001                      ___ftdiv@f1 000D  
                    ___ftdiv@f2 0010                      ___ftdiv@f3 0017                      ___ftneg@f1 0001  
                    ___awtoft@c 0009                      ___ftmul@f1 0009                      ___ftmul@f2 000C  
                    ___ftsub@f1 0051                      ___ftsub@f2 0054                      ___fttol@f1 0018  
                __pcstackCOMRAM 0001                    __pidataBANK0 2A74                      ___lltoft@c 0009  
                 __end_of_scale 1A8A                   __end_of_putch 2AAA                      __div_to_l_ 1FA2  
             __end_of_OpenUSART 28BA                 __div_to_l_@exp1 000C                 __div_to_l_@cntr 000B  
                       ??_scale 003E                 __div_to_l_@quot 0007                         ??_putch 0001  
                    __pbssBANK0 0094              __size_of_init_UART 0014                      ??_INIT_ADC 0001  
                 __div_to_l_@f1 0001                   __div_to_l_@f2 0004                         ?___ftge 0001  
                       ?___wmul 0035                         ?_fround 003B                       ?___awtoft 0009  
                     ?___ftpack 0001                         ?_printf 0057                    ??_SET_ADC_CH 0001  
                     ?___lltoft 0009                         _DO_INIT 2A40         ??_DO_DISPLAY_7SEG_Lower 0001  
       ??_DO_DISPLAY_7SEG_Upper 0001           __size_of_GET_FULL_ADC 0026              __end_of_SET_ADC_CH 2AC4  
             __end_of__npowers_ 1050                         __Hparam 0000                      _scale$1100 003E  
                       __Lparam 0000                 __size_of___ftge 0096                         ___awdiv 2518  
                       ___ftadd 1CCE                         ___awmod 2758                         ___ftdiv 2370  
                       ___ftneg 2A1C                         ___lldiv 2644                 __size_of___wmul 0028  
                       ___ftmul 20AC                         ___llmod 27DA                         ___ftsub 291A  
                       ___fttol 228A                    __psmallconst 1000                         __pcinit 299A  
                    ??___awtoft 000C                      ??___ftpack 0006                 __size_of_fround 0244  
                       __ramtop 1000                      ??___lltoft 000D                         __ptext0 21A4  
                       __ptext1 1084                         __ptext2 16AA                         __ptext3 2A9C  
                       __ptext4 1A8A                         __ptext5 29CE                         __ptext6 20AC  
                       __ptext7 2758                         __ptext8 2518                         __ptext9 1E92  
               __size_of_printf 0626               __end_of_init_UART 2A9C                     ?__div_to_l_ 0001  
                       _dpowers 1001                ___awmod@dividend 0027                    _GET_FULL_ADC 29F6  
          end_of_initialization 29C4                   __Lmediumconst 0000                 ___lldiv@divisor 0005  
               ___lldiv@counter 000D                       _RCSTAbits 000FAB                         printf@c 0078  
                       printf@f 0057                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE                  __tdiv_to_l_@f1 0001  
                __tdiv_to_l_@f2 0004                   ??__tdiv_to_l_ 0007                       _PORTDbits 000F83  
                     _TRISCbits 000F94                     ___ftdiv@exp 001A                       _TXSTAbits 000FAC  
           __size_of__div_to_l_ 010A               __size_of_INIT_ADC 000E                     ___ftmul@exp 0012  
                __end_of___ftge 2644                  __end_of___wmul 29F6                  __end_of_fround 1CCE  
                __end_of_printf 16AA             start_initialization 299A         DO_DISPLAY_7SEG_Upper@PC 0002  
       DO_DISPLAY_7SEG_Upper@PE 0003      DO_DISPLAY_7SEG_Lower@digit 0001             __end_of__tdiv_to_l_ 1FA2  
                     _OpenUSART 284A                 ___llmod@divisor 0005                __CFG_OSC$INTIO67 000000  
               ___llmod@counter 0009                        ??___ftge 0007              GET_FULL_ADC@result 0005  
                      ??___wmul 0039                     __pdataBANK0 0080                        ??_fround 003E  
                      ??_printf 005C                      fround@prec 0044               __size_of___awtoft 003C  
             __size_of___ftpack 00C6                        ?_DO_INIT 0001               __size_of___lltoft 0060  
                   __pbssCOMRAM 007E                      ?_OpenUSART 0001  __size_of_DO_DISPLAY_7SEG_Lower 0018  
 __end_of_DO_DISPLAY_7SEG_Lower 2A74  __size_of_DO_DISPLAY_7SEG_Upper 0088   __end_of_DO_DISPLAY_7SEG_Upper 2758  
                      ?___awdiv 002D                        ?___ftadd 0045                        ?___awmod 0027  
                      ?___ftdiv 000D                        ?___ftneg 0001                        ?___lldiv 0001  
                      ?___ftmul 0009                        ?___llmod 0001                        ?___ftsub 0051  
                     __npowers_ 1029                        ?___fttol 0018                     __tdiv_to_l_ 1E92  
                  ??__div_to_l_ 0007                     __smallconst 1000      DO_DISPLAY_7SEG_Upper@digit 0001  
                     _init_UART 2A88                  __size_of_scale 03E0                  __size_of_putch 000E  
                ___wmul@product 0039                        _INIT_ADC 2AAA                        _PIE1bits 000F9D  
                      _PIR1bits 000F9E              __end_of__div_to_l_ 20AC                      _ADCON0bits 000FC2  
             ___wmul@multiplier 0035                      printf@flag 0067                      printf@fval 0075  
                    printf@prec 0069                       main@ivolt 0079                __size_of_DO_INIT 001C  
                    ?_init_UART 0001                       copy_data0 29B8                     ??_OpenUSART 0003  
               OpenUSART@config 0003                        __Hrparam 0000                        __Lrparam 0000  
              __size_of___awdiv 0096                __size_of___ftadd 01C4                __size_of___awmod 0082  
              __size_of___ftdiv 00E2                __size_of___ftneg 0024                __size_of___lldiv 008C  
              __size_of___ftmul 00F8                __size_of___llmod 0070                __size_of___ftsub 0044  
              __size_of___fttol 00E6                        ___awtoft 295E                        ___ftpack 2452  
                   _fround$1098 0041                     _fround$1099 003E                        ___lltoft 28BA  
                      __ptext10 1FA2                        __ptext11 28BA                        __ptext20 295E  
                      __ptext12 27DA                        __ptext21 2452                        __ptext13 2644  
                      __ptext22 2AB8                        __ptext14 228A                        __ptext23 29F6  
                      __ptext15 291A                        __ptext24 2A40                        __ptext16 1CCE  
                      __ptext25 2A88                        __ptext17 2A1C                        __ptext26 284A  
                      __ptext18 25AE                        __ptext27 2AAA                        __ptext19 2370  
                      __ptext28 26D0                        __ptext29 2A5C                        __powers_ 1050  
                 __size_of_main 00E6                       printf@exp 006F                       printf@val 006B  
                      main@volt 007B                  OpenUSART@spbrg 0001                     ??_init_UART 0004  
                      scale@scl 0041                __tdiv_to_l_@exp1 000F                __tdiv_to_l_@cntr 000E  
              __tdiv_to_l_@quot 000A                ___lldiv@dividend 0001                        printf@ap 0065  
                  ?__tdiv_to_l_ 0001                      _SET_ADC_CH 2AB8                     _printf$1101 0062  
              ___lldiv@quotient 0009                   ?_GET_FULL_ADC 0001           _DO_DISPLAY_7SEG_Lower 2A5C  
         _DO_DISPLAY_7SEG_Upper 26D0  
