

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Sep 25 15:52:16 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataBANK0
    54  002EA4                     __pidataBANK0:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _array
    58  002EA4  0040               	dw	64
    59  002EA6  0079               	dw	121
    60  002EA8  0024               	dw	36
    61  002EAA  0030               	dw	48
    62  002EAC  0019               	dw	25
    63  002EAE  0012               	dw	18
    64  002EB0  0002               	dw	2
    65  002EB2  0078               	dw	120
    66  002EB4  0000               	dw	0
    67  002EB6  0010               	dw	16
    68                           
    69                           	psect	smallconst
    70  001000                     __psmallconst:
    71                           	opt stack 0
    72  001000  00                 	db	0
    73  001001                     _dpowers:
    74                           	opt stack 0
    75  001001  0001               	dw	1
    76  001003  0000               	dw	0
    77  001005  000A               	dw	10
    78  001007  0000               	dw	0
    79  001009  0064               	dw	100
    80  00100B  0000               	dw	0
    81  00100D  03E8               	dw	1000
    82  00100F  0000               	dw	0
    83  001011  2710               	dw	10000
    84  001013  0000               	dw	0
    85  001015  86A0               	dw	34464
    86  001017  0001               	dw	1
    87  001019  4240               	dw	16960
    88  00101B  000F               	dw	15
    89  00101D  9680               	dw	38528
    90  00101F  0098               	dw	152
    91  001021  E100               	dw	57600
    92  001023  05F5               	dw	1525
    93  001025  CA00               	dw	51712
    94  001027  3B9A               	dw	15258
    95  001029                     __end_of_dpowers:
    96                           	opt stack 0
    97  001029                     __npowers_:
    98                           	opt stack 0
    99  001029  00                 	db	0
   100  00102A  80                 	db	128
   101  00102B  3F                 	db	63
   102  00102C  CD                 	db	205
   103  00102D  CC                 	db	204
   104  00102E  3D                 	db	61
   105  00102F  D7                 	db	215
   106  001030  23                 	db	35
   107  001031  3C                 	db	60
   108  001032  12                 	db	18
   109  001033  83                 	db	131
   110  001034  3A                 	db	58
   111  001035  B7                 	db	183
   112  001036  D1                 	db	209
   113  001037  38                 	db	56
   114  001038  C6                 	db	198
   115  001039  27                 	db	39
   116  00103A  37                 	db	55
   117  00103B  38                 	db	56
   118  00103C  86                 	db	134
   119  00103D  35                 	db	53
   120  00103E  C0                 	db	192
   121  00103F  D6                 	db	214
   122  001040  33                 	db	51
   123  001041  CC                 	db	204
   124  001042  2B                 	db	43
   125  001043  32                 	db	50
   126  001044  70                 	db	112
   127  001045  89                 	db	137
   128  001046  30                 	db	48
   129  001047  E7                 	db	231
   130  001048  DB                 	db	219
   131  001049  2E                 	db	46
   132  00104A  E5                 	db	229
   133  00104B  3C                 	db	60
   134  00104C  1E                 	db	30
   135  00104D  42                 	db	66
   136  00104E  A2                 	db	162
   137  00104F  0D                 	db	13
   138  001050                     __end_of__npowers_:
   139                           	opt stack 0
   140  001050                     __powers_:
   141                           	opt stack 0
   142  001050  00                 	db	0
   143  001051  80                 	db	128
   144  001052  3F                 	db	63
   145  001053  00                 	db	0
   146  001054  20                 	db	32
   147  001055  41                 	db	65
   148  001056  00                 	db	0
   149  001057  C8                 	db	200
   150  001058  42                 	db	66
   151  001059  00                 	db	0
   152  00105A  7A                 	db	122
   153  00105B  44                 	db	68
   154  00105C  40                 	db	64
   155  00105D  1C                 	db	28
   156  00105E  46                 	db	70
   157  00105F  50                 	db	80
   158  001060  C3                 	db	195
   159  001061  47                 	db	71
   160  001062  24                 	db	36
   161  001063  74                 	db	116
   162  001064  49                 	db	73
   163  001065  97                 	db	151
   164  001066  18                 	db	24
   165  001067  4B                 	db	75
   166  001068  BC                 	db	188
   167  001069  BE                 	db	190
   168  00106A  4C                 	db	76
   169  00106B  6B                 	db	107
   170  00106C  6E                 	db	110
   171  00106D  4E                 	db	78
   172  00106E  03                 	db	3
   173  00106F  15                 	db	21
   174  001070  50                 	db	80
   175  001071  79                 	db	121
   176  001072  AD                 	db	173
   177  001073  60                 	db	96
   178  001074  F3                 	db	243
   179  001075  49                 	db	73
   180  001076  71                 	db	113
   181  001077                     __end_of__powers_:
   182                           	opt stack 0
   183  0000                     _ADCON0	set	4034
   184  0000                     _ADCON0bits	set	4034
   185  0000                     _ADCON1	set	4033
   186  0000                     _ADCON2	set	4032
   187  0000                     _ADRESH	set	4036
   188  0000                     _ADRESL	set	4035
   189  0000                     _CCP2CON	set	4026
   190  0000                     _CCPR2L	set	4027
   191  0000                     _OSCCON	set	4051
   192  0000                     _PIE1bits	set	3997
   193  0000                     _PIR1bits	set	3998
   194  0000                     _PORTA	set	3968
   195  0000                     _PORTAbits	set	3968
   196  0000                     _PORTB	set	3969
   197  0000                     _PORTBbits	set	3969
   198  0000                     _PORTC	set	3970
   199  0000                     _PORTD	set	3971
   200  0000                     _PORTDbits	set	3971
   201  0000                     _PORTE	set	3972
   202  0000                     _PORTEbits	set	3972
   203  0000                     _PR2	set	4043
   204  0000                     _RCSTA	set	4011
   205  0000                     _RCSTAbits	set	4011
   206  0000                     _SPBRG	set	4015
   207  0000                     _SPBRGH	set	4016
   208  0000                     _T2CON	set	4042
   209  0000                     _TRISA	set	3986
   210  0000                     _TRISB	set	3987
   211  0000                     _TRISC	set	3988
   212  0000                     _TRISCbits	set	3988
   213  0000                     _TRISD	set	3989
   214  0000                     _TRISE	set	3990
   215  0000                     _TXREG	set	4013
   216  0000                     _TXSTA	set	4012
   217  0000                     _TXSTAbits	set	4012
   218  0000                     _TRMT	set	32097
   219  001077                     STR_1:
   220  001077  52                 	db	82	;'R'
   221  001078  65                 	db	101	;'e'
   222  001079  73                 	db	115	;'s'
   223  00107A  69                 	db	105	;'i'
   224  00107B  73                 	db	115	;'s'
   225  00107C  74                 	db	116	;'t'
   226  00107D  61                 	db	97	;'a'
   227  00107E  6E                 	db	110	;'n'
   228  00107F  63                 	db	99	;'c'
   229  001080  65                 	db	101	;'e'
   230  001081  3A                 	db	58	;':'
   231  001082  20                 	db	32
   232  001083  25                 	db	37
   233  001084  66                 	db	102	;'f'
   234  001085  20                 	db	32
   235  001086  6B                 	db	107	;'k'
   236  001087  4F                 	db	79	;'O'
   237  001088  68                 	db	104	;'h'
   238  001089  6D                 	db	109	;'m'
   239  00108A  0D                 	db	13
   240  00108B  0A                 	db	10
   241  00108C  00                 	db	0
   242                           
   243                           ; #config settings
   244  00108D  00                 	db	0	; dummy byte at the end
   245  0000                     
   246                           	psect	cinit
   247  002D30                     __pcinit:
   248                           	opt stack 0
   249  002D30                     start_initialization:
   250                           	opt stack 0
   251  002D30                     __initialization:
   252                           	opt stack 0
   253                           
   254                           ; Clear objects allocated to BANK0 (8 bytes)
   255  002D30  EE00  F0BC         	lfsr	0,__pbssBANK0
   256  002D34  0E08               	movlw	8
   257  002D36                     clear_0:
   258  002D36  6AEE               	clrf	postinc0,c
   259  002D38  06E8               	decf	wreg,f,c
   260  002D3A  E1FD               	bnz	clear_0
   261                           
   262                           ; Clear objects allocated to COMRAM (10 bytes)
   263  002D3C  EE00  F072         	lfsr	0,__pbssCOMRAM
   264  002D40  0E0A               	movlw	10
   265  002D42                     clear_1:
   266  002D42  6AEE               	clrf	postinc0,c
   267  002D44  06E8               	decf	wreg,f,c
   268  002D46  E1FD               	bnz	clear_1
   269                           
   270                           ; Initialize objects allocated to BANK0 (20 bytes)
   271                           ; load TBLPTR registers with __pidataBANK0
   272  002D48  0EA4               	movlw	low __pidataBANK0
   273  002D4A  6EF6               	movwf	tblptrl,c
   274  002D4C  0E2E               	movlw	high __pidataBANK0
   275  002D4E  6EF7               	movwf	tblptrh,c
   276  002D50  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   277  002D52  6EF8               	movwf	tblptru,c
   278  002D54  EE00  F0A8         	lfsr	0,__pdataBANK0
   279  002D58  EE10 F014          	lfsr	1,20
   280  002D5C                     copy_data0:
   281  002D5C  0009               	tblrd		*+
   282  002D5E  CFF5 FFEE          	movff	tablat,postinc0
   283  002D62  50E5               	movf	postdec1,w,c
   284  002D64  50E1               	movf	fsr1l,w,c
   285  002D66  E1FA               	bnz	copy_data0
   286  002D68                     end_of_initialization:
   287                           	opt stack 0
   288  002D68                     __end_of__initialization:
   289                           	opt stack 0
   290  002D68  0E00               	movlw	low (__Lmediumconst shr (0+16))
   291  002D6A  6EF8               	movwf	tblptru,c
   292  002D6C  0100               	movlb	0
   293  002D6E  EF9F  F00D         	goto	_main	;jump to C main() function
   294                           tblptru	equ	0xFF8
   295                           tblptrh	equ	0xFF7
   296                           tblptrl	equ	0xFF6
   297                           tablat	equ	0xFF5
   298                           postinc0	equ	0xFEE
   299                           wreg	equ	0xFE8
   300                           postdec1	equ	0xFE5
   301                           fsr1l	equ	0xFE1
   302                           
   303                           	psect	bssCOMRAM
   304  000072                     __pbssCOMRAM:
   305                           	opt stack 0
   306  000072                     _F:
   307                           	opt stack 0
   308  000072                     	ds	3
   309  000075                     _Tc:
   310                           	opt stack 0
   311  000075                     	ds	3
   312  000078                     _Vdec:
   313                           	opt stack 0
   314  000078                     	ds	2
   315  00007A                     _tempF:
   316                           	opt stack 0
   317  00007A                     	ds	2
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           postdec1	equ	0xFE5
   325                           fsr1l	equ	0xFE1
   326                           
   327                           	psect	bssBANK0
   328  0000BC                     __pbssBANK0:
   329                           	opt stack 0
   330  0000BC                     _resist:
   331                           	opt stack 0
   332  0000BC                     	ds	3
   333  0000BF                     _temp:
   334                           	opt stack 0
   335  0000BF                     	ds	3
   336  0000C2                     _nstep:
   337                           	opt stack 0
   338  0000C2                     	ds	2
   339                           tblptru	equ	0xFF8
   340                           tblptrh	equ	0xFF7
   341                           tblptrl	equ	0xFF6
   342                           tablat	equ	0xFF5
   343                           postinc0	equ	0xFEE
   344                           wreg	equ	0xFE8
   345                           postdec1	equ	0xFE5
   346                           fsr1l	equ	0xFE1
   347                           
   348                           	psect	dataBANK0
   349  0000A8                     __pdataBANK0:
   350                           	opt stack 0
   351  0000A8                     _array:
   352                           	opt stack 0
   353  0000A8                     	ds	20
   354                           tblptru	equ	0xFF8
   355                           tblptrh	equ	0xFF7
   356                           tblptrl	equ	0xFF6
   357                           tablat	equ	0xFF5
   358                           postinc0	equ	0xFEE
   359                           wreg	equ	0xFE8
   360                           postdec1	equ	0xFE5
   361                           fsr1l	equ	0xFE1
   362                           
   363                           	psect	cstackBANK0
   364  000080                     __pcstackBANK0:
   365                           	opt stack 0
   366  000080                     _printf$1513:
   367                           	opt stack 0
   368                           
   369                           ; 3 bytes @ 0x0
   370  000080                     	ds	3
   371  000083                     printf@ap:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0x3
   375  000083                     	ds	2
   376  000085                     printf@flag:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x5
   380  000085                     	ds	2
   381  000087                     printf@prec:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x7
   385  000087                     	ds	2
   386  000089                     printf@val:
   387                           	opt stack 0
   388                           
   389                           ; 4 bytes @ 0x9
   390  000089                     	ds	4
   391  00008D                     printf@exp:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0xD
   395  00008D                     	ds	2
   396  00008F                     printf@tmpval:
   397                           	opt stack 0
   398                           
   399                           ; 4 bytes @ 0xF
   400  00008F                     	ds	4
   401  000093                     printf@fval:
   402                           	opt stack 0
   403                           
   404                           ; 3 bytes @ 0x13
   405  000093                     	ds	3
   406  000096                     printf@c:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x16
   410  000096                     	ds	1
   411  000097                     main@U:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x17
   415  000097                     	ds	2
   416  000099                     main@L:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x19
   420  000099                     	ds	2
   421  00009B                     main@voltage_mv:
   422                           	opt stack 0
   423                           
   424                           ; 3 bytes @ 0x1B
   425  00009B                     	ds	3
   426  00009E                     main@vL:
   427                           	opt stack 0
   428                           
   429                           ; 3 bytes @ 0x1E
   430  00009E                     	ds	3
   431  0000A1                     main@L_615:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x21
   435  0000A1                     	ds	1
   436  0000A2                     main@U_626:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x22
   440  0000A2                     	ds	1
   441  0000A3                     main@L_627:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x23
   445  0000A3                     	ds	1
   446  0000A4                     main@U_614:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x24
   450  0000A4                     	ds	1
   451  0000A5                     main@rL:
   452                           	opt stack 0
   453                           
   454                           ; 3 bytes @ 0x25
   455  0000A5                     	ds	3
   456                           tblptru	equ	0xFF8
   457                           tblptrh	equ	0xFF7
   458                           tblptrl	equ	0xFF6
   459                           tablat	equ	0xFF5
   460                           postinc0	equ	0xFEE
   461                           wreg	equ	0xFE8
   462                           postdec1	equ	0xFE5
   463                           fsr1l	equ	0xFE1
   464                           
   465                           	psect	cstackCOMRAM
   466  000001                     __pcstackCOMRAM:
   467                           	opt stack 0
   468  000001                     ?_Get_Full_ADC:
   469                           	opt stack 0
   470  000001                     ?___ftpack:
   471                           	opt stack 0
   472  000001                     ?__tdiv_to_l_:
   473                           	opt stack 0
   474  000001                     ?__div_to_l_:
   475                           	opt stack 0
   476  000001                     ?___lldiv:
   477                           	opt stack 0
   478  000001                     ?___llmod:
   479                           	opt stack 0
   480  000001                     putch@c:
   481                           	opt stack 0
   482  000001                     Select_ADC_Channel@channel:
   483                           	opt stack 0
   484  000001                     DO_DISPLAY_7SEG_Upper@digit:
   485                           	opt stack 0
   486  000001                     DO_DISPLAY_7SEG_Lower@digit:
   487                           	opt stack 0
   488  000001                     WAIT_1_SEC@j:
   489                           	opt stack 0
   490  000001                     OpenUSART@spbrg:
   491                           	opt stack 0
   492  000001                     __div_to_l_@f1:
   493                           	opt stack 0
   494  000001                     ___ftpack@arg:
   495                           	opt stack 0
   496  000001                     __tdiv_to_l_@f1:
   497                           	opt stack 0
   498  000001                     ___ftge@ff1:
   499                           	opt stack 0
   500  000001                     ___lldiv@dividend:
   501                           	opt stack 0
   502  000001                     ___llmod@dividend:
   503                           	opt stack 0
   504                           
   505                           ; 4 bytes @ 0x0
   506  000001                     	ds	1
   507  000002                     DO_DISPLAY_7SEG_Upper@PC:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x1
   511  000002                     	ds	1
   512  000003                     ??_Get_Full_ADC:
   513  000003                     DO_DISPLAY_7SEG_Upper@PE:
   514                           	opt stack 0
   515  000003                     OpenUSART@config:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x2
   519  000003                     	ds	1
   520  000004                     ___ftpack@exp:
   521                           	opt stack 0
   522  000004                     __div_to_l_@f2:
   523                           	opt stack 0
   524  000004                     __tdiv_to_l_@f2:
   525                           	opt stack 0
   526  000004                     ___ftge@ff2:
   527                           	opt stack 0
   528                           
   529                           ; 3 bytes @ 0x3
   530  000004                     	ds	1
   531  000005                     ___ftpack@sign:
   532                           	opt stack 0
   533  000005                     Get_Full_ADC@result:
   534                           	opt stack 0
   535  000005                     ___lldiv@divisor:
   536                           	opt stack 0
   537  000005                     ___llmod@divisor:
   538                           	opt stack 0
   539                           
   540                           ; 4 bytes @ 0x4
   541  000005                     	ds	1
   542  000006                     ??___ftpack:
   543                           
   544                           ; 0 bytes @ 0x5
   545  000006                     	ds	1
   546  000007                     ??__tdiv_to_l_:
   547  000007                     ??___ftge:
   548  000007                     __div_to_l_@quot:
   549                           	opt stack 0
   550                           
   551                           ; 4 bytes @ 0x6
   552  000007                     	ds	2
   553  000009                     ?___lbtoft:
   554                           	opt stack 0
   555  000009                     ?___lltoft:
   556                           	opt stack 0
   557  000009                     ?___lwtoft:
   558                           	opt stack 0
   559  000009                     ___llmod@counter:
   560                           	opt stack 0
   561  000009                     ___lwtoft@c:
   562                           	opt stack 0
   563  000009                     ___lldiv@quotient:
   564                           	opt stack 0
   565  000009                     ___lltoft@c:
   566                           	opt stack 0
   567                           
   568                           ; 4 bytes @ 0x8
   569  000009                     	ds	1
   570  00000A                     __tdiv_to_l_@quot:
   571                           	opt stack 0
   572                           
   573                           ; 4 bytes @ 0x9
   574  00000A                     	ds	1
   575  00000B                     __div_to_l_@cntr:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0xA
   579  00000B                     	ds	1
   580  00000C                     __div_to_l_@exp1:
   581                           	opt stack 0
   582  00000C                     ___lbtoft@c:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0xB
   586  00000C                     	ds	1
   587  00000D                     ??___lltoft:
   588  00000D                     ?___ftneg:
   589                           	opt stack 0
   590  00000D                     ___lldiv@counter:
   591                           	opt stack 0
   592  00000D                     ___ftneg@f1:
   593                           	opt stack 0
   594                           
   595                           ; 3 bytes @ 0xC
   596  00000D                     	ds	1
   597  00000E                     __tdiv_to_l_@cntr:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0xD
   601  00000E                     	ds	1
   602  00000F                     __tdiv_to_l_@exp1:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0xE
   606  00000F                     	ds	1
   607  000010                     ?___ftadd:
   608                           	opt stack 0
   609  000010                     ___ftadd@f1:
   610                           	opt stack 0
   611                           
   612                           ; 3 bytes @ 0xF
   613  000010                     	ds	1
   614  000011                     ___lltoft@exp:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x10
   618  000011                     	ds	2
   619  000013                     ___ftadd@f2:
   620                           	opt stack 0
   621                           
   622                           ; 3 bytes @ 0x12
   623  000013                     	ds	3
   624  000016                     ??___ftadd:
   625                           
   626                           ; 0 bytes @ 0x15
   627  000016                     	ds	3
   628  000019                     ___ftadd@sign:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x18
   632  000019                     	ds	1
   633  00001A                     ___ftadd@exp2:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x19
   637  00001A                     	ds	1
   638  00001B                     ___ftadd@exp1:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x1A
   642  00001B                     	ds	1
   643  00001C                     ?___ftmul:
   644                           	opt stack 0
   645  00001C                     ?___ftsub:
   646                           	opt stack 0
   647  00001C                     ___ftmul@f1:
   648                           	opt stack 0
   649  00001C                     ___ftsub@f1:
   650                           	opt stack 0
   651                           
   652                           ; 3 bytes @ 0x1B
   653  00001C                     	ds	3
   654  00001F                     ___ftmul@f2:
   655                           	opt stack 0
   656  00001F                     ___ftsub@f2:
   657                           	opt stack 0
   658                           
   659                           ; 3 bytes @ 0x1E
   660  00001F                     	ds	3
   661  000022                     ??___ftmul:
   662  000022                     
   663                           ; 0 bytes @ 0x21
   664  000022                     	ds	3
   665  000025                     ___ftmul@exp:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x24
   669  000025                     	ds	1
   670  000026                     ___ftmul@f3_as_product:
   671                           	opt stack 0
   672                           
   673                           ; 3 bytes @ 0x25
   674  000026                     	ds	3
   675  000029                     ___ftmul@cntr:
   676                           	opt stack 0
   677                           
   678                           ; 1 bytes @ 0x28
   679  000029                     	ds	1
   680  00002A                     ___ftmul@sign:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x29
   684  00002A                     	ds	1
   685  00002B                     ?___ftdiv:
   686                           	opt stack 0
   687  00002B                     ___ftdiv@f1:
   688                           	opt stack 0
   689                           
   690                           ; 3 bytes @ 0x2A
   691  00002B                     	ds	3
   692  00002E                     ___ftdiv@f2:
   693                           	opt stack 0
   694                           
   695                           ; 3 bytes @ 0x2D
   696  00002E                     	ds	3
   697  000031                     ??___ftdiv:
   698                           
   699                           ; 0 bytes @ 0x30
   700  000031                     	ds	3
   701  000034                     ___ftdiv@cntr:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x33
   705  000034                     	ds	1
   706  000035                     ___ftdiv@f3:
   707                           	opt stack 0
   708                           
   709                           ; 3 bytes @ 0x34
   710  000035                     	ds	3
   711  000038                     ___ftdiv@exp:
   712                           	opt stack 0
   713                           
   714                           ; 1 bytes @ 0x37
   715  000038                     	ds	1
   716  000039                     ___ftdiv@sign:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x38
   720  000039                     	ds	1
   721  00003A                     ?___fttol:
   722                           	opt stack 0
   723  00003A                     ___fttol@f1:
   724                           	opt stack 0
   725                           
   726                           ; 3 bytes @ 0x39
   727  00003A                     	ds	4
   728  00003E                     ??___fttol:
   729                           
   730                           ; 0 bytes @ 0x3D
   731  00003E                     	ds	5
   732  000043                     ___fttol@sign1:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0x42
   736  000043                     	ds	1
   737  000044                     ___fttol@lval:
   738                           	opt stack 0
   739                           
   740                           ; 4 bytes @ 0x43
   741  000044                     	ds	4
   742  000048                     ___fttol@exp1:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x47
   746  000048                     	ds	1
   747  000049                     ?___awmod:
   748                           	opt stack 0
   749  000049                     ?___awtoft:
   750                           	opt stack 0
   751  000049                     ___awmod@dividend:
   752                           	opt stack 0
   753  000049                     ___awtoft@c:
   754                           	opt stack 0
   755  000049                     DO_DISPLAY_D1@T:
   756                           	opt stack 0
   757                           
   758                           ; 3 bytes @ 0x48
   759  000049                     	ds	2
   760  00004B                     ___awmod@divisor:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0x4A
   764  00004B                     	ds	1
   765  00004C                     ___awtoft@sign:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0x4B
   769  00004C                     	ds	1
   770  00004D                     ___awmod@counter:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x4C
   774  00004D                     	ds	1
   775  00004E                     ___awmod@sign:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0x4D
   779  00004E                     	ds	1
   780  00004F                     ?___awdiv:
   781                           	opt stack 0
   782  00004F                     ___awdiv@dividend:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x4E
   786  00004F                     	ds	2
   787  000051                     ___awdiv@divisor:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x50
   791  000051                     	ds	2
   792  000053                     ___awdiv@counter:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x52
   796  000053                     	ds	1
   797  000054                     ___awdiv@sign:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x53
   801  000054                     	ds	1
   802  000055                     ___awdiv@quotient:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x54
   806  000055                     	ds	2
   807  000057                     ?___wmul:
   808                           	opt stack 0
   809  000057                     ___wmul@multiplier:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x56
   813  000057                     	ds	2
   814  000059                     ___wmul@multiplicand:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x58
   818  000059                     	ds	2
   819  00005B                     ___wmul@product:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x5A
   823  00005B                     	ds	2
   824  00005D                     ?_fround:
   825                           	opt stack 0
   826  00005D                     ?_scale:
   827                           	opt stack 0
   828                           
   829                           ; 3 bytes @ 0x5C
   830  00005D                     	ds	3
   831  000060                     _fround$1511:
   832                           	opt stack 0
   833  000060                     _scale$1512:
   834                           	opt stack 0
   835                           
   836                           ; 3 bytes @ 0x5F
   837  000060                     	ds	3
   838  000063                     scale@scl:
   839                           	opt stack 0
   840  000063                     _fround$1510:
   841                           	opt stack 0
   842                           
   843                           ; 3 bytes @ 0x62
   844  000063                     	ds	3
   845  000066                     fround@prec:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x65
   849  000066                     	ds	1
   850  000067                     ?_printf:
   851                           	opt stack 0
   852  000067                     printf@f:
   853                           	opt stack 0
   854                           
   855                           ; 2 bytes @ 0x66
   856  000067                     	ds	5
   857  00006C                     ??_printf:
   858                           
   859                           ; 0 bytes @ 0x6B
   860  00006C                     	ds	6
   861  000072                     tblptru	equ	0xFF8
   862                           tblptrh	equ	0xFF7
   863                           tblptrl	equ	0xFF6
   864                           tablat	equ	0xFF5
   865                           postinc0	equ	0xFEE
   866                           wreg	equ	0xFE8
   867                           postdec1	equ	0xFE5
   868                           fsr1l	equ	0xFE1
   869                           
   870                           ; 0 bytes @ 0x71
   871 ;;
   872 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   873 ;;
   874 ;; *************** function _main *****************
   875 ;; Defined at:
   876 ;;		line 128 in file "Lab5pB1.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  L               1   35[BANK0 ] unsigned char 
   881 ;;  U               1   34[BANK0 ] unsigned char 
   882 ;;  U               1   36[BANK0 ] unsigned char 
   883 ;;  L               1   33[BANK0 ] unsigned char 
   884 ;;  rL              3   37[BANK0 ] float 
   885 ;;  vL              3   30[BANK0 ] float 
   886 ;;  voltage_mv      3   27[BANK0 ] float 
   887 ;;  L               2   25[BANK0 ] int 
   888 ;;  U               2   23[BANK0 ] int 
   889 ;; Return value:  Size  Location     Type
   890 ;;		None               void
   891 ;; Registers used:
   892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;Total ram usage:       17 bytes
   903 ;; Hardware stack levels required when called:    4
   904 ;; This function calls:
   905 ;;		_Activate_Buzzer
   906 ;;		_DO_DISPLAY_7SEG_Lower
   907 ;;		_DO_DISPLAY_7SEG_Upper
   908 ;;		_DO_DISPLAY_D1
   909 ;;		_Deactivate_Buzzer
   910 ;;		_Get_Full_ADC
   911 ;;		_Init_ADC
   912 ;;		_SET_D2_OFF
   913 ;;		_SET_D2_YELLOW
   914 ;;		_Select_ADC_Channel
   915 ;;		_WAIT_1_SEC
   916 ;;		___awdiv
   917 ;;		___awmod
   918 ;;		___awtoft
   919 ;;		___ftadd
   920 ;;		___ftdiv
   921 ;;		___ftge
   922 ;;		___ftmul
   923 ;;		___ftneg
   924 ;;		___fttol
   925 ;;		___lbtoft
   926 ;;		___lwtoft
   927 ;;		_init_UART
   928 ;;		_printf
   929 ;; This function is called by:
   930 ;;		Startup code after reset
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text0
   935  001B3E                     __ptext0:
   936                           	opt stack 0
   937  001B3E                     _main:
   938                           	opt stack 27
   939                           
   940                           ;Lab5pB1.c: 130: init_UART();
   941                           
   942                           ;incstack = 0
   943  001B3E  EC5C  F017         	call	_init_UART	;wreg free
   944                           
   945                           ;Lab5pB1.c: 131: Init_ADC();
   946  001B42  EC86  F017         	call	_Init_ADC	;wreg free
   947                           
   948                           ;Lab5pB1.c: 132: TRISA = 0xFF;
   949  001B46  6892               	setf	3986,c	;volatile
   950                           
   951                           ;Lab5pB1.c: 133: TRISB = 0x00;
   952  001B48  0E00               	movlw	0
   953  001B4A  6E93               	movwf	3987,c	;volatile
   954                           
   955                           ;Lab5pB1.c: 134: TRISC = 0x00;
   956  001B4C  0E00               	movlw	0
   957  001B4E  6E94               	movwf	3988,c	;volatile
   958                           
   959                           ;Lab5pB1.c: 135: TRISD = 0x00;
   960  001B50  0E00               	movlw	0
   961  001B52  6E95               	movwf	3989,c	;volatile
   962                           
   963                           ;Lab5pB1.c: 136: TRISE = 0x00;
   964  001B54  0E00               	movlw	0
   965  001B56  6E96               	movwf	3990,c	;volatile
   966  001B58  D000               	goto	l2767
   967  001B5A                     l2767:
   968                           
   969                           ;Lab5pB1.c: 140: {
   970                           ;Lab5pB1.c: 141: Select_ADC_Channel(1);
   971  001B5A  0E01               	movlw	1
   972  001B5C  EC76  F017         	call	_Select_ADC_Channel
   973                           
   974                           ;Lab5pB1.c: 142: nstep = Get_Full_ADC();
   975  001B60  EC11  F017         	call	_Get_Full_ADC	;wreg free
   976  001B64  C001  F0C2         	movff	?_Get_Full_ADC,_nstep
   977  001B68  C002  F0C3         	movff	?_Get_Full_ADC+1,_nstep+1
   978                           
   979                           ;Lab5pB1.c: 143: float voltage_mv = nstep * 4.0;
   980  001B6C  C0C2  F009         	movff	_nstep,___lwtoft@c
   981  001B70  C0C3  F00A         	movff	_nstep+1,___lwtoft@c+1
   982  001B74  ECEB  F016         	call	___lwtoft	;wreg free
   983  001B78  C009  F01C         	movff	?___lwtoft,___ftmul@f1
   984  001B7C  C00A  F01D         	movff	?___lwtoft+1,___ftmul@f1+1
   985  001B80  C00B  F01E         	movff	?___lwtoft+2,___ftmul@f1+2
   986  001B84  0E00               	movlw	0
   987  001B86  6E1F               	movwf	___ftmul@f2,c
   988  001B88  0E80               	movlw	128
   989  001B8A  6E20               	movwf	___ftmul@f2+1,c
   990  001B8C  0E40               	movlw	64
   991  001B8E  6E21               	movwf	___ftmul@f2+2,c
   992  001B90  EC86  F012         	call	___ftmul	;wreg free
   993  001B94  C01C  F09B         	movff	?___ftmul,main@voltage_mv
   994  001B98  C01D  F09C         	movff	?___ftmul+1,main@voltage_mv+1
   995  001B9C  C01E  F09D         	movff	?___ftmul+2,main@voltage_mv+2
   996                           
   997                           ;Lab5pB1.c: 144: float vL = ((voltage_mv)/(1000.0));
   998  001BA0  C09B  F02B         	movff	main@voltage_mv,___ftdiv@f1
   999  001BA4  C09C  F02C         	movff	main@voltage_mv+1,___ftdiv@f1+1
  1000  001BA8  C09D  F02D         	movff	main@voltage_mv+2,___ftdiv@f1+2
  1001  001BAC  0E00               	movlw	0
  1002  001BAE  6E2E               	movwf	___ftdiv@f2,c
  1003  001BB0  0E7A               	movlw	122
  1004  001BB2  6E2F               	movwf	___ftdiv@f2+1,c
  1005  001BB4  0E44               	movlw	68
  1006  001BB6  6E30               	movwf	___ftdiv@f2+2,c
  1007  001BB8  EC75  F013         	call	___ftdiv	;wreg free
  1008  001BBC  C02B  F09E         	movff	?___ftdiv,main@vL
  1009  001BC0  C02C  F09F         	movff	?___ftdiv+1,main@vL+1
  1010  001BC4  C02D  F0A0         	movff	?___ftdiv+2,main@vL+2
  1011                           
  1012                           ;Lab5pB1.c: 145: float rL = 0.1*vL/(4.096 - vL);
  1013  001BC8  0ECD               	movlw	205
  1014  001BCA  6E1F               	movwf	___ftmul@f2,c
  1015  001BCC  0ECC               	movlw	204
  1016  001BCE  6E20               	movwf	___ftmul@f2+1,c
  1017  001BD0  0E3D               	movlw	61
  1018  001BD2  6E21               	movwf	___ftmul@f2+2,c
  1019  001BD4  C09E  F01C         	movff	main@vL,___ftmul@f1
  1020  001BD8  C09F  F01D         	movff	main@vL+1,___ftmul@f1+1
  1021  001BDC  C0A0  F01E         	movff	main@vL+2,___ftmul@f1+2
  1022  001BE0  EC86  F012         	call	___ftmul	;wreg free
  1023  001BE4  C01C  F02B         	movff	?___ftmul,___ftdiv@f1
  1024  001BE8  C01D  F02C         	movff	?___ftmul+1,___ftdiv@f1+1
  1025  001BEC  C01E  F02D         	movff	?___ftmul+2,___ftdiv@f1+2
  1026  001BF0  0E12               	movlw	18
  1027  001BF2  6E13               	movwf	___ftadd@f2,c
  1028  001BF4  0E83               	movlw	131
  1029  001BF6  6E14               	movwf	___ftadd@f2+1,c
  1030  001BF8  0E40               	movlw	64
  1031  001BFA  6E15               	movwf	___ftadd@f2+2,c
  1032  001BFC  C09E  F00D         	movff	main@vL,___ftneg@f1
  1033  001C00  C09F  F00E         	movff	main@vL+1,___ftneg@f1+1
  1034  001C04  C0A0  F00F         	movff	main@vL+2,___ftneg@f1+2
  1035  001C08  EC24  F017         	call	___ftneg	;wreg free
  1036  001C0C  C00D  F010         	movff	?___ftneg,___ftadd@f1
  1037  001C10  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  1038  001C14  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  1039  001C18  EC97  F010         	call	___ftadd	;wreg free
  1040  001C1C  C010  F02E         	movff	?___ftadd,___ftdiv@f2
  1041  001C20  C011  F02F         	movff	?___ftadd+1,___ftdiv@f2+1
  1042  001C24  C012  F030         	movff	?___ftadd+2,___ftdiv@f2+2
  1043  001C28  EC75  F013         	call	___ftdiv	;wreg free
  1044  001C2C  C02B  F0A5         	movff	?___ftdiv,main@rL
  1045  001C30  C02C  F0A6         	movff	?___ftdiv+1,main@rL+1
  1046  001C34  C02D  F0A7         	movff	?___ftdiv+2,main@rL+2
  1047                           
  1048                           ;Lab5pB1.c: 146: int U = (int) rL;
  1049  001C38  C0A5  F03A         	movff	main@rL,___fttol@f1
  1050  001C3C  C0A6  F03B         	movff	main@rL+1,___fttol@f1+1
  1051  001C40  C0A7  F03C         	movff	main@rL+2,___fttol@f1+2
  1052  001C44  EC02  F013         	call	___fttol	;wreg free
  1053  001C48  C03A  F097         	movff	?___fttol,main@U
  1054  001C4C  C03B  F098         	movff	?___fttol+1,main@U+1
  1055                           
  1056                           ;Lab5pB1.c: 147: int L = (int) (rL * 10) %10;
  1057  001C50  0E00               	movlw	0
  1058  001C52  6E1F               	movwf	___ftmul@f2,c
  1059  001C54  0E20               	movlw	32
  1060  001C56  6E20               	movwf	___ftmul@f2+1,c
  1061  001C58  0E41               	movlw	65
  1062  001C5A  6E21               	movwf	___ftmul@f2+2,c
  1063  001C5C  C0A5  F01C         	movff	main@rL,___ftmul@f1
  1064  001C60  C0A6  F01D         	movff	main@rL+1,___ftmul@f1+1
  1065  001C64  C0A7  F01E         	movff	main@rL+2,___ftmul@f1+2
  1066  001C68  EC86  F012         	call	___ftmul	;wreg free
  1067  001C6C  C01C  F03A         	movff	?___ftmul,___fttol@f1
  1068  001C70  C01D  F03B         	movff	?___ftmul+1,___fttol@f1+1
  1069  001C74  C01E  F03C         	movff	?___ftmul+2,___fttol@f1+2
  1070  001C78  EC02  F013         	call	___fttol	;wreg free
  1071  001C7C  C03A  F049         	movff	?___fttol,___awmod@dividend
  1072  001C80  C03B  F04A         	movff	?___fttol+1,___awmod@dividend+1
  1073  001C84  0E00               	movlw	0
  1074  001C86  6E4C               	movwf	___awmod@divisor+1,c
  1075  001C88  0E0A               	movlw	10
  1076  001C8A  6E4B               	movwf	___awmod@divisor,c
  1077  001C8C  EC69  F015         	call	___awmod	;wreg free
  1078  001C90  C049  F099         	movff	?___awmod,main@L
  1079  001C94  C04A  F09A         	movff	?___awmod+1,main@L+1
  1080                           
  1081                           ;Lab5pB1.c: 149: if (rL < 0.07)
  1082  001C98  C0A5  F001         	movff	main@rL,___ftge@ff1
  1083  001C9C  C0A6  F002         	movff	main@rL+1,___ftge@ff1+1
  1084  001CA0  C0A7  F003         	movff	main@rL+2,___ftge@ff1+2
  1085  001CA4  0E5C               	movlw	92
  1086  001CA6  6E04               	movwf	___ftge@ff2,c
  1087  001CA8  0E8F               	movlw	143
  1088  001CAA  6E05               	movwf	___ftge@ff2+1,c
  1089  001CAC  0E3D               	movlw	61
  1090  001CAE  6E06               	movwf	___ftge@ff2+2,c
  1091  001CB0  EC94  F014         	call	___ftge	;wreg free
  1092  001CB4  B0D8               	btfsc	status,0,c
  1093  001CB6  D005               	goto	l2785
  1094                           
  1095                           ;Lab5pB1.c: 150: {
  1096                           ;Lab5pB1.c: 151: Activate_Buzzer();
  1097  001CB8  EC66  F017         	call	_Activate_Buzzer	;wreg free
  1098                           
  1099                           ;Lab5pB1.c: 152: SET_D2_YELLOW();
  1100  001CBC  EC7C  F017         	call	_SET_D2_YELLOW	;wreg free
  1101                           
  1102                           ;Lab5pB1.c: 153: }
  1103  001CC0  D005               	goto	l2787
  1104  001CC2                     l2785:
  1105                           
  1106                           ;Lab5pB1.c: 154: else
  1107                           ;Lab5pB1.c: 155: {
  1108                           ;Lab5pB1.c: 156: Deactivate_Buzzer();
  1109  001CC2  EC8B  F017         	call	_Deactivate_Buzzer	;wreg free
  1110                           
  1111                           ;Lab5pB1.c: 157: SET_D2_OFF();
  1112  001CC6  EC81  F017         	call	_SET_D2_OFF	;wreg free
  1113  001CCA  D000               	goto	l2787
  1114  001CCC                     l2787:
  1115                           
  1116                           ;Lab5pB1.c: 158: }
  1117                           ;Lab5pB1.c: 161: DO_DISPLAY_D1(rL);
  1118  001CCC  C0A5  F049         	movff	main@rL,DO_DISPLAY_D1@T
  1119  001CD0  C0A6  F04A         	movff	main@rL+1,DO_DISPLAY_D1@T+1
  1120  001CD4  C0A7  F04B         	movff	main@rL+2,DO_DISPLAY_D1@T+2
  1121  001CD8  EC4A  F016         	call	_DO_DISPLAY_D1	;wreg free
  1122                           
  1123                           ;Lab5pB1.c: 162: WAIT_1_SEC();
  1124  001CDC  EC36  F017         	call	_WAIT_1_SEC	;wreg free
  1125                           
  1126                           ;Lab5pB1.c: 163: if (rL < 10)
  1127  001CE0  C0A5  F001         	movff	main@rL,___ftge@ff1
  1128  001CE4  C0A6  F002         	movff	main@rL+1,___ftge@ff1+1
  1129  001CE8  C0A7  F003         	movff	main@rL+2,___ftge@ff1+2
  1130  001CEC  0E00               	movlw	0
  1131  001CEE  6E04               	movwf	___ftge@ff2,c
  1132  001CF0  0E20               	movlw	32
  1133  001CF2  6E05               	movwf	___ftge@ff2+1,c
  1134  001CF4  0E41               	movlw	65
  1135  001CF6  6E06               	movwf	___ftge@ff2+2,c
  1136  001CF8  EC94  F014         	call	___ftge	;wreg free
  1137  001CFC  B0D8               	btfsc	status,0,c
  1138  001CFE  D086               	goto	l2805
  1139                           
  1140                           ;Lab5pB1.c: 164: {
  1141                           ;Lab5pB1.c: 165: temp = rL*10;
  1142  001D00  C0A5  F01C         	movff	main@rL,___ftmul@f1
  1143  001D04  C0A6  F01D         	movff	main@rL+1,___ftmul@f1+1
  1144  001D08  C0A7  F01E         	movff	main@rL+2,___ftmul@f1+2
  1145  001D0C  0E00               	movlw	0
  1146  001D0E  6E1F               	movwf	___ftmul@f2,c
  1147  001D10  0E20               	movlw	32
  1148  001D12  6E20               	movwf	___ftmul@f2+1,c
  1149  001D14  0E41               	movlw	65
  1150  001D16  6E21               	movwf	___ftmul@f2+2,c
  1151  001D18  EC86  F012         	call	___ftmul	;wreg free
  1152  001D1C  C01C  F0BF         	movff	?___ftmul,_temp
  1153  001D20  C01D  F0C0         	movff	?___ftmul+1,_temp+1
  1154  001D24  C01E  F0C1         	movff	?___ftmul+2,_temp+2
  1155                           
  1156                           ;Lab5pB1.c: 166: resist = (int) temp;
  1157  001D28  C0BF  F03A         	movff	_temp,___fttol@f1
  1158  001D2C  C0C0  F03B         	movff	_temp+1,___fttol@f1+1
  1159  001D30  C0C1  F03C         	movff	_temp+2,___fttol@f1+2
  1160  001D34  EC02  F013         	call	___fttol	;wreg free
  1161  001D38  C03A  F049         	movff	?___fttol,___awtoft@c
  1162  001D3C  C03B  F04A         	movff	?___fttol+1,___awtoft@c+1
  1163  001D40  ECB9  F016         	call	___awtoft	;wreg free
  1164  001D44  C049  F0BC         	movff	?___awtoft,_resist
  1165  001D48  C04A  F0BD         	movff	?___awtoft+1,_resist+1
  1166  001D4C  C04B  F0BE         	movff	?___awtoft+2,_resist+2
  1167                           
  1168                           ;Lab5pB1.c: 167: char U = (int) rL;
  1169  001D50  C0A5  F03A         	movff	main@rL,___fttol@f1
  1170  001D54  C0A6  F03B         	movff	main@rL+1,___fttol@f1+1
  1171  001D58  C0A7  F03C         	movff	main@rL+2,___fttol@f1+2
  1172  001D5C  EC02  F013         	call	___fttol	;wreg free
  1173  001D60  503A               	movf	?___fttol,w,c
  1174  001D62  0100               	movlb	0	; () banked
  1175  001D64  6FA4               	movwf	main@U_614& (0+255),b
  1176                           
  1177                           ;Lab5pB1.c: 168: char L = (int) ((rL - U) * 10);
  1178  001D66  0E00               	movlw	0
  1179  001D68  6E1F               	movwf	___ftmul@f2,c
  1180  001D6A  0E20               	movlw	32
  1181  001D6C  6E20               	movwf	___ftmul@f2+1,c
  1182  001D6E  0E41               	movlw	65
  1183  001D70  6E21               	movwf	___ftmul@f2+2,c
  1184  001D72  C0A5  F013         	movff	main@rL,___ftadd@f2
  1185  001D76  C0A6  F014         	movff	main@rL+1,___ftadd@f2+1
  1186  001D7A  C0A7  F015         	movff	main@rL+2,___ftadd@f2+2
  1187  001D7E  0100               	movlb	0	; () banked
  1188  001D80  51A4               	movf	main@U_614& (0+255),w,b
  1189  001D82  ECFE  F016         	call	___lbtoft
  1190  001D86  C009  F00D         	movff	?___lbtoft,___ftneg@f1
  1191  001D8A  C00A  F00E         	movff	?___lbtoft+1,___ftneg@f1+1
  1192  001D8E  C00B  F00F         	movff	?___lbtoft+2,___ftneg@f1+2
  1193  001D92  EC24  F017         	call	___ftneg	;wreg free
  1194  001D96  C00D  F010         	movff	?___ftneg,___ftadd@f1
  1195  001D9A  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  1196  001D9E  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  1197  001DA2  EC97  F010         	call	___ftadd	;wreg free
  1198  001DA6  C010  F01C         	movff	?___ftadd,___ftmul@f1
  1199  001DAA  C011  F01D         	movff	?___ftadd+1,___ftmul@f1+1
  1200  001DAE  C012  F01E         	movff	?___ftadd+2,___ftmul@f1+2
  1201  001DB2  EC86  F012         	call	___ftmul	;wreg free
  1202  001DB6  C01C  F03A         	movff	?___ftmul,___fttol@f1
  1203  001DBA  C01D  F03B         	movff	?___ftmul+1,___fttol@f1+1
  1204  001DBE  C01E  F03C         	movff	?___ftmul+2,___fttol@f1+2
  1205  001DC2  EC02  F013         	call	___fttol	;wreg free
  1206  001DC6  503A               	movf	?___fttol,w,c
  1207  001DC8  0100               	movlb	0	; () banked
  1208  001DCA  6FA1               	movwf	main@L_615& (0+255),b
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;Lab5pB1.c: 169: PORTC=array[U];
  1212  001DCC  0100               	movlb	0	; () banked
  1213  001DCE  51A4               	movf	main@U_614& (0+255),w,b
  1214  001DD0  0D02               	mullw	2
  1215  001DD2  0EA8               	movlw	low _array
  1216  001DD4  24F3               	addwf	prodl,w,c
  1217  001DD6  6ED9               	movwf	fsr2l,c
  1218  001DD8  0E00               	movlw	high _array
  1219  001DDA  20F4               	addwfc	prodh,w,c
  1220  001DDC  6EDA               	movwf	fsr2h,c
  1221  001DDE  50DF               	movf	indf2,w,c
  1222  001DE0  6E82               	movwf	3970,c	;volatile
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;Lab5pB1.c: 170: PORTD=array[L];
  1226  001DE2  0100               	movlb	0	; () banked
  1227  001DE4  51A1               	movf	main@L_615& (0+255),w,b
  1228  001DE6  0D02               	mullw	2
  1229  001DE8  0EA8               	movlw	low _array
  1230  001DEA  24F3               	addwf	prodl,w,c
  1231  001DEC  6ED9               	movwf	fsr2l,c
  1232  001DEE  0E00               	movlw	high _array
  1233  001DF0  20F4               	addwfc	prodh,w,c
  1234  001DF2  6EDA               	movwf	fsr2h,c
  1235  001DF4  50DF               	movf	indf2,w,c
  1236  001DF6  6E83               	movwf	3971,c	;volatile
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;Lab5pB1.c: 171: DO_DISPLAY_7SEG_Upper (U);
  1240  001DF8  0100               	movlb	0	; () banked
  1241  001DFA  51A4               	movf	main@U_614& (0+255),w,b
  1242  001DFC  EC25  F015         	call	_DO_DISPLAY_7SEG_Upper
  1243                           
  1244                           ;Lab5pB1.c: 172: DO_DISPLAY_7SEG_Lower (L);
  1245  001E00  0100               	movlb	0	; () banked
  1246  001E02  51A1               	movf	main@L_615& (0+255),w,b
  1247  001E04  EC46  F017         	call	_DO_DISPLAY_7SEG_Lower
  1248                           
  1249                           ;Lab5pB1.c: 173: PORTDbits.RD7 = 0;
  1250  001E08  9E83               	bcf	3971,7,c	;volatile
  1251                           
  1252                           ;Lab5pB1.c: 174: }
  1253  001E0A  D05E               	goto	l2817
  1254  001E0C                     l2805:
  1255                           
  1256                           ;Lab5pB1.c: 175: else
  1257                           ;Lab5pB1.c: 176: {
  1258                           ;Lab5pB1.c: 177: resist = (int) rL;
  1259  001E0C  C0A5  F03A         	movff	main@rL,___fttol@f1
  1260  001E10  C0A6  F03B         	movff	main@rL+1,___fttol@f1+1
  1261  001E14  C0A7  F03C         	movff	main@rL+2,___fttol@f1+2
  1262  001E18  EC02  F013         	call	___fttol	;wreg free
  1263  001E1C  C03A  F049         	movff	?___fttol,___awtoft@c
  1264  001E20  C03B  F04A         	movff	?___fttol+1,___awtoft@c+1
  1265  001E24  ECB9  F016         	call	___awtoft	;wreg free
  1266  001E28  C049  F0BC         	movff	?___awtoft,_resist
  1267  001E2C  C04A  F0BD         	movff	?___awtoft+1,_resist+1
  1268  001E30  C04B  F0BE         	movff	?___awtoft+2,_resist+2
  1269                           
  1270                           ;Lab5pB1.c: 178: char U = (int) resist/10;
  1271  001E34  C0BC  F03A         	movff	_resist,___fttol@f1
  1272  001E38  C0BD  F03B         	movff	_resist+1,___fttol@f1+1
  1273  001E3C  C0BE  F03C         	movff	_resist+2,___fttol@f1+2
  1274  001E40  EC02  F013         	call	___fttol	;wreg free
  1275  001E44  C03A  F04F         	movff	?___fttol,___awdiv@dividend
  1276  001E48  C03B  F050         	movff	?___fttol+1,___awdiv@dividend+1
  1277  001E4C  0E00               	movlw	0
  1278  001E4E  6E52               	movwf	___awdiv@divisor+1,c
  1279  001E50  0E0A               	movlw	10
  1280  001E52  6E51               	movwf	___awdiv@divisor,c
  1281  001E54  EC49  F014         	call	___awdiv	;wreg free
  1282  001E58  504F               	movf	?___awdiv,w,c
  1283  001E5A  0100               	movlb	0	; () banked
  1284  001E5C  6FA2               	movwf	main@U_626& (0+255),b
  1285                           
  1286                           ;Lab5pB1.c: 179: char L = (int) resist % 10;
  1287  001E5E  C0BC  F03A         	movff	_resist,___fttol@f1
  1288  001E62  C0BD  F03B         	movff	_resist+1,___fttol@f1+1
  1289  001E66  C0BE  F03C         	movff	_resist+2,___fttol@f1+2
  1290  001E6A  EC02  F013         	call	___fttol	;wreg free
  1291  001E6E  C03A  F049         	movff	?___fttol,___awmod@dividend
  1292  001E72  C03B  F04A         	movff	?___fttol+1,___awmod@dividend+1
  1293  001E76  0E00               	movlw	0
  1294  001E78  6E4C               	movwf	___awmod@divisor+1,c
  1295  001E7A  0E0A               	movlw	10
  1296  001E7C  6E4B               	movwf	___awmod@divisor,c
  1297  001E7E  EC69  F015         	call	___awmod	;wreg free
  1298  001E82  5049               	movf	?___awmod,w,c
  1299  001E84  0100               	movlb	0	; () banked
  1300  001E86  6FA3               	movwf	main@L_627& (0+255),b
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;Lab5pB1.c: 180: PORTC=array[U];
  1304  001E88  0100               	movlb	0	; () banked
  1305  001E8A  51A2               	movf	main@U_626& (0+255),w,b
  1306  001E8C  0D02               	mullw	2
  1307  001E8E  0EA8               	movlw	low _array
  1308  001E90  24F3               	addwf	prodl,w,c
  1309  001E92  6ED9               	movwf	fsr2l,c
  1310  001E94  0E00               	movlw	high _array
  1311  001E96  20F4               	addwfc	prodh,w,c
  1312  001E98  6EDA               	movwf	fsr2h,c
  1313  001E9A  50DF               	movf	indf2,w,c
  1314  001E9C  6E82               	movwf	3970,c	;volatile
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;Lab5pB1.c: 181: PORTD=array[L];
  1318  001E9E  0100               	movlb	0	; () banked
  1319  001EA0  51A3               	movf	main@L_627& (0+255),w,b
  1320  001EA2  0D02               	mullw	2
  1321  001EA4  0EA8               	movlw	low _array
  1322  001EA6  24F3               	addwf	prodl,w,c
  1323  001EA8  6ED9               	movwf	fsr2l,c
  1324  001EAA  0E00               	movlw	high _array
  1325  001EAC  20F4               	addwfc	prodh,w,c
  1326  001EAE  6EDA               	movwf	fsr2h,c
  1327  001EB0  50DF               	movf	indf2,w,c
  1328  001EB2  6E83               	movwf	3971,c	;volatile
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;Lab5pB1.c: 182: DO_DISPLAY_7SEG_Upper (U);
  1332  001EB4  0100               	movlb	0	; () banked
  1333  001EB6  51A2               	movf	main@U_626& (0+255),w,b
  1334  001EB8  EC25  F015         	call	_DO_DISPLAY_7SEG_Upper
  1335                           
  1336                           ;Lab5pB1.c: 183: DO_DISPLAY_7SEG_Lower (L);
  1337  001EBC  0100               	movlb	0	; () banked
  1338  001EBE  51A3               	movf	main@L_627& (0+255),w,b
  1339  001EC0  EC46  F017         	call	_DO_DISPLAY_7SEG_Lower
  1340                           
  1341                           ;Lab5pB1.c: 184: PORTDbits.RD7 = 1;
  1342  001EC4  8E83               	bsf	3971,7,c	;volatile
  1343  001EC6  D000               	goto	l2817
  1344  001EC8                     l2817:
  1345                           
  1346                           ;Lab5pB1.c: 185: }
  1347                           ;Lab5pB1.c: 189: printf("Resistance: %f kOhm\r\n", rL);
  1348  001EC8  0E77               	movlw	low STR_1
  1349  001ECA  6E67               	movwf	printf@f,c
  1350  001ECC  0E10               	movlw	high STR_1
  1351  001ECE  6E68               	movwf	printf@f+1,c
  1352  001ED0  C0A5  F069         	movff	main@rL,?_printf+2
  1353  001ED4  C0A6  F06A         	movff	main@rL+1,?_printf+3
  1354  001ED8  C0A7  F06B         	movff	main@rL+2,?_printf+4
  1355  001EDC  EC47  F008         	call	_printf	;wreg free
  1356                           
  1357                           ;Lab5pB1.c: 191: WAIT_1_SEC();
  1358  001EE0  EC36  F017         	call	_WAIT_1_SEC	;wreg free
  1359  001EE4  D63A               	goto	l2767
  1360  001EE6  EF00  F000         	goto	start
  1361  001EEA                     __end_of_main:
  1362                           	opt stack 0
  1363                           tblptru	equ	0xFF8
  1364                           tblptrh	equ	0xFF7
  1365                           tblptrl	equ	0xFF6
  1366                           tablat	equ	0xFF5
  1367                           prodh	equ	0xFF4
  1368                           prodl	equ	0xFF3
  1369                           postinc0	equ	0xFEE
  1370                           wreg	equ	0xFE8
  1371                           postdec1	equ	0xFE5
  1372                           fsr1l	equ	0xFE1
  1373                           indf2	equ	0xFDF
  1374                           fsr2h	equ	0xFDA
  1375                           fsr2l	equ	0xFD9
  1376                           status	equ	0xFD8
  1377                           
  1378 ;; *************** function _printf *****************
  1379 ;; Defined at:
  1380 ;;		line 464 in file "E:\XC8\sources\common\doprnt.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  f               2  102[COMRAM] PTR const unsigned char 
  1383 ;;		 -> STR_1(22), 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  tmpval          4   15[BANK0 ] struct .
  1386 ;;  val             4    9[BANK0 ] unsigned long 
  1387 ;;  fval            3   19[BANK0 ] unsigned long 
  1388 ;;  cp              3    0        PTR const unsigned char 
  1389 ;;  exp             2   13[BANK0 ] int 
  1390 ;;  prec            2    7[BANK0 ] int 
  1391 ;;  flag            2    5[BANK0 ] unsigned short 
  1392 ;;  ap              2    3[BANK0 ] PTR void [1]
  1393 ;;		 -> ?_printf(2), 
  1394 ;;  len             2    0        unsigned int 
  1395 ;;  width           2    0        int 
  1396 ;;  c               1   22[BANK0 ] char 
  1397 ;;  d               1    0        unsigned char 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  2  102[COMRAM] int 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1407 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Totals:        11      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;Total ram usage:       34 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    3
  1414 ;; This function calls:
  1415 ;;		___awdiv
  1416 ;;		___ftadd
  1417 ;;		___ftge
  1418 ;;		___ftmul
  1419 ;;		___ftneg
  1420 ;;		___ftsub
  1421 ;;		___fttol
  1422 ;;		___lldiv
  1423 ;;		___llmod
  1424 ;;		___lltoft
  1425 ;;		___wmul
  1426 ;;		__div_to_l_
  1427 ;;		__tdiv_to_l_
  1428 ;;		_fround
  1429 ;;		_putch
  1430 ;;		_scale
  1431 ;; This function is called by:
  1432 ;;		_main
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text1
  1437  00108E                     __ptext1:
  1438                           	opt stack 0
  1439  00108E                     _printf:
  1440                           	opt stack 27
  1441                           
  1442                           ;doprnt.c: 466: va_list ap;
  1443                           ;doprnt.c: 499: signed char c;
  1444                           ;doprnt.c: 501: int width;
  1445                           ;doprnt.c: 504: int prec;
  1446                           ;doprnt.c: 508: unsigned short flag;
  1447                           ;doprnt.c: 515: char d;
  1448                           ;doprnt.c: 516: double fval;
  1449                           ;doprnt.c: 517: int exp;
  1450                           ;doprnt.c: 523: union {
  1451                           ;doprnt.c: 524: unsigned long vd;
  1452                           ;doprnt.c: 525: double integ;
  1453                           ;doprnt.c: 526: } tmpval;
  1454                           ;doprnt.c: 528: unsigned long val;
  1455                           ;doprnt.c: 529: unsigned len;
  1456                           ;doprnt.c: 530: const char * cp;
  1457                           ;doprnt.c: 533: *ap = __va_start();
  1458                           
  1459                           ;incstack = 0
  1460  00108E  0E69               	movlw	low (?_printf+2)
  1461  001090  0100               	movlb	0	; () banked
  1462  001092  6F83               	movwf	printf@ap& (0+255),b
  1463  001094  0E00               	movlw	high (?_printf+2)
  1464  001096  0100               	movlb	0	; () banked
  1465  001098  6F84               	movwf	(printf@ap+1)& (0+255),b
  1466                           
  1467                           ;doprnt.c: 536: while(c = *f++) {
  1468  00109A  D351               	goto	l2727
  1469  00109C                     l2579:
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;doprnt.c: 538: if(c != '%')
  1473  00109C  0E25               	movlw	37
  1474  00109E  0100               	movlb	0	; () banked
  1475  0010A0  1996               	xorwf	printf@c& (0+255),w,b
  1476  0010A2  B4D8               	btfsc	status,2,c
  1477  0010A4  D005               	goto	l2583
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;doprnt.c: 540: {
  1481                           ;doprnt.c: 541: (putch(c) );
  1482  0010A6  0100               	movlb	0	; () banked
  1483  0010A8  5196               	movf	printf@c& (0+255),w,b
  1484  0010AA  EC6F  F017         	call	_putch
  1485                           
  1486                           ;doprnt.c: 542: continue;
  1487  0010AE  D347               	goto	l2727
  1488  0010B0                     l2583:
  1489                           
  1490                           ;doprnt.c: 543: }
  1491                           ;doprnt.c: 548: flag = 0;
  1492  0010B0  0E00               	movlw	0
  1493  0010B2  0100               	movlb	0	; () banked
  1494  0010B4  6F86               	movwf	(printf@flag+1)& (0+255),b
  1495  0010B6  0E00               	movlw	0
  1496  0010B8  6F85               	movwf	printf@flag& (0+255),b
  1497                           
  1498                           ;doprnt.c: 635: switch(c = *f++) {
  1499  0010BA  D006               	goto	l2589
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;doprnt.c: 638: goto alldone;
  1503                           
  1504                           ;doprnt.c: 637: case 0:
  1505  0010BC  D34F               	goto	l228
  1506  0010BE                     l2585:
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;doprnt.c: 663: flag |= 0x400;
  1510  0010BE  0100               	movlb	0	; () banked
  1511  0010C0  8586               	bsf	(printf@flag+1)& (0+255),2,b
  1512                           
  1513                           ;doprnt.c: 664: break;
  1514  0010C2  D014               	goto	l2591
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;doprnt.c: 813: continue;
  1518                           
  1519                           ;doprnt.c: 802: default:
  1520  0010C4  D33C               	goto	l2727
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;doprnt.c: 822: }
  1524  0010C6  D012               	goto	l2591
  1525  0010C8                     l2589:
  1526                           
  1527                           ; BSR set to: 0
  1528  0010C8  C067  FFF6         	movff	printf@f,tblptrl
  1529  0010CC  C068  FFF7         	movff	printf@f+1,tblptrh
  1530  0010D0  4A67               	infsnz	printf@f,f,c
  1531  0010D2  2A68               	incf	printf@f+1,f,c
  1532  0010D4                     	if	0	;tblptru may be non-zero
  1533  0010D4                     	endif
  1534  0010D4                     	if	0	;tblptru may be non-zero
  1535  0010D4                     	endif
  1536  0010D4  0008               	tblrd		*
  1537  0010D6  CFF5 F096          	movff	tablat,printf@c
  1538  0010DA  0100               	movlb	0	; () banked
  1539  0010DC  5196               	movf	printf@c& (0+255),w,b
  1540                           
  1541                           ; Switch size 1, requested type "space"
  1542                           ; Number of cases is 2, Range of values is 0 to 102
  1543                           ; switch strategies available:
  1544                           ; Name         Instructions Cycles
  1545                           ; simple_byte            7     4 (average)
  1546                           ;	Chosen strategy is simple_byte
  1547  0010DE  0A00               	xorlw	0	; case 0
  1548  0010E0  B4D8               	btfsc	status,2,c
  1549  0010E2  D33C               	goto	l228
  1550  0010E4  0A66               	xorlw	102	; case 102
  1551  0010E6  B4D8               	btfsc	status,2,c
  1552  0010E8  D7EA               	goto	l2585
  1553  0010EA  D329               	goto	l2727
  1554  0010EC                     l2591:
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;doprnt.c: 825: if(flag & (0x700)) {
  1558  0010EC  0E07               	movlw	7
  1559  0010EE  0100               	movlb	0	; () banked
  1560  0010F0  1586               	andwf	(printf@flag+1)& (0+255),w,b
  1561  0010F2  B4D8               	btfsc	status,2,c
  1562  0010F4  D314               	goto	l2723
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;doprnt.c: 829: prec = 6;
  1566  0010F6  0E00               	movlw	0
  1567  0010F8  0100               	movlb	0	; () banked
  1568  0010FA  6F88               	movwf	(printf@prec+1)& (0+255),b
  1569  0010FC  0E06               	movlw	6
  1570  0010FE  6F87               	movwf	printf@prec& (0+255),b
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1574  001100  C083  FFD9         	movff	printf@ap,fsr2l
  1575  001104  C084  FFDA         	movff	printf@ap+1,fsr2h
  1576  001108  CFDE F093          	movff	postinc2,printf@fval
  1577  00110C  CFDE F094          	movff	postinc2,printf@fval+1
  1578  001110  CFDD F095          	movff	postdec2,printf@fval+2
  1579                           
  1580                           ; BSR set to: 0
  1581  001114  0E03               	movlw	3
  1582  001116  0100               	movlb	0	; () banked
  1583  001118  2783               	addwf	printf@ap& (0+255),f,b
  1584  00111A  0E00               	movlw	0
  1585  00111C  2384               	addwfc	(printf@ap+1)& (0+255),f,b
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;doprnt.c: 831: if(fval < 0.0) {
  1589  00111E  0100               	movlb	0	; () banked
  1590  001120  AF95               	btfss	(printf@fval+2)& (0+255),7,b
  1591  001122  D012               	goto	l2605
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;doprnt.c: 832: fval = -fval;
  1595  001124  C093  F00D         	movff	printf@fval,___ftneg@f1
  1596  001128  C094  F00E         	movff	printf@fval+1,___ftneg@f1+1
  1597  00112C  C095  F00F         	movff	printf@fval+2,___ftneg@f1+2
  1598  001130  EC24  F017         	call	___ftneg	;wreg free
  1599  001134  C00D  F093         	movff	?___ftneg,printf@fval
  1600  001138  C00E  F094         	movff	?___ftneg+1,printf@fval+1
  1601  00113C  C00F  F095         	movff	?___ftneg+2,printf@fval+2
  1602                           
  1603                           ;doprnt.c: 833: flag |= 0x03;
  1604  001140  0E03               	movlw	3
  1605  001142  0100               	movlb	0	; () banked
  1606  001144  1385               	iorwf	printf@flag& (0+255),f,b
  1607  001146  D000               	goto	l2605
  1608  001148                     l2605:
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;doprnt.c: 834: }
  1612                           ;doprnt.c: 835: exp = 0;
  1613  001148  0E00               	movlw	0
  1614  00114A  0100               	movlb	0	; () banked
  1615  00114C  6F8E               	movwf	(printf@exp+1)& (0+255),b
  1616  00114E  0E00               	movlw	0
  1617  001150  6F8D               	movwf	printf@exp& (0+255),b
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;doprnt.c: 836: if( fval!=0) {
  1621  001152  0100               	movlb	0	; () banked
  1622  001154  5193               	movf	printf@fval& (0+255),w,b
  1623  001156  0100               	movlb	0	; () banked
  1624  001158  1194               	iorwf	(printf@fval+1)& (0+255),w,b
  1625  00115A  0100               	movlb	0	; () banked
  1626  00115C  1195               	iorwf	(printf@fval+2)& (0+255),w,b
  1627  00115E  B4D8               	btfsc	status,2,c
  1628  001160  D08D               	goto	l2633
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1632  001162  0E82               	movlw	130
  1633  001164  6E6C               	movwf	??_printf& (0+255),c
  1634  001166  0EFF               	movlw	255
  1635  001168  6E6D               	movwf	(??_printf+1)& (0+255),c
  1636  00116A  C093  F06E         	movff	printf@fval,??_printf+2
  1637  00116E  C094  F06F         	movff	printf@fval+1,??_printf+3
  1638  001172  C095  F070         	movff	printf@fval+2,??_printf+4
  1639  001176  C096  F071         	movff	printf@fval+3,??_printf+5
  1640  00117A  0E10               	movlw	16
  1641  00117C  D005               	goto	u2710
  1642  00117E                     u2715:
  1643  00117E  90D8               	bcf	status,0,c
  1644  001180  3271               	rrcf	??_printf+5,f,c
  1645  001182  3270               	rrcf	??_printf+4,f,c
  1646  001184  326F               	rrcf	??_printf+3,f,c
  1647  001186  326E               	rrcf	??_printf+2,f,c
  1648  001188                     u2710:
  1649  001188  2EE8               	decfsz	wreg,f,c
  1650  00118A  D7F9               	goto	u2715
  1651  00118C  506E               	movf	??_printf+2,w,c
  1652  00118E  246C               	addwf	??_printf,w,c
  1653  001190  0100               	movlb	0	; () banked
  1654  001192  6F8D               	movwf	printf@exp& (0+255),b
  1655  001194  0E00               	movlw	0
  1656  001196  206D               	addwfc	??_printf+1,w,c
  1657  001198  0100               	movlb	0	; () banked
  1658  00119A  6F8E               	movwf	(printf@exp+1)& (0+255),b
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;doprnt.c: 838: exp--;
  1662  00119C  0100               	movlb	0	; () banked
  1663  00119E  078D               	decf	printf@exp& (0+255),f,b
  1664  0011A0  A0D8               	btfss	status,0,c
  1665  0011A2  078E               	decf	(printf@exp+1)& (0+255),f,b
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;doprnt.c: 839: exp *= 3;
  1669  0011A4  C08D  F057         	movff	printf@exp,___wmul@multiplier
  1670  0011A8  C08E  F058         	movff	printf@exp+1,___wmul@multiplier+1
  1671  0011AC  0E00               	movlw	0
  1672  0011AE  6E5A               	movwf	___wmul@multiplicand+1,c
  1673  0011B0  0E03               	movlw	3
  1674  0011B2  6E59               	movwf	___wmul@multiplicand,c
  1675  0011B4  ECD7  F016         	call	___wmul	;wreg free
  1676  0011B8  C057  F08D         	movff	?___wmul,printf@exp
  1677  0011BC  C058  F08E         	movff	?___wmul+1,printf@exp+1
  1678                           
  1679                           ;doprnt.c: 840: exp /= 10;
  1680  0011C0  C08D  F04F         	movff	printf@exp,___awdiv@dividend
  1681  0011C4  C08E  F050         	movff	printf@exp+1,___awdiv@dividend+1
  1682  0011C8  0E00               	movlw	0
  1683  0011CA  6E52               	movwf	___awdiv@divisor+1,c
  1684  0011CC  0E0A               	movlw	10
  1685  0011CE  6E51               	movwf	___awdiv@divisor,c
  1686  0011D0  EC49  F014         	call	___awdiv	;wreg free
  1687  0011D4  C04F  F08D         	movff	?___awdiv,printf@exp
  1688  0011D8  C050  F08E         	movff	?___awdiv+1,printf@exp+1
  1689                           
  1690                           ;doprnt.c: 841: if(exp < 0)
  1691  0011DC  0100               	movlb	0	; () banked
  1692  0011DE  AF8E               	btfss	(printf@exp+1)& (0+255),7,b
  1693  0011E0  D005               	goto	l2621
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;doprnt.c: 842: exp--;
  1697  0011E2  0100               	movlb	0	; () banked
  1698  0011E4  078D               	decf	printf@exp& (0+255),f,b
  1699  0011E6  A0D8               	btfss	status,0,c
  1700  0011E8  078E               	decf	(printf@exp+1)& (0+255),f,b
  1701  0011EA  D000               	goto	l2621
  1702  0011EC                     l2621:
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1706  0011EC  0100               	movlb	0	; () banked
  1707  0011EE  518D               	movf	printf@exp& (0+255),w,b
  1708  0011F0  0800               	sublw	0
  1709  0011F2  ECAF  F00B         	call	_scale
  1710  0011F6  C05D  F08F         	movff	?_scale,printf@tmpval
  1711  0011FA  C05E  F090         	movff	?_scale+1,printf@tmpval+1
  1712  0011FE  C05F  F091         	movff	?_scale+2,printf@tmpval+2
  1713                           
  1714                           ;doprnt.c: 847: tmpval.integ *= fval;
  1715  001202  C08F  F01C         	movff	printf@tmpval,___ftmul@f1
  1716  001206  C090  F01D         	movff	printf@tmpval+1,___ftmul@f1+1
  1717  00120A  C091  F01E         	movff	printf@tmpval+2,___ftmul@f1+2
  1718  00120E  C093  F01F         	movff	printf@fval,___ftmul@f2
  1719  001212  C094  F020         	movff	printf@fval+1,___ftmul@f2+1
  1720  001216  C095  F021         	movff	printf@fval+2,___ftmul@f2+2
  1721  00121A  EC86  F012         	call	___ftmul	;wreg free
  1722  00121E  C01C  F08F         	movff	?___ftmul,printf@tmpval
  1723  001222  C01D  F090         	movff	?___ftmul+1,printf@tmpval+1
  1724  001226  C01E  F091         	movff	?___ftmul+2,printf@tmpval+2
  1725                           
  1726                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1727  00122A  C08F  F001         	movff	printf@tmpval,___ftge@ff1
  1728  00122E  C090  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1729  001232  C091  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1730  001236  0E00               	movlw	0
  1731  001238  6E04               	movwf	___ftge@ff2,c
  1732  00123A  0E80               	movlw	128
  1733  00123C  6E05               	movwf	___ftge@ff2+1,c
  1734  00123E  0E3F               	movlw	63
  1735  001240  6E06               	movwf	___ftge@ff2+2,c
  1736  001242  EC94  F014         	call	___ftge	;wreg free
  1737  001246  B0D8               	btfsc	status,0,c
  1738  001248  D005               	goto	l2629
  1739                           
  1740                           ;doprnt.c: 849: exp--;
  1741  00124A  0100               	movlb	0	; () banked
  1742  00124C  078D               	decf	printf@exp& (0+255),f,b
  1743  00124E  A0D8               	btfss	status,0,c
  1744  001250  078E               	decf	(printf@exp+1)& (0+255),f,b
  1745  001252  D014               	goto	l2633
  1746  001254                     l2629:
  1747                           
  1748                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1749  001254  C08F  F001         	movff	printf@tmpval,___ftge@ff1
  1750  001258  C090  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1751  00125C  C091  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1752  001260  0E00               	movlw	0
  1753  001262  6E04               	movwf	___ftge@ff2,c
  1754  001264  0E20               	movlw	32
  1755  001266  6E05               	movwf	___ftge@ff2+1,c
  1756  001268  0E41               	movlw	65
  1757  00126A  6E06               	movwf	___ftge@ff2+2,c
  1758  00126C  EC94  F014         	call	___ftge	;wreg free
  1759  001270  A0D8               	btfss	status,0,c
  1760  001272  D004               	goto	l2633
  1761                           
  1762                           ;doprnt.c: 851: exp++;
  1763  001274  0100               	movlb	0	; () banked
  1764  001276  4B8D               	infsnz	printf@exp& (0+255),f,b
  1765  001278  2B8E               	incf	(printf@exp+1)& (0+255),f,b
  1766                           
  1767                           ; BSR set to: 0
  1768                           
  1769                           ; BSR set to: 0
  1770  00127A  D000               	goto	l2633
  1771  00127C                     l2633:
  1772                           
  1773                           ;doprnt.c: 852: }
  1774                           ;doprnt.c: 1112: if(prec <= 12)
  1775  00127C  0100               	movlb	0	; () banked
  1776  00127E  BF88               	btfsc	(printf@prec+1)& (0+255),7,b
  1777  001280  D008               	goto	l2635
  1778  001282  0100               	movlb	0	; () banked
  1779  001284  5188               	movf	(printf@prec+1)& (0+255),w,b
  1780  001286  E11E               	bnz	l2637
  1781  001288  0E0D               	movlw	13
  1782  00128A  0100               	movlb	0	; () banked
  1783  00128C  5D87               	subwf	printf@prec& (0+255),w,b
  1784  00128E  B0D8               	btfsc	status,0,c
  1785  001290  D019               	goto	l2637
  1786  001292                     l2635:
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;doprnt.c: 1113: fval += fround(prec);
  1790  001292  C093  F010         	movff	printf@fval,___ftadd@f1
  1791  001296  C094  F011         	movff	printf@fval+1,___ftadd@f1+1
  1792  00129A  C095  F012         	movff	printf@fval+2,___ftadd@f1+2
  1793  00129E  0100               	movlb	0	; () banked
  1794  0012A0  5187               	movf	printf@prec& (0+255),w,b
  1795  0012A2  EC75  F00F         	call	_fround
  1796  0012A6  C05D  F013         	movff	?_fround,___ftadd@f2
  1797  0012AA  C05E  F014         	movff	?_fround+1,___ftadd@f2+1
  1798  0012AE  C05F  F015         	movff	?_fround+2,___ftadd@f2+2
  1799  0012B2  EC97  F010         	call	___ftadd	;wreg free
  1800  0012B6  C010  F093         	movff	?___ftadd,printf@fval
  1801  0012BA  C011  F094         	movff	?___ftadd+1,printf@fval+1
  1802  0012BE  C012  F095         	movff	?___ftadd+2,printf@fval+2
  1803  0012C2  D000               	goto	l2637
  1804  0012C4                     l2637:
  1805                           
  1806                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1807  0012C4  0100               	movlb	0	; () banked
  1808  0012C6  BF8E               	btfsc	(printf@exp+1)& (0+255),7,b
  1809  0012C8  D008               	goto	l2639
  1810  0012CA  0100               	movlb	0	; () banked
  1811  0012CC  518E               	movf	(printf@exp+1)& (0+255),w,b
  1812  0012CE  E128               	bnz	l2645
  1813  0012D0  0E0A               	movlw	10
  1814  0012D2  0100               	movlb	0	; () banked
  1815  0012D4  5D8D               	subwf	printf@exp& (0+255),w,b
  1816  0012D6  B0D8               	btfsc	status,0,c
  1817  0012D8  D023               	goto	l2645
  1818  0012DA                     l2639:
  1819                           
  1820                           ; BSR set to: 0
  1821  0012DA  0100               	movlb	0	; () banked
  1822  0012DC  5193               	movf	printf@fval& (0+255),w,b
  1823  0012DE  0100               	movlb	0	; () banked
  1824  0012E0  1194               	iorwf	(printf@fval+1)& (0+255),w,b
  1825  0012E2  0100               	movlb	0	; () banked
  1826  0012E4  1195               	iorwf	(printf@fval+2)& (0+255),w,b
  1827  0012E6  B4D8               	btfsc	status,2,c
  1828  0012E8  D077               	goto	l2659
  1829                           
  1830                           ; BSR set to: 0
  1831  0012EA  C093  F03A         	movff	printf@fval,___fttol@f1
  1832  0012EE  C094  F03B         	movff	printf@fval+1,___fttol@f1+1
  1833  0012F2  C095  F03C         	movff	printf@fval+2,___fttol@f1+2
  1834  0012F6  EC02  F013         	call	___fttol	;wreg free
  1835  0012FA  503A               	movf	?___fttol,w,c
  1836  0012FC  103B               	iorwf	?___fttol+1,w,c
  1837  0012FE  103C               	iorwf	?___fttol+2,w,c
  1838  001300  103D               	iorwf	?___fttol+3,w,c
  1839  001302  A4D8               	btfss	status,2,c
  1840  001304  D069               	goto	l2659
  1841  001306  0100               	movlb	0	; () banked
  1842  001308  BF8E               	btfsc	(printf@exp+1)& (0+255),7,b
  1843  00130A  D066               	goto	l2659
  1844  00130C  0100               	movlb	0	; () banked
  1845  00130E  518E               	movf	(printf@exp+1)& (0+255),w,b
  1846  001310  E107               	bnz	l2645
  1847  001312  0E02               	movlw	2
  1848  001314  0100               	movlb	0	; () banked
  1849  001316  5D8D               	subwf	printf@exp& (0+255),w,b
  1850  001318  B0D8               	btfsc	status,0,c
  1851  00131A  D002               	goto	l2645
  1852  00131C  D05D               	goto	l2659
  1853  00131E  D000               	goto	l2645
  1854  001320                     l2645:
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1858  001320  C08F  F001         	movff	printf@tmpval,___ftge@ff1
  1859  001324  C090  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1860  001328  C091  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1861  00132C  0E70               	movlw	112
  1862  00132E  6E04               	movwf	___ftge@ff2,c
  1863  001330  0E89               	movlw	137
  1864  001332  6E05               	movwf	___ftge@ff2+1,c
  1865  001334  0E40               	movlw	64
  1866  001336  6E06               	movwf	___ftge@ff2+2,c
  1867  001338  EC94  F014         	call	___ftge	;wreg free
  1868  00133C  B0D8               	btfsc	status,0,c
  1869  00133E  D003               	goto	l2649
  1870                           
  1871                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1872  001340  0100               	movlb	0	; () banked
  1873  001342  0EF7               	movlw	247
  1874  001344  D002               	goto	L1
  1875  001346                     l2649:
  1876                           
  1877                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1878  001346  0100               	movlb	0	; () banked
  1879  001348  0EF8               	movlw	248
  1880  00134A                     L1:
  1881  00134A  278D               	addwf	printf@exp& (0+255),f,b
  1882  00134C  0EFF               	movlw	255
  1883  00134E  238E               	addwfc	(printf@exp+1)& (0+255),f,b
  1884  001350  D000               	goto	l2651
  1885  001352                     l2651:
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;doprnt.c: 1124: }
  1889                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1890  001352  0100               	movlb	0	; () banked
  1891  001354  518D               	movf	printf@exp& (0+255),w,b
  1892  001356  ECAF  F00B         	call	_scale
  1893  00135A  C05D  F08F         	movff	?_scale,printf@tmpval
  1894  00135E  C05E  F090         	movff	?_scale+1,printf@tmpval+1
  1895  001362  C05F  F091         	movff	?_scale+2,printf@tmpval+2
  1896                           
  1897                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1898  001366  D017               	goto	l2655
  1899  001368  C093  F001         	movff	printf@fval,__div_to_l_@f1
  1900  00136C  C094  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1901  001370  C095  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1902  001374  C08F  F004         	movff	printf@tmpval,__div_to_l_@f2
  1903  001378  C090  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1904  00137C  C091  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1905  001380  EC01  F012         	call	__div_to_l_	;wreg free
  1906  001384  C001  F089         	movff	?__div_to_l_,printf@val
  1907  001388  C002  F08A         	movff	?__div_to_l_+1,printf@val+1
  1908  00138C  C003  F08B         	movff	?__div_to_l_+2,printf@val+2
  1909  001390  C004  F08C         	movff	?__div_to_l_+3,printf@val+3
  1910  001394  D017               	goto	l2657
  1911  001396                     l2655:
  1912  001396  C093  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1913  00139A  C094  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1914  00139E  C095  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1915  0013A2  C08F  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1916  0013A6  C090  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1917  0013AA  C091  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1918  0013AE  EC79  F011         	call	__tdiv_to_l_	;wreg free
  1919  0013B2  C001  F089         	movff	?__tdiv_to_l_,printf@val
  1920  0013B6  C002  F08A         	movff	?__tdiv_to_l_+1,printf@val+1
  1921  0013BA  C003  F08B         	movff	?__tdiv_to_l_+2,printf@val+2
  1922  0013BE  C004  F08C         	movff	?__tdiv_to_l_+3,printf@val+3
  1923  0013C2  D000               	goto	l2657
  1924  0013C4                     l2657:
  1925                           
  1926                           ;doprnt.c: 1129: fval = 0.0;
  1927  0013C4  0E00               	movlw	0
  1928  0013C6  0100               	movlb	0	; () banked
  1929  0013C8  6F93               	movwf	printf@fval& (0+255),b
  1930  0013CA  0E00               	movlw	0
  1931  0013CC  0100               	movlb	0	; () banked
  1932  0013CE  6F94               	movwf	(printf@fval+1)& (0+255),b
  1933  0013D0  0E00               	movlw	0
  1934  0013D2  0100               	movlb	0	; () banked
  1935  0013D4  6F95               	movwf	(printf@fval+2)& (0+255),b
  1936                           
  1937                           ;doprnt.c: 1130: } else {
  1938  0013D6  D034               	goto	l2663
  1939  0013D8                     l2659:
  1940                           
  1941                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1942  0013D8  C093  F03A         	movff	printf@fval,___fttol@f1
  1943  0013DC  C094  F03B         	movff	printf@fval+1,___fttol@f1+1
  1944  0013E0  C095  F03C         	movff	printf@fval+2,___fttol@f1+2
  1945  0013E4  EC02  F013         	call	___fttol	;wreg free
  1946  0013E8  C03A  F089         	movff	?___fttol,printf@val
  1947  0013EC  C03B  F08A         	movff	?___fttol+1,printf@val+1
  1948  0013F0  C03C  F08B         	movff	?___fttol+2,printf@val+2
  1949  0013F4  C03D  F08C         	movff	?___fttol+3,printf@val+3
  1950                           
  1951                           ;doprnt.c: 1132: fval -= (double)val;
  1952  0013F8  C093  F01C         	movff	printf@fval,___ftsub@f1
  1953  0013FC  C094  F01D         	movff	printf@fval+1,___ftsub@f1+1
  1954  001400  C095  F01E         	movff	printf@fval+2,___ftsub@f1+2
  1955  001404  C089  F009         	movff	printf@val,___lltoft@c
  1956  001408  C08A  F00A         	movff	printf@val+1,___lltoft@c+1
  1957  00140C  C08B  F00B         	movff	printf@val+2,___lltoft@c+2
  1958  001410  C08C  F00C         	movff	printf@val+3,___lltoft@c+3
  1959  001414  EC1A  F016         	call	___lltoft	;wreg free
  1960  001418  C009  F01F         	movff	?___lltoft,___ftsub@f2
  1961  00141C  C00A  F020         	movff	?___lltoft+1,___ftsub@f2+1
  1962  001420  C00B  F021         	movff	?___lltoft+2,___ftsub@f2+2
  1963  001424  EC76  F016         	call	___ftsub	;wreg free
  1964  001428  C01C  F093         	movff	?___ftsub,printf@fval
  1965  00142C  C01D  F094         	movff	?___ftsub+1,printf@fval+1
  1966  001430  C01E  F095         	movff	?___ftsub+2,printf@fval+2
  1967                           
  1968                           ;doprnt.c: 1133: exp = 0;
  1969  001434  0E00               	movlw	0
  1970  001436  0100               	movlb	0	; () banked
  1971  001438  6F8E               	movwf	(printf@exp+1)& (0+255),b
  1972  00143A  0E00               	movlw	0
  1973  00143C  6F8D               	movwf	printf@exp& (0+255),b
  1974  00143E  D000               	goto	l2663
  1975  001440                     l2663:
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;doprnt.c: 1134: }
  1979                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1980  001440  0E01               	movlw	1
  1981  001442  0100               	movlb	0	; () banked
  1982  001444  6F96               	movwf	printf@c& (0+255),b
  1983  001446                     l2665:
  1984                           
  1985                           ; BSR set to: 0
  1986  001446  0E0A               	movlw	10
  1987  001448  0100               	movlb	0	; () banked
  1988  00144A  1996               	xorwf	printf@c& (0+255),w,b
  1989  00144C  B4D8               	btfsc	status,2,c
  1990  00144E  D022               	goto	l2677
  1991  001450  D001               	goto	l2669
  1992                           
  1993                           ; BSR set to: 0
  1994  001452  D020               	goto	l2677
  1995  001454                     l2669:
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;doprnt.c: 1137: if(val < dpowers[c])
  1999  001454  0100               	movlb	0	; () banked
  2000  001456  5196               	movf	printf@c& (0+255),w,b
  2001  001458  0D04               	mullw	4
  2002  00145A  0E01               	movlw	low _dpowers
  2003  00145C  24F3               	addwf	prodl,w,c
  2004  00145E  6EF6               	movwf	tblptrl,c
  2005  001460  0E10               	movlw	high _dpowers
  2006  001462  20F4               	addwfc	prodh,w,c
  2007  001464  6EF7               	movwf	tblptrh,c
  2008  001466                     	if	0	;There are less than 3 active tblptr bytes
  2009  001466                     	endif
  2010  001466  0009               	tblrd		*+
  2011  001468  50F5               	movf	tablat,w,c
  2012  00146A  0100               	movlb	0	; () banked
  2013  00146C  5D89               	subwf	printf@val& (0+255),w,b
  2014  00146E  0009               	tblrd		*+
  2015  001470  50F5               	movf	tablat,w,c
  2016  001472  0100               	movlb	0	; () banked
  2017  001474  598A               	subwfb	(printf@val+1)& (0+255),w,b
  2018  001476  0009               	tblrd		*+
  2019  001478  50F5               	movf	tablat,w,c
  2020  00147A  0100               	movlb	0	; () banked
  2021  00147C  598B               	subwfb	(printf@val+2)& (0+255),w,b
  2022  00147E  0009               	tblrd		*+
  2023  001480  50F5               	movf	tablat,w,c
  2024  001482  0100               	movlb	0	; () banked
  2025  001484  598C               	subwfb	(printf@val+3)& (0+255),w,b
  2026  001486  A0D8               	btfss	status,0,c
  2027  001488  D005               	goto	l2677
  2028  00148A  D001               	goto	l2673
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;doprnt.c: 1138: break;
  2032  00148C  D003               	goto	l2677
  2033  00148E                     l2673:
  2034                           
  2035                           ; BSR set to: 0
  2036  00148E  0100               	movlb	0	; () banked
  2037  001490  2B96               	incf	printf@c& (0+255),f,b
  2038  001492  D7D9               	goto	l2665
  2039  001494                     l2677:
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;doprnt.c: 1175: {
  2043                           ;doprnt.c: 1188: if(flag & 0x03)
  2044  001494  0E03               	movlw	3
  2045  001496  0100               	movlb	0	; () banked
  2046  001498  1585               	andwf	printf@flag& (0+255),w,b
  2047  00149A  6E6C               	movwf	??_printf& (0+255),c
  2048  00149C  0E00               	movlw	0
  2049  00149E  0100               	movlb	0	; () banked
  2050  0014A0  1586               	andwf	(printf@flag+1)& (0+255),w,b
  2051  0014A2  6E6D               	movwf	(??_printf+1)& (0+255),c
  2052  0014A4  506C               	movf	??_printf,w,c
  2053  0014A6  106D               	iorwf	??_printf+1,w,c
  2054  0014A8  B4D8               	btfsc	status,2,c
  2055  0014AA  D04B               	goto	l2687
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;doprnt.c: 1190: (putch('-') );
  2059  0014AC  0E2D               	movlw	45
  2060  0014AE  EC6F  F017         	call	_putch
  2061                           
  2062                           ;doprnt.c: 1195: }
  2063                           ;doprnt.c: 1196: while(c--) {
  2064  0014B2  D047               	goto	l2687
  2065  0014B4                     l2681:
  2066                           
  2067                           ;doprnt.c: 1200: {
  2068                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2069  0014B4  C089  F001         	movff	printf@val,___lldiv@dividend
  2070  0014B8  C08A  F002         	movff	printf@val+1,___lldiv@dividend+1
  2071  0014BC  C08B  F003         	movff	printf@val+2,___lldiv@dividend+2
  2072  0014C0  C08C  F004         	movff	printf@val+3,___lldiv@dividend+3
  2073  0014C4  0100               	movlb	0	; () banked
  2074  0014C6  5196               	movf	printf@c& (0+255),w,b
  2075  0014C8  0D04               	mullw	4
  2076  0014CA  0E01               	movlw	low _dpowers
  2077  0014CC  24F3               	addwf	prodl,w,c
  2078  0014CE  6EF6               	movwf	tblptrl,c
  2079  0014D0  0E10               	movlw	high _dpowers
  2080  0014D2  20F4               	addwfc	prodh,w,c
  2081  0014D4  6EF7               	movwf	tblptrh,c
  2082  0014D6                     	if	0	;There are less than 3 active tblptr bytes
  2083  0014D6                     	endif
  2084  0014D6  0009               	tblrd		*+
  2085  0014D8  CFF5 F005          	movff	tablat,___lldiv@divisor
  2086  0014DC  0009               	tblrd		*+
  2087  0014DE  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2088  0014E2  0009               	tblrd		*+
  2089  0014E4  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2090  0014E8  000A               	tblrd		*-
  2091  0014EA  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2092  0014EE  ECDF  F014         	call	___lldiv	;wreg free
  2093  0014F2  C001  F08F         	movff	?___lldiv,printf@tmpval
  2094  0014F6  C002  F090         	movff	?___lldiv+1,printf@tmpval+1
  2095  0014FA  C003  F091         	movff	?___lldiv+2,printf@tmpval+2
  2096  0014FE  C004  F092         	movff	?___lldiv+3,printf@tmpval+3
  2097                           
  2098                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2099  001502  C08F  F001         	movff	printf@tmpval,___llmod@dividend
  2100  001506  C090  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  2101  00150A  C091  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  2102  00150E  C092  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  2103  001512  0E0A               	movlw	10
  2104  001514  6E05               	movwf	___llmod@divisor,c
  2105  001516  0E00               	movlw	0
  2106  001518  6E06               	movwf	___llmod@divisor+1,c
  2107  00151A  0E00               	movlw	0
  2108  00151C  6E07               	movwf	___llmod@divisor+2,c
  2109  00151E  0E00               	movlw	0
  2110  001520  6E08               	movwf	___llmod@divisor+3,c
  2111  001522  ECAA  F015         	call	___llmod	;wreg free
  2112  001526  C001  F08F         	movff	?___llmod,printf@tmpval
  2113  00152A  C002  F090         	movff	?___llmod+1,printf@tmpval+1
  2114  00152E  C003  F091         	movff	?___llmod+2,printf@tmpval+2
  2115  001532  C004  F092         	movff	?___llmod+3,printf@tmpval+3
  2116                           
  2117                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  2118  001536  0100               	movlb	0	; () banked
  2119  001538  518F               	movf	printf@tmpval& (0+255),w,b
  2120  00153A  0F30               	addlw	48
  2121  00153C  EC6F  F017         	call	_putch
  2122  001540  D000               	goto	l2687
  2123  001542                     l2687:
  2124  001542  0100               	movlb	0	; () banked
  2125  001544  0796               	decf	printf@c& (0+255),f,b
  2126  001546  0100               	movlb	0	; () banked
  2127  001548  2996               	incf	printf@c& (0+255),w,b
  2128  00154A  B4D8               	btfsc	status,2,c
  2129  00154C  D00A               	goto	l2693
  2130  00154E  D7B2               	goto	l2681
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;doprnt.c: 1204: }
  2134                           ;doprnt.c: 1206: }
  2135                           ;doprnt.c: 1207: while(exp > 0) {
  2136  001550  D008               	goto	l2693
  2137  001552                     l2689:
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;doprnt.c: 1208: (putch('0') );
  2141  001552  0E30               	movlw	48
  2142  001554  EC6F  F017         	call	_putch
  2143                           
  2144                           ;doprnt.c: 1209: exp--;
  2145  001558  0100               	movlb	0	; () banked
  2146  00155A  078D               	decf	printf@exp& (0+255),f,b
  2147  00155C  A0D8               	btfss	status,0,c
  2148  00155E  078E               	decf	(printf@exp+1)& (0+255),f,b
  2149  001560  D000               	goto	l2693
  2150  001562                     l2693:
  2151                           
  2152                           ; BSR set to: 0
  2153  001562  0100               	movlb	0	; () banked
  2154  001564  BF8E               	btfsc	(printf@exp+1)& (0+255),7,b
  2155  001566  D007               	goto	l2695
  2156  001568  0100               	movlb	0	; () banked
  2157  00156A  518E               	movf	(printf@exp+1)& (0+255),w,b
  2158  00156C  E1F2               	bnz	l2689
  2159  00156E  0100               	movlb	0	; () banked
  2160  001570  058D               	decf	printf@exp& (0+255),w,b
  2161  001572  B0D8               	btfsc	status,0,c
  2162  001574  D7EE               	goto	l2689
  2163  001576                     l2695:
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;doprnt.c: 1210: }
  2167                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2168  001576  0100               	movlb	0	; () banked
  2169  001578  BF88               	btfsc	(printf@prec+1)& (0+255),7,b
  2170  00157A  D00C               	goto	l217
  2171  00157C  0100               	movlb	0	; () banked
  2172  00157E  5188               	movf	(printf@prec+1)& (0+255),w,b
  2173  001580  E105               	bnz	u2870
  2174  001582  0E09               	movlw	9
  2175  001584  0100               	movlb	0	; () banked
  2176  001586  5D87               	subwf	printf@prec& (0+255),w,b
  2177  001588  A0D8               	btfss	status,0,c
  2178  00158A  D004               	goto	l217
  2179  00158C                     u2870:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2183  00158C  0E08               	movlw	8
  2184  00158E  0100               	movlb	0	; () banked
  2185  001590  6F96               	movwf	printf@c& (0+255),b
  2186  001592  D003               	goto	l2699
  2187  001594                     l217:
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;doprnt.c: 1213: else
  2191                           ;doprnt.c: 1214: c = prec;
  2192  001594  C087  F096         	movff	printf@prec,printf@c
  2193  001598  D000               	goto	l2699
  2194  00159A                     l2699:
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;doprnt.c: 1215: prec -= c;
  2198  00159A  0100               	movlb	0	; () banked
  2199  00159C  5196               	movf	printf@c& (0+255),w,b
  2200  00159E  0100               	movlb	0	; () banked
  2201  0015A0  5F87               	subwf	printf@prec& (0+255),f,b
  2202  0015A2  0E00               	movlw	0
  2203  0015A4  0100               	movlb	0	; () banked
  2204  0015A6  BF96               	btfsc	printf@c& (0+255),7,b
  2205  0015A8  0EFF               	movlw	255
  2206  0015AA  0100               	movlb	0	; () banked
  2207  0015AC  5B88               	subwfb	(printf@prec+1)& (0+255),f,b
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;doprnt.c: 1219: if(c)
  2211  0015AE  0100               	movlb	0	; () banked
  2212  0015B0  5196               	movf	printf@c& (0+255),w,b
  2213  0015B2  0100               	movlb	0	; () banked
  2214  0015B4  B4D8               	btfsc	status,2,c
  2215  0015B6  D004               	goto	l2705
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;doprnt.c: 1221: (putch('.') );
  2219  0015B8  0E2E               	movlw	46
  2220  0015BA  EC6F  F017         	call	_putch
  2221  0015BE  D000               	goto	l2705
  2222  0015C0                     l2705:
  2223                           
  2224                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2225  0015C0  0100               	movlb	0	; () banked
  2226  0015C2  5196               	movf	printf@c& (0+255),w,b
  2227  0015C4  ECAF  F00B         	call	_scale
  2228  0015C8  C05D  F080         	movff	?_scale,_printf$1513
  2229  0015CC  C05E  F081         	movff	?_scale+1,_printf$1513+1
  2230  0015D0  C05F  F082         	movff	?_scale+2,_printf$1513+2
  2231                           
  2232                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2233  0015D4  C093  F01F         	movff	printf@fval,___ftmul@f2
  2234  0015D8  C094  F020         	movff	printf@fval+1,___ftmul@f2+1
  2235  0015DC  C095  F021         	movff	printf@fval+2,___ftmul@f2+2
  2236  0015E0  C080  F01C         	movff	_printf$1513,___ftmul@f1
  2237  0015E4  C081  F01D         	movff	_printf$1513+1,___ftmul@f1+1
  2238  0015E8  C082  F01E         	movff	_printf$1513+2,___ftmul@f1+2
  2239  0015EC  EC86  F012         	call	___ftmul	;wreg free
  2240  0015F0  C01C  F03A         	movff	?___ftmul,___fttol@f1
  2241  0015F4  C01D  F03B         	movff	?___ftmul+1,___fttol@f1+1
  2242  0015F8  C01E  F03C         	movff	?___ftmul+2,___fttol@f1+2
  2243  0015FC  EC02  F013         	call	___fttol	;wreg free
  2244  001600  C03A  F089         	movff	?___fttol,printf@val
  2245  001604  C03B  F08A         	movff	?___fttol+1,printf@val+1
  2246  001608  C03C  F08B         	movff	?___fttol+2,printf@val+2
  2247  00160C  C03D  F08C         	movff	?___fttol+3,printf@val+3
  2248                           
  2249                           ;doprnt.c: 1228: while(c--) {
  2250  001610  D06E               	goto	l2715
  2251  001612                     l2709:
  2252                           
  2253                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2254  001612  C089  F001         	movff	printf@val,___lldiv@dividend
  2255  001616  C08A  F002         	movff	printf@val+1,___lldiv@dividend+1
  2256  00161A  C08B  F003         	movff	printf@val+2,___lldiv@dividend+2
  2257  00161E  C08C  F004         	movff	printf@val+3,___lldiv@dividend+3
  2258  001622  0100               	movlb	0	; () banked
  2259  001624  5196               	movf	printf@c& (0+255),w,b
  2260  001626  0D04               	mullw	4
  2261  001628  0E01               	movlw	low _dpowers
  2262  00162A  24F3               	addwf	prodl,w,c
  2263  00162C  6EF6               	movwf	tblptrl,c
  2264  00162E  0E10               	movlw	high _dpowers
  2265  001630  20F4               	addwfc	prodh,w,c
  2266  001632  6EF7               	movwf	tblptrh,c
  2267  001634                     	if	0	;There are less than 3 active tblptr bytes
  2268  001634                     	endif
  2269  001634  0009               	tblrd		*+
  2270  001636  CFF5 F005          	movff	tablat,___lldiv@divisor
  2271  00163A  0009               	tblrd		*+
  2272  00163C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2273  001640  0009               	tblrd		*+
  2274  001642  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2275  001646  000A               	tblrd		*-
  2276  001648  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2277  00164C  ECDF  F014         	call	___lldiv	;wreg free
  2278  001650  C001  F08F         	movff	?___lldiv,printf@tmpval
  2279  001654  C002  F090         	movff	?___lldiv+1,printf@tmpval+1
  2280  001658  C003  F091         	movff	?___lldiv+2,printf@tmpval+2
  2281  00165C  C004  F092         	movff	?___lldiv+3,printf@tmpval+3
  2282                           
  2283                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2284  001660  C08F  F001         	movff	printf@tmpval,___llmod@dividend
  2285  001664  C090  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  2286  001668  C091  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  2287  00166C  C092  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  2288  001670  0E0A               	movlw	10
  2289  001672  6E05               	movwf	___llmod@divisor,c
  2290  001674  0E00               	movlw	0
  2291  001676  6E06               	movwf	___llmod@divisor+1,c
  2292  001678  0E00               	movlw	0
  2293  00167A  6E07               	movwf	___llmod@divisor+2,c
  2294  00167C  0E00               	movlw	0
  2295  00167E  6E08               	movwf	___llmod@divisor+3,c
  2296  001680  ECAA  F015         	call	___llmod	;wreg free
  2297  001684  C001  F08F         	movff	?___llmod,printf@tmpval
  2298  001688  C002  F090         	movff	?___llmod+1,printf@tmpval+1
  2299  00168C  C003  F091         	movff	?___llmod+2,printf@tmpval+2
  2300  001690  C004  F092         	movff	?___llmod+3,printf@tmpval+3
  2301                           
  2302                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  2303  001694  0100               	movlb	0	; () banked
  2304  001696  518F               	movf	printf@tmpval& (0+255),w,b
  2305  001698  0F30               	addlw	48
  2306  00169A  EC6F  F017         	call	_putch
  2307                           
  2308                           ;doprnt.c: 1232: val %= dpowers[c];
  2309  00169E  C089  F001         	movff	printf@val,___llmod@dividend
  2310  0016A2  C08A  F002         	movff	printf@val+1,___llmod@dividend+1
  2311  0016A6  C08B  F003         	movff	printf@val+2,___llmod@dividend+2
  2312  0016AA  C08C  F004         	movff	printf@val+3,___llmod@dividend+3
  2313  0016AE  0100               	movlb	0	; () banked
  2314  0016B0  5196               	movf	printf@c& (0+255),w,b
  2315  0016B2  0D04               	mullw	4
  2316  0016B4  0E01               	movlw	low _dpowers
  2317  0016B6  24F3               	addwf	prodl,w,c
  2318  0016B8  6EF6               	movwf	tblptrl,c
  2319  0016BA  0E10               	movlw	high _dpowers
  2320  0016BC  20F4               	addwfc	prodh,w,c
  2321  0016BE  6EF7               	movwf	tblptrh,c
  2322  0016C0                     	if	0	;There are less than 3 active tblptr bytes
  2323  0016C0                     	endif
  2324  0016C0  0009               	tblrd		*+
  2325  0016C2  CFF5 F005          	movff	tablat,___llmod@divisor
  2326  0016C6  0009               	tblrd		*+
  2327  0016C8  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2328  0016CC  0009               	tblrd		*+
  2329  0016CE  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2330  0016D2  000A               	tblrd		*-
  2331  0016D4  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2332  0016D8  ECAA  F015         	call	___llmod	;wreg free
  2333  0016DC  C001  F089         	movff	?___llmod,printf@val
  2334  0016E0  C002  F08A         	movff	?___llmod+1,printf@val+1
  2335  0016E4  C003  F08B         	movff	?___llmod+2,printf@val+2
  2336  0016E8  C004  F08C         	movff	?___llmod+3,printf@val+3
  2337  0016EC  D000               	goto	l2715
  2338  0016EE                     l2715:
  2339  0016EE  0100               	movlb	0	; () banked
  2340  0016F0  0796               	decf	printf@c& (0+255),f,b
  2341  0016F2  0100               	movlb	0	; () banked
  2342  0016F4  2996               	incf	printf@c& (0+255),w,b
  2343  0016F6  B4D8               	btfsc	status,2,c
  2344  0016F8  D00A               	goto	l2721
  2345  0016FA  D78B               	goto	l2709
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;doprnt.c: 1233: }
  2349                           ;doprnt.c: 1235: while(prec) {
  2350  0016FC  D008               	goto	l2721
  2351  0016FE                     l2717:
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;doprnt.c: 1236: (putch('0') );
  2355  0016FE  0E30               	movlw	48
  2356  001700  EC6F  F017         	call	_putch
  2357                           
  2358                           ;doprnt.c: 1237: prec--;
  2359  001704  0100               	movlb	0	; () banked
  2360  001706  0787               	decf	printf@prec& (0+255),f,b
  2361  001708  A0D8               	btfss	status,0,c
  2362  00170A  0788               	decf	(printf@prec+1)& (0+255),f,b
  2363  00170C  D000               	goto	l2721
  2364  00170E                     l2721:
  2365                           
  2366                           ; BSR set to: 0
  2367  00170E  0100               	movlb	0	; () banked
  2368  001710  5187               	movf	printf@prec& (0+255),w,b
  2369  001712  0100               	movlb	0	; () banked
  2370  001714  1188               	iorwf	(printf@prec+1)& (0+255),w,b
  2371  001716  B4D8               	btfsc	status,2,c
  2372  001718  D012               	goto	l2727
  2373  00171A  D7F1               	goto	l2717
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;doprnt.c: 1238: }
  2377                           ;doprnt.c: 1245: continue;
  2378  00171C  D010               	goto	l2727
  2379  00171E                     l2723:
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;doprnt.c: 1246: }
  2383                           ;doprnt.c: 1422: {
  2384                           ;doprnt.c: 1438: if(flag & 0x03)
  2385  00171E  0E03               	movlw	3
  2386  001720  0100               	movlb	0	; () banked
  2387  001722  1585               	andwf	printf@flag& (0+255),w,b
  2388  001724  6E6C               	movwf	??_printf& (0+255),c
  2389  001726  0E00               	movlw	0
  2390  001728  0100               	movlb	0	; () banked
  2391  00172A  1586               	andwf	(printf@flag+1)& (0+255),w,b
  2392  00172C  6E6D               	movwf	(??_printf+1)& (0+255),c
  2393  00172E  506C               	movf	??_printf,w,c
  2394  001730  106D               	iorwf	??_printf+1,w,c
  2395  001732  B4D8               	btfsc	status,2,c
  2396  001734  D004               	goto	l2727
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;doprnt.c: 1439: (putch('-') );
  2400  001736  0E2D               	movlw	45
  2401  001738  EC6F  F017         	call	_putch
  2402  00173C  D000               	goto	l2727
  2403  00173E                     l2727:
  2404  00173E  C067  FFF6         	movff	printf@f,tblptrl
  2405  001742  C068  FFF7         	movff	printf@f+1,tblptrh
  2406  001746  4A67               	infsnz	printf@f,f,c
  2407  001748  2A68               	incf	printf@f+1,f,c
  2408  00174A                     	if	0	;tblptru may be non-zero
  2409  00174A                     	endif
  2410  00174A                     	if	0	;tblptru may be non-zero
  2411  00174A                     	endif
  2412  00174A  0008               	tblrd		*
  2413  00174C  CFF5 F096          	movff	tablat,printf@c
  2414  001750  0100               	movlb	0	; () banked
  2415  001752  5196               	movf	printf@c& (0+255),w,b
  2416  001754  B4D8               	btfsc	status,2,c
  2417  001756  D002               	goto	l228
  2418  001758  D4A1               	goto	l2579
  2419                           
  2420                           ; BSR set to: 0
  2421  00175A  D000               	goto	l228
  2422  00175C                     l228:
  2423                           
  2424                           ; BSR set to: 0
  2425  00175C  0012               	return		;funcret
  2426  00175E                     __end_of_printf:
  2427                           	opt stack 0
  2428                           tblptru	equ	0xFF8
  2429                           tblptrh	equ	0xFF7
  2430                           tblptrl	equ	0xFF6
  2431                           tablat	equ	0xFF5
  2432                           prodh	equ	0xFF4
  2433                           prodl	equ	0xFF3
  2434                           postinc0	equ	0xFEE
  2435                           wreg	equ	0xFE8
  2436                           postdec1	equ	0xFE5
  2437                           fsr1l	equ	0xFE1
  2438                           indf2	equ	0xFDF
  2439                           postinc2	equ	0xFDE
  2440                           postdec2	equ	0xFDD
  2441                           fsr2h	equ	0xFDA
  2442                           fsr2l	equ	0xFD9
  2443                           status	equ	0xFD8
  2444                           
  2445 ;; *************** function _scale *****************
  2446 ;; Defined at:
  2447 ;;		line 425 in file "E:\XC8\sources\common\doprnt.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  scl             1    wreg     char 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  scl             1   98[COMRAM] char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  3   92[COMRAM] char 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2461 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;Total ram usage:        7 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    2
  2468 ;; This function calls:
  2469 ;;		___awdiv
  2470 ;;		___awmod
  2471 ;;		___ftmul
  2472 ;;		___wmul
  2473 ;; This function is called by:
  2474 ;;		_printf
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text2
  2479  00175E                     __ptext2:
  2480                           	opt stack 0
  2481  00175E                     _scale:
  2482                           	opt stack 27
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;incstack = 0
  2486                           ;scale@scl stored from wreg
  2487  00175E  6E63               	movwf	scale@scl,c
  2488                           
  2489                           ;doprnt.c: 428: if(scl < 0) {
  2490  001760  AE63               	btfss	scale@scl,7,c
  2491  001762  D0EF               	goto	l2199
  2492                           
  2493                           ;doprnt.c: 429: scl = -scl;
  2494  001764  6C63               	negf	scale@scl,c
  2495                           
  2496                           ;doprnt.c: 430: if(scl>=110)
  2497  001766  5063               	movf	scale@scl,w,c
  2498  001768  0A80               	xorlw	128
  2499  00176A  0F12               	addlw	-238
  2500  00176C  A0D8               	btfss	status,0,c
  2501  00176E  D08D               	goto	l2189
  2502                           
  2503                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2504  001770  0E00               	movlw	0
  2505  001772  6E5A               	movwf	___wmul@multiplicand+1,c
  2506  001774  0E03               	movlw	3
  2507  001776  6E59               	movwf	___wmul@multiplicand,c
  2508  001778  0E00               	movlw	0
  2509  00177A  6E52               	movwf	___awdiv@divisor+1,c
  2510  00177C  0E0A               	movlw	10
  2511  00177E  6E51               	movwf	___awdiv@divisor,c
  2512  001780  0E00               	movlw	0
  2513  001782  6E4C               	movwf	___awmod@divisor+1,c
  2514  001784  0E64               	movlw	100
  2515  001786  6E4B               	movwf	___awmod@divisor,c
  2516  001788  5063               	movf	scale@scl,w,c
  2517  00178A  6E49               	movwf	___awmod@dividend,c
  2518  00178C  6A4A               	clrf	___awmod@dividend+1,c
  2519  00178E  BE49               	btfsc	___awmod@dividend,7,c
  2520  001790  064A               	decf	___awmod@dividend+1,f,c
  2521  001792  EC69  F015         	call	___awmod	;wreg free
  2522  001796  C049  F04F         	movff	?___awmod,___awdiv@dividend
  2523  00179A  C04A  F050         	movff	?___awmod+1,___awdiv@dividend+1
  2524  00179E  EC49  F014         	call	___awdiv	;wreg free
  2525  0017A2  0E09               	movlw	9
  2526  0017A4  244F               	addwf	?___awdiv,w,c
  2527  0017A6  6E57               	movwf	___wmul@multiplier,c
  2528  0017A8  0E00               	movlw	0
  2529  0017AA  2050               	addwfc	?___awdiv+1,w,c
  2530  0017AC  6E58               	movwf	___wmul@multiplier+1,c
  2531  0017AE  ECD7  F016         	call	___wmul	;wreg free
  2532  0017B2  0E29               	movlw	low __npowers_
  2533  0017B4  2457               	addwf	?___wmul,w,c
  2534  0017B6  6EF6               	movwf	tblptrl,c
  2535  0017B8  0E10               	movlw	high __npowers_
  2536  0017BA  2058               	addwfc	?___wmul+1,w,c
  2537  0017BC  6EF7               	movwf	tblptrh,c
  2538  0017BE                     	if	0	;There are less than 3 active tblptr bytes
  2539  0017BE                     	endif
  2540  0017BE  0009               	tblrd		*+
  2541  0017C0  CFF5 F01F          	movff	tablat,___ftmul@f2
  2542  0017C4  0009               	tblrd		*+
  2543  0017C6  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2544  0017CA  000A               	tblrd		*-
  2545  0017CC  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2546  0017D0  0E00               	movlw	0
  2547  0017D2  6E52               	movwf	___awdiv@divisor+1,c
  2548  0017D4  0E64               	movlw	100
  2549  0017D6  6E51               	movwf	___awdiv@divisor,c
  2550  0017D8  5063               	movf	scale@scl,w,c
  2551  0017DA  6E4F               	movwf	___awdiv@dividend,c
  2552  0017DC  6A50               	clrf	___awdiv@dividend+1,c
  2553  0017DE  BE4F               	btfsc	___awdiv@dividend,7,c
  2554  0017E0  0650               	decf	___awdiv@dividend+1,f,c
  2555  0017E2  EC49  F014         	call	___awdiv	;wreg free
  2556  0017E6  0E12               	movlw	18
  2557  0017E8  244F               	addwf	?___awdiv,w,c
  2558  0017EA  6E57               	movwf	___wmul@multiplier,c
  2559  0017EC  0E00               	movlw	0
  2560  0017EE  2050               	addwfc	?___awdiv+1,w,c
  2561  0017F0  6E58               	movwf	___wmul@multiplier+1,c
  2562  0017F2  0E00               	movlw	0
  2563  0017F4  6E5A               	movwf	___wmul@multiplicand+1,c
  2564  0017F6  0E03               	movlw	3
  2565  0017F8  6E59               	movwf	___wmul@multiplicand,c
  2566  0017FA  ECD7  F016         	call	___wmul	;wreg free
  2567  0017FE  0E29               	movlw	low __npowers_
  2568  001800  2457               	addwf	?___wmul,w,c
  2569  001802  6EF6               	movwf	tblptrl,c
  2570  001804  0E10               	movlw	high __npowers_
  2571  001806  2058               	addwfc	?___wmul+1,w,c
  2572  001808  6EF7               	movwf	tblptrh,c
  2573  00180A                     	if	0	;There are less than 3 active tblptr bytes
  2574  00180A                     	endif
  2575  00180A  0009               	tblrd		*+
  2576  00180C  CFF5 F01C          	movff	tablat,___ftmul@f1
  2577  001810  0009               	tblrd		*+
  2578  001812  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2579  001816  000A               	tblrd		*-
  2580  001818  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2581  00181C  EC86  F012         	call	___ftmul	;wreg free
  2582  001820  C01C  F060         	movff	?___ftmul,_scale$1512
  2583  001824  C01D  F061         	movff	?___ftmul+1,_scale$1512+1
  2584  001828  C01E  F062         	movff	?___ftmul+2,_scale$1512+2
  2585                           
  2586                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2587  00182C  C060  F01C         	movff	_scale$1512,___ftmul@f1
  2588  001830  C061  F01D         	movff	_scale$1512+1,___ftmul@f1+1
  2589  001834  C062  F01E         	movff	_scale$1512+2,___ftmul@f1+2
  2590  001838  0E00               	movlw	0
  2591  00183A  6E5A               	movwf	___wmul@multiplicand+1,c
  2592  00183C  0E03               	movlw	3
  2593  00183E  6E59               	movwf	___wmul@multiplicand,c
  2594  001840  0E00               	movlw	0
  2595  001842  6E4C               	movwf	___awmod@divisor+1,c
  2596  001844  0E0A               	movlw	10
  2597  001846  6E4B               	movwf	___awmod@divisor,c
  2598  001848  5063               	movf	scale@scl,w,c
  2599  00184A  6E49               	movwf	___awmod@dividend,c
  2600  00184C  6A4A               	clrf	___awmod@dividend+1,c
  2601  00184E  BE49               	btfsc	___awmod@dividend,7,c
  2602  001850  064A               	decf	___awmod@dividend+1,f,c
  2603  001852  EC69  F015         	call	___awmod	;wreg free
  2604  001856  C049  F057         	movff	?___awmod,___wmul@multiplier
  2605  00185A  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  2606  00185E  ECD7  F016         	call	___wmul	;wreg free
  2607  001862  0E29               	movlw	low __npowers_
  2608  001864  2457               	addwf	?___wmul,w,c
  2609  001866  6EF6               	movwf	tblptrl,c
  2610  001868  0E10               	movlw	high __npowers_
  2611  00186A  2058               	addwfc	?___wmul+1,w,c
  2612  00186C  6EF7               	movwf	tblptrh,c
  2613  00186E                     	if	0	;There are less than 3 active tblptr bytes
  2614  00186E                     	endif
  2615  00186E  0009               	tblrd		*+
  2616  001870  CFF5 F01F          	movff	tablat,___ftmul@f2
  2617  001874  0009               	tblrd		*+
  2618  001876  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2619  00187A  000A               	tblrd		*-
  2620  00187C  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2621  001880  EC86  F012         	call	___ftmul	;wreg free
  2622  001884  D141               	goto	L5
  2623  001886  D15A               	goto	l172
  2624  001888  D054               	goto	l2195
  2625  00188A                     l2189:
  2626                           
  2627                           ;doprnt.c: 432: else if(scl > 10)
  2628  00188A  5063               	movf	scale@scl,w,c
  2629  00188C  0A80               	xorlw	128
  2630  00188E  0F75               	addlw	-139
  2631  001890  A0D8               	btfss	status,0,c
  2632  001892  D04F               	goto	l2195
  2633                           
  2634                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2635  001894  0E00               	movlw	0
  2636  001896  6E52               	movwf	___awdiv@divisor+1,c
  2637  001898  0E0A               	movlw	10
  2638  00189A  6E51               	movwf	___awdiv@divisor,c
  2639  00189C  5063               	movf	scale@scl,w,c
  2640  00189E  6E4F               	movwf	___awdiv@dividend,c
  2641  0018A0  6A50               	clrf	___awdiv@dividend+1,c
  2642  0018A2  BE4F               	btfsc	___awdiv@dividend,7,c
  2643  0018A4  0650               	decf	___awdiv@dividend+1,f,c
  2644  0018A6  EC49  F014         	call	___awdiv	;wreg free
  2645  0018AA  0E09               	movlw	9
  2646  0018AC  244F               	addwf	?___awdiv,w,c
  2647  0018AE  6E57               	movwf	___wmul@multiplier,c
  2648  0018B0  0E00               	movlw	0
  2649  0018B2  2050               	addwfc	?___awdiv+1,w,c
  2650  0018B4  6E58               	movwf	___wmul@multiplier+1,c
  2651  0018B6  0E00               	movlw	0
  2652  0018B8  6E5A               	movwf	___wmul@multiplicand+1,c
  2653  0018BA  0E03               	movlw	3
  2654  0018BC  6E59               	movwf	___wmul@multiplicand,c
  2655  0018BE  ECD7  F016         	call	___wmul	;wreg free
  2656  0018C2  0E29               	movlw	low __npowers_
  2657  0018C4  2457               	addwf	?___wmul,w,c
  2658  0018C6  6EF6               	movwf	tblptrl,c
  2659  0018C8  0E10               	movlw	high __npowers_
  2660  0018CA  2058               	addwfc	?___wmul+1,w,c
  2661  0018CC  6EF7               	movwf	tblptrh,c
  2662  0018CE                     	if	0	;There are less than 3 active tblptr bytes
  2663  0018CE                     	endif
  2664  0018CE  0009               	tblrd		*+
  2665  0018D0  CFF5 F01C          	movff	tablat,___ftmul@f1
  2666  0018D4  0009               	tblrd		*+
  2667  0018D6  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2668  0018DA  000A               	tblrd		*-
  2669  0018DC  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2670  0018E0  0E00               	movlw	0
  2671  0018E2  6E5A               	movwf	___wmul@multiplicand+1,c
  2672  0018E4  0E03               	movlw	3
  2673  0018E6  6E59               	movwf	___wmul@multiplicand,c
  2674  0018E8  0E00               	movlw	0
  2675  0018EA  6E4C               	movwf	___awmod@divisor+1,c
  2676  0018EC  0E0A               	movlw	10
  2677  0018EE  6E4B               	movwf	___awmod@divisor,c
  2678  0018F0  5063               	movf	scale@scl,w,c
  2679  0018F2  6E49               	movwf	___awmod@dividend,c
  2680  0018F4  6A4A               	clrf	___awmod@dividend+1,c
  2681  0018F6  BE49               	btfsc	___awmod@dividend,7,c
  2682  0018F8  064A               	decf	___awmod@dividend+1,f,c
  2683  0018FA  EC69  F015         	call	___awmod	;wreg free
  2684  0018FE  C049  F057         	movff	?___awmod,___wmul@multiplier
  2685  001902  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  2686  001906  ECD7  F016         	call	___wmul	;wreg free
  2687  00190A  0E29               	movlw	low __npowers_
  2688  00190C  2457               	addwf	?___wmul,w,c
  2689  00190E  6EF6               	movwf	tblptrl,c
  2690  001910  0E10               	movlw	high __npowers_
  2691  001912  2058               	addwfc	?___wmul+1,w,c
  2692  001914  6EF7               	movwf	tblptrh,c
  2693  001916                     	if	0	;There are less than 3 active tblptr bytes
  2694  001916                     	endif
  2695  001916  0009               	tblrd		*+
  2696  001918  CFF5 F01F          	movff	tablat,___ftmul@f2
  2697  00191C  0009               	tblrd		*+
  2698  00191E  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2699  001922  000A               	tblrd		*-
  2700  001924  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2701  001928  EC86  F012         	call	___ftmul	;wreg free
  2702  00192C  D0ED               	goto	L5
  2703  00192E  D106               	goto	l172
  2704  001930  D000               	goto	l2195
  2705  001932                     l2195:
  2706                           
  2707                           ;doprnt.c: 434: return _npowers_[scl];
  2708  001932  5063               	movf	scale@scl,w,c
  2709  001934  0D03               	mullw	3
  2710  001936  0E29               	movlw	low __npowers_
  2711  001938  24F3               	addwf	prodl,w,c
  2712  00193A  6EF6               	movwf	tblptrl,c
  2713  00193C  0E10               	movlw	high __npowers_
  2714  00193E  D0F2               	goto	L4
  2715  001940  D0FD               	goto	l172
  2716  001942                     l2199:
  2717                           
  2718                           ;doprnt.c: 435: }
  2719                           ;doprnt.c: 436: if(scl>=110)
  2720  001942  5063               	movf	scale@scl,w,c
  2721  001944  0A80               	xorlw	128
  2722  001946  0F12               	addlw	-238
  2723  001948  A0D8               	btfss	status,0,c
  2724  00194A  D08D               	goto	l2207
  2725                           
  2726                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2727  00194C  0E00               	movlw	0
  2728  00194E  6E5A               	movwf	___wmul@multiplicand+1,c
  2729  001950  0E03               	movlw	3
  2730  001952  6E59               	movwf	___wmul@multiplicand,c
  2731  001954  0E00               	movlw	0
  2732  001956  6E52               	movwf	___awdiv@divisor+1,c
  2733  001958  0E0A               	movlw	10
  2734  00195A  6E51               	movwf	___awdiv@divisor,c
  2735  00195C  0E00               	movlw	0
  2736  00195E  6E4C               	movwf	___awmod@divisor+1,c
  2737  001960  0E64               	movlw	100
  2738  001962  6E4B               	movwf	___awmod@divisor,c
  2739  001964  5063               	movf	scale@scl,w,c
  2740  001966  6E49               	movwf	___awmod@dividend,c
  2741  001968  6A4A               	clrf	___awmod@dividend+1,c
  2742  00196A  BE49               	btfsc	___awmod@dividend,7,c
  2743  00196C  064A               	decf	___awmod@dividend+1,f,c
  2744  00196E  EC69  F015         	call	___awmod	;wreg free
  2745  001972  C049  F04F         	movff	?___awmod,___awdiv@dividend
  2746  001976  C04A  F050         	movff	?___awmod+1,___awdiv@dividend+1
  2747  00197A  EC49  F014         	call	___awdiv	;wreg free
  2748  00197E  0E09               	movlw	9
  2749  001980  244F               	addwf	?___awdiv,w,c
  2750  001982  6E57               	movwf	___wmul@multiplier,c
  2751  001984  0E00               	movlw	0
  2752  001986  2050               	addwfc	?___awdiv+1,w,c
  2753  001988  6E58               	movwf	___wmul@multiplier+1,c
  2754  00198A  ECD7  F016         	call	___wmul	;wreg free
  2755  00198E  0E50               	movlw	low __powers_
  2756  001990  2457               	addwf	?___wmul,w,c
  2757  001992  6EF6               	movwf	tblptrl,c
  2758  001994  0E10               	movlw	high __powers_
  2759  001996  2058               	addwfc	?___wmul+1,w,c
  2760  001998  6EF7               	movwf	tblptrh,c
  2761  00199A                     	if	0	;There are less than 3 active tblptr bytes
  2762  00199A                     	endif
  2763  00199A  0009               	tblrd		*+
  2764  00199C  CFF5 F01F          	movff	tablat,___ftmul@f2
  2765  0019A0  0009               	tblrd		*+
  2766  0019A2  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2767  0019A6  000A               	tblrd		*-
  2768  0019A8  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2769  0019AC  0E00               	movlw	0
  2770  0019AE  6E52               	movwf	___awdiv@divisor+1,c
  2771  0019B0  0E64               	movlw	100
  2772  0019B2  6E51               	movwf	___awdiv@divisor,c
  2773  0019B4  5063               	movf	scale@scl,w,c
  2774  0019B6  6E4F               	movwf	___awdiv@dividend,c
  2775  0019B8  6A50               	clrf	___awdiv@dividend+1,c
  2776  0019BA  BE4F               	btfsc	___awdiv@dividend,7,c
  2777  0019BC  0650               	decf	___awdiv@dividend+1,f,c
  2778  0019BE  EC49  F014         	call	___awdiv	;wreg free
  2779  0019C2  0E12               	movlw	18
  2780  0019C4  244F               	addwf	?___awdiv,w,c
  2781  0019C6  6E57               	movwf	___wmul@multiplier,c
  2782  0019C8  0E00               	movlw	0
  2783  0019CA  2050               	addwfc	?___awdiv+1,w,c
  2784  0019CC  6E58               	movwf	___wmul@multiplier+1,c
  2785  0019CE  0E00               	movlw	0
  2786  0019D0  6E5A               	movwf	___wmul@multiplicand+1,c
  2787  0019D2  0E03               	movlw	3
  2788  0019D4  6E59               	movwf	___wmul@multiplicand,c
  2789  0019D6  ECD7  F016         	call	___wmul	;wreg free
  2790  0019DA  0E50               	movlw	low __powers_
  2791  0019DC  2457               	addwf	?___wmul,w,c
  2792  0019DE  6EF6               	movwf	tblptrl,c
  2793  0019E0  0E10               	movlw	high __powers_
  2794  0019E2  2058               	addwfc	?___wmul+1,w,c
  2795  0019E4  6EF7               	movwf	tblptrh,c
  2796  0019E6                     	if	0	;There are less than 3 active tblptr bytes
  2797  0019E6                     	endif
  2798  0019E6  0009               	tblrd		*+
  2799  0019E8  CFF5 F01C          	movff	tablat,___ftmul@f1
  2800  0019EC  0009               	tblrd		*+
  2801  0019EE  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2802  0019F2  000A               	tblrd		*-
  2803  0019F4  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2804  0019F8  EC86  F012         	call	___ftmul	;wreg free
  2805  0019FC  C01C  F060         	movff	?___ftmul,_scale$1512
  2806  001A00  C01D  F061         	movff	?___ftmul+1,_scale$1512+1
  2807  001A04  C01E  F062         	movff	?___ftmul+2,_scale$1512+2
  2808                           
  2809                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2810  001A08  C060  F01C         	movff	_scale$1512,___ftmul@f1
  2811  001A0C  C061  F01D         	movff	_scale$1512+1,___ftmul@f1+1
  2812  001A10  C062  F01E         	movff	_scale$1512+2,___ftmul@f1+2
  2813  001A14  0E00               	movlw	0
  2814  001A16  6E5A               	movwf	___wmul@multiplicand+1,c
  2815  001A18  0E03               	movlw	3
  2816  001A1A  6E59               	movwf	___wmul@multiplicand,c
  2817  001A1C  0E00               	movlw	0
  2818  001A1E  6E4C               	movwf	___awmod@divisor+1,c
  2819  001A20  0E0A               	movlw	10
  2820  001A22  6E4B               	movwf	___awmod@divisor,c
  2821  001A24  5063               	movf	scale@scl,w,c
  2822  001A26  6E49               	movwf	___awmod@dividend,c
  2823  001A28  6A4A               	clrf	___awmod@dividend+1,c
  2824  001A2A  BE49               	btfsc	___awmod@dividend,7,c
  2825  001A2C  064A               	decf	___awmod@dividend+1,f,c
  2826  001A2E  EC69  F015         	call	___awmod	;wreg free
  2827  001A32  C049  F057         	movff	?___awmod,___wmul@multiplier
  2828  001A36  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  2829  001A3A  ECD7  F016         	call	___wmul	;wreg free
  2830  001A3E  0E50               	movlw	low __powers_
  2831  001A40  2457               	addwf	?___wmul,w,c
  2832  001A42  6EF6               	movwf	tblptrl,c
  2833  001A44  0E10               	movlw	high __powers_
  2834  001A46  2058               	addwfc	?___wmul+1,w,c
  2835  001A48  6EF7               	movwf	tblptrh,c
  2836  001A4A                     	if	0	;There are less than 3 active tblptr bytes
  2837  001A4A                     	endif
  2838  001A4A  0009               	tblrd		*+
  2839  001A4C  CFF5 F01F          	movff	tablat,___ftmul@f2
  2840  001A50  0009               	tblrd		*+
  2841  001A52  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2842  001A56  000A               	tblrd		*-
  2843  001A58  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2844  001A5C  EC86  F012         	call	___ftmul	;wreg free
  2845  001A60  D053               	goto	L5
  2846  001A62  D06C               	goto	l172
  2847  001A64  D059               	goto	l2213
  2848  001A66                     l2207:
  2849                           
  2850                           ;doprnt.c: 438: else if(scl > 10)
  2851  001A66  5063               	movf	scale@scl,w,c
  2852  001A68  0A80               	xorlw	128
  2853  001A6A  0F75               	addlw	-139
  2854  001A6C  A0D8               	btfss	status,0,c
  2855  001A6E  D054               	goto	l2213
  2856                           
  2857                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2858  001A70  0E00               	movlw	0
  2859  001A72  6E52               	movwf	___awdiv@divisor+1,c
  2860  001A74  0E0A               	movlw	10
  2861  001A76  6E51               	movwf	___awdiv@divisor,c
  2862  001A78  5063               	movf	scale@scl,w,c
  2863  001A7A  6E4F               	movwf	___awdiv@dividend,c
  2864  001A7C  6A50               	clrf	___awdiv@dividend+1,c
  2865  001A7E  BE4F               	btfsc	___awdiv@dividend,7,c
  2866  001A80  0650               	decf	___awdiv@dividend+1,f,c
  2867  001A82  EC49  F014         	call	___awdiv	;wreg free
  2868  001A86  0E09               	movlw	9
  2869  001A88  244F               	addwf	?___awdiv,w,c
  2870  001A8A  6E57               	movwf	___wmul@multiplier,c
  2871  001A8C  0E00               	movlw	0
  2872  001A8E  2050               	addwfc	?___awdiv+1,w,c
  2873  001A90  6E58               	movwf	___wmul@multiplier+1,c
  2874  001A92  0E00               	movlw	0
  2875  001A94  6E5A               	movwf	___wmul@multiplicand+1,c
  2876  001A96  0E03               	movlw	3
  2877  001A98  6E59               	movwf	___wmul@multiplicand,c
  2878  001A9A  ECD7  F016         	call	___wmul	;wreg free
  2879  001A9E  0E50               	movlw	low __powers_
  2880  001AA0  2457               	addwf	?___wmul,w,c
  2881  001AA2  6EF6               	movwf	tblptrl,c
  2882  001AA4  0E10               	movlw	high __powers_
  2883  001AA6  2058               	addwfc	?___wmul+1,w,c
  2884  001AA8  6EF7               	movwf	tblptrh,c
  2885  001AAA                     	if	0	;There are less than 3 active tblptr bytes
  2886  001AAA                     	endif
  2887  001AAA  0009               	tblrd		*+
  2888  001AAC  CFF5 F01C          	movff	tablat,___ftmul@f1
  2889  001AB0  0009               	tblrd		*+
  2890  001AB2  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2891  001AB6  000A               	tblrd		*-
  2892  001AB8  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2893  001ABC  0E00               	movlw	0
  2894  001ABE  6E5A               	movwf	___wmul@multiplicand+1,c
  2895  001AC0  0E03               	movlw	3
  2896  001AC2  6E59               	movwf	___wmul@multiplicand,c
  2897  001AC4  0E00               	movlw	0
  2898  001AC6  6E4C               	movwf	___awmod@divisor+1,c
  2899  001AC8  0E0A               	movlw	10
  2900  001ACA  6E4B               	movwf	___awmod@divisor,c
  2901  001ACC  5063               	movf	scale@scl,w,c
  2902  001ACE  6E49               	movwf	___awmod@dividend,c
  2903  001AD0  6A4A               	clrf	___awmod@dividend+1,c
  2904  001AD2  BE49               	btfsc	___awmod@dividend,7,c
  2905  001AD4  064A               	decf	___awmod@dividend+1,f,c
  2906  001AD6  EC69  F015         	call	___awmod	;wreg free
  2907  001ADA  C049  F057         	movff	?___awmod,___wmul@multiplier
  2908  001ADE  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  2909  001AE2  ECD7  F016         	call	___wmul	;wreg free
  2910  001AE6  0E50               	movlw	low __powers_
  2911  001AE8  2457               	addwf	?___wmul,w,c
  2912  001AEA  6EF6               	movwf	tblptrl,c
  2913  001AEC  0E10               	movlw	high __powers_
  2914  001AEE  2058               	addwfc	?___wmul+1,w,c
  2915  001AF0  6EF7               	movwf	tblptrh,c
  2916  001AF2                     	if	0	;There are less than 3 active tblptr bytes
  2917  001AF2                     	endif
  2918  001AF2  0009               	tblrd		*+
  2919  001AF4  CFF5 F01F          	movff	tablat,___ftmul@f2
  2920  001AF8  0009               	tblrd		*+
  2921  001AFA  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2922  001AFE  000A               	tblrd		*-
  2923  001B00  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2924  001B04  EC86  F012         	call	___ftmul	;wreg free
  2925  001B08                     L5:
  2926  001B08  C01C  F05D         	movff	?___ftmul,?_scale
  2927  001B0C  C01D  F05E         	movff	?___ftmul+1,?_scale+1
  2928  001B10  C01E  F05F         	movff	?___ftmul+2,?_scale+2
  2929  001B14  D013               	goto	l172
  2930  001B16  D000               	goto	l2213
  2931  001B18                     l2213:
  2932                           
  2933                           ;doprnt.c: 440: return _powers_[scl];
  2934  001B18  5063               	movf	scale@scl,w,c
  2935  001B1A  0D03               	mullw	3
  2936  001B1C  0E50               	movlw	low __powers_
  2937  001B1E  24F3               	addwf	prodl,w,c
  2938  001B20  6EF6               	movwf	tblptrl,c
  2939  001B22  0E10               	movlw	high __powers_
  2940  001B24                     L4:
  2941  001B24  20F4               	addwfc	prodh,w,c
  2942  001B26  6EF7               	movwf	tblptrh,c
  2943  001B28                     	if	0	;There are less than 3 active tblptr bytes
  2944  001B28                     	endif
  2945  001B28  0009               	tblrd		*+
  2946  001B2A  CFF5 F05D          	movff	tablat,?_scale
  2947  001B2E  0009               	tblrd		*+
  2948  001B30  CFF5 F05E          	movff	tablat,?_scale+1
  2949  001B34  000A               	tblrd		*-
  2950  001B36  CFF5 F05F          	movff	tablat,?_scale+2
  2951  001B3A  D000               	goto	l172
  2952  001B3C                     l172:
  2953  001B3C  0012               	return		;funcret
  2954  001B3E                     __end_of_scale:
  2955                           	opt stack 0
  2956                           tblptru	equ	0xFF8
  2957                           tblptrh	equ	0xFF7
  2958                           tblptrl	equ	0xFF6
  2959                           tablat	equ	0xFF5
  2960                           prodh	equ	0xFF4
  2961                           prodl	equ	0xFF3
  2962                           postinc0	equ	0xFEE
  2963                           wreg	equ	0xFE8
  2964                           postdec1	equ	0xFE5
  2965                           fsr1l	equ	0xFE1
  2966                           indf2	equ	0xFDF
  2967                           postinc2	equ	0xFDE
  2968                           postdec2	equ	0xFDD
  2969                           fsr2h	equ	0xFDA
  2970                           fsr2l	equ	0xFD9
  2971                           status	equ	0xFD8
  2972                           
  2973 ;; *************** function _putch *****************
  2974 ;; Defined at:
  2975 ;;		line 30 in file "Lab5pB1.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  c               1    wreg     unsigned char 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  c               1    0[COMRAM] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;		None               void
  2982 ;; Registers used:
  2983 ;;		wreg
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;Total ram usage:        1 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_printf
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text3
  3003  002EDE                     __ptext3:
  3004                           	opt stack 0
  3005  002EDE                     _putch:
  3006                           	opt stack 29
  3007                           
  3008                           ;incstack = 0
  3009                           ;putch@c stored from wreg
  3010  002EDE  6E01               	movwf	putch@c,c
  3011                           
  3012                           ;Lab5pB1.c: 32: while(!TRMT);
  3013  002EE0  D000               	goto	l82
  3014  002EE2                     l82:
  3015  002EE2  A2AC               	btfss	4012,1,c	;volatile
  3016  002EE4  D7FE               	goto	l82
  3017                           
  3018                           ;Lab5pB1.c: 33: TXREG = c;
  3019  002EE6  C001  FFAD         	movff	putch@c,4013	;volatile
  3020  002EEA  0012               	return		;funcret
  3021  002EEC                     __end_of_putch:
  3022                           	opt stack 0
  3023                           tblptru	equ	0xFF8
  3024                           tblptrh	equ	0xFF7
  3025                           tblptrl	equ	0xFF6
  3026                           tablat	equ	0xFF5
  3027                           prodh	equ	0xFF4
  3028                           prodl	equ	0xFF3
  3029                           postinc0	equ	0xFEE
  3030                           wreg	equ	0xFE8
  3031                           postdec1	equ	0xFE5
  3032                           fsr1l	equ	0xFE1
  3033                           indf2	equ	0xFDF
  3034                           postinc2	equ	0xFDE
  3035                           postdec2	equ	0xFDD
  3036                           fsr2h	equ	0xFDA
  3037                           fsr2l	equ	0xFD9
  3038                           status	equ	0xFD8
  3039                           
  3040 ;; *************** function _fround *****************
  3041 ;; Defined at:
  3042 ;;		line 409 in file "E:\XC8\sources\common\doprnt.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  prec            1    wreg     unsigned char 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  prec            1  101[COMRAM] unsigned char 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  3   92[COMRAM] unsigned char 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3056 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;Total ram usage:       10 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    2
  3063 ;; This function calls:
  3064 ;;		___awdiv
  3065 ;;		___awmod
  3066 ;;		___ftmul
  3067 ;;		___wmul
  3068 ;; This function is called by:
  3069 ;;		_printf
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text4
  3074  001EEA                     __ptext4:
  3075                           	opt stack 0
  3076  001EEA                     _fround:
  3077                           	opt stack 27
  3078                           
  3079                           ;incstack = 0
  3080                           ;fround@prec stored from wreg
  3081  001EEA  6E66               	movwf	fround@prec,c
  3082                           
  3083                           ;doprnt.c: 413: if(prec>=110)
  3084  001EEC  0E6D               	movlw	109
  3085  001EEE  6466               	cpfsgt	fround@prec,c
  3086  001EF0  D09B               	goto	l2167
  3087                           
  3088                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3089  001EF2  0E00               	movlw	0
  3090  001EF4  6E5A               	movwf	___wmul@multiplicand+1,c
  3091  001EF6  0E03               	movlw	3
  3092  001EF8  6E59               	movwf	___wmul@multiplicand,c
  3093  001EFA  0E00               	movlw	0
  3094  001EFC  6E52               	movwf	___awdiv@divisor+1,c
  3095  001EFE  0E0A               	movlw	10
  3096  001F00  6E51               	movwf	___awdiv@divisor,c
  3097  001F02  0E00               	movlw	0
  3098  001F04  6E4C               	movwf	___awmod@divisor+1,c
  3099  001F06  0E64               	movlw	100
  3100  001F08  6E4B               	movwf	___awmod@divisor,c
  3101  001F0A  C066  F049         	movff	fround@prec,___awmod@dividend
  3102  001F0E  6A4A               	clrf	___awmod@dividend+1,c
  3103  001F10  EC69  F015         	call	___awmod	;wreg free
  3104  001F14  C049  F04F         	movff	?___awmod,___awdiv@dividend
  3105  001F18  C04A  F050         	movff	?___awmod+1,___awdiv@dividend+1
  3106  001F1C  EC49  F014         	call	___awdiv	;wreg free
  3107  001F20  0E09               	movlw	9
  3108  001F22  244F               	addwf	?___awdiv,w,c
  3109  001F24  6E57               	movwf	___wmul@multiplier,c
  3110  001F26  0E00               	movlw	0
  3111  001F28  2050               	addwfc	?___awdiv+1,w,c
  3112  001F2A  6E58               	movwf	___wmul@multiplier+1,c
  3113  001F2C  ECD7  F016         	call	___wmul	;wreg free
  3114  001F30  0E29               	movlw	low __npowers_
  3115  001F32  2457               	addwf	?___wmul,w,c
  3116  001F34  6EF6               	movwf	tblptrl,c
  3117  001F36  0E10               	movlw	high __npowers_
  3118  001F38  2058               	addwfc	?___wmul+1,w,c
  3119  001F3A  6EF7               	movwf	tblptrh,c
  3120  001F3C                     	if	0	;There are less than 3 active tblptr bytes
  3121  001F3C                     	endif
  3122  001F3C  0009               	tblrd		*+
  3123  001F3E  CFF5 F01F          	movff	tablat,___ftmul@f2
  3124  001F42  0009               	tblrd		*+
  3125  001F44  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3126  001F48  000A               	tblrd		*-
  3127  001F4A  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3128  001F4E  0E00               	movlw	0
  3129  001F50  6E52               	movwf	___awdiv@divisor+1,c
  3130  001F52  0E64               	movlw	100
  3131  001F54  6E51               	movwf	___awdiv@divisor,c
  3132  001F56  C066  F04F         	movff	fround@prec,___awdiv@dividend
  3133  001F5A  6A50               	clrf	___awdiv@dividend+1,c
  3134  001F5C  EC49  F014         	call	___awdiv	;wreg free
  3135  001F60  0E12               	movlw	18
  3136  001F62  244F               	addwf	?___awdiv,w,c
  3137  001F64  6E57               	movwf	___wmul@multiplier,c
  3138  001F66  0E00               	movlw	0
  3139  001F68  2050               	addwfc	?___awdiv+1,w,c
  3140  001F6A  6E58               	movwf	___wmul@multiplier+1,c
  3141  001F6C  0E00               	movlw	0
  3142  001F6E  6E5A               	movwf	___wmul@multiplicand+1,c
  3143  001F70  0E03               	movlw	3
  3144  001F72  6E59               	movwf	___wmul@multiplicand,c
  3145  001F74  ECD7  F016         	call	___wmul	;wreg free
  3146  001F78  0E29               	movlw	low __npowers_
  3147  001F7A  2457               	addwf	?___wmul,w,c
  3148  001F7C  6EF6               	movwf	tblptrl,c
  3149  001F7E  0E10               	movlw	high __npowers_
  3150  001F80  2058               	addwfc	?___wmul+1,w,c
  3151  001F82  6EF7               	movwf	tblptrh,c
  3152  001F84                     	if	0	;There are less than 3 active tblptr bytes
  3153  001F84                     	endif
  3154  001F84  0009               	tblrd		*+
  3155  001F86  CFF5 F01C          	movff	tablat,___ftmul@f1
  3156  001F8A  0009               	tblrd		*+
  3157  001F8C  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3158  001F90  000A               	tblrd		*-
  3159  001F92  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3160  001F96  EC86  F012         	call	___ftmul	;wreg free
  3161  001F9A  C01C  F063         	movff	?___ftmul,_fround$1510
  3162  001F9E  C01D  F064         	movff	?___ftmul+1,_fround$1510+1
  3163  001FA2  C01E  F065         	movff	?___ftmul+2,_fround$1510+2
  3164                           
  3165                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3166  001FA6  0E00               	movlw	0
  3167  001FA8  6E5A               	movwf	___wmul@multiplicand+1,c
  3168  001FAA  0E03               	movlw	3
  3169  001FAC  6E59               	movwf	___wmul@multiplicand,c
  3170  001FAE  0E00               	movlw	0
  3171  001FB0  6E4C               	movwf	___awmod@divisor+1,c
  3172  001FB2  0E0A               	movlw	10
  3173  001FB4  6E4B               	movwf	___awmod@divisor,c
  3174  001FB6  C066  F049         	movff	fround@prec,___awmod@dividend
  3175  001FBA  6A4A               	clrf	___awmod@dividend+1,c
  3176  001FBC  EC69  F015         	call	___awmod	;wreg free
  3177  001FC0  C049  F057         	movff	?___awmod,___wmul@multiplier
  3178  001FC4  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  3179  001FC8  ECD7  F016         	call	___wmul	;wreg free
  3180  001FCC  0E29               	movlw	low __npowers_
  3181  001FCE  2457               	addwf	?___wmul,w,c
  3182  001FD0  6EF6               	movwf	tblptrl,c
  3183  001FD2  0E10               	movlw	high __npowers_
  3184  001FD4  2058               	addwfc	?___wmul+1,w,c
  3185  001FD6  6EF7               	movwf	tblptrh,c
  3186  001FD8                     	if	0	;There are less than 3 active tblptr bytes
  3187  001FD8                     	endif
  3188  001FD8  0009               	tblrd		*+
  3189  001FDA  CFF5 F01F          	movff	tablat,___ftmul@f2
  3190  001FDE  0009               	tblrd		*+
  3191  001FE0  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3192  001FE4  000A               	tblrd		*-
  3193  001FE6  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3194  001FEA  C063  F01C         	movff	_fround$1510,___ftmul@f1
  3195  001FEE  C064  F01D         	movff	_fround$1510+1,___ftmul@f1+1
  3196  001FF2  C065  F01E         	movff	_fround$1510+2,___ftmul@f1+2
  3197  001FF6  EC86  F012         	call	___ftmul	;wreg free
  3198  001FFA  C01C  F060         	movff	?___ftmul,_fround$1511
  3199  001FFE  C01D  F061         	movff	?___ftmul+1,_fround$1511+1
  3200  002002  C01E  F062         	movff	?___ftmul+2,_fround$1511+2
  3201                           
  3202                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3203  002006  C060  F01C         	movff	_fround$1511,___ftmul@f1
  3204  00200A  C061  F01D         	movff	_fround$1511+1,___ftmul@f1+1
  3205  00200E  C062  F01E         	movff	_fround$1511+2,___ftmul@f1+2
  3206  002012  0E00               	movlw	0
  3207  002014  6E1F               	movwf	___ftmul@f2,c
  3208  002016  0E00               	movlw	0
  3209  002018  6E20               	movwf	___ftmul@f2+1,c
  3210  00201A  0E3F               	movlw	63
  3211  00201C  6E21               	movwf	___ftmul@f2+2,c
  3212  00201E  EC86  F012         	call	___ftmul	;wreg free
  3213  002022  D07D               	goto	L7
  3214  002024  D083               	goto	l165
  3215  002026  D062               	goto	l2175
  3216  002028                     l2167:
  3217                           
  3218                           ;doprnt.c: 415: else if(prec > 10)
  3219  002028  0E0A               	movlw	10
  3220  00202A  6466               	cpfsgt	fround@prec,c
  3221  00202C  D05F               	goto	l2175
  3222                           
  3223                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3224  00202E  0E00               	movlw	0
  3225  002030  6E5A               	movwf	___wmul@multiplicand+1,c
  3226  002032  0E03               	movlw	3
  3227  002034  6E59               	movwf	___wmul@multiplicand,c
  3228  002036  0E00               	movlw	0
  3229  002038  6E4C               	movwf	___awmod@divisor+1,c
  3230  00203A  0E0A               	movlw	10
  3231  00203C  6E4B               	movwf	___awmod@divisor,c
  3232  00203E  C066  F049         	movff	fround@prec,___awmod@dividend
  3233  002042  6A4A               	clrf	___awmod@dividend+1,c
  3234  002044  EC69  F015         	call	___awmod	;wreg free
  3235  002048  C049  F057         	movff	?___awmod,___wmul@multiplier
  3236  00204C  C04A  F058         	movff	?___awmod+1,___wmul@multiplier+1
  3237  002050  ECD7  F016         	call	___wmul	;wreg free
  3238  002054  0E29               	movlw	low __npowers_
  3239  002056  2457               	addwf	?___wmul,w,c
  3240  002058  6EF6               	movwf	tblptrl,c
  3241  00205A  0E10               	movlw	high __npowers_
  3242  00205C  2058               	addwfc	?___wmul+1,w,c
  3243  00205E  6EF7               	movwf	tblptrh,c
  3244  002060                     	if	0	;There are less than 3 active tblptr bytes
  3245  002060                     	endif
  3246  002060  0009               	tblrd		*+
  3247  002062  CFF5 F01F          	movff	tablat,___ftmul@f2
  3248  002066  0009               	tblrd		*+
  3249  002068  CFF5 F020          	movff	tablat,___ftmul@f2+1
  3250  00206C  000A               	tblrd		*-
  3251  00206E  CFF5 F021          	movff	tablat,___ftmul@f2+2
  3252  002072  0E00               	movlw	0
  3253  002074  6E52               	movwf	___awdiv@divisor+1,c
  3254  002076  0E0A               	movlw	10
  3255  002078  6E51               	movwf	___awdiv@divisor,c
  3256  00207A  C066  F04F         	movff	fround@prec,___awdiv@dividend
  3257  00207E  6A50               	clrf	___awdiv@dividend+1,c
  3258  002080  EC49  F014         	call	___awdiv	;wreg free
  3259  002084  0E09               	movlw	9
  3260  002086  244F               	addwf	?___awdiv,w,c
  3261  002088  6E57               	movwf	___wmul@multiplier,c
  3262  00208A  0E00               	movlw	0
  3263  00208C  2050               	addwfc	?___awdiv+1,w,c
  3264  00208E  6E58               	movwf	___wmul@multiplier+1,c
  3265  002090  0E00               	movlw	0
  3266  002092  6E5A               	movwf	___wmul@multiplicand+1,c
  3267  002094  0E03               	movlw	3
  3268  002096  6E59               	movwf	___wmul@multiplicand,c
  3269  002098  ECD7  F016         	call	___wmul	;wreg free
  3270  00209C  0E29               	movlw	low __npowers_
  3271  00209E  2457               	addwf	?___wmul,w,c
  3272  0020A0  6EF6               	movwf	tblptrl,c
  3273  0020A2  0E10               	movlw	high __npowers_
  3274  0020A4  2058               	addwfc	?___wmul+1,w,c
  3275  0020A6  6EF7               	movwf	tblptrh,c
  3276  0020A8                     	if	0	;There are less than 3 active tblptr bytes
  3277  0020A8                     	endif
  3278  0020A8  0009               	tblrd		*+
  3279  0020AA  CFF5 F01C          	movff	tablat,___ftmul@f1
  3280  0020AE  0009               	tblrd		*+
  3281  0020B0  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3282  0020B4  000A               	tblrd		*-
  3283  0020B6  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3284  0020BA  EC86  F012         	call	___ftmul	;wreg free
  3285  0020BE  C01C  F063         	movff	?___ftmul,_fround$1510
  3286  0020C2  C01D  F064         	movff	?___ftmul+1,_fround$1510+1
  3287  0020C6  C01E  F065         	movff	?___ftmul+2,_fround$1510+2
  3288                           
  3289                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3290  0020CA  C063  F01C         	movff	_fround$1510,___ftmul@f1
  3291  0020CE  C064  F01D         	movff	_fround$1510+1,___ftmul@f1+1
  3292  0020D2  C065  F01E         	movff	_fround$1510+2,___ftmul@f1+2
  3293  0020D6  0E00               	movlw	0
  3294  0020D8  6E1F               	movwf	___ftmul@f2,c
  3295  0020DA  0E00               	movlw	0
  3296  0020DC  6E20               	movwf	___ftmul@f2+1,c
  3297  0020DE  0E3F               	movlw	63
  3298  0020E0  6E21               	movwf	___ftmul@f2+2,c
  3299  0020E2  EC86  F012         	call	___ftmul	;wreg free
  3300  0020E6  D01B               	goto	L7
  3301  0020E8  D021               	goto	l165
  3302  0020EA  D000               	goto	l2175
  3303  0020EC                     l2175:
  3304                           
  3305                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3306  0020EC  5066               	movf	fround@prec,w,c
  3307  0020EE  0D03               	mullw	3
  3308  0020F0  0E29               	movlw	low __npowers_
  3309  0020F2  24F3               	addwf	prodl,w,c
  3310  0020F4  6EF6               	movwf	tblptrl,c
  3311  0020F6  0E10               	movlw	high __npowers_
  3312  0020F8  20F4               	addwfc	prodh,w,c
  3313  0020FA  6EF7               	movwf	tblptrh,c
  3314  0020FC                     	if	0	;There are less than 3 active tblptr bytes
  3315  0020FC                     	endif
  3316  0020FC  0009               	tblrd		*+
  3317  0020FE  CFF5 F01C          	movff	tablat,___ftmul@f1
  3318  002102  0009               	tblrd		*+
  3319  002104  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  3320  002108  000A               	tblrd		*-
  3321  00210A  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  3322  00210E  0E00               	movlw	0
  3323  002110  6E1F               	movwf	___ftmul@f2,c
  3324  002112  0E00               	movlw	0
  3325  002114  6E20               	movwf	___ftmul@f2+1,c
  3326  002116  0E3F               	movlw	63
  3327  002118  6E21               	movwf	___ftmul@f2+2,c
  3328  00211A  EC86  F012         	call	___ftmul	;wreg free
  3329  00211E                     L7:
  3330  00211E  C01C  F05D         	movff	?___ftmul,?_fround
  3331  002122  C01D  F05E         	movff	?___ftmul+1,?_fround+1
  3332  002126  C01E  F05F         	movff	?___ftmul+2,?_fround+2
  3333  00212A  D000               	goto	l165
  3334  00212C                     l165:
  3335  00212C  0012               	return		;funcret
  3336  00212E                     __end_of_fround:
  3337                           	opt stack 0
  3338                           tblptru	equ	0xFF8
  3339                           tblptrh	equ	0xFF7
  3340                           tblptrl	equ	0xFF6
  3341                           tablat	equ	0xFF5
  3342                           prodh	equ	0xFF4
  3343                           prodl	equ	0xFF3
  3344                           postinc0	equ	0xFEE
  3345                           wreg	equ	0xFE8
  3346                           postdec1	equ	0xFE5
  3347                           fsr1l	equ	0xFE1
  3348                           indf2	equ	0xFDF
  3349                           postinc2	equ	0xFDE
  3350                           postdec2	equ	0xFDD
  3351                           fsr2h	equ	0xFDA
  3352                           fsr2l	equ	0xFD9
  3353                           status	equ	0xFD8
  3354                           
  3355 ;; *************** function ___wmul *****************
  3356 ;; Defined at:
  3357 ;;		line 15 in file "E:\XC8\sources\common\Umul16.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  multiplier      2   86[COMRAM] unsigned int 
  3360 ;;  multiplicand    2   88[COMRAM] unsigned int 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  product         2   90[COMRAM] unsigned int 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  2   86[COMRAM] unsigned int 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0, prodl, prodh
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;Total ram usage:        6 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_fround
  3382 ;;		_scale
  3383 ;;		_printf
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text5
  3388  002DAE                     __ptext5:
  3389                           	opt stack 0
  3390  002DAE                     ___wmul:
  3391                           	opt stack 28
  3392                           
  3393                           ;incstack = 0
  3394  002DAE  5057               	movf	___wmul@multiplier,w,c
  3395  002DB0  0259               	mulwf	___wmul@multiplicand,c
  3396  002DB2  CFF3 F05B          	movff	prodl,___wmul@product
  3397  002DB6  CFF4 F05C          	movff	prodh,___wmul@product+1
  3398  002DBA  5057               	movf	___wmul@multiplier,w,c
  3399  002DBC  025A               	mulwf	___wmul@multiplicand+1,c
  3400  002DBE  50F3               	movf	prodl,w,c
  3401  002DC0  265C               	addwf	___wmul@product+1,f,c
  3402  002DC2  5058               	movf	___wmul@multiplier+1,w,c
  3403  002DC4  0259               	mulwf	___wmul@multiplicand,c
  3404  002DC6  50F3               	movf	prodl,w,c
  3405  002DC8  265C               	addwf	___wmul@product+1,f,c
  3406  002DCA  C05B  F057         	movff	___wmul@product,?___wmul
  3407  002DCE  C05C  F058         	movff	___wmul@product+1,?___wmul+1
  3408  002DD2  D000               	goto	l264
  3409  002DD4                     l264:
  3410  002DD4  0012               	return		;funcret
  3411  002DD6                     __end_of___wmul:
  3412                           	opt stack 0
  3413                           tblptru	equ	0xFF8
  3414                           tblptrh	equ	0xFF7
  3415                           tblptrl	equ	0xFF6
  3416                           tablat	equ	0xFF5
  3417                           prodh	equ	0xFF4
  3418                           prodl	equ	0xFF3
  3419                           postinc0	equ	0xFEE
  3420                           wreg	equ	0xFE8
  3421                           postdec1	equ	0xFE5
  3422                           fsr1l	equ	0xFE1
  3423                           indf2	equ	0xFDF
  3424                           postinc2	equ	0xFDE
  3425                           postdec2	equ	0xFDD
  3426                           fsr2h	equ	0xFDA
  3427                           fsr2l	equ	0xFD9
  3428                           status	equ	0xFD8
  3429                           
  3430 ;; *************** function ___ftmul *****************
  3431 ;; Defined at:
  3432 ;;		line 62 in file "E:\XC8\sources\common\ftmul.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;  f1              3   27[COMRAM] float 
  3435 ;;  f2              3   30[COMRAM] float 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  3438 ;;  sign            1   41[COMRAM] unsigned char 
  3439 ;;  cntr            1   40[COMRAM] unsigned char 
  3440 ;;  exp             1   36[COMRAM] unsigned char 
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  3   27[COMRAM] float 
  3443 ;; Registers used:
  3444 ;;		wreg, status,2, status,0, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3450 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;Total ram usage:       15 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    1
  3457 ;; This function calls:
  3458 ;;		___ftpack
  3459 ;; This function is called by:
  3460 ;;		_main
  3461 ;;		_fround
  3462 ;;		_scale
  3463 ;;		_printf
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text6
  3468  00250C                     __ptext6:
  3469                           	opt stack 0
  3470  00250C                     ___ftmul:
  3471                           	opt stack 27
  3472                           
  3473                           ;incstack = 0
  3474  00250C  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  3475  002510  6A23               	clrf	(??___ftmul+1)& (0+255),c
  3476  002512  6A24               	clrf	(??___ftmul+2)& (0+255),c
  3477  002514  341D               	rlcf	___ftmul@f1+1,w,c
  3478  002516  3622               	rlcf	??___ftmul& (0+255),f,c
  3479  002518  E301               	bnc	u1781
  3480  00251A  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  3481  00251C                     u1781:
  3482  00251C  5022               	movf	??___ftmul,w,c
  3483  00251E  6E25               	movwf	___ftmul@exp,c
  3484  002520  5025               	movf	___ftmul@exp,w,c
  3485  002522  A4D8               	btfss	status,2,c
  3486  002524  D002               	goto	l1981
  3487  002526  D00E               	goto	l1983
  3488  002528  D06C               	goto	l693
  3489  00252A                     l1981:
  3490  00252A  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  3491  00252E  6A23               	clrf	(??___ftmul+1)& (0+255),c
  3492  002530  6A24               	clrf	(??___ftmul+2)& (0+255),c
  3493  002532  3420               	rlcf	___ftmul@f2+1,w,c
  3494  002534  3622               	rlcf	??___ftmul& (0+255),f,c
  3495  002536  E301               	bnc	u1801
  3496  002538  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  3497  00253A                     u1801:
  3498  00253A  5022               	movf	??___ftmul,w,c
  3499  00253C  6E2A               	movwf	___ftmul@sign,c
  3500  00253E  502A               	movf	___ftmul@sign,w,c
  3501  002540  A4D8               	btfss	status,2,c
  3502  002542  D007               	goto	l1987
  3503  002544                     l1983:
  3504  002544  0E00               	movlw	0
  3505  002546  6E1C               	movwf	?___ftmul,c
  3506  002548  0E00               	movlw	0
  3507  00254A  6E1D               	movwf	?___ftmul+1,c
  3508  00254C  0E00               	movlw	0
  3509  00254E  6E1E               	movwf	?___ftmul+2,c
  3510  002550  D058               	goto	l693
  3511  002552                     l1987:
  3512  002552  502A               	movf	___ftmul@sign,w,c
  3513  002554  0F7B               	addlw	123
  3514  002556  2625               	addwf	___ftmul@exp,f,c
  3515  002558  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  3516  00255C  5021               	movf	___ftmul@f2+2,w,c
  3517  00255E  1A2A               	xorwf	___ftmul@sign,f,c
  3518  002560  0E80               	movlw	128
  3519  002562  162A               	andwf	___ftmul@sign,f,c
  3520  002564  8E1D               	bsf	___ftmul@f1+1,7,c
  3521  002566  8E20               	bsf	___ftmul@f2+1,7,c
  3522  002568  0EFF               	movlw	255
  3523  00256A  161F               	andwf	___ftmul@f2,f,c
  3524  00256C  0EFF               	movlw	255
  3525  00256E  1620               	andwf	___ftmul@f2+1,f,c
  3526  002570  0E00               	movlw	0
  3527  002572  1621               	andwf	___ftmul@f2+2,f,c
  3528  002574  0E00               	movlw	0
  3529  002576  6E26               	movwf	___ftmul@f3_as_product,c
  3530  002578  0E00               	movlw	0
  3531  00257A  6E27               	movwf	___ftmul@f3_as_product+1,c
  3532  00257C  0E00               	movlw	0
  3533  00257E  6E28               	movwf	___ftmul@f3_as_product+2,c
  3534  002580  0E07               	movlw	7
  3535  002582  6E29               	movwf	___ftmul@cntr,c
  3536  002584  D000               	goto	l2001
  3537  002586                     l2001:
  3538  002586  A01C               	btfss	___ftmul@f1,0,c
  3539  002588  D007               	goto	l2005
  3540  00258A  501F               	movf	___ftmul@f2,w,c
  3541  00258C  2626               	addwf	___ftmul@f3_as_product,f,c
  3542  00258E  5020               	movf	___ftmul@f2+1,w,c
  3543  002590  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3544  002592  5021               	movf	___ftmul@f2+2,w,c
  3545  002594  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3546  002596  D000               	goto	l2005
  3547  002598                     l2005:
  3548  002598  90D8               	bcf	status,0,c
  3549  00259A  321E               	rrcf	___ftmul@f1+2,f,c
  3550  00259C  321D               	rrcf	___ftmul@f1+1,f,c
  3551  00259E  321C               	rrcf	___ftmul@f1,f,c
  3552  0025A0  90D8               	bcf	status,0,c
  3553  0025A2  361F               	rlcf	___ftmul@f2,f,c
  3554  0025A4  3620               	rlcf	___ftmul@f2+1,f,c
  3555  0025A6  3621               	rlcf	___ftmul@f2+2,f,c
  3556  0025A8  2E29               	decfsz	___ftmul@cntr,f,c
  3557  0025AA  D7ED               	goto	l2001
  3558  0025AC  D000               	goto	l2009
  3559  0025AE                     l2009:
  3560  0025AE  0E09               	movlw	9
  3561  0025B0  6E29               	movwf	___ftmul@cntr,c
  3562  0025B2  D000               	goto	l2011
  3563  0025B4                     l2011:
  3564  0025B4  A01C               	btfss	___ftmul@f1,0,c
  3565  0025B6  D007               	goto	l2015
  3566  0025B8  501F               	movf	___ftmul@f2,w,c
  3567  0025BA  2626               	addwf	___ftmul@f3_as_product,f,c
  3568  0025BC  5020               	movf	___ftmul@f2+1,w,c
  3569  0025BE  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3570  0025C0  5021               	movf	___ftmul@f2+2,w,c
  3571  0025C2  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3572  0025C4  D000               	goto	l2015
  3573  0025C6                     l2015:
  3574  0025C6  90D8               	bcf	status,0,c
  3575  0025C8  321E               	rrcf	___ftmul@f1+2,f,c
  3576  0025CA  321D               	rrcf	___ftmul@f1+1,f,c
  3577  0025CC  321C               	rrcf	___ftmul@f1,f,c
  3578  0025CE  90D8               	bcf	status,0,c
  3579  0025D0  3228               	rrcf	___ftmul@f3_as_product+2,f,c
  3580  0025D2  3227               	rrcf	___ftmul@f3_as_product+1,f,c
  3581  0025D4  3226               	rrcf	___ftmul@f3_as_product,f,c
  3582  0025D6  2E29               	decfsz	___ftmul@cntr,f,c
  3583  0025D8  D7ED               	goto	l2011
  3584  0025DA  D000               	goto	l2019
  3585  0025DC                     l2019:
  3586  0025DC  C026  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3587  0025E0  C027  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3588  0025E4  C028  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3589  0025E8  C025  F004         	movff	___ftmul@exp,___ftpack@exp
  3590  0025EC  C02A  F005         	movff	___ftmul@sign,___ftpack@sign
  3591  0025F0  ECE6  F013         	call	___ftpack	;wreg free
  3592  0025F4  C001  F01C         	movff	?___ftpack,?___ftmul
  3593  0025F8  C002  F01D         	movff	?___ftpack+1,?___ftmul+1
  3594  0025FC  C003  F01E         	movff	?___ftpack+2,?___ftmul+2
  3595  002600  D000               	goto	l693
  3596  002602                     l693:
  3597  002602  0012               	return		;funcret
  3598  002604                     __end_of___ftmul:
  3599                           	opt stack 0
  3600                           tblptru	equ	0xFF8
  3601                           tblptrh	equ	0xFF7
  3602                           tblptrl	equ	0xFF6
  3603                           tablat	equ	0xFF5
  3604                           prodh	equ	0xFF4
  3605                           prodl	equ	0xFF3
  3606                           postinc0	equ	0xFEE
  3607                           wreg	equ	0xFE8
  3608                           postdec1	equ	0xFE5
  3609                           fsr1l	equ	0xFE1
  3610                           indf2	equ	0xFDF
  3611                           postinc2	equ	0xFDE
  3612                           postdec2	equ	0xFDD
  3613                           fsr2h	equ	0xFDA
  3614                           fsr2l	equ	0xFD9
  3615                           status	equ	0xFD8
  3616                           
  3617 ;; *************** function ___awmod *****************
  3618 ;; Defined at:
  3619 ;;		line 8 in file "E:\XC8\sources\common\awmod.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  dividend        2   72[COMRAM] int 
  3622 ;;  divisor         2   74[COMRAM] int 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  sign            1   77[COMRAM] unsigned char 
  3625 ;;  counter         1   76[COMRAM] unsigned char 
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  2   72[COMRAM] int 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2, status,0
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3635 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;Total ram usage:        6 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_main
  3645 ;;		_fround
  3646 ;;		_scale
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text7
  3651  002AD2                     __ptext7:
  3652                           	opt stack 0
  3653  002AD2                     ___awmod:
  3654                           	opt stack 28
  3655                           
  3656                           ;incstack = 0
  3657  002AD2  0E00               	movlw	0
  3658  002AD4  6E4E               	movwf	___awmod@sign,c
  3659  002AD6  AE4A               	btfss	___awmod@dividend+1,7,c
  3660  002AD8  D007               	goto	l2075
  3661  002ADA  6C49               	negf	___awmod@dividend,c
  3662  002ADC  1E4A               	comf	___awmod@dividend+1,f,c
  3663  002ADE  B0D8               	btfsc	status,0,c
  3664  002AE0  2A4A               	incf	___awmod@dividend+1,f,c
  3665  002AE2  0E01               	movlw	1
  3666  002AE4  6E4E               	movwf	___awmod@sign,c
  3667  002AE6  D000               	goto	l2075
  3668  002AE8                     l2075:
  3669  002AE8  AE4C               	btfss	___awmod@divisor+1,7,c
  3670  002AEA  D005               	goto	l2079
  3671  002AEC  6C4B               	negf	___awmod@divisor,c
  3672  002AEE  1E4C               	comf	___awmod@divisor+1,f,c
  3673  002AF0  B0D8               	btfsc	status,0,c
  3674  002AF2  2A4C               	incf	___awmod@divisor+1,f,c
  3675  002AF4  D000               	goto	l2079
  3676  002AF6                     l2079:
  3677  002AF6  504B               	movf	___awmod@divisor,w,c
  3678  002AF8  104C               	iorwf	___awmod@divisor+1,w,c
  3679  002AFA  B4D8               	btfsc	status,2,c
  3680  002AFC  D01D               	goto	l2095
  3681  002AFE  0E01               	movlw	1
  3682  002B00  6E4D               	movwf	___awmod@counter,c
  3683  002B02  D005               	goto	l2085
  3684  002B04                     l2083:
  3685  002B04  90D8               	bcf	status,0,c
  3686  002B06  364B               	rlcf	___awmod@divisor,f,c
  3687  002B08  364C               	rlcf	___awmod@divisor+1,f,c
  3688  002B0A  2A4D               	incf	___awmod@counter,f,c
  3689  002B0C  D000               	goto	l2085
  3690  002B0E                     l2085:
  3691  002B0E  BE4C               	btfsc	___awmod@divisor+1,7,c
  3692  002B10  D002               	goto	l2087
  3693  002B12  D7F8               	goto	l2083
  3694  002B14  D000               	goto	l2087
  3695  002B16                     l2087:
  3696  002B16  504B               	movf	___awmod@divisor,w,c
  3697  002B18  5C49               	subwf	___awmod@dividend,w,c
  3698  002B1A  504C               	movf	___awmod@divisor+1,w,c
  3699  002B1C  584A               	subwfb	___awmod@dividend+1,w,c
  3700  002B1E  A0D8               	btfss	status,0,c
  3701  002B20  D005               	goto	l2091
  3702  002B22  504B               	movf	___awmod@divisor,w,c
  3703  002B24  5E49               	subwf	___awmod@dividend,f,c
  3704  002B26  504C               	movf	___awmod@divisor+1,w,c
  3705  002B28  5A4A               	subwfb	___awmod@dividend+1,f,c
  3706  002B2A  D000               	goto	l2091
  3707  002B2C                     l2091:
  3708  002B2C  90D8               	bcf	status,0,c
  3709  002B2E  324C               	rrcf	___awmod@divisor+1,f,c
  3710  002B30  324B               	rrcf	___awmod@divisor,f,c
  3711  002B32  2E4D               	decfsz	___awmod@counter,f,c
  3712  002B34  D7F0               	goto	l2087
  3713  002B36  D000               	goto	l2095
  3714  002B38                     l2095:
  3715  002B38  504E               	movf	___awmod@sign,w,c
  3716  002B3A  B4D8               	btfsc	status,2,c
  3717  002B3C  D005               	goto	l2099
  3718  002B3E  6C49               	negf	___awmod@dividend,c
  3719  002B40  1E4A               	comf	___awmod@dividend+1,f,c
  3720  002B42  B0D8               	btfsc	status,0,c
  3721  002B44  2A4A               	incf	___awmod@dividend+1,f,c
  3722  002B46  D000               	goto	l2099
  3723  002B48                     l2099:
  3724  002B48  C049  F049         	movff	___awmod@dividend,?___awmod
  3725  002B4C  C04A  F04A         	movff	___awmod@dividend+1,?___awmod+1
  3726  002B50  D000               	goto	l470
  3727  002B52                     l470:
  3728  002B52  0012               	return		;funcret
  3729  002B54                     __end_of___awmod:
  3730                           	opt stack 0
  3731                           tblptru	equ	0xFF8
  3732                           tblptrh	equ	0xFF7
  3733                           tblptrl	equ	0xFF6
  3734                           tablat	equ	0xFF5
  3735                           prodh	equ	0xFF4
  3736                           prodl	equ	0xFF3
  3737                           postinc0	equ	0xFEE
  3738                           wreg	equ	0xFE8
  3739                           postdec1	equ	0xFE5
  3740                           fsr1l	equ	0xFE1
  3741                           indf2	equ	0xFDF
  3742                           postinc2	equ	0xFDE
  3743                           postdec2	equ	0xFDD
  3744                           fsr2h	equ	0xFDA
  3745                           fsr2l	equ	0xFD9
  3746                           status	equ	0xFD8
  3747                           
  3748 ;; *************** function ___awdiv *****************
  3749 ;; Defined at:
  3750 ;;		line 8 in file "E:\XC8\sources\common\awdiv.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  dividend        2   78[COMRAM] int 
  3753 ;;  divisor         2   80[COMRAM] int 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  quotient        2   84[COMRAM] int 
  3756 ;;  sign            1   83[COMRAM] unsigned char 
  3757 ;;  counter         1   82[COMRAM] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  2   78[COMRAM] int 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2, status,0
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3767 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;Total ram usage:        8 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_main
  3777 ;;		_fround
  3778 ;;		_scale
  3779 ;;		_printf
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783                           	psect	text8
  3784  002892                     __ptext8:
  3785                           	opt stack 0
  3786  002892                     ___awdiv:
  3787                           	opt stack 28
  3788                           
  3789                           ;incstack = 0
  3790  002892  0E00               	movlw	0
  3791  002894  6E54               	movwf	___awdiv@sign,c
  3792  002896  AE52               	btfss	___awdiv@divisor+1,7,c
  3793  002898  D007               	goto	l2031
  3794  00289A  6C51               	negf	___awdiv@divisor,c
  3795  00289C  1E52               	comf	___awdiv@divisor+1,f,c
  3796  00289E  B0D8               	btfsc	status,0,c
  3797  0028A0  2A52               	incf	___awdiv@divisor+1,f,c
  3798  0028A2  0E01               	movlw	1
  3799  0028A4  6E54               	movwf	___awdiv@sign,c
  3800  0028A6  D000               	goto	l2031
  3801  0028A8                     l2031:
  3802  0028A8  AE50               	btfss	___awdiv@dividend+1,7,c
  3803  0028AA  D007               	goto	l2037
  3804  0028AC  6C4F               	negf	___awdiv@dividend,c
  3805  0028AE  1E50               	comf	___awdiv@dividend+1,f,c
  3806  0028B0  B0D8               	btfsc	status,0,c
  3807  0028B2  2A50               	incf	___awdiv@dividend+1,f,c
  3808  0028B4  0E01               	movlw	1
  3809  0028B6  1A54               	xorwf	___awdiv@sign,f,c
  3810  0028B8  D000               	goto	l2037
  3811  0028BA                     l2037:
  3812  0028BA  0E00               	movlw	0
  3813  0028BC  6E56               	movwf	___awdiv@quotient+1,c
  3814  0028BE  0E00               	movlw	0
  3815  0028C0  6E55               	movwf	___awdiv@quotient,c
  3816  0028C2  5051               	movf	___awdiv@divisor,w,c
  3817  0028C4  1052               	iorwf	___awdiv@divisor+1,w,c
  3818  0028C6  B4D8               	btfsc	status,2,c
  3819  0028C8  D021               	goto	l2059
  3820  0028CA  0E01               	movlw	1
  3821  0028CC  6E53               	movwf	___awdiv@counter,c
  3822  0028CE  D005               	goto	l2045
  3823  0028D0                     l2043:
  3824  0028D0  90D8               	bcf	status,0,c
  3825  0028D2  3651               	rlcf	___awdiv@divisor,f,c
  3826  0028D4  3652               	rlcf	___awdiv@divisor+1,f,c
  3827  0028D6  2A53               	incf	___awdiv@counter,f,c
  3828  0028D8  D000               	goto	l2045
  3829  0028DA                     l2045:
  3830  0028DA  BE52               	btfsc	___awdiv@divisor+1,7,c
  3831  0028DC  D002               	goto	l2047
  3832  0028DE  D7F8               	goto	l2043
  3833  0028E0  D000               	goto	l2047
  3834  0028E2                     l2047:
  3835  0028E2  90D8               	bcf	status,0,c
  3836  0028E4  3655               	rlcf	___awdiv@quotient,f,c
  3837  0028E6  3656               	rlcf	___awdiv@quotient+1,f,c
  3838  0028E8  5051               	movf	___awdiv@divisor,w,c
  3839  0028EA  5C4F               	subwf	___awdiv@dividend,w,c
  3840  0028EC  5052               	movf	___awdiv@divisor+1,w,c
  3841  0028EE  5850               	subwfb	___awdiv@dividend+1,w,c
  3842  0028F0  A0D8               	btfss	status,0,c
  3843  0028F2  D006               	goto	l2055
  3844  0028F4  5051               	movf	___awdiv@divisor,w,c
  3845  0028F6  5E4F               	subwf	___awdiv@dividend,f,c
  3846  0028F8  5052               	movf	___awdiv@divisor+1,w,c
  3847  0028FA  5A50               	subwfb	___awdiv@dividend+1,f,c
  3848  0028FC  8055               	bsf	___awdiv@quotient,0,c
  3849  0028FE  D000               	goto	l2055
  3850  002900                     l2055:
  3851  002900  90D8               	bcf	status,0,c
  3852  002902  3252               	rrcf	___awdiv@divisor+1,f,c
  3853  002904  3251               	rrcf	___awdiv@divisor,f,c
  3854  002906  2E53               	decfsz	___awdiv@counter,f,c
  3855  002908  D7EC               	goto	l2047
  3856  00290A  D000               	goto	l2059
  3857  00290C                     l2059:
  3858  00290C  5054               	movf	___awdiv@sign,w,c
  3859  00290E  B4D8               	btfsc	status,2,c
  3860  002910  D005               	goto	l2063
  3861  002912  6C55               	negf	___awdiv@quotient,c
  3862  002914  1E56               	comf	___awdiv@quotient+1,f,c
  3863  002916  B0D8               	btfsc	status,0,c
  3864  002918  2A56               	incf	___awdiv@quotient+1,f,c
  3865  00291A  D000               	goto	l2063
  3866  00291C                     l2063:
  3867  00291C  C055  F04F         	movff	___awdiv@quotient,?___awdiv
  3868  002920  C056  F050         	movff	___awdiv@quotient+1,?___awdiv+1
  3869  002924  D000               	goto	l457
  3870  002926                     l457:
  3871  002926  0012               	return		;funcret
  3872  002928                     __end_of___awdiv:
  3873                           	opt stack 0
  3874                           tblptru	equ	0xFF8
  3875                           tblptrh	equ	0xFF7
  3876                           tblptrl	equ	0xFF6
  3877                           tablat	equ	0xFF5
  3878                           prodh	equ	0xFF4
  3879                           prodl	equ	0xFF3
  3880                           postinc0	equ	0xFEE
  3881                           wreg	equ	0xFE8
  3882                           postdec1	equ	0xFE5
  3883                           fsr1l	equ	0xFE1
  3884                           indf2	equ	0xFDF
  3885                           postinc2	equ	0xFDE
  3886                           postdec2	equ	0xFDD
  3887                           fsr2h	equ	0xFDA
  3888                           fsr2l	equ	0xFD9
  3889                           status	equ	0xFD8
  3890                           
  3891 ;; *************** function __tdiv_to_l_ *****************
  3892 ;; Defined at:
  3893 ;;		line 60 in file "E:\XC8\sources\common\ftdivl.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  f1              3    0[COMRAM] float 
  3896 ;;  f2              3    3[COMRAM] float 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  quot            4    9[COMRAM] unsigned long 
  3899 ;;  exp1            1   14[COMRAM] unsigned char 
  3900 ;;  cntr            1   13[COMRAM] unsigned char 
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  4    0[COMRAM] unsigned long 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, status,0
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3910 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;Total ram usage:       15 bytes
  3915 ;; Hardware stack levels used:    1
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		_printf
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text9
  3924  0022F2                     __ptext9:
  3925                           	opt stack 0
  3926  0022F2                     __tdiv_to_l_:
  3927                           	opt stack 29
  3928                           
  3929                           ;incstack = 0
  3930  0022F2  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3931  0022F6  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3932  0022F8  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3933  0022FA  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3934  0022FC  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3935  0022FE  E301               	bnc	u2141
  3936  002300  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3937  002302                     u2141:
  3938  002302  5007               	movf	??__tdiv_to_l_,w,c
  3939  002304  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3940  002306  500F               	movf	__tdiv_to_l_@exp1,w,c
  3941  002308  A4D8               	btfss	status,2,c
  3942  00230A  D002               	goto	l2223
  3943  00230C  D05D               	goto	l2265
  3944  00230E  D078               	goto	l669
  3945  002310                     l2223:
  3946  002310  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3947  002314  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3948  002316  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3949  002318  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3950  00231A  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3951  00231C  E301               	bnc	u2161
  3952  00231E  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3953  002320                     u2161:
  3954  002320  5007               	movf	??__tdiv_to_l_,w,c
  3955  002322  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3956  002324  500E               	movf	__tdiv_to_l_@cntr,w,c
  3957  002326  A4D8               	btfss	status,2,c
  3958  002328  D002               	goto	l2229
  3959  00232A  D04E               	goto	l2265
  3960  00232C  D069               	goto	l669
  3961  00232E                     l2229:
  3962  00232E  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3963  002330  0EFF               	movlw	255
  3964  002332  1601               	andwf	__tdiv_to_l_@f1,f,c
  3965  002334  0EFF               	movlw	255
  3966  002336  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3967  002338  0E00               	movlw	0
  3968  00233A  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3969  00233C  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3970  00233E  0EFF               	movlw	255
  3971  002340  1604               	andwf	__tdiv_to_l_@f2,f,c
  3972  002342  0EFF               	movlw	255
  3973  002344  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3974  002346  0E00               	movlw	0
  3975  002348  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3976  00234A  0E00               	movlw	0
  3977  00234C  6E0A               	movwf	__tdiv_to_l_@quot,c
  3978  00234E  0E00               	movlw	0
  3979  002350  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3980  002352  0E00               	movlw	0
  3981  002354  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3982  002356  0E00               	movlw	0
  3983  002358  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3984  00235A  0E7F               	movlw	127
  3985  00235C  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3986  00235E  500E               	movf	__tdiv_to_l_@cntr,w,c
  3987  002360  0F98               	addlw	152
  3988  002362  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3989  002364  0E18               	movlw	24
  3990  002366  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3991  002368                     l671:
  3992  002368  90D8               	bcf	status,0,c
  3993  00236A  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3994  00236C  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3995  00236E  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3996  002370  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3997  002372  5004               	movf	__tdiv_to_l_@f2,w,c
  3998  002374  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3999  002376  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4000  002378  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  4001  00237A  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4002  00237C  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  4003  00237E  A0D8               	btfss	status,0,c
  4004  002380  D007               	goto	l672
  4005  002382  5004               	movf	__tdiv_to_l_@f2,w,c
  4006  002384  5E01               	subwf	__tdiv_to_l_@f1,f,c
  4007  002386  5005               	movf	__tdiv_to_l_@f2+1,w,c
  4008  002388  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  4009  00238A  5006               	movf	__tdiv_to_l_@f2+2,w,c
  4010  00238C  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  4011  00238E  800A               	bsf	__tdiv_to_l_@quot,0,c
  4012  002390                     l672:
  4013  002390  90D8               	bcf	status,0,c
  4014  002392  3601               	rlcf	__tdiv_to_l_@f1,f,c
  4015  002394  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  4016  002396  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  4017  002398  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  4018  00239A  D7E6               	goto	l671
  4019  00239C  D000               	goto	l2251
  4020  00239E                     l2251:
  4021  00239E  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  4022  0023A0  D010               	goto	l2263
  4023  0023A2  500F               	movf	__tdiv_to_l_@exp1,w,c
  4024  0023A4  0A80               	xorlw	128
  4025  0023A6  0F97               	addlw	151
  4026  0023A8  B0D8               	btfsc	status,0,c
  4027  0023AA  D003               	goto	l2259
  4028  0023AC  D00D               	goto	l2265
  4029  0023AE  D028               	goto	l669
  4030  0023B0  D000               	goto	l2259
  4031  0023B2                     l2259:
  4032  0023B2  90D8               	bcf	status,0,c
  4033  0023B4  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  4034  0023B6  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  4035  0023B8  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  4036  0023BA  320A               	rrcf	__tdiv_to_l_@quot,f,c
  4037  0023BC  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  4038  0023BE  D7F9               	goto	l2259
  4039  0023C0  D017               	goto	l678
  4040  0023C2                     l2263:
  4041  0023C2  0E17               	movlw	23
  4042  0023C4  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  4043  0023C6  D011               	goto	l2271
  4044  0023C8                     l2265:
  4045  0023C8  0E00               	movlw	0
  4046  0023CA  6E01               	movwf	?__tdiv_to_l_,c
  4047  0023CC  0E00               	movlw	0
  4048  0023CE  6E02               	movwf	?__tdiv_to_l_+1,c
  4049  0023D0  0E00               	movlw	0
  4050  0023D2  6E03               	movwf	?__tdiv_to_l_+2,c
  4051  0023D4  0E00               	movlw	0
  4052  0023D6  6E04               	movwf	?__tdiv_to_l_+3,c
  4053  0023D8  D013               	goto	l669
  4054  0023DA  D007               	goto	l2271
  4055  0023DC                     l2269:
  4056  0023DC  90D8               	bcf	status,0,c
  4057  0023DE  360A               	rlcf	__tdiv_to_l_@quot,f,c
  4058  0023E0  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  4059  0023E2  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  4060  0023E4  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  4061  0023E6  060F               	decf	__tdiv_to_l_@exp1,f,c
  4062  0023E8  D000               	goto	l2271
  4063  0023EA                     l2271:
  4064  0023EA  500F               	movf	__tdiv_to_l_@exp1,w,c
  4065  0023EC  A4D8               	btfss	status,2,c
  4066  0023EE  D7F6               	goto	l2269
  4067  0023F0                     l678:
  4068  0023F0  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4069  0023F4  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4070  0023F8  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4071  0023FC  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4072  002400                     l669:
  4073  002400  0012               	return		;funcret
  4074  002402                     __end_of__tdiv_to_l_:
  4075                           	opt stack 0
  4076                           tblptru	equ	0xFF8
  4077                           tblptrh	equ	0xFF7
  4078                           tblptrl	equ	0xFF6
  4079                           tablat	equ	0xFF5
  4080                           prodh	equ	0xFF4
  4081                           prodl	equ	0xFF3
  4082                           postinc0	equ	0xFEE
  4083                           wreg	equ	0xFE8
  4084                           postdec1	equ	0xFE5
  4085                           fsr1l	equ	0xFE1
  4086                           indf2	equ	0xFDF
  4087                           postinc2	equ	0xFDE
  4088                           postdec2	equ	0xFDD
  4089                           fsr2h	equ	0xFDA
  4090                           fsr2l	equ	0xFD9
  4091                           status	equ	0xFD8
  4092                           
  4093 ;; *************** function __div_to_l_ *****************
  4094 ;; Defined at:
  4095 ;;		line 60 in file "E:\XC8\sources\common\fldivl.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  f1              3    0[COMRAM] unsigned long 
  4098 ;;  f2              3    3[COMRAM] unsigned long 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  quot            4    6[COMRAM] unsigned long 
  4101 ;;  exp1            1   11[COMRAM] unsigned char 
  4102 ;;  cntr            1   10[COMRAM] unsigned char 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  4    0[COMRAM] unsigned long 
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4112 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;Total ram usage:       12 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; This function calls:
  4119 ;;		Nothing
  4120 ;; This function is called by:
  4121 ;;		_printf
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text10
  4126  002402                     __ptext10:
  4127                           	opt stack 0
  4128  002402                     __div_to_l_:
  4129                           	opt stack 29
  4130                           
  4131                           ;incstack = 0
  4132  002402  3403               	rlcf	__div_to_l_@f1+2,w,c
  4133  002404  3404               	rlcf	__div_to_l_@f1+3,w,c
  4134  002406  6E0C               	movwf	__div_to_l_@exp1,c
  4135  002408  500C               	movf	__div_to_l_@exp1,w,c
  4136  00240A  A4D8               	btfss	status,2,c
  4137  00240C  D002               	goto	l2279
  4138  00240E  D061               	goto	l2325
  4139  002410  D07C               	goto	l548
  4140  002412                     l2279:
  4141  002412  3406               	rlcf	__div_to_l_@f2+2,w,c
  4142  002414  3407               	rlcf	__div_to_l_@f2+3,w,c
  4143  002416  6E0B               	movwf	__div_to_l_@cntr,c
  4144  002418  500B               	movf	__div_to_l_@cntr,w,c
  4145  00241A  A4D8               	btfss	status,2,c
  4146  00241C  D002               	goto	l2285
  4147  00241E  D059               	goto	l2325
  4148  002420  D074               	goto	l548
  4149  002422                     l2285:
  4150  002422  8E03               	bsf	__div_to_l_@f1+2,7,c
  4151  002424  0EFF               	movlw	255
  4152  002426  1601               	andwf	__div_to_l_@f1,f,c
  4153  002428  0EFF               	movlw	255
  4154  00242A  1602               	andwf	__div_to_l_@f1+1,f,c
  4155  00242C  0EFF               	movlw	255
  4156  00242E  1603               	andwf	__div_to_l_@f1+2,f,c
  4157  002430  0E00               	movlw	0
  4158  002432  1604               	andwf	__div_to_l_@f1+3,f,c
  4159  002434  8E06               	bsf	__div_to_l_@f2+2,7,c
  4160  002436  0EFF               	movlw	255
  4161  002438  1604               	andwf	__div_to_l_@f2,f,c
  4162  00243A  0EFF               	movlw	255
  4163  00243C  1605               	andwf	__div_to_l_@f2+1,f,c
  4164  00243E  0EFF               	movlw	255
  4165  002440  1606               	andwf	__div_to_l_@f2+2,f,c
  4166  002442  0E00               	movlw	0
  4167  002444  1607               	andwf	__div_to_l_@f2+3,f,c
  4168  002446  0E00               	movlw	0
  4169  002448  6E07               	movwf	__div_to_l_@quot,c
  4170  00244A  0E00               	movlw	0
  4171  00244C  6E08               	movwf	__div_to_l_@quot+1,c
  4172  00244E  0E00               	movlw	0
  4173  002450  6E09               	movwf	__div_to_l_@quot+2,c
  4174  002452  0E00               	movlw	0
  4175  002454  6E0A               	movwf	__div_to_l_@quot+3,c
  4176  002456  0E7F               	movlw	127
  4177  002458  5E0C               	subwf	__div_to_l_@exp1,f,c
  4178  00245A  500B               	movf	__div_to_l_@cntr,w,c
  4179  00245C  0FA0               	addlw	160
  4180  00245E  5E0C               	subwf	__div_to_l_@exp1,f,c
  4181  002460  0E20               	movlw	32
  4182  002462  6E0B               	movwf	__div_to_l_@cntr,c
  4183  002464  D000               	goto	l2299
  4184  002466                     l2299:
  4185  002466  90D8               	bcf	status,0,c
  4186  002468  3607               	rlcf	__div_to_l_@quot,f,c
  4187  00246A  3608               	rlcf	__div_to_l_@quot+1,f,c
  4188  00246C  3609               	rlcf	__div_to_l_@quot+2,f,c
  4189  00246E  360A               	rlcf	__div_to_l_@quot+3,f,c
  4190  002470  5004               	movf	__div_to_l_@f2,w,c
  4191  002472  5C01               	subwf	__div_to_l_@f1,w,c
  4192  002474  5005               	movf	__div_to_l_@f2+1,w,c
  4193  002476  5802               	subwfb	__div_to_l_@f1+1,w,c
  4194  002478  5006               	movf	__div_to_l_@f2+2,w,c
  4195  00247A  5803               	subwfb	__div_to_l_@f1+2,w,c
  4196  00247C  5007               	movf	__div_to_l_@f2+3,w,c
  4197  00247E  5804               	subwfb	__div_to_l_@f1+3,w,c
  4198  002480  A0D8               	btfss	status,0,c
  4199  002482  D00A               	goto	l2307
  4200  002484  5004               	movf	__div_to_l_@f2,w,c
  4201  002486  5E01               	subwf	__div_to_l_@f1,f,c
  4202  002488  5005               	movf	__div_to_l_@f2+1,w,c
  4203  00248A  5A02               	subwfb	__div_to_l_@f1+1,f,c
  4204  00248C  5006               	movf	__div_to_l_@f2+2,w,c
  4205  00248E  5A03               	subwfb	__div_to_l_@f1+2,f,c
  4206  002490  5007               	movf	__div_to_l_@f2+3,w,c
  4207  002492  5A04               	subwfb	__div_to_l_@f1+3,f,c
  4208  002494  8007               	bsf	__div_to_l_@quot,0,c
  4209  002496  D000               	goto	l2307
  4210  002498                     l2307:
  4211  002498  90D8               	bcf	status,0,c
  4212  00249A  3601               	rlcf	__div_to_l_@f1,f,c
  4213  00249C  3602               	rlcf	__div_to_l_@f1+1,f,c
  4214  00249E  3603               	rlcf	__div_to_l_@f1+2,f,c
  4215  0024A0  3604               	rlcf	__div_to_l_@f1+3,f,c
  4216  0024A2  2E0B               	decfsz	__div_to_l_@cntr,f,c
  4217  0024A4  D7E0               	goto	l2299
  4218  0024A6  D000               	goto	l2311
  4219  0024A8                     l2311:
  4220  0024A8  AE0C               	btfss	__div_to_l_@exp1,7,c
  4221  0024AA  D010               	goto	l2323
  4222  0024AC  500C               	movf	__div_to_l_@exp1,w,c
  4223  0024AE  0A80               	xorlw	128
  4224  0024B0  0F9F               	addlw	159
  4225  0024B2  B0D8               	btfsc	status,0,c
  4226  0024B4  D003               	goto	l2319
  4227  0024B6  D00D               	goto	l2325
  4228  0024B8  D028               	goto	l548
  4229  0024BA  D000               	goto	l2319
  4230  0024BC                     l2319:
  4231  0024BC  90D8               	bcf	status,0,c
  4232  0024BE  320A               	rrcf	__div_to_l_@quot+3,f,c
  4233  0024C0  3209               	rrcf	__div_to_l_@quot+2,f,c
  4234  0024C2  3208               	rrcf	__div_to_l_@quot+1,f,c
  4235  0024C4  3207               	rrcf	__div_to_l_@quot,f,c
  4236  0024C6  3E0C               	incfsz	__div_to_l_@exp1,f,c
  4237  0024C8  D7F9               	goto	l2319
  4238  0024CA  D017               	goto	l557
  4239  0024CC                     l2323:
  4240  0024CC  0E1F               	movlw	31
  4241  0024CE  640C               	cpfsgt	__div_to_l_@exp1,c
  4242  0024D0  D011               	goto	l2331
  4243  0024D2                     l2325:
  4244  0024D2  0E00               	movlw	0
  4245  0024D4  6E01               	movwf	?__div_to_l_,c
  4246  0024D6  0E00               	movlw	0
  4247  0024D8  6E02               	movwf	?__div_to_l_+1,c
  4248  0024DA  0E00               	movlw	0
  4249  0024DC  6E03               	movwf	?__div_to_l_+2,c
  4250  0024DE  0E00               	movlw	0
  4251  0024E0  6E04               	movwf	?__div_to_l_+3,c
  4252  0024E2  D013               	goto	l548
  4253  0024E4  D007               	goto	l2331
  4254  0024E6                     l2329:
  4255  0024E6  90D8               	bcf	status,0,c
  4256  0024E8  3607               	rlcf	__div_to_l_@quot,f,c
  4257  0024EA  3608               	rlcf	__div_to_l_@quot+1,f,c
  4258  0024EC  3609               	rlcf	__div_to_l_@quot+2,f,c
  4259  0024EE  360A               	rlcf	__div_to_l_@quot+3,f,c
  4260  0024F0  060C               	decf	__div_to_l_@exp1,f,c
  4261  0024F2  D000               	goto	l2331
  4262  0024F4                     l2331:
  4263  0024F4  500C               	movf	__div_to_l_@exp1,w,c
  4264  0024F6  A4D8               	btfss	status,2,c
  4265  0024F8  D7F6               	goto	l2329
  4266  0024FA                     l557:
  4267  0024FA  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4268  0024FE  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4269  002502  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4270  002506  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4271  00250A                     l548:
  4272  00250A  0012               	return		;funcret
  4273  00250C                     __end_of__div_to_l_:
  4274                           	opt stack 0
  4275                           tblptru	equ	0xFF8
  4276                           tblptrh	equ	0xFF7
  4277                           tblptrl	equ	0xFF6
  4278                           tablat	equ	0xFF5
  4279                           prodh	equ	0xFF4
  4280                           prodl	equ	0xFF3
  4281                           postinc0	equ	0xFEE
  4282                           wreg	equ	0xFE8
  4283                           postdec1	equ	0xFE5
  4284                           fsr1l	equ	0xFE1
  4285                           indf2	equ	0xFDF
  4286                           postinc2	equ	0xFDE
  4287                           postdec2	equ	0xFDD
  4288                           fsr2h	equ	0xFDA
  4289                           fsr2l	equ	0xFD9
  4290                           status	equ	0xFD8
  4291                           
  4292 ;; *************** function ___lltoft *****************
  4293 ;; Defined at:
  4294 ;;		line 35 in file "E:\XC8\sources\common\lltoft.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  c               4    8[COMRAM] unsigned long 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  exp             1   16[COMRAM] unsigned char 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  3    8[COMRAM] float 
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;Total ram usage:        9 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    1
  4315 ;; This function calls:
  4316 ;;		___ftpack
  4317 ;; This function is called by:
  4318 ;;		_printf
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text11
  4323  002C34                     __ptext11:
  4324                           	opt stack 0
  4325  002C34                     ___lltoft:
  4326                           	opt stack 28
  4327                           
  4328                           ;incstack = 0
  4329  002C34  0E8E               	movlw	142
  4330  002C36  6E11               	movwf	___lltoft@exp,c
  4331  002C38  D007               	goto	l2497
  4332  002C3A                     l2495:
  4333  002C3A  90D8               	bcf	status,0,c
  4334  002C3C  320C               	rrcf	___lltoft@c+3,f,c
  4335  002C3E  320B               	rrcf	___lltoft@c+2,f,c
  4336  002C40  320A               	rrcf	___lltoft@c+1,f,c
  4337  002C42  3209               	rrcf	___lltoft@c,f,c
  4338  002C44  2A11               	incf	___lltoft@exp,f,c
  4339  002C46  D000               	goto	l2497
  4340  002C48                     l2497:
  4341  002C48  0E00               	movlw	0
  4342  002C4A  1409               	andwf	___lltoft@c,w,c
  4343  002C4C  6E0D               	movwf	??___lltoft& (0+255),c
  4344  002C4E  0E00               	movlw	0
  4345  002C50  140A               	andwf	___lltoft@c+1,w,c
  4346  002C52  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4347  002C54  0E00               	movlw	0
  4348  002C56  140B               	andwf	___lltoft@c+2,w,c
  4349  002C58  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4350  002C5A  0EFF               	movlw	255
  4351  002C5C  140C               	andwf	___lltoft@c+3,w,c
  4352  002C5E  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4353  002C60  500D               	movf	??___lltoft,w,c
  4354  002C62  100E               	iorwf	??___lltoft+1,w,c
  4355  002C64  100F               	iorwf	??___lltoft+2,w,c
  4356  002C66  1010               	iorwf	??___lltoft+3,w,c
  4357  002C68  A4D8               	btfss	status,2,c
  4358  002C6A  D7E7               	goto	l2495
  4359  002C6C  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4360  002C70  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4361  002C74  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4362  002C78  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4363  002C7C  0E00               	movlw	0
  4364  002C7E  6E05               	movwf	___ftpack@sign,c
  4365  002C80  ECE6  F013         	call	___ftpack	;wreg free
  4366  002C84  C001  F009         	movff	?___ftpack,?___lltoft
  4367  002C88  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4368  002C8C  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4369  002C90  D000               	goto	l783
  4370  002C92                     l783:
  4371  002C92  0012               	return		;funcret
  4372  002C94                     __end_of___lltoft:
  4373                           	opt stack 0
  4374                           tblptru	equ	0xFF8
  4375                           tblptrh	equ	0xFF7
  4376                           tblptrl	equ	0xFF6
  4377                           tablat	equ	0xFF5
  4378                           prodh	equ	0xFF4
  4379                           prodl	equ	0xFF3
  4380                           postinc0	equ	0xFEE
  4381                           wreg	equ	0xFE8
  4382                           postdec1	equ	0xFE5
  4383                           fsr1l	equ	0xFE1
  4384                           indf2	equ	0xFDF
  4385                           postinc2	equ	0xFDE
  4386                           postdec2	equ	0xFDD
  4387                           fsr2h	equ	0xFDA
  4388                           fsr2l	equ	0xFD9
  4389                           status	equ	0xFD8
  4390                           
  4391 ;; *************** function ___llmod *****************
  4392 ;; Defined at:
  4393 ;;		line 8 in file "E:\XC8\sources\common\llmod.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  dividend        4    0[COMRAM] unsigned long 
  4396 ;;  divisor         4    4[COMRAM] unsigned long 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  counter         1    8[COMRAM] unsigned char 
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  4    0[COMRAM] unsigned long 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4408 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;Total ram usage:        9 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; This function calls:
  4415 ;;		Nothing
  4416 ;; This function is called by:
  4417 ;;		_printf
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	text12
  4422  002B54                     __ptext12:
  4423                           	opt stack 0
  4424  002B54                     ___llmod:
  4425                           	opt stack 29
  4426                           
  4427                           ;incstack = 0
  4428  002B54  5005               	movf	___llmod@divisor,w,c
  4429  002B56  1006               	iorwf	___llmod@divisor+1,w,c
  4430  002B58  1007               	iorwf	___llmod@divisor+2,w,c
  4431  002B5A  1008               	iorwf	___llmod@divisor+3,w,c
  4432  002B5C  B4D8               	btfsc	status,2,c
  4433  002B5E  D029               	goto	l763
  4434  002B60  0E01               	movlw	1
  4435  002B62  6E09               	movwf	___llmod@counter,c
  4436  002B64  D007               	goto	l2483
  4437  002B66                     l2481:
  4438  002B66  90D8               	bcf	status,0,c
  4439  002B68  3605               	rlcf	___llmod@divisor,f,c
  4440  002B6A  3606               	rlcf	___llmod@divisor+1,f,c
  4441  002B6C  3607               	rlcf	___llmod@divisor+2,f,c
  4442  002B6E  3608               	rlcf	___llmod@divisor+3,f,c
  4443  002B70  2A09               	incf	___llmod@counter,f,c
  4444  002B72  D000               	goto	l2483
  4445  002B74                     l2483:
  4446  002B74  BE08               	btfsc	___llmod@divisor+3,7,c
  4447  002B76  D002               	goto	l2485
  4448  002B78  D7F6               	goto	l2481
  4449  002B7A  D000               	goto	l2485
  4450  002B7C                     l2485:
  4451  002B7C  5005               	movf	___llmod@divisor,w,c
  4452  002B7E  5C01               	subwf	___llmod@dividend,w,c
  4453  002B80  5006               	movf	___llmod@divisor+1,w,c
  4454  002B82  5802               	subwfb	___llmod@dividend+1,w,c
  4455  002B84  5007               	movf	___llmod@divisor+2,w,c
  4456  002B86  5803               	subwfb	___llmod@dividend+2,w,c
  4457  002B88  5008               	movf	___llmod@divisor+3,w,c
  4458  002B8A  5804               	subwfb	___llmod@dividend+3,w,c
  4459  002B8C  A0D8               	btfss	status,0,c
  4460  002B8E  D009               	goto	l2489
  4461  002B90  5005               	movf	___llmod@divisor,w,c
  4462  002B92  5E01               	subwf	___llmod@dividend,f,c
  4463  002B94  5006               	movf	___llmod@divisor+1,w,c
  4464  002B96  5A02               	subwfb	___llmod@dividend+1,f,c
  4465  002B98  5007               	movf	___llmod@divisor+2,w,c
  4466  002B9A  5A03               	subwfb	___llmod@dividend+2,f,c
  4467  002B9C  5008               	movf	___llmod@divisor+3,w,c
  4468  002B9E  5A04               	subwfb	___llmod@dividend+3,f,c
  4469  002BA0  D000               	goto	l2489
  4470  002BA2                     l2489:
  4471  002BA2  90D8               	bcf	status,0,c
  4472  002BA4  3208               	rrcf	___llmod@divisor+3,f,c
  4473  002BA6  3207               	rrcf	___llmod@divisor+2,f,c
  4474  002BA8  3206               	rrcf	___llmod@divisor+1,f,c
  4475  002BAA  3205               	rrcf	___llmod@divisor,f,c
  4476  002BAC  2E09               	decfsz	___llmod@counter,f,c
  4477  002BAE  D7E6               	goto	l2485
  4478  002BB0  D000               	goto	l763
  4479  002BB2                     l763:
  4480  002BB2  C001  F001         	movff	___llmod@dividend,?___llmod
  4481  002BB6  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4482  002BBA  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4483  002BBE  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4484  002BC2  0012               	return		;funcret
  4485  002BC4                     __end_of___llmod:
  4486                           	opt stack 0
  4487                           tblptru	equ	0xFF8
  4488                           tblptrh	equ	0xFF7
  4489                           tblptrl	equ	0xFF6
  4490                           tablat	equ	0xFF5
  4491                           prodh	equ	0xFF4
  4492                           prodl	equ	0xFF3
  4493                           postinc0	equ	0xFEE
  4494                           wreg	equ	0xFE8
  4495                           postdec1	equ	0xFE5
  4496                           fsr1l	equ	0xFE1
  4497                           indf2	equ	0xFDF
  4498                           postinc2	equ	0xFDE
  4499                           postdec2	equ	0xFDD
  4500                           fsr2h	equ	0xFDA
  4501                           fsr2l	equ	0xFD9
  4502                           status	equ	0xFD8
  4503                           
  4504 ;; *************** function ___lldiv *****************
  4505 ;; Defined at:
  4506 ;;		line 8 in file "E:\XC8\sources\common\lldiv.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  dividend        4    0[COMRAM] unsigned long 
  4509 ;;  divisor         4    4[COMRAM] unsigned long 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  quotient        4    8[COMRAM] unsigned long 
  4512 ;;  counter         1   12[COMRAM] unsigned char 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  4    0[COMRAM] unsigned long 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4522 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;Total ram usage:       13 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; This function calls:
  4529 ;;		Nothing
  4530 ;; This function is called by:
  4531 ;;		_printf
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text13
  4536  0029BE                     __ptext13:
  4537                           	opt stack 0
  4538  0029BE                     ___lldiv:
  4539                           	opt stack 29
  4540                           
  4541                           ;incstack = 0
  4542  0029BE  0E00               	movlw	0
  4543  0029C0  6E09               	movwf	___lldiv@quotient,c
  4544  0029C2  0E00               	movlw	0
  4545  0029C4  6E0A               	movwf	___lldiv@quotient+1,c
  4546  0029C6  0E00               	movlw	0
  4547  0029C8  6E0B               	movwf	___lldiv@quotient+2,c
  4548  0029CA  0E00               	movlw	0
  4549  0029CC  6E0C               	movwf	___lldiv@quotient+3,c
  4550  0029CE  5005               	movf	___lldiv@divisor,w,c
  4551  0029D0  1006               	iorwf	___lldiv@divisor+1,w,c
  4552  0029D2  1007               	iorwf	___lldiv@divisor+2,w,c
  4553  0029D4  1008               	iorwf	___lldiv@divisor+3,w,c
  4554  0029D6  B4D8               	btfsc	status,2,c
  4555  0029D8  D02F               	goto	l753
  4556  0029DA  0E01               	movlw	1
  4557  0029DC  6E0D               	movwf	___lldiv@counter,c
  4558  0029DE  D007               	goto	l2463
  4559  0029E0                     l2461:
  4560  0029E0  90D8               	bcf	status,0,c
  4561  0029E2  3605               	rlcf	___lldiv@divisor,f,c
  4562  0029E4  3606               	rlcf	___lldiv@divisor+1,f,c
  4563  0029E6  3607               	rlcf	___lldiv@divisor+2,f,c
  4564  0029E8  3608               	rlcf	___lldiv@divisor+3,f,c
  4565  0029EA  2A0D               	incf	___lldiv@counter,f,c
  4566  0029EC  D000               	goto	l2463
  4567  0029EE                     l2463:
  4568  0029EE  BE08               	btfsc	___lldiv@divisor+3,7,c
  4569  0029F0  D002               	goto	l2465
  4570  0029F2  D7F6               	goto	l2461
  4571  0029F4  D000               	goto	l2465
  4572  0029F6                     l2465:
  4573  0029F6  90D8               	bcf	status,0,c
  4574  0029F8  3609               	rlcf	___lldiv@quotient,f,c
  4575  0029FA  360A               	rlcf	___lldiv@quotient+1,f,c
  4576  0029FC  360B               	rlcf	___lldiv@quotient+2,f,c
  4577  0029FE  360C               	rlcf	___lldiv@quotient+3,f,c
  4578  002A00  5005               	movf	___lldiv@divisor,w,c
  4579  002A02  5C01               	subwf	___lldiv@dividend,w,c
  4580  002A04  5006               	movf	___lldiv@divisor+1,w,c
  4581  002A06  5802               	subwfb	___lldiv@dividend+1,w,c
  4582  002A08  5007               	movf	___lldiv@divisor+2,w,c
  4583  002A0A  5803               	subwfb	___lldiv@dividend+2,w,c
  4584  002A0C  5008               	movf	___lldiv@divisor+3,w,c
  4585  002A0E  5804               	subwfb	___lldiv@dividend+3,w,c
  4586  002A10  A0D8               	btfss	status,0,c
  4587  002A12  D00A               	goto	l2473
  4588  002A14  5005               	movf	___lldiv@divisor,w,c
  4589  002A16  5E01               	subwf	___lldiv@dividend,f,c
  4590  002A18  5006               	movf	___lldiv@divisor+1,w,c
  4591  002A1A  5A02               	subwfb	___lldiv@dividend+1,f,c
  4592  002A1C  5007               	movf	___lldiv@divisor+2,w,c
  4593  002A1E  5A03               	subwfb	___lldiv@dividend+2,f,c
  4594  002A20  5008               	movf	___lldiv@divisor+3,w,c
  4595  002A22  5A04               	subwfb	___lldiv@dividend+3,f,c
  4596  002A24  8009               	bsf	___lldiv@quotient,0,c
  4597  002A26  D000               	goto	l2473
  4598  002A28                     l2473:
  4599  002A28  90D8               	bcf	status,0,c
  4600  002A2A  3208               	rrcf	___lldiv@divisor+3,f,c
  4601  002A2C  3207               	rrcf	___lldiv@divisor+2,f,c
  4602  002A2E  3206               	rrcf	___lldiv@divisor+1,f,c
  4603  002A30  3205               	rrcf	___lldiv@divisor,f,c
  4604  002A32  2E0D               	decfsz	___lldiv@counter,f,c
  4605  002A34  D7E0               	goto	l2465
  4606  002A36  D000               	goto	l753
  4607  002A38                     l753:
  4608  002A38  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4609  002A3C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4610  002A40  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4611  002A44  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4612  002A48  0012               	return		;funcret
  4613  002A4A                     __end_of___lldiv:
  4614                           	opt stack 0
  4615                           tblptru	equ	0xFF8
  4616                           tblptrh	equ	0xFF7
  4617                           tblptrl	equ	0xFF6
  4618                           tablat	equ	0xFF5
  4619                           prodh	equ	0xFF4
  4620                           prodl	equ	0xFF3
  4621                           postinc0	equ	0xFEE
  4622                           wreg	equ	0xFE8
  4623                           postdec1	equ	0xFE5
  4624                           fsr1l	equ	0xFE1
  4625                           indf2	equ	0xFDF
  4626                           postinc2	equ	0xFDE
  4627                           postdec2	equ	0xFDD
  4628                           fsr2h	equ	0xFDA
  4629                           fsr2l	equ	0xFD9
  4630                           status	equ	0xFD8
  4631                           
  4632 ;; *************** function ___ftsub *****************
  4633 ;; Defined at:
  4634 ;;		line 20 in file "E:\XC8\sources\common\ftsub.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  f1              3   27[COMRAM] float 
  4637 ;;  f2              3   30[COMRAM] float 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;		None
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  3   27[COMRAM] float 
  4642 ;; Registers used:
  4643 ;;		wreg, status,2, status,0, cstack
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4649 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4652 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4653 ;;Total ram usage:        6 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    2
  4656 ;; This function calls:
  4657 ;;		___ftadd
  4658 ;; This function is called by:
  4659 ;;		_printf
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text14
  4664  002CEC                     __ptext14:
  4665                           	opt stack 0
  4666  002CEC                     ___ftsub:
  4667                           	opt stack 27
  4668                           
  4669                           ;incstack = 0
  4670  002CEC  501F               	movf	___ftsub@f2,w,c
  4671  002CEE  1020               	iorwf	___ftsub@f2+1,w,c
  4672  002CF0  1021               	iorwf	___ftsub@f2+2,w,c
  4673  002CF2  B4D8               	btfsc	status,2,c
  4674  002CF4  D007               	goto	l2383
  4675  002CF6  0E00               	movlw	0
  4676  002CF8  1A1F               	xorwf	___ftsub@f2,f,c
  4677  002CFA  0E00               	movlw	0
  4678  002CFC  1A20               	xorwf	___ftsub@f2+1,f,c
  4679  002CFE  0E80               	movlw	128
  4680  002D00  1A21               	xorwf	___ftsub@f2+2,f,c
  4681  002D02  D000               	goto	l2383
  4682  002D04                     l2383:
  4683  002D04  C01C  F010         	movff	___ftsub@f1,___ftadd@f1
  4684  002D08  C01D  F011         	movff	___ftsub@f1+1,___ftadd@f1+1
  4685  002D0C  C01E  F012         	movff	___ftsub@f1+2,___ftadd@f1+2
  4686  002D10  C01F  F013         	movff	___ftsub@f2,___ftadd@f2
  4687  002D14  C020  F014         	movff	___ftsub@f2+1,___ftadd@f2+1
  4688  002D18  C021  F015         	movff	___ftsub@f2+2,___ftadd@f2+2
  4689  002D1C  EC97  F010         	call	___ftadd	;wreg free
  4690  002D20  C010  F01C         	movff	?___ftadd,?___ftsub
  4691  002D24  C011  F01D         	movff	?___ftadd+1,?___ftsub+1
  4692  002D28  C012  F01E         	movff	?___ftadd+2,?___ftsub+2
  4693  002D2C  D000               	goto	l710
  4694  002D2E                     l710:
  4695  002D2E  0012               	return		;funcret
  4696  002D30                     __end_of___ftsub:
  4697                           	opt stack 0
  4698                           tblptru	equ	0xFF8
  4699                           tblptrh	equ	0xFF7
  4700                           tblptrl	equ	0xFF6
  4701                           tablat	equ	0xFF5
  4702                           prodh	equ	0xFF4
  4703                           prodl	equ	0xFF3
  4704                           postinc0	equ	0xFEE
  4705                           wreg	equ	0xFE8
  4706                           postdec1	equ	0xFE5
  4707                           fsr1l	equ	0xFE1
  4708                           indf2	equ	0xFDF
  4709                           postinc2	equ	0xFDE
  4710                           postdec2	equ	0xFDD
  4711                           fsr2h	equ	0xFDA
  4712                           fsr2l	equ	0xFD9
  4713                           status	equ	0xFD8
  4714                           
  4715 ;; *************** function ___ftadd *****************
  4716 ;; Defined at:
  4717 ;;		line 86 in file "E:\XC8\sources\common\ftadd.c"
  4718 ;; Parameters:    Size  Location     Type
  4719 ;;  f1              3   15[COMRAM] float 
  4720 ;;  f2              3   18[COMRAM] float 
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;  exp1            1   26[COMRAM] unsigned char 
  4723 ;;  exp2            1   25[COMRAM] unsigned char 
  4724 ;;  sign            1   24[COMRAM] unsigned char 
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  3   15[COMRAM] float 
  4727 ;; Registers used:
  4728 ;;		wreg, status,2, status,0, cstack
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4734 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4735 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4736 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;Total ram usage:       12 bytes
  4739 ;; Hardware stack levels used:    1
  4740 ;; Hardware stack levels required when called:    1
  4741 ;; This function calls:
  4742 ;;		___ftpack
  4743 ;; This function is called by:
  4744 ;;		_main
  4745 ;;		_printf
  4746 ;;		___ftsub
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text15
  4751  00212E                     __ptext15:
  4752                           	opt stack 0
  4753  00212E                     ___ftadd:
  4754                           	opt stack 27
  4755                           
  4756                           ;incstack = 0
  4757  00212E  C012  F016         	movff	___ftadd@f1+2,??___ftadd
  4758  002132  6A17               	clrf	(??___ftadd+1)& (0+255),c
  4759  002134  6A18               	clrf	(??___ftadd+2)& (0+255),c
  4760  002136  3411               	rlcf	___ftadd@f1+1,w,c
  4761  002138  3616               	rlcf	??___ftadd& (0+255),f,c
  4762  00213A  E301               	bnc	u1571
  4763  00213C  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  4764  00213E                     u1571:
  4765  00213E  5016               	movf	??___ftadd,w,c
  4766  002140  6E1B               	movwf	___ftadd@exp1,c
  4767  002142  C015  F016         	movff	___ftadd@f2+2,??___ftadd
  4768  002146  6A17               	clrf	(??___ftadd+1)& (0+255),c
  4769  002148  6A18               	clrf	(??___ftadd+2)& (0+255),c
  4770  00214A  3414               	rlcf	___ftadd@f2+1,w,c
  4771  00214C  3616               	rlcf	??___ftadd& (0+255),f,c
  4772  00214E  E301               	bnc	u1581
  4773  002150  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  4774  002152                     u1581:
  4775  002152  5016               	movf	??___ftadd,w,c
  4776  002154  6E1A               	movwf	___ftadd@exp2,c
  4777  002156  501B               	movf	___ftadd@exp1,w,c
  4778  002158  B4D8               	btfsc	status,2,c
  4779  00215A  D00B               	goto	l629
  4780  00215C  501A               	movf	___ftadd@exp2,w,c
  4781  00215E  5C1B               	subwf	___ftadd@exp1,w,c
  4782  002160  B0D8               	btfsc	status,0,c
  4783  002162  D00E               	goto	l1913
  4784  002164  501B               	movf	___ftadd@exp1,w,c
  4785  002166  0800               	sublw	0
  4786  002168  241A               	addwf	___ftadd@exp2,w,c
  4787  00216A  6E16               	movwf	??___ftadd& (0+255),c
  4788  00216C  0E18               	movlw	24
  4789  00216E  6416               	cpfsgt	??___ftadd,c
  4790  002170  D007               	goto	l1913
  4791  002172                     l629:
  4792  002172  C013  F010         	movff	___ftadd@f2,?___ftadd
  4793  002176  C014  F011         	movff	___ftadd@f2+1,?___ftadd+1
  4794  00217A  C015  F012         	movff	___ftadd@f2+2,?___ftadd+2
  4795  00217E  D0B8               	goto	l630
  4796  002180                     l1913:
  4797  002180  501A               	movf	___ftadd@exp2,w,c
  4798  002182  B4D8               	btfsc	status,2,c
  4799  002184  D00B               	goto	l633
  4800  002186  501B               	movf	___ftadd@exp1,w,c
  4801  002188  5C1A               	subwf	___ftadd@exp2,w,c
  4802  00218A  B0D8               	btfsc	status,0,c
  4803  00218C  D00E               	goto	l1919
  4804  00218E  501A               	movf	___ftadd@exp2,w,c
  4805  002190  0800               	sublw	0
  4806  002192  241B               	addwf	___ftadd@exp1,w,c
  4807  002194  6E16               	movwf	??___ftadd& (0+255),c
  4808  002196  0E18               	movlw	24
  4809  002198  6416               	cpfsgt	??___ftadd,c
  4810  00219A  D007               	goto	l1919
  4811  00219C                     l633:
  4812  00219C  C010  F010         	movff	___ftadd@f1,?___ftadd
  4813  0021A0  C011  F011         	movff	___ftadd@f1+1,?___ftadd+1
  4814  0021A4  C012  F012         	movff	___ftadd@f1+2,?___ftadd+2
  4815  0021A8  D0A3               	goto	l630
  4816  0021AA                     l1919:
  4817  0021AA  0E06               	movlw	6
  4818  0021AC  6E19               	movwf	___ftadd@sign,c
  4819  0021AE  AE12               	btfss	___ftadd@f1+2,7,c
  4820  0021B0  D002               	goto	l1925
  4821  0021B2  8E19               	bsf	___ftadd@sign,7,c
  4822  0021B4  D000               	goto	l1925
  4823  0021B6                     l1925:
  4824  0021B6  BE15               	btfsc	___ftadd@f2+2,7,c
  4825  0021B8  8C19               	bsf	___ftadd@sign,6,c
  4826  0021BA  8E11               	bsf	___ftadd@f1+1,7,c
  4827  0021BC  0EFF               	movlw	255
  4828  0021BE  1610               	andwf	___ftadd@f1,f,c
  4829  0021C0  0EFF               	movlw	255
  4830  0021C2  1611               	andwf	___ftadd@f1+1,f,c
  4831  0021C4  0E00               	movlw	0
  4832  0021C6  1612               	andwf	___ftadd@f1+2,f,c
  4833  0021C8  8E14               	bsf	___ftadd@f2+1,7,c
  4834  0021CA  0EFF               	movlw	255
  4835  0021CC  1613               	andwf	___ftadd@f2,f,c
  4836  0021CE  0EFF               	movlw	255
  4837  0021D0  1614               	andwf	___ftadd@f2+1,f,c
  4838  0021D2  0E00               	movlw	0
  4839  0021D4  1615               	andwf	___ftadd@f2+2,f,c
  4840  0021D6  501A               	movf	___ftadd@exp2,w,c
  4841  0021D8  5C1B               	subwf	___ftadd@exp1,w,c
  4842  0021DA  B0D8               	btfsc	status,0,c
  4843  0021DC  D01E               	goto	l1945
  4844  0021DE                     l1935:
  4845  0021DE  90D8               	bcf	status,0,c
  4846  0021E0  3613               	rlcf	___ftadd@f2,f,c
  4847  0021E2  3614               	rlcf	___ftadd@f2+1,f,c
  4848  0021E4  3615               	rlcf	___ftadd@f2+2,f,c
  4849  0021E6  061A               	decf	___ftadd@exp2,f,c
  4850  0021E8  501B               	movf	___ftadd@exp1,w,c
  4851  0021EA  181A               	xorwf	___ftadd@exp2,w,c
  4852  0021EC  B4D8               	btfsc	status,2,c
  4853  0021EE  D00F               	goto	l1943
  4854  0021F0  0619               	decf	___ftadd@sign,f,c
  4855  0021F2  C019  F016         	movff	___ftadd@sign,??___ftadd
  4856  0021F6  0E07               	movlw	7
  4857  0021F8  1616               	andwf	??___ftadd,f,c
  4858  0021FA  B4D8               	btfsc	status,2,c
  4859  0021FC  D008               	goto	l1943
  4860  0021FE  D7EF               	goto	l1935
  4861  002200  D006               	goto	l1943
  4862  002202                     l1941:
  4863  002202  90D8               	bcf	status,0,c
  4864  002204  3212               	rrcf	___ftadd@f1+2,f,c
  4865  002206  3211               	rrcf	___ftadd@f1+1,f,c
  4866  002208  3210               	rrcf	___ftadd@f1,f,c
  4867  00220A  2A1B               	incf	___ftadd@exp1,f,c
  4868  00220C  D000               	goto	l1943
  4869  00220E                     l1943:
  4870  00220E  501A               	movf	___ftadd@exp2,w,c
  4871  002210  181B               	xorwf	___ftadd@exp1,w,c
  4872  002212  B4D8               	btfsc	status,2,c
  4873  002214  D024               	goto	l644
  4874  002216  D7F5               	goto	l1941
  4875  002218  D022               	goto	l644
  4876  00221A                     l1945:
  4877  00221A  501B               	movf	___ftadd@exp1,w,c
  4878  00221C  5C1A               	subwf	___ftadd@exp2,w,c
  4879  00221E  B0D8               	btfsc	status,0,c
  4880  002220  D01E               	goto	l644
  4881  002222                     l1947:
  4882  002222  90D8               	bcf	status,0,c
  4883  002224  3610               	rlcf	___ftadd@f1,f,c
  4884  002226  3611               	rlcf	___ftadd@f1+1,f,c
  4885  002228  3612               	rlcf	___ftadd@f1+2,f,c
  4886  00222A  061B               	decf	___ftadd@exp1,f,c
  4887  00222C  501B               	movf	___ftadd@exp1,w,c
  4888  00222E  181A               	xorwf	___ftadd@exp2,w,c
  4889  002230  B4D8               	btfsc	status,2,c
  4890  002232  D00F               	goto	l1955
  4891  002234  0619               	decf	___ftadd@sign,f,c
  4892  002236  C019  F016         	movff	___ftadd@sign,??___ftadd
  4893  00223A  0E07               	movlw	7
  4894  00223C  1616               	andwf	??___ftadd,f,c
  4895  00223E  B4D8               	btfsc	status,2,c
  4896  002240  D008               	goto	l1955
  4897  002242  D7EF               	goto	l1947
  4898  002244  D006               	goto	l1955
  4899  002246                     l1953:
  4900  002246  90D8               	bcf	status,0,c
  4901  002248  3215               	rrcf	___ftadd@f2+2,f,c
  4902  00224A  3214               	rrcf	___ftadd@f2+1,f,c
  4903  00224C  3213               	rrcf	___ftadd@f2,f,c
  4904  00224E  2A1A               	incf	___ftadd@exp2,f,c
  4905  002250  D000               	goto	l1955
  4906  002252                     l1955:
  4907  002252  501A               	movf	___ftadd@exp2,w,c
  4908  002254  181B               	xorwf	___ftadd@exp1,w,c
  4909  002256  B4D8               	btfsc	status,2,c
  4910  002258  D002               	goto	l644
  4911  00225A  D7F5               	goto	l1953
  4912  00225C  D000               	goto	l644
  4913  00225E                     l644:
  4914  00225E  AE19               	btfss	___ftadd@sign,7,c
  4915  002260  D00C               	goto	l653
  4916  002262  0EFF               	movlw	255
  4917  002264  1A10               	xorwf	___ftadd@f1,f,c
  4918  002266  0EFF               	movlw	255
  4919  002268  1A11               	xorwf	___ftadd@f1+1,f,c
  4920  00226A  0EFF               	movlw	255
  4921  00226C  1A12               	xorwf	___ftadd@f1+2,f,c
  4922  00226E  0E01               	movlw	1
  4923  002270  2610               	addwf	___ftadd@f1,f,c
  4924  002272  0E00               	movlw	0
  4925  002274  2211               	addwfc	___ftadd@f1+1,f,c
  4926  002276  0E00               	movlw	0
  4927  002278  2212               	addwfc	___ftadd@f1+2,f,c
  4928  00227A                     l653:
  4929  00227A  AC19               	btfss	___ftadd@sign,6,c
  4930  00227C  D00D               	goto	l1961
  4931  00227E  0EFF               	movlw	255
  4932  002280  1A13               	xorwf	___ftadd@f2,f,c
  4933  002282  0EFF               	movlw	255
  4934  002284  1A14               	xorwf	___ftadd@f2+1,f,c
  4935  002286  0EFF               	movlw	255
  4936  002288  1A15               	xorwf	___ftadd@f2+2,f,c
  4937  00228A  0E01               	movlw	1
  4938  00228C  2613               	addwf	___ftadd@f2,f,c
  4939  00228E  0E00               	movlw	0
  4940  002290  2214               	addwfc	___ftadd@f2+1,f,c
  4941  002292  0E00               	movlw	0
  4942  002294  2215               	addwfc	___ftadd@f2+2,f,c
  4943  002296  D000               	goto	l1961
  4944  002298                     l1961:
  4945  002298  0E00               	movlw	0
  4946  00229A  6E19               	movwf	___ftadd@sign,c
  4947  00229C  5010               	movf	___ftadd@f1,w,c
  4948  00229E  2613               	addwf	___ftadd@f2,f,c
  4949  0022A0  5011               	movf	___ftadd@f1+1,w,c
  4950  0022A2  2214               	addwfc	___ftadd@f2+1,f,c
  4951  0022A4  5012               	movf	___ftadd@f1+2,w,c
  4952  0022A6  2215               	addwfc	___ftadd@f2+2,f,c
  4953  0022A8  AE15               	btfss	___ftadd@f2+2,7,c
  4954  0022AA  D00F               	goto	l1971
  4955  0022AC  0EFF               	movlw	255
  4956  0022AE  1A13               	xorwf	___ftadd@f2,f,c
  4957  0022B0  0EFF               	movlw	255
  4958  0022B2  1A14               	xorwf	___ftadd@f2+1,f,c
  4959  0022B4  0EFF               	movlw	255
  4960  0022B6  1A15               	xorwf	___ftadd@f2+2,f,c
  4961  0022B8  0E01               	movlw	1
  4962  0022BA  2613               	addwf	___ftadd@f2,f,c
  4963  0022BC  0E00               	movlw	0
  4964  0022BE  2214               	addwfc	___ftadd@f2+1,f,c
  4965  0022C0  0E00               	movlw	0
  4966  0022C2  2215               	addwfc	___ftadd@f2+2,f,c
  4967  0022C4  0E01               	movlw	1
  4968  0022C6  6E19               	movwf	___ftadd@sign,c
  4969  0022C8  D000               	goto	l1971
  4970  0022CA                     l1971:
  4971  0022CA  C013  F001         	movff	___ftadd@f2,___ftpack@arg
  4972  0022CE  C014  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4973  0022D2  C015  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4974  0022D6  C01B  F004         	movff	___ftadd@exp1,___ftpack@exp
  4975  0022DA  C019  F005         	movff	___ftadd@sign,___ftpack@sign
  4976  0022DE  ECE6  F013         	call	___ftpack	;wreg free
  4977  0022E2  C001  F010         	movff	?___ftpack,?___ftadd
  4978  0022E6  C002  F011         	movff	?___ftpack+1,?___ftadd+1
  4979  0022EA  C003  F012         	movff	?___ftpack+2,?___ftadd+2
  4980  0022EE  D000               	goto	l630
  4981  0022F0                     l630:
  4982  0022F0  0012               	return		;funcret
  4983  0022F2                     __end_of___ftadd:
  4984                           	opt stack 0
  4985                           tblptru	equ	0xFF8
  4986                           tblptrh	equ	0xFF7
  4987                           tblptrl	equ	0xFF6
  4988                           tablat	equ	0xFF5
  4989                           prodh	equ	0xFF4
  4990                           prodl	equ	0xFF3
  4991                           postinc0	equ	0xFEE
  4992                           wreg	equ	0xFE8
  4993                           postdec1	equ	0xFE5
  4994                           fsr1l	equ	0xFE1
  4995                           indf2	equ	0xFDF
  4996                           postinc2	equ	0xFDE
  4997                           postdec2	equ	0xFDD
  4998                           fsr2h	equ	0xFDA
  4999                           fsr2l	equ	0xFD9
  5000                           status	equ	0xFD8
  5001                           
  5002 ;; *************** function ___ftneg *****************
  5003 ;; Defined at:
  5004 ;;		line 15 in file "E:\XC8\sources\common\ftneg.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  f1              3   12[COMRAM] float 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  3   12[COMRAM] float 
  5011 ;; Registers used:
  5012 ;;		wreg, status,2, status,0
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5018 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5021 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5022 ;;Total ram usage:        3 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; This function calls:
  5025 ;;		Nothing
  5026 ;; This function is called by:
  5027 ;;		_main
  5028 ;;		_printf
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text16
  5033  002E48                     __ptext16:
  5034                           	opt stack 0
  5035  002E48                     ___ftneg:
  5036                           	opt stack 29
  5037                           
  5038                           ;incstack = 0
  5039  002E48  500D               	movf	___ftneg@f1,w,c
  5040  002E4A  100E               	iorwf	___ftneg@f1+1,w,c
  5041  002E4C  100F               	iorwf	___ftneg@f1+2,w,c
  5042  002E4E  B4D8               	btfsc	status,2,c
  5043  002E50  D006               	goto	l703
  5044  002E52  0E00               	movlw	0
  5045  002E54  1A0D               	xorwf	___ftneg@f1,f,c
  5046  002E56  0E00               	movlw	0
  5047  002E58  1A0E               	xorwf	___ftneg@f1+1,f,c
  5048  002E5A  0E80               	movlw	128
  5049  002E5C  1A0F               	xorwf	___ftneg@f1+2,f,c
  5050  002E5E                     l703:
  5051  002E5E  C00D  F00D         	movff	___ftneg@f1,?___ftneg
  5052  002E62  C00E  F00E         	movff	___ftneg@f1+1,?___ftneg+1
  5053  002E66  C00F  F00F         	movff	___ftneg@f1+2,?___ftneg+2
  5054  002E6A  0012               	return		;funcret
  5055  002E6C                     __end_of___ftneg:
  5056                           	opt stack 0
  5057                           tblptru	equ	0xFF8
  5058                           tblptrh	equ	0xFF7
  5059                           tblptrl	equ	0xFF6
  5060                           tablat	equ	0xFF5
  5061                           prodh	equ	0xFF4
  5062                           prodl	equ	0xFF3
  5063                           postinc0	equ	0xFEE
  5064                           wreg	equ	0xFE8
  5065                           postdec1	equ	0xFE5
  5066                           fsr1l	equ	0xFE1
  5067                           indf2	equ	0xFDF
  5068                           postinc2	equ	0xFDE
  5069                           postdec2	equ	0xFDD
  5070                           fsr2h	equ	0xFDA
  5071                           fsr2l	equ	0xFD9
  5072                           status	equ	0xFD8
  5073                           
  5074 ;; *************** function _init_UART *****************
  5075 ;; Defined at:
  5076 ;;		line 53 in file "Lab5pB1.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;		None
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;		None
  5081 ;; Return value:  Size  Location     Type
  5082 ;;		None               void
  5083 ;; Registers used:
  5084 ;;		wreg, status,2, cstack
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5094 ;;Total ram usage:        0 bytes
  5095 ;; Hardware stack levels used:    1
  5096 ;; Hardware stack levels required when called:    1
  5097 ;; This function calls:
  5098 ;;		_OpenUSART
  5099 ;; This function is called by:
  5100 ;;		_main
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           	psect	text17
  5105  002EB8                     __ptext17:
  5106                           	opt stack 0
  5107  002EB8                     _init_UART:
  5108                           	opt stack 29
  5109                           
  5110                           ;Lab5pB1.c: 55: OpenUSART (0b01111111 & 0b10111111 &
  5111                           ;Lab5pB1.c: 56: 0b11111110 & 0b11111101 & 0b11111111 &
  5112                           ;Lab5pB1.c: 57: 0b11111111, 25);
  5113                           
  5114                           ;incstack = 0
  5115  002EB8  0E00               	movlw	0
  5116  002EBA  6E02               	movwf	OpenUSART@spbrg+1,c
  5117  002EBC  0E19               	movlw	25
  5118  002EBE  6E01               	movwf	OpenUSART@spbrg,c
  5119  002EC0  0E3C               	movlw	60
  5120  002EC2  ECE2  F015         	call	_OpenUSART
  5121                           
  5122                           ;Lab5pB1.c: 58: OSCCON = 0x60;
  5123  002EC6  0E60               	movlw	96
  5124  002EC8  6ED3               	movwf	4051,c	;volatile
  5125  002ECA  0012               	return		;funcret
  5126  002ECC                     __end_of_init_UART:
  5127                           	opt stack 0
  5128                           tblptru	equ	0xFF8
  5129                           tblptrh	equ	0xFF7
  5130                           tblptrl	equ	0xFF6
  5131                           tablat	equ	0xFF5
  5132                           prodh	equ	0xFF4
  5133                           prodl	equ	0xFF3
  5134                           postinc0	equ	0xFEE
  5135                           wreg	equ	0xFE8
  5136                           postdec1	equ	0xFE5
  5137                           fsr1l	equ	0xFE1
  5138                           indf2	equ	0xFDF
  5139                           postinc2	equ	0xFDE
  5140                           postdec2	equ	0xFDD
  5141                           fsr2h	equ	0xFDA
  5142                           fsr2l	equ	0xFD9
  5143                           status	equ	0xFD8
  5144                           
  5145 ;; *************** function _OpenUSART *****************
  5146 ;; Defined at:
  5147 ;;		line 73 in file "E:\XC8\sources\pic18\plib\USART\uopen.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;  config          1    wreg     unsigned char 
  5150 ;;  spbrg           2    0[COMRAM] unsigned int 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;  config          1    2[COMRAM] unsigned char 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;		None               void
  5155 ;; Registers used:
  5156 ;;		wreg, status,2
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;Total ram usage:        3 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; This function calls:
  5169 ;;		Nothing
  5170 ;; This function is called by:
  5171 ;;		_init_UART
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text18
  5176  002BC4                     __ptext18:
  5177                           	opt stack 0
  5178  002BC4                     _OpenUSART:
  5179                           	opt stack 29
  5180                           
  5181                           ;incstack = 0
  5182                           ;OpenUSART@config stored from wreg
  5183  002BC4  6E03               	movwf	OpenUSART@config,c
  5184  002BC6  0E00               	movlw	0
  5185  002BC8  6EAC               	movwf	4012,c	;volatile
  5186  002BCA  0E00               	movlw	0
  5187  002BCC  6EAB               	movwf	4011,c	;volatile
  5188  002BCE  A003               	btfss	OpenUSART@config,0,c
  5189  002BD0  D002               	goto	l2113
  5190  002BD2  88AC               	bsf	4012,4,c	;volatile
  5191  002BD4  D000               	goto	l2113
  5192  002BD6                     l2113:
  5193  002BD6  A203               	btfss	OpenUSART@config,1,c
  5194  002BD8  D003               	goto	l2117
  5195  002BDA  8CAC               	bsf	4012,6,c	;volatile
  5196  002BDC  8CAB               	bsf	4011,6,c	;volatile
  5197  002BDE  D000               	goto	l2117
  5198  002BE0                     l2117:
  5199  002BE0  A403               	btfss	OpenUSART@config,2,c
  5200  002BE2  D002               	goto	l2121
  5201  002BE4  8EAC               	bsf	4012,7,c	;volatile
  5202  002BE6  D000               	goto	l2121
  5203  002BE8                     l2121:
  5204  002BE8  A603               	btfss	OpenUSART@config,3,c
  5205  002BEA  D002               	goto	l252
  5206  002BEC  88AB               	bsf	4011,4,c	;volatile
  5207  002BEE  D002               	goto	l2125
  5208  002BF0                     l252:
  5209  002BF0  8AAB               	bsf	4011,5,c	;volatile
  5210  002BF2  D000               	goto	l2125
  5211  002BF4                     l2125:
  5212  002BF4  B803               	btfsc	OpenUSART@config,4,c
  5213  002BF6  84AC               	bsf	4012,2,c	;volatile
  5214  002BF8  989E               	bcf	3998,4,c	;volatile
  5215  002BFA  AA03               	btfss	OpenUSART@config,5,c
  5216  002BFC  D002               	goto	l2133
  5217  002BFE  86AB               	bsf	4011,3,c	;volatile
  5218  002C00  D000               	goto	l2133
  5219  002C02                     l2133:
  5220  002C02  AC03               	btfss	OpenUSART@config,6,c
  5221  002C04  D002               	goto	l256
  5222  002C06  8A9D               	bsf	3997,5,c	;volatile
  5223  002C08  D001               	goto	l257
  5224  002C0A                     l256:
  5225  002C0A  9A9D               	bcf	3997,5,c	;volatile
  5226  002C0C                     l257:
  5227  002C0C  9A9E               	bcf	3998,5,c	;volatile
  5228  002C0E  AE03               	btfss	OpenUSART@config,7,c
  5229  002C10  D002               	goto	l258
  5230  002C12  889D               	bsf	3997,4,c	;volatile
  5231  002C14  D001               	goto	l259
  5232  002C16                     l258:
  5233  002C16  989D               	bcf	3997,4,c	;volatile
  5234  002C18                     l259:
  5235  002C18  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5236  002C1C  5002               	movf	OpenUSART@spbrg+1,w,c
  5237  002C1E  6EB0               	movwf	4016,c	;volatile
  5238  002C20  8AAC               	bsf	4012,5,c	;volatile
  5239  002C22  8EAB               	bsf	4011,7,c	;volatile
  5240  002C24  9C94               	bcf	3988,6,c	;volatile
  5241  002C26  8E94               	bsf	3988,7,c	;volatile
  5242  002C28  B8AC               	btfsc	4012,4,c	;volatile
  5243  002C2A  BEAC               	btfsc	4012,7,c	;volatile
  5244  002C2C  D002               	goto	l261
  5245  002C2E  8C94               	bsf	3988,6,c	;volatile
  5246  002C30  D000               	goto	l261
  5247  002C32                     l261:
  5248  002C32  0012               	return		;funcret
  5249  002C34                     __end_of_OpenUSART:
  5250                           	opt stack 0
  5251                           tblptru	equ	0xFF8
  5252                           tblptrh	equ	0xFF7
  5253                           tblptrl	equ	0xFF6
  5254                           tablat	equ	0xFF5
  5255                           prodh	equ	0xFF4
  5256                           prodl	equ	0xFF3
  5257                           postinc0	equ	0xFEE
  5258                           wreg	equ	0xFE8
  5259                           postdec1	equ	0xFE5
  5260                           fsr1l	equ	0xFE1
  5261                           indf2	equ	0xFDF
  5262                           postinc2	equ	0xFDE
  5263                           postdec2	equ	0xFDD
  5264                           fsr2h	equ	0xFDA
  5265                           fsr2l	equ	0xFD9
  5266                           status	equ	0xFD8
  5267                           
  5268 ;; *************** function ___lwtoft *****************
  5269 ;; Defined at:
  5270 ;;		line 28 in file "E:\XC8\sources\common\lwtoft.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  c               2    8[COMRAM] unsigned int 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  3    8[COMRAM] float 
  5277 ;; Registers used:
  5278 ;;		wreg, status,2, status,0, cstack
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5284 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5287 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;Total ram usage:        3 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    1
  5291 ;; This function calls:
  5292 ;;		___ftpack
  5293 ;; This function is called by:
  5294 ;;		_main
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           	psect	text19
  5299  002DD6                     __ptext19:
  5300                           	opt stack 0
  5301  002DD6                     ___lwtoft:
  5302                           	opt stack 29
  5303                           
  5304                           ;incstack = 0
  5305  002DD6  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  5306  002DDA  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  5307  002DDE  6A03               	clrf	___ftpack@arg+2,c
  5308  002DE0  0E8E               	movlw	142
  5309  002DE2  6E04               	movwf	___ftpack@exp,c
  5310  002DE4  0E00               	movlw	0
  5311  002DE6  6E05               	movwf	___ftpack@sign,c
  5312  002DE8  ECE6  F013         	call	___ftpack	;wreg free
  5313  002DEC  C001  F009         	movff	?___ftpack,?___lwtoft
  5314  002DF0  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  5315  002DF4  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  5316  002DF8  D000               	goto	l843
  5317  002DFA                     l843:
  5318  002DFA  0012               	return		;funcret
  5319  002DFC                     __end_of___lwtoft:
  5320                           	opt stack 0
  5321                           tblptru	equ	0xFF8
  5322                           tblptrh	equ	0xFF7
  5323                           tblptrl	equ	0xFF6
  5324                           tablat	equ	0xFF5
  5325                           prodh	equ	0xFF4
  5326                           prodl	equ	0xFF3
  5327                           postinc0	equ	0xFEE
  5328                           wreg	equ	0xFE8
  5329                           postdec1	equ	0xFE5
  5330                           fsr1l	equ	0xFE1
  5331                           indf2	equ	0xFDF
  5332                           postinc2	equ	0xFDE
  5333                           postdec2	equ	0xFDD
  5334                           fsr2h	equ	0xFDA
  5335                           fsr2l	equ	0xFD9
  5336                           status	equ	0xFD8
  5337                           
  5338 ;; *************** function ___lbtoft *****************
  5339 ;; Defined at:
  5340 ;;		line 27 in file "E:\XC8\sources\common\lbtoft.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  c               1    wreg     unsigned char 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;  c               1   11[COMRAM] unsigned char 
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  3    8[COMRAM] float 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5354 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;Total ram usage:        4 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    1
  5361 ;; This function calls:
  5362 ;;		___ftpack
  5363 ;; This function is called by:
  5364 ;;		_main
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text20
  5369  002DFC                     __ptext20:
  5370                           	opt stack 0
  5371  002DFC                     ___lbtoft:
  5372                           	opt stack 29
  5373                           
  5374                           ;incstack = 0
  5375                           ;___lbtoft@c stored from wreg
  5376  002DFC  6E0C               	movwf	___lbtoft@c,c
  5377  002DFE  500C               	movf	___lbtoft@c,w,c
  5378  002E00  6E01               	movwf	___ftpack@arg,c
  5379  002E02  6A02               	clrf	___ftpack@arg+1,c
  5380  002E04  6A03               	clrf	___ftpack@arg+2,c
  5381  002E06  0E8E               	movlw	142
  5382  002E08  6E04               	movwf	___ftpack@exp,c
  5383  002E0A  0E00               	movlw	0
  5384  002E0C  6E05               	movwf	___ftpack@sign,c
  5385  002E0E  ECE6  F013         	call	___ftpack	;wreg free
  5386  002E12  C001  F009         	movff	?___ftpack,?___lbtoft
  5387  002E16  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  5388  002E1A  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  5389  002E1E  D000               	goto	l750
  5390  002E20                     l750:
  5391  002E20  0012               	return		;funcret
  5392  002E22                     __end_of___lbtoft:
  5393                           	opt stack 0
  5394                           tblptru	equ	0xFF8
  5395                           tblptrh	equ	0xFF7
  5396                           tblptrl	equ	0xFF6
  5397                           tablat	equ	0xFF5
  5398                           prodh	equ	0xFF4
  5399                           prodl	equ	0xFF3
  5400                           postinc0	equ	0xFEE
  5401                           wreg	equ	0xFE8
  5402                           postdec1	equ	0xFE5
  5403                           fsr1l	equ	0xFE1
  5404                           indf2	equ	0xFDF
  5405                           postinc2	equ	0xFDE
  5406                           postdec2	equ	0xFDD
  5407                           fsr2h	equ	0xFDA
  5408                           fsr2l	equ	0xFD9
  5409                           status	equ	0xFD8
  5410                           
  5411 ;; *************** function ___awtoft *****************
  5412 ;; Defined at:
  5413 ;;		line 32 in file "E:\XC8\sources\common\awtoft.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;  c               2   72[COMRAM] int 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  sign            1   75[COMRAM] unsigned char 
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  3   72[COMRAM] float 
  5420 ;; Registers used:
  5421 ;;		wreg, status,2, status,0, cstack
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5427 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5428 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5430 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5431 ;;Total ram usage:        4 bytes
  5432 ;; Hardware stack levels used:    1
  5433 ;; Hardware stack levels required when called:    1
  5434 ;; This function calls:
  5435 ;;		___ftpack
  5436 ;; This function is called by:
  5437 ;;		_main
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           	psect	text21
  5442  002D72                     __ptext21:
  5443                           	opt stack 0
  5444  002D72                     ___awtoft:
  5445                           	opt stack 29
  5446                           
  5447                           ;incstack = 0
  5448  002D72  0E00               	movlw	0
  5449  002D74  6E4C               	movwf	___awtoft@sign,c
  5450  002D76  AE4A               	btfss	___awtoft@c+1,7,c
  5451  002D78  D007               	goto	l2737
  5452  002D7A  6C49               	negf	___awtoft@c,c
  5453  002D7C  1E4A               	comf	___awtoft@c+1,f,c
  5454  002D7E  B0D8               	btfsc	status,0,c
  5455  002D80  2A4A               	incf	___awtoft@c+1,f,c
  5456  002D82  0E01               	movlw	1
  5457  002D84  6E4C               	movwf	___awtoft@sign,c
  5458  002D86  D000               	goto	l2737
  5459  002D88                     l2737:
  5460  002D88  C049  F001         	movff	___awtoft@c,___ftpack@arg
  5461  002D8C  C04A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5462  002D90  6A03               	clrf	___ftpack@arg+2,c
  5463  002D92  0E8E               	movlw	142
  5464  002D94  6E04               	movwf	___ftpack@exp,c
  5465  002D96  C04C  F005         	movff	___awtoft@sign,___ftpack@sign
  5466  002D9A  ECE6  F013         	call	___ftpack	;wreg free
  5467  002D9E  C001  F049         	movff	?___ftpack,?___awtoft
  5468  002DA2  C002  F04A         	movff	?___ftpack+1,?___awtoft+1
  5469  002DA6  C003  F04B         	movff	?___ftpack+2,?___awtoft+2
  5470  002DAA  D000               	goto	l482
  5471  002DAC                     l482:
  5472  002DAC  0012               	return		;funcret
  5473  002DAE                     __end_of___awtoft:
  5474                           	opt stack 0
  5475                           tblptru	equ	0xFF8
  5476                           tblptrh	equ	0xFF7
  5477                           tblptrl	equ	0xFF6
  5478                           tablat	equ	0xFF5
  5479                           prodh	equ	0xFF4
  5480                           prodl	equ	0xFF3
  5481                           postinc0	equ	0xFEE
  5482                           wreg	equ	0xFE8
  5483                           postdec1	equ	0xFE5
  5484                           fsr1l	equ	0xFE1
  5485                           indf2	equ	0xFDF
  5486                           postinc2	equ	0xFDE
  5487                           postdec2	equ	0xFDD
  5488                           fsr2h	equ	0xFDA
  5489                           fsr2l	equ	0xFD9
  5490                           status	equ	0xFD8
  5491                           
  5492 ;; *************** function _WAIT_1_SEC *****************
  5493 ;; Defined at:
  5494 ;;		line 25 in file "Lab5pB1.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;		None
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  j               2    0[COMRAM] int 
  5499 ;; Return value:  Size  Location     Type
  5500 ;;		None               void
  5501 ;; Registers used:
  5502 ;;		wreg, status,2, status,0
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;Total ram usage:        2 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_main
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text22
  5522  002E6C                     __ptext22:
  5523                           	opt stack 0
  5524  002E6C                     _WAIT_1_SEC:
  5525                           	opt stack 30
  5526                           
  5527                           ;Lab5pB1.c: 27: for (int j=0; j<0xffff; j++);
  5528                           
  5529                           ;incstack = 0
  5530  002E6C  0E00               	movlw	0
  5531  002E6E  6E02               	movwf	WAIT_1_SEC@j+1,c
  5532  002E70  0E00               	movlw	0
  5533  002E72  6E01               	movwf	WAIT_1_SEC@j,c
  5534  002E74                     l2505:
  5535  002E74  2801               	incf	WAIT_1_SEC@j,w,c
  5536  002E76  E105               	bnz	l2509
  5537  002E78  2802               	incf	WAIT_1_SEC@j+1,w,c
  5538  002E7A  B4D8               	btfsc	status,2,c
  5539  002E7C  D006               	goto	l79
  5540  002E7E  D001               	goto	l2509
  5541  002E80  D004               	goto	l79
  5542  002E82                     l2509:
  5543  002E82  4A01               	infsnz	WAIT_1_SEC@j,f,c
  5544  002E84  2A02               	incf	WAIT_1_SEC@j+1,f,c
  5545  002E86  D7F6               	goto	l2505
  5546  002E88  D7FC               	goto	l2509
  5547  002E8A                     l79:
  5548  002E8A  0012               	return		;funcret
  5549  002E8C                     __end_of_WAIT_1_SEC:
  5550                           	opt stack 0
  5551                           tblptru	equ	0xFF8
  5552                           tblptrh	equ	0xFF7
  5553                           tblptrl	equ	0xFF6
  5554                           tablat	equ	0xFF5
  5555                           prodh	equ	0xFF4
  5556                           prodl	equ	0xFF3
  5557                           postinc0	equ	0xFEE
  5558                           wreg	equ	0xFE8
  5559                           postdec1	equ	0xFE5
  5560                           fsr1l	equ	0xFE1
  5561                           indf2	equ	0xFDF
  5562                           postinc2	equ	0xFDE
  5563                           postdec2	equ	0xFDD
  5564                           fsr2h	equ	0xFDA
  5565                           fsr2l	equ	0xFD9
  5566                           status	equ	0xFD8
  5567                           
  5568 ;; *************** function _Select_ADC_Channel *****************
  5569 ;; Defined at:
  5570 ;;		line 61 in file "Lab5pB1.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;  channel         1    wreg     unsigned char 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;  channel         1    0[COMRAM] unsigned char 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;		None               void
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0, prodl, prodh
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;Total ram usage:        1 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_main
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text23
  5598  002EEC                     __ptext23:
  5599                           	opt stack 0
  5600  002EEC                     _Select_ADC_Channel:
  5601                           	opt stack 30
  5602                           
  5603                           ;incstack = 0
  5604                           ;Select_ADC_Channel@channel stored from wreg
  5605  002EEC  6E01               	movwf	Select_ADC_Channel@channel,c
  5606                           
  5607                           ;Lab5pB1.c: 63: ADCON0 = (channel*4) + 1;
  5608  002EEE  5001               	movf	Select_ADC_Channel@channel,w,c
  5609  002EF0  0D04               	mullw	4
  5610  002EF2  28F3               	incf	prodl,w,c
  5611  002EF4  6EC2               	movwf	4034,c	;volatile
  5612  002EF6  0012               	return		;funcret
  5613  002EF8                     __end_of_Select_ADC_Channel:
  5614                           	opt stack 0
  5615                           tblptru	equ	0xFF8
  5616                           tblptrh	equ	0xFF7
  5617                           tblptrl	equ	0xFF6
  5618                           tablat	equ	0xFF5
  5619                           prodh	equ	0xFF4
  5620                           prodl	equ	0xFF3
  5621                           postinc0	equ	0xFEE
  5622                           wreg	equ	0xFE8
  5623                           postdec1	equ	0xFE5
  5624                           fsr1l	equ	0xFE1
  5625                           indf2	equ	0xFDF
  5626                           postinc2	equ	0xFDE
  5627                           postdec2	equ	0xFDD
  5628                           fsr2h	equ	0xFDA
  5629                           fsr2l	equ	0xFD9
  5630                           status	equ	0xFD8
  5631                           
  5632 ;; *************** function _SET_D2_YELLOW *****************
  5633 ;; Defined at:
  5634 ;;		line 80 in file "Lab5pB1.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;		None
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;		None
  5639 ;; Return value:  Size  Location     Type
  5640 ;;		None               void
  5641 ;; Registers used:
  5642 ;;		wreg, status,2
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5652 ;;Total ram usage:        0 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; This function calls:
  5655 ;;		Nothing
  5656 ;; This function is called by:
  5657 ;;		_main
  5658 ;;		_DO_DISPLAY_D2
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text24
  5663  002EF8                     __ptext24:
  5664                           	opt stack 0
  5665  002EF8                     _SET_D2_YELLOW:
  5666                           	opt stack 30
  5667                           
  5668                           ;Lab5pB1.c: 82: PORTAbits.RA3 = 1;
  5669                           
  5670                           ;incstack = 0
  5671  002EF8  8680               	bsf	3968,3,c	;volatile
  5672                           
  5673                           ;Lab5pB1.c: 83: PORTEbits.RE2 = 1;
  5674  002EFA  8484               	bsf	3972,2,c	;volatile
  5675                           
  5676                           ;Lab5pB1.c: 84: PORTA=0x80;
  5677  002EFC  0E80               	movlw	128
  5678  002EFE  6E80               	movwf	3968,c	;volatile
  5679  002F00  0012               	return		;funcret
  5680  002F02                     __end_of_SET_D2_YELLOW:
  5681                           	opt stack 0
  5682                           tblptru	equ	0xFF8
  5683                           tblptrh	equ	0xFF7
  5684                           tblptrl	equ	0xFF6
  5685                           tablat	equ	0xFF5
  5686                           prodh	equ	0xFF4
  5687                           prodl	equ	0xFF3
  5688                           postinc0	equ	0xFEE
  5689                           wreg	equ	0xFE8
  5690                           postdec1	equ	0xFE5
  5691                           fsr1l	equ	0xFE1
  5692                           indf2	equ	0xFDF
  5693                           postinc2	equ	0xFDE
  5694                           postdec2	equ	0xFDD
  5695                           fsr2h	equ	0xFDA
  5696                           fsr2l	equ	0xFD9
  5697                           status	equ	0xFD8
  5698                           
  5699 ;; *************** function _SET_D2_OFF *****************
  5700 ;; Defined at:
  5701 ;;		line 87 in file "Lab5pB1.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;		None
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;		None
  5706 ;; Return value:  Size  Location     Type
  5707 ;;		None               void
  5708 ;; Registers used:
  5709 ;;		wreg, status,2
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5719 ;;Total ram usage:        0 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; This function calls:
  5722 ;;		Nothing
  5723 ;; This function is called by:
  5724 ;;		_main
  5725 ;;		_DO_DISPLAY_D2
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           	psect	text25
  5730  002F02                     __ptext25:
  5731                           	opt stack 0
  5732  002F02                     _SET_D2_OFF:
  5733                           	opt stack 30
  5734                           
  5735                           ;Lab5pB1.c: 89: PORTAbits.RA3 = 0;
  5736                           
  5737                           ;incstack = 0
  5738  002F02  9680               	bcf	3968,3,c	;volatile
  5739                           
  5740                           ;Lab5pB1.c: 90: PORTEbits.RE2 = 0;
  5741  002F04  9484               	bcf	3972,2,c	;volatile
  5742                           
  5743                           ;Lab5pB1.c: 91: PORTA=0x00;
  5744  002F06  0E00               	movlw	0
  5745  002F08  6E80               	movwf	3968,c	;volatile
  5746  002F0A  0012               	return		;funcret
  5747  002F0C                     __end_of_SET_D2_OFF:
  5748                           	opt stack 0
  5749                           tblptru	equ	0xFF8
  5750                           tblptrh	equ	0xFF7
  5751                           tblptrl	equ	0xFF6
  5752                           tablat	equ	0xFF5
  5753                           prodh	equ	0xFF4
  5754                           prodl	equ	0xFF3
  5755                           postinc0	equ	0xFEE
  5756                           wreg	equ	0xFE8
  5757                           postdec1	equ	0xFE5
  5758                           fsr1l	equ	0xFE1
  5759                           indf2	equ	0xFDF
  5760                           postinc2	equ	0xFDE
  5761                           postdec2	equ	0xFDD
  5762                           fsr2h	equ	0xFDA
  5763                           fsr2l	equ	0xFD9
  5764                           status	equ	0xFD8
  5765                           
  5766 ;; *************** function _Init_ADC *****************
  5767 ;; Defined at:
  5768 ;;		line 46 in file "Lab5pB1.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;		None
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;		None
  5773 ;; Return value:  Size  Location     Type
  5774 ;;		None               void
  5775 ;; Registers used:
  5776 ;;		wreg, status,2
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;Total ram usage:        0 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_main
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text26
  5796  002F0C                     __ptext26:
  5797                           	opt stack 0
  5798  002F0C                     _Init_ADC:
  5799                           	opt stack 30
  5800                           
  5801                           ;Lab5pB1.c: 48: ADCON1 = 0x1A;
  5802                           
  5803                           ;incstack = 0
  5804  002F0C  0E1A               	movlw	26
  5805  002F0E  6EC1               	movwf	4033,c	;volatile
  5806                           
  5807                           ;Lab5pB1.c: 49: ADCON2 = 0xA9;
  5808  002F10  0EA9               	movlw	169
  5809  002F12  6EC0               	movwf	4032,c	;volatile
  5810  002F14  0012               	return		;funcret
  5811  002F16                     __end_of_Init_ADC:
  5812                           	opt stack 0
  5813                           tblptru	equ	0xFF8
  5814                           tblptrh	equ	0xFF7
  5815                           tblptrl	equ	0xFF6
  5816                           tablat	equ	0xFF5
  5817                           prodh	equ	0xFF4
  5818                           prodl	equ	0xFF3
  5819                           postinc0	equ	0xFEE
  5820                           wreg	equ	0xFE8
  5821                           postdec1	equ	0xFE5
  5822                           fsr1l	equ	0xFE1
  5823                           indf2	equ	0xFDF
  5824                           postinc2	equ	0xFDE
  5825                           postdec2	equ	0xFDD
  5826                           fsr2h	equ	0xFDA
  5827                           fsr2l	equ	0xFD9
  5828                           status	equ	0xFD8
  5829                           
  5830 ;; *************** function _Get_Full_ADC *****************
  5831 ;; Defined at:
  5832 ;;		line 36 in file "Lab5pB1.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;		None
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;  result          2    4[COMRAM] int 
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  2    0[COMRAM] unsigned int 
  5839 ;; Registers used:
  5840 ;;		wreg, status,2, status,0
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5846 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5847 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5848 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5849 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5850 ;;Total ram usage:        6 bytes
  5851 ;; Hardware stack levels used:    1
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_main
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text27
  5860  002E22                     __ptext27:
  5861                           	opt stack 0
  5862  002E22                     _Get_Full_ADC:
  5863                           	opt stack 30
  5864                           
  5865                           ;Lab5pB1.c: 38: int result;
  5866                           ;Lab5pB1.c: 39: ADCON0bits.GO = 1;
  5867                           
  5868                           ;incstack = 0
  5869  002E22  82C2               	bsf	4034,1,c	;volatile
  5870                           
  5871                           ;Lab5pB1.c: 40: while(ADCON0bits.DONE==1);
  5872  002E24  D000               	goto	l88
  5873  002E26                     l88:
  5874  002E26  B2C2               	btfsc	4034,1,c	;volatile
  5875  002E28  D7FE               	goto	l88
  5876                           
  5877                           ;Lab5pB1.c: 41: result = (ADRESH * 0x100) + ADRESL;
  5878  002E2A  50C4               	movf	4036,w,c	;volatile
  5879  002E2C  6E04               	movwf	(??_Get_Full_ADC+1)& (0+255),c
  5880  002E2E  6A03               	clrf	??_Get_Full_ADC& (0+255),c
  5881  002E30  50C3               	movf	4035,w,c	;volatile
  5882  002E32  2403               	addwf	??_Get_Full_ADC,w,c
  5883  002E34  6E05               	movwf	Get_Full_ADC@result,c
  5884  002E36  0E00               	movlw	0
  5885  002E38  2004               	addwfc	??_Get_Full_ADC+1,w,c
  5886  002E3A  6E06               	movwf	Get_Full_ADC@result+1,c
  5887                           
  5888                           ;Lab5pB1.c: 43: return result;
  5889  002E3C  C005  F001         	movff	Get_Full_ADC@result,?_Get_Full_ADC
  5890  002E40  C006  F002         	movff	Get_Full_ADC@result+1,?_Get_Full_ADC+1
  5891  002E44  D000               	goto	l91
  5892  002E46                     l91:
  5893  002E46  0012               	return		;funcret
  5894  002E48                     __end_of_Get_Full_ADC:
  5895                           	opt stack 0
  5896                           tblptru	equ	0xFF8
  5897                           tblptrh	equ	0xFF7
  5898                           tblptrl	equ	0xFF6
  5899                           tablat	equ	0xFF5
  5900                           prodh	equ	0xFF4
  5901                           prodl	equ	0xFF3
  5902                           postinc0	equ	0xFEE
  5903                           wreg	equ	0xFE8
  5904                           postdec1	equ	0xFE5
  5905                           fsr1l	equ	0xFE1
  5906                           indf2	equ	0xFDF
  5907                           postinc2	equ	0xFDE
  5908                           postdec2	equ	0xFDD
  5909                           fsr2h	equ	0xFDA
  5910                           fsr2l	equ	0xFD9
  5911                           status	equ	0xFD8
  5912                           
  5913 ;; *************** function _Deactivate_Buzzer *****************
  5914 ;; Defined at:
  5915 ;;		line 74 in file "Lab5pB1.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;		None
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;		None               void
  5922 ;; Registers used:
  5923 ;;		wreg, status,2
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;Total ram usage:        0 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		_main
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text28
  5943  002F16                     __ptext28:
  5944                           	opt stack 0
  5945  002F16                     _Deactivate_Buzzer:
  5946                           	opt stack 30
  5947                           
  5948                           ;Lab5pB1.c: 76: CCP2CON = 0x0;
  5949                           
  5950                           ;incstack = 0
  5951  002F16  0E00               	movlw	0
  5952  002F18  6EBA               	movwf	4026,c	;volatile
  5953                           
  5954                           ;Lab5pB1.c: 77: PORTBbits.RB3 = 0;
  5955  002F1A  9681               	bcf	3969,3,c	;volatile
  5956  002F1C  0012               	return		;funcret
  5957  002F1E                     __end_of_Deactivate_Buzzer:
  5958                           	opt stack 0
  5959                           tblptru	equ	0xFF8
  5960                           tblptrh	equ	0xFF7
  5961                           tblptrl	equ	0xFF6
  5962                           tablat	equ	0xFF5
  5963                           prodh	equ	0xFF4
  5964                           prodl	equ	0xFF3
  5965                           postinc0	equ	0xFEE
  5966                           wreg	equ	0xFE8
  5967                           postdec1	equ	0xFE5
  5968                           fsr1l	equ	0xFE1
  5969                           indf2	equ	0xFDF
  5970                           postinc2	equ	0xFDE
  5971                           postdec2	equ	0xFDD
  5972                           fsr2h	equ	0xFDA
  5973                           fsr2l	equ	0xFD9
  5974                           status	equ	0xFD8
  5975                           
  5976 ;; *************** function _DO_DISPLAY_D1 *****************
  5977 ;; Defined at:
  5978 ;;		line 115 in file "Lab5pB1.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  T               3   72[COMRAM] float 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;		None               void
  5985 ;; Registers used:
  5986 ;;		wreg, status,2, status,0, cstack
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5992 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;Total ram usage:        3 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; Hardware stack levels required when called:    2
  5999 ;; This function calls:
  6000 ;;		___ftdiv
  6001 ;;		___ftge
  6002 ;;		___fttol
  6003 ;; This function is called by:
  6004 ;;		_main
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           	psect	text29
  6009  002C94                     __ptext29:
  6010                           	opt stack 0
  6011  002C94                     _DO_DISPLAY_D1:
  6012                           	opt stack 28
  6013                           
  6014                           ;Lab5pB1.c: 117: if (T > 70) PORTB = 0xFF;
  6015                           
  6016                           ;incstack = 0
  6017  002C94  0E00               	movlw	0
  6018  002C96  6E01               	movwf	___ftge@ff1,c
  6019  002C98  0E8C               	movlw	140
  6020  002C9A  6E02               	movwf	___ftge@ff1+1,c
  6021  002C9C  0E42               	movlw	66
  6022  002C9E  6E03               	movwf	___ftge@ff1+2,c
  6023  002CA0  C049  F004         	movff	DO_DISPLAY_D1@T,___ftge@ff2
  6024  002CA4  C04A  F005         	movff	DO_DISPLAY_D1@T+1,___ftge@ff2+1
  6025  002CA8  C04B  F006         	movff	DO_DISPLAY_D1@T+2,___ftge@ff2+2
  6026  002CAC  EC94  F014         	call	___ftge	;wreg free
  6027  002CB0  B0D8               	btfsc	status,0,c
  6028  002CB2  D002               	goto	l2575
  6029  002CB4  6881               	setf	3969,c	;volatile
  6030  002CB6  D019               	goto	l130
  6031  002CB8                     l2575:
  6032                           
  6033                           ;Lab5pB1.c: 118: else
  6034                           ;Lab5pB1.c: 119: PORTB = T/10;
  6035  002CB8  0E00               	movlw	0
  6036  002CBA  6E2E               	movwf	___ftdiv@f2,c
  6037  002CBC  0E20               	movlw	32
  6038  002CBE  6E2F               	movwf	___ftdiv@f2+1,c
  6039  002CC0  0E41               	movlw	65
  6040  002CC2  6E30               	movwf	___ftdiv@f2+2,c
  6041  002CC4  C049  F02B         	movff	DO_DISPLAY_D1@T,___ftdiv@f1
  6042  002CC8  C04A  F02C         	movff	DO_DISPLAY_D1@T+1,___ftdiv@f1+1
  6043  002CCC  C04B  F02D         	movff	DO_DISPLAY_D1@T+2,___ftdiv@f1+2
  6044  002CD0  EC75  F013         	call	___ftdiv	;wreg free
  6045  002CD4  C02B  F03A         	movff	?___ftdiv,___fttol@f1
  6046  002CD8  C02C  F03B         	movff	?___ftdiv+1,___fttol@f1+1
  6047  002CDC  C02D  F03C         	movff	?___ftdiv+2,___fttol@f1+2
  6048  002CE0  EC02  F013         	call	___fttol	;wreg free
  6049  002CE4  503A               	movf	?___fttol,w,c
  6050  002CE6  6E81               	movwf	3969,c	;volatile
  6051  002CE8  D000               	goto	l130
  6052  002CEA                     l130:
  6053  002CEA  0012               	return		;funcret
  6054  002CEC                     __end_of_DO_DISPLAY_D1:
  6055                           	opt stack 0
  6056                           tblptru	equ	0xFF8
  6057                           tblptrh	equ	0xFF7
  6058                           tblptrl	equ	0xFF6
  6059                           tablat	equ	0xFF5
  6060                           prodh	equ	0xFF4
  6061                           prodl	equ	0xFF3
  6062                           postinc0	equ	0xFEE
  6063                           wreg	equ	0xFE8
  6064                           postdec1	equ	0xFE5
  6065                           fsr1l	equ	0xFE1
  6066                           indf2	equ	0xFDF
  6067                           postinc2	equ	0xFDE
  6068                           postdec2	equ	0xFDD
  6069                           fsr2h	equ	0xFDA
  6070                           fsr2l	equ	0xFD9
  6071                           status	equ	0xFD8
  6072                           
  6073 ;; *************** function ___fttol *****************
  6074 ;; Defined at:
  6075 ;;		line 44 in file "E:\XC8\sources\common\fttol.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;  f1              3   57[COMRAM] float 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  lval            4   67[COMRAM] unsigned long 
  6080 ;;  exp1            1   71[COMRAM] unsigned char 
  6081 ;;  sign1           1   66[COMRAM] unsigned char 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  4   57[COMRAM] long 
  6084 ;; Registers used:
  6085 ;;		wreg, status,2, status,0
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6091 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6094 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6095 ;;Total ram usage:       15 bytes
  6096 ;; Hardware stack levels used:    1
  6097 ;; This function calls:
  6098 ;;		Nothing
  6099 ;; This function is called by:
  6100 ;;		_DO_DISPLAY_D1
  6101 ;;		_main
  6102 ;;		_printf
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text30
  6107  002604                     __ptext30:
  6108                           	opt stack 0
  6109  002604                     ___fttol:
  6110                           	opt stack 29
  6111                           
  6112                           ;incstack = 0
  6113  002604  C03C  F03E         	movff	___fttol@f1+2,??___fttol
  6114  002608  6A3F               	clrf	(??___fttol+1)& (0+255),c
  6115  00260A  6A40               	clrf	(??___fttol+2)& (0+255),c
  6116  00260C  343B               	rlcf	___fttol@f1+1,w,c
  6117  00260E  363E               	rlcf	??___fttol& (0+255),f,c
  6118  002610  E301               	bnc	u2401
  6119  002612  803F               	bsf	(??___fttol+1)& (0+255),0,c
  6120  002614                     u2401:
  6121  002614  503E               	movf	??___fttol,w,c
  6122  002616  6E48               	movwf	___fttol@exp1,c
  6123  002618  5048               	movf	___fttol@exp1,w,c
  6124  00261A  A4D8               	btfss	status,2,c
  6125  00261C  D002               	goto	l2415
  6126  00261E  D039               	goto	l2439
  6127  002620  D063               	goto	l714
  6128  002622                     l2415:
  6129  002622  0E17               	movlw	23
  6130  002624  6E3E               	movwf	??___fttol& (0+255),c
  6131  002626  C03A  F03F         	movff	___fttol@f1,??___fttol+1
  6132  00262A  C03B  F040         	movff	___fttol@f1+1,??___fttol+2
  6133  00262E  C03C  F041         	movff	___fttol@f1+2,??___fttol+3
  6134  002632  283E               	incf	??___fttol,w,c
  6135  002634  6E42               	movwf	(??___fttol+4)& (0+255),c
  6136  002636  D004               	goto	u2420
  6137  002638                     u2425:
  6138  002638  90D8               	bcf	status,0,c
  6139  00263A  3241               	rrcf	??___fttol+3,f,c
  6140  00263C  3240               	rrcf	??___fttol+2,f,c
  6141  00263E  323F               	rrcf	??___fttol+1,f,c
  6142  002640                     u2420:
  6143  002640  2E42               	decfsz	(??___fttol+4)& (0+255),f,c
  6144  002642  D7FA               	goto	u2425
  6145  002644  503F               	movf	??___fttol+1,w,c
  6146  002646  6E43               	movwf	___fttol@sign1,c
  6147  002648  8E3B               	bsf	___fttol@f1+1,7,c
  6148  00264A  0EFF               	movlw	255
  6149  00264C  163A               	andwf	___fttol@f1,f,c
  6150  00264E  0EFF               	movlw	255
  6151  002650  163B               	andwf	___fttol@f1+1,f,c
  6152  002652  0E00               	movlw	0
  6153  002654  163C               	andwf	___fttol@f1+2,f,c
  6154  002656  503A               	movf	___fttol@f1,w,c
  6155  002658  6E44               	movwf	___fttol@lval,c
  6156  00265A  503B               	movf	___fttol@f1+1,w,c
  6157  00265C  6E45               	movwf	___fttol@lval+1,c
  6158  00265E  503C               	movf	___fttol@f1+2,w,c
  6159  002660  6E46               	movwf	___fttol@lval+2,c
  6160  002662  6A47               	clrf	___fttol@lval+3,c
  6161  002664  0E8E               	movlw	142
  6162  002666  5E48               	subwf	___fttol@exp1,f,c
  6163  002668  AE48               	btfss	___fttol@exp1,7,c
  6164  00266A  D010               	goto	l2437
  6165  00266C  5048               	movf	___fttol@exp1,w,c
  6166  00266E  0A80               	xorlw	128
  6167  002670  0F8F               	addlw	143
  6168  002672  B0D8               	btfsc	status,0,c
  6169  002674  D003               	goto	l2433
  6170  002676  D00D               	goto	l2439
  6171  002678  D037               	goto	l714
  6172  00267A  D000               	goto	l2433
  6173  00267C                     l2433:
  6174  00267C  90D8               	bcf	status,0,c
  6175  00267E  3247               	rrcf	___fttol@lval+3,f,c
  6176  002680  3246               	rrcf	___fttol@lval+2,f,c
  6177  002682  3245               	rrcf	___fttol@lval+1,f,c
  6178  002684  3244               	rrcf	___fttol@lval,f,c
  6179  002686  3E48               	incfsz	___fttol@exp1,f,c
  6180  002688  D7F9               	goto	l2433
  6181  00268A  D019               	goto	l2447
  6182  00268C                     l2437:
  6183  00268C  0E17               	movlw	23
  6184  00268E  6448               	cpfsgt	___fttol@exp1,c
  6185  002690  D011               	goto	l2445
  6186  002692                     l2439:
  6187  002692  0E00               	movlw	0
  6188  002694  6E3A               	movwf	?___fttol,c
  6189  002696  0E00               	movlw	0
  6190  002698  6E3B               	movwf	?___fttol+1,c
  6191  00269A  0E00               	movlw	0
  6192  00269C  6E3C               	movwf	?___fttol+2,c
  6193  00269E  0E00               	movlw	0
  6194  0026A0  6E3D               	movwf	?___fttol+3,c
  6195  0026A2  D022               	goto	l714
  6196  0026A4  D007               	goto	l2445
  6197  0026A6                     l2443:
  6198  0026A6  90D8               	bcf	status,0,c
  6199  0026A8  3644               	rlcf	___fttol@lval,f,c
  6200  0026AA  3645               	rlcf	___fttol@lval+1,f,c
  6201  0026AC  3646               	rlcf	___fttol@lval+2,f,c
  6202  0026AE  3647               	rlcf	___fttol@lval+3,f,c
  6203  0026B0  0648               	decf	___fttol@exp1,f,c
  6204  0026B2  D000               	goto	l2445
  6205  0026B4                     l2445:
  6206  0026B4  5048               	movf	___fttol@exp1,w,c
  6207  0026B6  B4D8               	btfsc	status,2,c
  6208  0026B8  D002               	goto	l2447
  6209  0026BA  D7F5               	goto	l2443
  6210  0026BC  D000               	goto	l2447
  6211  0026BE                     l2447:
  6212  0026BE  5043               	movf	___fttol@sign1,w,c
  6213  0026C0  B4D8               	btfsc	status,2,c
  6214  0026C2  D009               	goto	l2451
  6215  0026C4  1E47               	comf	___fttol@lval+3,f,c
  6216  0026C6  1E46               	comf	___fttol@lval+2,f,c
  6217  0026C8  1E45               	comf	___fttol@lval+1,f,c
  6218  0026CA  6C44               	negf	___fttol@lval,c
  6219  0026CC  0E00               	movlw	0
  6220  0026CE  2245               	addwfc	___fttol@lval+1,f,c
  6221  0026D0  2246               	addwfc	___fttol@lval+2,f,c
  6222  0026D2  2247               	addwfc	___fttol@lval+3,f,c
  6223  0026D4  D000               	goto	l2451
  6224  0026D6                     l2451:
  6225  0026D6  C044  F03A         	movff	___fttol@lval,?___fttol
  6226  0026DA  C045  F03B         	movff	___fttol@lval+1,?___fttol+1
  6227  0026DE  C046  F03C         	movff	___fttol@lval+2,?___fttol+2
  6228  0026E2  C047  F03D         	movff	___fttol@lval+3,?___fttol+3
  6229  0026E6  D000               	goto	l714
  6230  0026E8                     l714:
  6231  0026E8  0012               	return		;funcret
  6232  0026EA                     __end_of___fttol:
  6233                           	opt stack 0
  6234                           tblptru	equ	0xFF8
  6235                           tblptrh	equ	0xFF7
  6236                           tblptrl	equ	0xFF6
  6237                           tablat	equ	0xFF5
  6238                           prodh	equ	0xFF4
  6239                           prodl	equ	0xFF3
  6240                           postinc0	equ	0xFEE
  6241                           wreg	equ	0xFE8
  6242                           postdec1	equ	0xFE5
  6243                           fsr1l	equ	0xFE1
  6244                           indf2	equ	0xFDF
  6245                           postinc2	equ	0xFDE
  6246                           postdec2	equ	0xFDD
  6247                           fsr2h	equ	0xFDA
  6248                           fsr2l	equ	0xFD9
  6249                           status	equ	0xFD8
  6250                           
  6251 ;; *************** function ___ftge *****************
  6252 ;; Defined at:
  6253 ;;		line 4 in file "E:\XC8\sources\common\ftge.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  ff1             3    0[COMRAM] float 
  6256 ;;  ff2             3    3[COMRAM] float 
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;		None
  6259 ;; Return value:  Size  Location     Type
  6260 ;;		None               void
  6261 ;; Registers used:
  6262 ;;		wreg, status,2, status,0
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 0/0
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6268 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6271 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6272 ;;Total ram usage:        9 bytes
  6273 ;; Hardware stack levels used:    1
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_DO_DISPLAY_D1
  6278 ;;		_main
  6279 ;;		_printf
  6280 ;;		_DO_DISPLAY_D2
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           	psect	text31
  6285  002928                     __ptext31:
  6286                           	opt stack 0
  6287  002928                     ___ftge:
  6288                           	opt stack 29
  6289                           
  6290                           ;incstack = 0
  6291  002928  AE03               	btfss	___ftge@ff1+2,7,c
  6292  00292A  D017               	goto	l2391
  6293  00292C  C001  F007         	movff	___ftge@ff1,??___ftge
  6294  002930  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  6295  002934  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  6296  002938  1E07               	comf	??___ftge,f,c
  6297  00293A  1E08               	comf	??___ftge+1,f,c
  6298  00293C  1E09               	comf	??___ftge+2,f,c
  6299  00293E  2A07               	incf	??___ftge,f,c
  6300  002940  0E00               	movlw	0
  6301  002942  2208               	addwfc	??___ftge+1,f,c
  6302  002944  2209               	addwfc	??___ftge+2,f,c
  6303  002946  0E00               	movlw	0
  6304  002948  2407               	addwf	??___ftge,w,c
  6305  00294A  6E01               	movwf	___ftge@ff1,c
  6306  00294C  0E00               	movlw	0
  6307  00294E  2008               	addwfc	??___ftge+1,w,c
  6308  002950  6E02               	movwf	___ftge@ff1+1,c
  6309  002952  0E80               	movlw	128
  6310  002954  2009               	addwfc	??___ftge+2,w,c
  6311  002956  6E03               	movwf	___ftge@ff1+2,c
  6312  002958  D000               	goto	l2391
  6313  00295A                     l2391:
  6314  00295A  AE06               	btfss	___ftge@ff2+2,7,c
  6315  00295C  D017               	goto	l2395
  6316  00295E  C004  F007         	movff	___ftge@ff2,??___ftge
  6317  002962  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  6318  002966  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  6319  00296A  1E07               	comf	??___ftge,f,c
  6320  00296C  1E08               	comf	??___ftge+1,f,c
  6321  00296E  1E09               	comf	??___ftge+2,f,c
  6322  002970  2A07               	incf	??___ftge,f,c
  6323  002972  0E00               	movlw	0
  6324  002974  2208               	addwfc	??___ftge+1,f,c
  6325  002976  2209               	addwfc	??___ftge+2,f,c
  6326  002978  0E00               	movlw	0
  6327  00297A  2407               	addwf	??___ftge,w,c
  6328  00297C  6E04               	movwf	___ftge@ff2,c
  6329  00297E  0E00               	movlw	0
  6330  002980  2008               	addwfc	??___ftge+1,w,c
  6331  002982  6E05               	movwf	___ftge@ff2+1,c
  6332  002984  0E80               	movlw	128
  6333  002986  2009               	addwfc	??___ftge+2,w,c
  6334  002988  6E06               	movwf	___ftge@ff2+2,c
  6335  00298A  D000               	goto	l2395
  6336  00298C                     l2395:
  6337  00298C  0E00               	movlw	0
  6338  00298E  1A01               	xorwf	___ftge@ff1,f,c
  6339  002990  0E00               	movlw	0
  6340  002992  1A02               	xorwf	___ftge@ff1+1,f,c
  6341  002994  0E80               	movlw	128
  6342  002996  1A03               	xorwf	___ftge@ff1+2,f,c
  6343  002998  0E00               	movlw	0
  6344  00299A  1A04               	xorwf	___ftge@ff2,f,c
  6345  00299C  0E00               	movlw	0
  6346  00299E  1A05               	xorwf	___ftge@ff2+1,f,c
  6347  0029A0  0E80               	movlw	128
  6348  0029A2  1A06               	xorwf	___ftge@ff2+2,f,c
  6349  0029A4  5004               	movf	___ftge@ff2,w,c
  6350  0029A6  5C01               	subwf	___ftge@ff1,w,c
  6351  0029A8  5005               	movf	___ftge@ff2+1,w,c
  6352  0029AA  5802               	subwfb	___ftge@ff1+1,w,c
  6353  0029AC  5006               	movf	___ftge@ff2+2,w,c
  6354  0029AE  5803               	subwfb	___ftge@ff1+2,w,c
  6355  0029B0  B0D8               	btfsc	status,0,c
  6356  0029B2  D002               	goto	l2401
  6357  0029B4  90D8               	bcf	status,0,c
  6358  0029B6  D002               	goto	l687
  6359  0029B8                     l2401:
  6360  0029B8  80D8               	bsf	status,0,c
  6361  0029BA  D000               	goto	l687
  6362  0029BC                     l687:
  6363  0029BC  0012               	return		;funcret
  6364  0029BE                     __end_of___ftge:
  6365                           	opt stack 0
  6366                           tblptru	equ	0xFF8
  6367                           tblptrh	equ	0xFF7
  6368                           tblptrl	equ	0xFF6
  6369                           tablat	equ	0xFF5
  6370                           prodh	equ	0xFF4
  6371                           prodl	equ	0xFF3
  6372                           postinc0	equ	0xFEE
  6373                           wreg	equ	0xFE8
  6374                           postdec1	equ	0xFE5
  6375                           fsr1l	equ	0xFE1
  6376                           indf2	equ	0xFDF
  6377                           postinc2	equ	0xFDE
  6378                           postdec2	equ	0xFDD
  6379                           fsr2h	equ	0xFDA
  6380                           fsr2l	equ	0xFD9
  6381                           status	equ	0xFD8
  6382                           
  6383 ;; *************** function ___ftdiv *****************
  6384 ;; Defined at:
  6385 ;;		line 54 in file "E:\XC8\sources\common\ftdiv.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;  f1              3   42[COMRAM] float 
  6388 ;;  f2              3   45[COMRAM] float 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;  f3              3   52[COMRAM] float 
  6391 ;;  sign            1   56[COMRAM] unsigned char 
  6392 ;;  exp             1   55[COMRAM] unsigned char 
  6393 ;;  cntr            1   51[COMRAM] unsigned char 
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  3   42[COMRAM] float 
  6396 ;; Registers used:
  6397 ;;		wreg, status,2, status,0, cstack
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6403 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;Total ram usage:       15 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:    1
  6410 ;; This function calls:
  6411 ;;		___ftpack
  6412 ;; This function is called by:
  6413 ;;		_DO_DISPLAY_D1
  6414 ;;		_main
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text32
  6419  0026EA                     __ptext32:
  6420                           	opt stack 0
  6421  0026EA                     ___ftdiv:
  6422                           	opt stack 29
  6423                           
  6424                           ;incstack = 0
  6425  0026EA  C02D  F031         	movff	___ftdiv@f1+2,??___ftdiv
  6426  0026EE  6A32               	clrf	(??___ftdiv+1)& (0+255),c
  6427  0026F0  6A33               	clrf	(??___ftdiv+2)& (0+255),c
  6428  0026F2  342C               	rlcf	___ftdiv@f1+1,w,c
  6429  0026F4  3631               	rlcf	??___ftdiv& (0+255),f,c
  6430  0026F6  E301               	bnc	u2301
  6431  0026F8  8032               	bsf	(??___ftdiv+1)& (0+255),0,c
  6432  0026FA                     u2301:
  6433  0026FA  5031               	movf	??___ftdiv,w,c
  6434  0026FC  6E38               	movwf	___ftdiv@exp,c
  6435  0026FE  5038               	movf	___ftdiv@exp,w,c
  6436  002700  A4D8               	btfss	status,2,c
  6437  002702  D002               	goto	l2339
  6438  002704  D00E               	goto	l2341
  6439  002706  D061               	goto	l661
  6440  002708                     l2339:
  6441  002708  C030  F031         	movff	___ftdiv@f2+2,??___ftdiv
  6442  00270C  6A32               	clrf	(??___ftdiv+1)& (0+255),c
  6443  00270E  6A33               	clrf	(??___ftdiv+2)& (0+255),c
  6444  002710  342F               	rlcf	___ftdiv@f2+1,w,c
  6445  002712  3631               	rlcf	??___ftdiv& (0+255),f,c
  6446  002714  E301               	bnc	u2321
  6447  002716  8032               	bsf	(??___ftdiv+1)& (0+255),0,c
  6448  002718                     u2321:
  6449  002718  5031               	movf	??___ftdiv,w,c
  6450  00271A  6E39               	movwf	___ftdiv@sign,c
  6451  00271C  5039               	movf	___ftdiv@sign,w,c
  6452  00271E  A4D8               	btfss	status,2,c
  6453  002720  D007               	goto	l2345
  6454  002722                     l2341:
  6455  002722  0E00               	movlw	0
  6456  002724  6E2B               	movwf	?___ftdiv,c
  6457  002726  0E00               	movlw	0
  6458  002728  6E2C               	movwf	?___ftdiv+1,c
  6459  00272A  0E00               	movlw	0
  6460  00272C  6E2D               	movwf	?___ftdiv+2,c
  6461  00272E  D04D               	goto	l661
  6462  002730                     l2345:
  6463  002730  0E00               	movlw	0
  6464  002732  6E35               	movwf	___ftdiv@f3,c
  6465  002734  0E00               	movlw	0
  6466  002736  6E36               	movwf	___ftdiv@f3+1,c
  6467  002738  0E00               	movlw	0
  6468  00273A  6E37               	movwf	___ftdiv@f3+2,c
  6469  00273C  5039               	movf	___ftdiv@sign,w,c
  6470  00273E  0F89               	addlw	137
  6471  002740  5E38               	subwf	___ftdiv@exp,f,c
  6472  002742  C02D  F039         	movff	___ftdiv@f1+2,___ftdiv@sign
  6473  002746  5030               	movf	___ftdiv@f2+2,w,c
  6474  002748  1A39               	xorwf	___ftdiv@sign,f,c
  6475  00274A  0E80               	movlw	128
  6476  00274C  1639               	andwf	___ftdiv@sign,f,c
  6477  00274E  8E2C               	bsf	___ftdiv@f1+1,7,c
  6478  002750  0EFF               	movlw	255
  6479  002752  162B               	andwf	___ftdiv@f1,f,c
  6480  002754  0EFF               	movlw	255
  6481  002756  162C               	andwf	___ftdiv@f1+1,f,c
  6482  002758  0E00               	movlw	0
  6483  00275A  162D               	andwf	___ftdiv@f1+2,f,c
  6484  00275C  8E2F               	bsf	___ftdiv@f2+1,7,c
  6485  00275E  0EFF               	movlw	255
  6486  002760  162E               	andwf	___ftdiv@f2,f,c
  6487  002762  0EFF               	movlw	255
  6488  002764  162F               	andwf	___ftdiv@f2+1,f,c
  6489  002766  0E00               	movlw	0
  6490  002768  1630               	andwf	___ftdiv@f2+2,f,c
  6491  00276A  0E18               	movlw	24
  6492  00276C  6E34               	movwf	___ftdiv@cntr,c
  6493  00276E  D000               	goto	l2365
  6494  002770                     l2365:
  6495  002770  90D8               	bcf	status,0,c
  6496  002772  3635               	rlcf	___ftdiv@f3,f,c
  6497  002774  3636               	rlcf	___ftdiv@f3+1,f,c
  6498  002776  3637               	rlcf	___ftdiv@f3+2,f,c
  6499  002778  502E               	movf	___ftdiv@f2,w,c
  6500  00277A  5C2B               	subwf	___ftdiv@f1,w,c
  6501  00277C  502F               	movf	___ftdiv@f2+1,w,c
  6502  00277E  582C               	subwfb	___ftdiv@f1+1,w,c
  6503  002780  5030               	movf	___ftdiv@f2+2,w,c
  6504  002782  582D               	subwfb	___ftdiv@f1+2,w,c
  6505  002784  A0D8               	btfss	status,0,c
  6506  002786  D007               	goto	l664
  6507  002788  502E               	movf	___ftdiv@f2,w,c
  6508  00278A  5E2B               	subwf	___ftdiv@f1,f,c
  6509  00278C  502F               	movf	___ftdiv@f2+1,w,c
  6510  00278E  5A2C               	subwfb	___ftdiv@f1+1,f,c
  6511  002790  5030               	movf	___ftdiv@f2+2,w,c
  6512  002792  5A2D               	subwfb	___ftdiv@f1+2,f,c
  6513  002794  8035               	bsf	___ftdiv@f3,0,c
  6514  002796                     l664:
  6515  002796  90D8               	bcf	status,0,c
  6516  002798  362B               	rlcf	___ftdiv@f1,f,c
  6517  00279A  362C               	rlcf	___ftdiv@f1+1,f,c
  6518  00279C  362D               	rlcf	___ftdiv@f1+2,f,c
  6519  00279E  2E34               	decfsz	___ftdiv@cntr,f,c
  6520  0027A0  D7E7               	goto	l2365
  6521  0027A2  D000               	goto	l2375
  6522  0027A4                     l2375:
  6523  0027A4  C035  F001         	movff	___ftdiv@f3,___ftpack@arg
  6524  0027A8  C036  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  6525  0027AC  C037  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  6526  0027B0  C038  F004         	movff	___ftdiv@exp,___ftpack@exp
  6527  0027B4  C039  F005         	movff	___ftdiv@sign,___ftpack@sign
  6528  0027B8  ECE6  F013         	call	___ftpack	;wreg free
  6529  0027BC  C001  F02B         	movff	?___ftpack,?___ftdiv
  6530  0027C0  C002  F02C         	movff	?___ftpack+1,?___ftdiv+1
  6531  0027C4  C003  F02D         	movff	?___ftpack+2,?___ftdiv+2
  6532  0027C8  D000               	goto	l661
  6533  0027CA                     l661:
  6534  0027CA  0012               	return		;funcret
  6535  0027CC                     __end_of___ftdiv:
  6536                           	opt stack 0
  6537                           tblptru	equ	0xFF8
  6538                           tblptrh	equ	0xFF7
  6539                           tblptrl	equ	0xFF6
  6540                           tablat	equ	0xFF5
  6541                           prodh	equ	0xFF4
  6542                           prodl	equ	0xFF3
  6543                           postinc0	equ	0xFEE
  6544                           wreg	equ	0xFE8
  6545                           postdec1	equ	0xFE5
  6546                           fsr1l	equ	0xFE1
  6547                           indf2	equ	0xFDF
  6548                           postinc2	equ	0xFDE
  6549                           postdec2	equ	0xFDD
  6550                           fsr2h	equ	0xFDA
  6551                           fsr2l	equ	0xFD9
  6552                           status	equ	0xFD8
  6553                           
  6554 ;; *************** function ___ftpack *****************
  6555 ;; Defined at:
  6556 ;;		line 62 in file "E:\XC8\sources\common\float.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  arg             3    0[COMRAM] unsigned um
  6559 ;;  exp             1    3[COMRAM] unsigned char 
  6560 ;;  sign            1    4[COMRAM] unsigned char 
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;		None
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  3    0[COMRAM] float 
  6565 ;; Registers used:
  6566 ;;		wreg, status,2, status,0
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6572 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;Total ram usage:        8 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		___awtoft
  6582 ;;		___ftadd
  6583 ;;		___ftdiv
  6584 ;;		___ftmul
  6585 ;;		___lbtoft
  6586 ;;		___lltoft
  6587 ;;		___lwtoft
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text33
  6592  0027CC                     __ptext33:
  6593                           	opt stack 0
  6594  0027CC                     ___ftpack:
  6595                           	opt stack 27
  6596                           
  6597                           ;incstack = 0
  6598  0027CC  5004               	movf	___ftpack@exp,w,c
  6599  0027CE  B4D8               	btfsc	status,2,c
  6600  0027D0  D005               	goto	l1867
  6601  0027D2  5001               	movf	___ftpack@arg,w,c
  6602  0027D4  1002               	iorwf	___ftpack@arg+1,w,c
  6603  0027D6  1003               	iorwf	___ftpack@arg+2,w,c
  6604  0027D8  A4D8               	btfss	status,2,c
  6605  0027DA  D00E               	goto	l1873
  6606  0027DC                     l1867:
  6607  0027DC  0E00               	movlw	0
  6608  0027DE  6E01               	movwf	?___ftpack,c
  6609  0027E0  0E00               	movlw	0
  6610  0027E2  6E02               	movwf	?___ftpack+1,c
  6611  0027E4  0E00               	movlw	0
  6612  0027E6  6E03               	movwf	?___ftpack+2,c
  6613  0027E8  D053               	goto	l589
  6614  0027EA  D006               	goto	l1873
  6615  0027EC                     l1871:
  6616  0027EC  2A04               	incf	___ftpack@exp,f,c
  6617  0027EE  90D8               	bcf	status,0,c
  6618  0027F0  3203               	rrcf	___ftpack@arg+2,f,c
  6619  0027F2  3202               	rrcf	___ftpack@arg+1,f,c
  6620  0027F4  3201               	rrcf	___ftpack@arg,f,c
  6621  0027F6  D000               	goto	l1873
  6622  0027F8                     l1873:
  6623  0027F8  0E00               	movlw	0
  6624  0027FA  1401               	andwf	___ftpack@arg,w,c
  6625  0027FC  6E06               	movwf	??___ftpack& (0+255),c
  6626  0027FE  0E00               	movlw	0
  6627  002800  1402               	andwf	___ftpack@arg+1,w,c
  6628  002802  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6629  002804  0EFE               	movlw	254
  6630  002806  1403               	andwf	___ftpack@arg+2,w,c
  6631  002808  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6632  00280A  5006               	movf	??___ftpack,w,c
  6633  00280C  1007               	iorwf	??___ftpack+1,w,c
  6634  00280E  1008               	iorwf	??___ftpack+2,w,c
  6635  002810  B4D8               	btfsc	status,2,c
  6636  002812  D00E               	goto	l1879
  6637  002814  D7EB               	goto	l1871
  6638  002816  D00C               	goto	l1879
  6639  002818                     l1875:
  6640  002818  2A04               	incf	___ftpack@exp,f,c
  6641  00281A  0E01               	movlw	1
  6642  00281C  2601               	addwf	___ftpack@arg,f,c
  6643  00281E  0E00               	movlw	0
  6644  002820  2202               	addwfc	___ftpack@arg+1,f,c
  6645  002822  0E00               	movlw	0
  6646  002824  2203               	addwfc	___ftpack@arg+2,f,c
  6647  002826  90D8               	bcf	status,0,c
  6648  002828  3203               	rrcf	___ftpack@arg+2,f,c
  6649  00282A  3202               	rrcf	___ftpack@arg+1,f,c
  6650  00282C  3201               	rrcf	___ftpack@arg,f,c
  6651  00282E  D000               	goto	l1879
  6652  002830                     l1879:
  6653  002830  0E00               	movlw	0
  6654  002832  1401               	andwf	___ftpack@arg,w,c
  6655  002834  6E06               	movwf	??___ftpack& (0+255),c
  6656  002836  0E00               	movlw	0
  6657  002838  1402               	andwf	___ftpack@arg+1,w,c
  6658  00283A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6659  00283C  0EFF               	movlw	255
  6660  00283E  1403               	andwf	___ftpack@arg+2,w,c
  6661  002840  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6662  002842  5006               	movf	??___ftpack,w,c
  6663  002844  1007               	iorwf	??___ftpack+1,w,c
  6664  002846  1008               	iorwf	??___ftpack+2,w,c
  6665  002848  B4D8               	btfsc	status,2,c
  6666  00284A  D008               	goto	l1883
  6667  00284C  D7E5               	goto	l1875
  6668  00284E  D006               	goto	l1883
  6669  002850                     l1881:
  6670  002850  0604               	decf	___ftpack@exp,f,c
  6671  002852  90D8               	bcf	status,0,c
  6672  002854  3601               	rlcf	___ftpack@arg,f,c
  6673  002856  3602               	rlcf	___ftpack@arg+1,f,c
  6674  002858  3603               	rlcf	___ftpack@arg+2,f,c
  6675  00285A  D000               	goto	l1883
  6676  00285C                     l1883:
  6677  00285C  BE02               	btfsc	___ftpack@arg+1,7,c
  6678  00285E  D004               	goto	l600
  6679  002860  0E02               	movlw	2
  6680  002862  6004               	cpfslt	___ftpack@exp,c
  6681  002864  D7F5               	goto	l1881
  6682  002866  D000               	goto	l600
  6683  002868                     l600:
  6684  002868  B004               	btfsc	___ftpack@exp,0,c
  6685  00286A  D002               	goto	l1889
  6686  00286C  9E02               	bcf	___ftpack@arg+1,7,c
  6687  00286E  D000               	goto	l1889
  6688  002870                     l1889:
  6689  002870  90D8               	bcf	status,0,c
  6690  002872  3204               	rrcf	___ftpack@exp,f,c
  6691  002874  5004               	movf	___ftpack@exp,w,c
  6692  002876  1203               	iorwf	___ftpack@arg+2,f,c
  6693  002878  5005               	movf	___ftpack@sign,w,c
  6694  00287A  B4D8               	btfsc	status,2,c
  6695  00287C  D002               	goto	l1895
  6696  00287E  8E03               	bsf	___ftpack@arg+2,7,c
  6697  002880  D000               	goto	l1895
  6698  002882                     l1895:
  6699  002882  C001  F001         	movff	___ftpack@arg,?___ftpack
  6700  002886  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6701  00288A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6702  00288E  D000               	goto	l589
  6703  002890                     l589:
  6704  002890  0012               	return		;funcret
  6705  002892                     __end_of___ftpack:
  6706                           	opt stack 0
  6707                           tblptru	equ	0xFF8
  6708                           tblptrh	equ	0xFF7
  6709                           tblptrl	equ	0xFF6
  6710                           tablat	equ	0xFF5
  6711                           prodh	equ	0xFF4
  6712                           prodl	equ	0xFF3
  6713                           postinc0	equ	0xFEE
  6714                           wreg	equ	0xFE8
  6715                           postdec1	equ	0xFE5
  6716                           fsr1l	equ	0xFE1
  6717                           indf2	equ	0xFDF
  6718                           postinc2	equ	0xFDE
  6719                           postdec2	equ	0xFDD
  6720                           fsr2h	equ	0xFDA
  6721                           fsr2l	equ	0xFD9
  6722                           status	equ	0xFD8
  6723                           
  6724 ;; *************** function _DO_DISPLAY_7SEG_Upper *****************
  6725 ;; Defined at:
  6726 ;;		line 94 in file "Lab5pB1.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  digit           1    wreg     unsigned char 
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;  digit           1    0[COMRAM] unsigned char 
  6731 ;;  PE              1    2[COMRAM] unsigned char 
  6732 ;;  PC              1    1[COMRAM] unsigned char 
  6733 ;; Return value:  Size  Location     Type
  6734 ;;		None               void
  6735 ;; Registers used:
  6736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6737 ;; Tracked objects:
  6738 ;;		On entry : 0/0
  6739 ;;		On exit  : 0/0
  6740 ;;		Unchanged: 0/0
  6741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6743 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6745 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6746 ;;Total ram usage:        3 bytes
  6747 ;; Hardware stack levels used:    1
  6748 ;; This function calls:
  6749 ;;		Nothing
  6750 ;; This function is called by:
  6751 ;;		_main
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           	psect	text34
  6756  002A4A                     __ptext34:
  6757                           	opt stack 0
  6758  002A4A                     _DO_DISPLAY_7SEG_Upper:
  6759                           	opt stack 30
  6760                           
  6761                           ;incstack = 0
  6762                           ;DO_DISPLAY_7SEG_Upper@digit stored from wreg
  6763  002A4A  6E01               	movwf	DO_DISPLAY_7SEG_Upper@digit,c
  6764                           
  6765                           ;Lab5pB1.c: 96: PORTC = array[digit] & 0x3F;
  6766  002A4C  5001               	movf	DO_DISPLAY_7SEG_Upper@digit,w,c
  6767  002A4E  0D02               	mullw	2
  6768  002A50  0EA8               	movlw	low _array
  6769  002A52  24F3               	addwf	prodl,w,c
  6770  002A54  6ED9               	movwf	fsr2l,c
  6771  002A56  0E00               	movlw	high _array
  6772  002A58  20F4               	addwfc	prodh,w,c
  6773  002A5A  6EDA               	movwf	fsr2h,c
  6774  002A5C  50DF               	movf	indf2,w,c
  6775  002A5E  0B3F               	andlw	63
  6776  002A60  6E82               	movwf	3970,c	;volatile
  6777                           
  6778                           ;Lab5pB1.c: 97: char PC = array[digit] & 0x01;
  6779  002A62  5001               	movf	DO_DISPLAY_7SEG_Upper@digit,w,c
  6780  002A64  0D02               	mullw	2
  6781  002A66  0EA8               	movlw	low _array
  6782  002A68  24F3               	addwf	prodl,w,c
  6783  002A6A  6ED9               	movwf	fsr2l,c
  6784  002A6C  0E00               	movlw	high _array
  6785  002A6E  20F4               	addwfc	prodh,w,c
  6786  002A70  6EDA               	movwf	fsr2h,c
  6787  002A72  50DF               	movf	indf2,w,c
  6788  002A74  0B01               	andlw	1
  6789  002A76  6E02               	movwf	DO_DISPLAY_7SEG_Upper@PC,c
  6790                           
  6791                           ;Lab5pB1.c: 98: char PE = array[digit] & 0x40;
  6792  002A78  5001               	movf	DO_DISPLAY_7SEG_Upper@digit,w,c
  6793  002A7A  0D02               	mullw	2
  6794  002A7C  0EA8               	movlw	low _array
  6795  002A7E  24F3               	addwf	prodl,w,c
  6796  002A80  6ED9               	movwf	fsr2l,c
  6797  002A82  0E00               	movlw	high _array
  6798  002A84  20F4               	addwfc	prodh,w,c
  6799  002A86  6EDA               	movwf	fsr2h,c
  6800  002A88  50DF               	movf	indf2,w,c
  6801  002A8A  0B40               	andlw	64
  6802  002A8C  6E03               	movwf	DO_DISPLAY_7SEG_Upper@PE,c
  6803                           
  6804                           ;Lab5pB1.c: 99: if (PE == 0 && PC ==0)
  6805  002A8E  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  6806  002A90  A4D8               	btfss	status,2,c
  6807  002A92  D005               	goto	l2551
  6808  002A94  5002               	movf	DO_DISPLAY_7SEG_Upper@PC,w,c
  6809  002A96  A4D8               	btfss	status,2,c
  6810  002A98  D002               	goto	l2551
  6811                           
  6812                           ;Lab5pB1.c: 100: PORTE = 0x00;
  6813  002A9A  0E00               	movlw	0
  6814  002A9C  D017               	goto	L10
  6815  002A9E                     l2551:
  6816                           
  6817                           ;Lab5pB1.c: 101: else if (PC == 0 && PE != 0)
  6818  002A9E  5002               	movf	DO_DISPLAY_7SEG_Upper@PC,w,c
  6819  002AA0  A4D8               	btfss	status,2,c
  6820  002AA2  D005               	goto	l2557
  6821  002AA4  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  6822  002AA6  B4D8               	btfsc	status,2,c
  6823  002AA8  D002               	goto	l2557
  6824                           
  6825                           ;Lab5pB1.c: 102: PORTE = 0x01;
  6826  002AAA  0E01               	movlw	1
  6827  002AAC  D00F               	goto	L10
  6828  002AAE                     l2557:
  6829                           
  6830                           ;Lab5pB1.c: 103: else if (PC == 1 && PE == 0)
  6831  002AAE  0402               	decf	DO_DISPLAY_7SEG_Upper@PC,w,c
  6832  002AB0  A4D8               	btfss	status,2,c
  6833  002AB2  D005               	goto	l2563
  6834  002AB4  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  6835  002AB6  A4D8               	btfss	status,2,c
  6836  002AB8  D002               	goto	l2563
  6837                           
  6838                           ;Lab5pB1.c: 104: PORTE = 0x02;
  6839  002ABA  0E02               	movlw	2
  6840  002ABC  D007               	goto	L10
  6841  002ABE                     l2563:
  6842                           
  6843                           ;Lab5pB1.c: 105: else if (PC == 1 && PE != 0)
  6844  002ABE  0402               	decf	DO_DISPLAY_7SEG_Upper@PC,w,c
  6845  002AC0  A4D8               	btfss	status,2,c
  6846  002AC2  D006               	goto	l122
  6847  002AC4  5003               	movf	DO_DISPLAY_7SEG_Upper@PE,w,c
  6848  002AC6  B4D8               	btfsc	status,2,c
  6849  002AC8  D003               	goto	l122
  6850                           
  6851                           ;Lab5pB1.c: 106: PORTE = 0x03;
  6852  002ACA  0E03               	movlw	3
  6853  002ACC                     L10:
  6854  002ACC  6E84               	movwf	3972,c	;volatile
  6855  002ACE  D000               	goto	l122
  6856  002AD0                     l122:
  6857  002AD0  0012               	return		;funcret
  6858  002AD2                     __end_of_DO_DISPLAY_7SEG_Upper:
  6859                           	opt stack 0
  6860                           tblptru	equ	0xFF8
  6861                           tblptrh	equ	0xFF7
  6862                           tblptrl	equ	0xFF6
  6863                           tablat	equ	0xFF5
  6864                           prodh	equ	0xFF4
  6865                           prodl	equ	0xFF3
  6866                           postinc0	equ	0xFEE
  6867                           wreg	equ	0xFE8
  6868                           postdec1	equ	0xFE5
  6869                           fsr1l	equ	0xFE1
  6870                           indf2	equ	0xFDF
  6871                           postinc2	equ	0xFDE
  6872                           postdec2	equ	0xFDD
  6873                           fsr2h	equ	0xFDA
  6874                           fsr2l	equ	0xFD9
  6875                           status	equ	0xFD8
  6876                           
  6877 ;; *************** function _DO_DISPLAY_7SEG_Lower *****************
  6878 ;; Defined at:
  6879 ;;		line 110 in file "Lab5pB1.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  digit           1    wreg     unsigned char 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  digit           1    0[COMRAM] unsigned char 
  6884 ;; Return value:  Size  Location     Type
  6885 ;;		None               void
  6886 ;; Registers used:
  6887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6896 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;Total ram usage:        1 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; This function calls:
  6900 ;;		Nothing
  6901 ;; This function is called by:
  6902 ;;		_main
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           	psect	text35
  6907  002E8C                     __ptext35:
  6908                           	opt stack 0
  6909  002E8C                     _DO_DISPLAY_7SEG_Lower:
  6910                           	opt stack 30
  6911                           
  6912                           ;incstack = 0
  6913                           ;DO_DISPLAY_7SEG_Lower@digit stored from wreg
  6914  002E8C  6E01               	movwf	DO_DISPLAY_7SEG_Lower@digit,c
  6915                           
  6916                           ;Lab5pB1.c: 112: PORTD = array[digit];
  6917  002E8E  5001               	movf	DO_DISPLAY_7SEG_Lower@digit,w,c
  6918  002E90  0D02               	mullw	2
  6919  002E92  0EA8               	movlw	low _array
  6920  002E94  24F3               	addwf	prodl,w,c
  6921  002E96  6ED9               	movwf	fsr2l,c
  6922  002E98  0E00               	movlw	high _array
  6923  002E9A  20F4               	addwfc	prodh,w,c
  6924  002E9C  6EDA               	movwf	fsr2h,c
  6925  002E9E  50DF               	movf	indf2,w,c
  6926  002EA0  6E83               	movwf	3971,c	;volatile
  6927  002EA2  0012               	return		;funcret
  6928  002EA4                     __end_of_DO_DISPLAY_7SEG_Lower:
  6929                           	opt stack 0
  6930                           tblptru	equ	0xFF8
  6931                           tblptrh	equ	0xFF7
  6932                           tblptrl	equ	0xFF6
  6933                           tablat	equ	0xFF5
  6934                           prodh	equ	0xFF4
  6935                           prodl	equ	0xFF3
  6936                           postinc0	equ	0xFEE
  6937                           wreg	equ	0xFE8
  6938                           postdec1	equ	0xFE5
  6939                           fsr1l	equ	0xFE1
  6940                           indf2	equ	0xFDF
  6941                           postinc2	equ	0xFDE
  6942                           postdec2	equ	0xFDD
  6943                           fsr2h	equ	0xFDA
  6944                           fsr2l	equ	0xFD9
  6945                           status	equ	0xFD8
  6946                           
  6947 ;; *************** function _Activate_Buzzer *****************
  6948 ;; Defined at:
  6949 ;;		line 66 in file "Lab5pB1.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;		None
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;		None
  6954 ;; Return value:  Size  Location     Type
  6955 ;;		None               void
  6956 ;; Registers used:
  6957 ;;		wreg, status,2
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6967 ;;Total ram usage:        0 bytes
  6968 ;; Hardware stack levels used:    1
  6969 ;; This function calls:
  6970 ;;		Nothing
  6971 ;; This function is called by:
  6972 ;;		_main
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text36
  6977  002ECC                     __ptext36:
  6978                           	opt stack 0
  6979  002ECC                     _Activate_Buzzer:
  6980                           	opt stack 30
  6981                           
  6982                           ;Lab5pB1.c: 68: PR2 = 0b11111001 ;
  6983                           
  6984                           ;incstack = 0
  6985  002ECC  0EF9               	movlw	249
  6986  002ECE  6ECB               	movwf	4043,c	;volatile
  6987                           
  6988                           ;Lab5pB1.c: 69: T2CON = 0b00000101 ;
  6989  002ED0  0E05               	movlw	5
  6990  002ED2  6ECA               	movwf	4042,c	;volatile
  6991                           
  6992                           ;Lab5pB1.c: 70: CCPR2L = 0b01001010 ;
  6993  002ED4  0E4A               	movlw	74
  6994  002ED6  6EBB               	movwf	4027,c	;volatile
  6995                           
  6996                           ;Lab5pB1.c: 71: CCP2CON = 0b00111100 ;
  6997  002ED8  0E3C               	movlw	60
  6998  002EDA  6EBA               	movwf	4026,c	;volatile
  6999  002EDC  0012               	return		;funcret
  7000  002EDE                     __end_of_Activate_Buzzer:
  7001                           	opt stack 0
  7002                           tblptru	equ	0xFF8
  7003                           tblptrh	equ	0xFF7
  7004                           tblptrl	equ	0xFF6
  7005                           tablat	equ	0xFF5
  7006                           prodh	equ	0xFF4
  7007                           prodl	equ	0xFF3
  7008                           postinc0	equ	0xFEE
  7009                           wreg	equ	0xFE8
  7010                           postdec1	equ	0xFE5
  7011                           fsr1l	equ	0xFE1
  7012                           indf2	equ	0xFDF
  7013                           postinc2	equ	0xFDE
  7014                           postdec2	equ	0xFDD
  7015                           fsr2h	equ	0xFDA
  7016                           fsr2l	equ	0xFD9
  7017                           status	equ	0xFD8
  7018                           tblptru	equ	0xFF8
  7019                           tblptrh	equ	0xFF7
  7020                           tblptrl	equ	0xFF6
  7021                           tablat	equ	0xFF5
  7022                           prodh	equ	0xFF4
  7023                           prodl	equ	0xFF3
  7024                           postinc0	equ	0xFEE
  7025                           wreg	equ	0xFE8
  7026                           postdec1	equ	0xFE5
  7027                           fsr1l	equ	0xFE1
  7028                           indf2	equ	0xFDF
  7029                           postinc2	equ	0xFDE
  7030                           postdec2	equ	0xFDD
  7031                           fsr2h	equ	0xFDA
  7032                           fsr2l	equ	0xFD9
  7033                           status	equ	0xFD8
  7034                           
  7035                           	psect	rparam
  7036  0000                     tblptru	equ	0xFF8
  7037                           tblptrh	equ	0xFF7
  7038                           tblptrl	equ	0xFF6
  7039                           tablat	equ	0xFF5
  7040                           prodh	equ	0xFF4
  7041                           prodl	equ	0xFF3
  7042                           postinc0	equ	0xFEE
  7043                           wreg	equ	0xFE8
  7044                           postdec1	equ	0xFE5
  7045                           fsr1l	equ	0xFE1
  7046                           indf2	equ	0xFDF
  7047                           postinc2	equ	0xFDE
  7048                           postdec2	equ	0xFDD
  7049                           fsr2h	equ	0xFDA
  7050                           fsr2l	equ	0xFD9
  7051                           status	equ	0xFD8


Data Sizes:
    Strings     22
    Constant    118
    Data        20
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    113     123
    BANK0           128     40      68
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_fround
    _scale->___wmul
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___awmod->___fttol
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___ftadd
    ___ftadd->___ftneg
    ___ftneg->___lbtoft
    _init_UART->_OpenUSART
    ___lwtoft->___ftpack
    ___lbtoft->___ftpack
    ___awtoft->___fttol
    _DO_DISPLAY_D1->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   66244
                                             23 BANK0     17    17      0
                    _Activate_Buzzer
              _DO_DISPLAY_7SEG_Lower
              _DO_DISPLAY_7SEG_Upper
                      _DO_DISPLAY_D1
                  _Deactivate_Buzzer
                       _Get_Full_ADC
                           _Init_ADC
                         _SET_D2_OFF
                      _SET_D2_YELLOW
                 _Select_ADC_Channel
                         _WAIT_1_SEC
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft
                           ___lwtoft
                          _init_UART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   40178
                                            102 COMRAM    11     6      5
                                              0 BANK0     23    23      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    9516
                                             92 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                            ___fttol (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    9318
                                             92 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             86 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4244
                                             27 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1462
                                             72 COMRAM     6     2      4
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1466
                                             78 COMRAM     8     4      4
                            ___awmod (ARG)
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1946
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     477
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     374
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3421
                                             27 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3168
                                             15 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     204
                                             12 COMRAM     3     0      3
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    1899
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    1846
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2021
                                             72 COMRAM     4     1      3
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _WAIT_1_SEC                                           2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SET_D2_YELLOW                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SET_D2_OFF                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_D1                                        3     0      3    4365
                                             72 COMRAM     3     0      3
                            ___ftdiv
                             ___ftge
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     888
                                             57 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     878
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2502
                                             42 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1824
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_7SEG_Upper                                3     3      0     244
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_7SEG_Lower                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Activate_Buzzer
   _DO_DISPLAY_7SEG_Lower
   _DO_DISPLAY_7SEG_Upper
   _DO_DISPLAY_D1
     ___ftdiv
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
   _Deactivate_Buzzer
   _Get_Full_ADC
   _Init_ADC
   _SET_D2_OFF
   _SET_D2_YELLOW
   _Select_ADC_Channel
   _WAIT_1_SEC
   ___awdiv
     ___awmod (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
   ___awmod
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
   ___awtoft
     ___ftpack
     ___fttol (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
   ___ftadd
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftdiv
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftneg
     ___lbtoft (ARG)
       ___ftpack
   ___fttol
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___lbtoft
     ___ftpack
   ___lwtoft
     ___ftpack
   _init_UART
     _OpenUSART
   _printf
     ___awdiv
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
     ___ftadd
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftge
     ___ftmul
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg
       ___lbtoft (ARG)
         ___ftpack
     ___ftsub
       ___ftadd
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___awmod (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___awmod
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftmul (ARG)
                   ___ftadd (ARG)
                     ___ftneg (ARG)
                       ___lbtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___awmod
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
       ___ftmul
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftmul (ARG)
                   ___ftadd (ARG)
                     ___ftneg (ARG)
                       ___lbtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___awmod (ARG)
           ___ftmul (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftadd (ARG)
                   ___ftneg (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___ftadd (ARG)
                 ___ftneg (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
         ___ftmul (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     28      44       5       53.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     71      7B       1       96.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BF      34        0.0%
DATA                 0      0      BF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Sep 25 15:52:16 2021

                             _F 0072                              l82 2EE2                              l91 2E46  
                            l79 2E8A                              l88 2E26                              _Tc 0075  
                  ___awdiv@sign 0054             ___wmul@multiplicand 0059                    ___ftadd@exp1 001B  
                  ___ftadd@exp2 001A                    ___ftadd@sign 0019                             l122 2AD0  
                           l130 2CEA                             l217 1594                             l252 2BF0  
                           l172 1B3C                             l228 175C                             l261 2C32  
                           l165 212C                             l600 2868                             l256 2C0A  
                           l264 2DD4                             l257 2C0C                             l258 2C16  
                           l259 2C18                             l630 22F0                             l710 2D2E  
                           l470 2B52                             l703 2E5E                             l633 219C  
                           l457 2926                             l714 26E8                             l482 2DAC  
                           l644 225E                             l548 250A                             l661 27CA  
                           l653 227A                             l629 2172                             l557 24FA  
                           l750 2E20                             l671 2368                             l664 2796  
                           l672 2390                             l753 2A38                             l843 2DFA  
                           l763 2BB2                             l589 2890                             l669 2400  
                           l693 2602                             l678 23F0                             l687 29BC  
                           l783 2C92                             _PR2 000FCB               _Deactivate_Buzzer 2F16  
                  ___awmod@sign 004E                             prod 000FF3                             wreg 000FE8  
            ?_Deactivate_Buzzer 0001                    __CFG_LVP$OFF 000000                  ?_DO_DISPLAY_D1 0049  
                  ___ftdiv@cntr 0034                    ___ftdiv@sign 0039                    __CFG_WDT$OFF 000000  
                          l2001 2586                            l2011 25B4                            l2005 2598  
                          l2031 28A8                            l2015 25C6                            l2121 2BE8  
                          l2113 2BD6                            l2009 25AE                            l2043 28D0  
                          l2019 25DC                            l2133 2C02                            l2125 2BF4  
                          l2117 2BE0                            l2045 28DA                            l2037 28BA  
                          l2213 1B18                            l2311 24A8                            l2223 2310  
                          l2063 291C                            l2055 2900                            l2047 28E2  
                          l2207 1A66                            l2401 29B8                            l2331 24F4  
                          l2323 24CC                            l2307 2498                            l2251 239E  
                          l2059 290C                            l2091 2B2C                            l2083 2B04  
                          l2075 2AE8                            l2341 2722                            l2325 24D2  
                          l2229 232E                            l2085 2B0E                            l2415 2622  
                          l2319 24BC                            l2271 23EA                            l2263 23C2  
                          l2087 2B16                            l2095 2B38                            l2079 2AF6  
                          l2175 20EC                            l2167 2028                            l2345 2730  
                          l2433 267C                            l2505 2E74                            l2329 24E6  
                          l2265 23C8                            l2339 2708                            l2451 26D6  
                          l2443 26A6                            l2259 23B2                            l2099 2B48  
                          l2195 1932                            l2365 2770                            l2445 26B4  
                          l2437 268C                            l2509 2E82                            l2461 29E0  
                          l2285 2422                            l2269 23DC                            l2189 188A  
                          l2621 11EC                            l2605 1148                            l2551 2A9E  
                          l2375 27A4                            l2391 295A                            l2439 2692  
                          l2447 26BE                            l2383 2D04                            l2463 29EE  
                          l2279 2412                            l2199 1942                            l1913 2180  
                          l2473 2A28                            l2465 29F6                            l2481 2B66  
                          l2721 170E                            l2705 15C0                            l2633 127C  
                          l2563 2ABE                            l2395 298C                            l2483 2B74  
                          l2299 2466                            l2715 16EE                            l2651 1352  
                          l2635 1292                            l2723 171E                            l2557 2AAE  
                          l1941 2202                            l1925 21B6                            l2485 2B7C  
                          l2717 16FE                            l2709 1612                            l2645 1320  
                          l2637 12C4                            l2629 1254                            l2805 1E0C  
                          l1871 27EC                            l2575 2CB8                            l1943 220E  
                          l1935 21DE                            l1919 21AA                            l2495 2C3A  
                          l2663 1440                            l2655 1396                            l2639 12DA  
                          l2591 10EC                            l2583 10B0                            l2727 173E  
                          l1881 2850                            l1873 27F8                            l2737 2D88  
                          l1961 2298                            l1953 2246                            l1945 221A  
                          l2489 2BA2                            l2497 2C48                            l2681 14B4  
                          l2673 148E                            l2665 1446                            l2657 13C4  
                          l2649 1346                            l2585 10BE                            l2817 1EC8  
                          l1883 285C                            l1875 2818                            l1867 27DC  
                          l1971 22CA                            l1955 2252                            l1947 2222  
                          l2659 13D8                            l2579 109C                            l1981 252A  
                          l2693 1562                            l2677 1494                            l2669 1454  
                          l2589 10C8                            l1895 2882                            l1879 2830  
                          l1983 2544                            l2695 1576                            l2687 1542  
                          l2767 1B5A                            l1889 2870                            l2689 1552  
                          l2785 1CC2                            l1987 2552                            l2699 159A  
                          l2787 1CCC                            STR_1 1077                            u2301 26FA  
                          u2141 2302                            u2321 2718                            u2401 2614  
                          u2161 2320                            u2420 2640                            u2425 2638  
                          u1801 253A                            u1571 213E                            u1581 2152  
                          u2710 1188                            u2715 117E                    printf@tmpval 008F  
                          u1781 251C                            u2870 158C                            _TRMT 007D61  
                          _Vdec 0078             ??_Deactivate_Buzzer 0001                            _main 1B3E  
                  ___ftpack@arg 0001                    ___ftpack@exp 0004                            _temp 00BF  
                          fsr2h 000FDA                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                            prodh 000FF4                            prodl 000FF3  
                          start 0000                    ___ftmul@cntr 0029                    ___param_bank 000010  
                  ___ftmul@sign 002A            __end_of_Get_Full_ADC 2E48                    ___fttol@exp1 0048  
                  ___fttol@lval 0044                     ?_WAIT_1_SEC 0001       __end_of_Deactivate_Buzzer 2F1E  
                   ?_SET_D2_OFF 0001                           ?_main 0001                 __end_of___awdiv 2928  
               __end_of___ftadd 22F2                 __end_of___awmod 2B54                 __end_of___ftdiv 27CC  
               __end_of___ftneg 2E6C                 __end_of___lldiv 2A4A                 __end_of___ftmul 2604  
               ___awdiv@divisor 0051                 __end_of___llmod 2BC4                 __end_of___ftsub 2D30  
               __end_of___fttol 26EA                           _T2CON 000FCA                 ___awdiv@counter 0053  
                         _RCSTA 000FAB                           _SPBRG 000FAF                           _PORTA 000F80  
                         _PORTB 000F81                           _PORTC 000F82                           _PORTD 000F83  
                         _PORTE 000F84                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                         _TXREG 000FAD                           _TXSTA 000FAC                    ___lltoft@exp 0011  
                 ___awtoft@sign 004C                 __end_of_dpowers 1029                           _array 00A8  
                         _scale 175E                           _tempF 007A                   ___ftpack@sign 0005  
                         _nstep 00C2                           main@L 0099                           main@U 0097  
                         _putch 2EDE                  __CFG_BOREN$OFF 000000                           tablat 000FF5  
                         status 000FD8          ?_DO_DISPLAY_7SEG_Lower 0001          ?_DO_DISPLAY_7SEG_Upper 0001  
               __initialization 2D30                    __end_of_main 1EEA                __end_of_Init_ADC 2F16  
                        ??_main 0072                   ___fttol@sign1 0043                   __activetblptr 000002  
         __end_of_SET_D2_YELLOW 2F02            __size_of__tdiv_to_l_ 0110                 ??_DO_DISPLAY_D1 004C  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
              ___llmod@dividend 0001                          ?_scale 005D                          _ADRESH 000FC4  
                        _ADRESL 000FC3                          _CCPR2L 000FBB                ___awdiv@dividend 004F  
              __end_of___awtoft 2DAE                          ?_putch 0001                __end_of___ftpack 2892  
              __end_of___lbtoft 2E22                __end_of___lltoft 2C94                __end_of___lwtoft 2DFC  
                        _OSCCON 000FD3                          _SPBRGH 000FB0             __size_of_WAIT_1_SEC 0020  
            Get_Full_ADC@result 0005             __size_of_SET_D2_OFF 000A                __end_of__powers_ 1077  
            __size_of_OpenUSART 0070                          ___ftge 2928        __size_of_Activate_Buzzer 0012  
                        ___wmul 2DAE                       ??___awdiv 0053                       ??___ftadd 0016  
                     ??___awmod 004D                       ??___ftdiv 0031                       ??___ftneg 0010  
                     ??___lldiv 0009                       ??___ftmul 0022                       ??___llmod 0009  
                     ??___ftsub 0022                       ??___fttol 003E                          _fround 1EEA  
                        clear_0 2D36                          clear_1 2D42                ___awdiv@quotient 0055  
               ___awmod@divisor 004B                          _resist 00BC      __size_of_Deactivate_Buzzer 0008  
               ___awmod@counter 004D                          _printf 108E                          main@rL 00A5  
                        main@vL 009E           ___ftmul@f3_as_product 0026                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                        putch@c 0001                      __accesstop 0080         __end_of__initialization 2D68  
                    ___ftadd@f1 0010                      ___ftadd@f2 0013                      ___ftge@ff1 0001  
                    ___ftge@ff2 0004                   ___rparam_used 000001                      ___ftdiv@f1 002B  
                    ___ftdiv@f2 002E                      ___ftdiv@f3 0035           __size_of_Get_Full_ADC 0026  
                    ___ftneg@f1 000D                      ___awtoft@c 0049                      ___lbtoft@c 000C  
                    ___ftmul@f1 001C                      ___ftmul@f2 001F                      ___ftsub@f1 001C  
                    ___ftsub@f2 001F                      ___fttol@f1 003A                  __pcstackCOMRAM 0001  
                  __pidataBANK0 2EA4                      ___lltoft@c 0009                   __end_of_scale 1B3E  
                 __end_of_putch 2EEC                      ___lwtoft@c 0009                      __div_to_l_ 2402  
             __end_of_OpenUSART 2C34                 __div_to_l_@exp1 000C                 __div_to_l_@cntr 000B  
                       ??_scale 0060                 __div_to_l_@quot 0007                    _Get_Full_ADC 2E22  
                       ??_putch 0001                      __pbssBANK0 00BC                       ?_Init_ADC 0001  
            __size_of_init_UART 0014      __end_of_Select_ADC_Channel 2EF8                   __div_to_l_@f1 0001  
                 __div_to_l_@f2 0004              __CFG_CCP2MX$PORTBE 000000                         ?___ftge 0001  
                       ?___wmul 0057                         _CCP2CON 000FBA                         ?_fround 005D  
                  ??_WAIT_1_SEC 0001                       ?___awtoft 0049                       ?___ftpack 0001  
                     ?___lbtoft 0009                         ?_printf 0067                    ??_SET_D2_OFF 0001  
     Select_ADC_Channel@channel 0001                       ?___lltoft 0009                       ?___lwtoft 0009  
             ??_Activate_Buzzer 0001                     WAIT_1_SEC@j 0001                      ??_Init_ADC 0001  
       ??_DO_DISPLAY_7SEG_Lower 0001         ??_DO_DISPLAY_7SEG_Upper 0001              __end_of_WAIT_1_SEC 2E8C  
            __end_of_SET_D2_OFF 2F0C               __end_of__npowers_ 1050                         __Hparam 0000  
                    _scale$1512 0060                         __Lparam 0000                 __size_of___ftge 0096  
                       ___awdiv 2892                         ___ftadd 212E                         ___awmod 2AD2  
                       ___ftdiv 26EA                         ___ftneg 2E48                         ___lldiv 29BE  
               __size_of___wmul 0028                         ___ftmul 250C                         ___llmod 2B54  
                       ___ftsub 2CEC                         ___fttol 2604                    __psmallconst 1000  
                       __pcinit 2D30                      ??___awtoft 004C                      ??___ftpack 0006  
                    ??___lbtoft 000C                 __size_of_fround 0244                         __ramtop 1000  
                    ??___lltoft 000D                         __ptext0 1B3E                         __ptext1 108E  
                       __ptext2 175E                         __ptext3 2EDE                         __ptext4 1EEA  
                       __ptext5 2DAE                         __ptext6 250C                         __ptext7 2AD2  
                       __ptext8 2892                         __ptext9 22F2                 __size_of_printf 06D0  
             __end_of_init_UART 2ECC                      ??___lwtoft 000C                     ?__div_to_l_ 0001  
                       _dpowers 1001                ___awmod@dividend 0049            end_of_initialization 2D68  
                DO_DISPLAY_D1@T 0049                   __Lmediumconst 0000                 ___lldiv@divisor 0005  
               ___lldiv@counter 000D                       _RCSTAbits 000FAB                         printf@c 0096  
                       printf@f 0067                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE                  __tdiv_to_l_@f1 0001  
                __tdiv_to_l_@f2 0004                   ??__tdiv_to_l_ 0007                       _PORTAbits 000F80  
                     _PORTBbits 000F81                       _PORTDbits 000F83                       _PORTEbits 000F84  
                     _TRISCbits 000F94                  main@voltage_mv 009B           __end_of_DO_DISPLAY_D1 2CEC  
                   ___ftdiv@exp 0038                       _TXSTAbits 000FAC          __size_of_SET_D2_YELLOW 000A  
           __size_of__div_to_l_ 010A                     ___ftmul@exp 0025                  __end_of___ftge 29BE  
                __end_of___wmul 2DD6                  __end_of_fround 212E                  __end_of_printf 175E  
           start_initialization 2D30         DO_DISPLAY_7SEG_Upper@PC 0002         DO_DISPLAY_7SEG_Upper@PE 0003  
    DO_DISPLAY_7SEG_Lower@digit 0001             __end_of__tdiv_to_l_ 2402                       _OpenUSART 2BC4  
               ___llmod@divisor 0005                __CFG_OSC$INTIO67 000000               __size_of_Init_ADC 000A  
               ___llmod@counter 0009                 _Activate_Buzzer 2ECC                        ??___ftge 0007  
                      ??___wmul 005B                     __pdataBANK0 00A8              _Select_ADC_Channel 2EEC  
                      ??_fround 0060                        ??_printf 006C                      fround@prec 0066  
             __size_of___awtoft 003C               __size_of___ftpack 00C6               __size_of___lbtoft 0026  
                 _SET_D2_YELLOW 2EF8             ?_Select_ADC_Channel 0001               __size_of___lltoft 0060  
                   __pbssCOMRAM 0072               __size_of___lwtoft 0026                   __pcstackBANK0 0080  
                    ?_OpenUSART 0001  __size_of_DO_DISPLAY_7SEG_Lower 0018   __end_of_DO_DISPLAY_7SEG_Lower 2EA4  
__size_of_DO_DISPLAY_7SEG_Upper 0088   __end_of_DO_DISPLAY_7SEG_Upper 2AD2            ??_Select_ADC_Channel 0001  
                      ?___awdiv 004F                        ?___ftadd 0010                        ?___awmod 0049  
                      ?___ftdiv 002B                        ?___ftneg 000D                        ?___lldiv 0001  
                      ?___ftmul 001C                        ?___llmod 0001                        ?___ftsub 001C  
                     __npowers_ 1029                        ?___fttol 003A                     __tdiv_to_l_ 22F2  
                  ??__div_to_l_ 0007                  ?_SET_D2_YELLOW 0001                     __smallconst 1000  
    DO_DISPLAY_7SEG_Upper@digit 0001                       _init_UART 2EB8                  __size_of_scale 03E0  
                __size_of_putch 000E         __end_of_Activate_Buzzer 2EDE                  ___wmul@product 005B  
                      _PIE1bits 000F9D                        _PIR1bits 000F9E              __end_of__div_to_l_ 250C  
                     main@L_615 00A1                       main@L_627 00A3                       main@U_614 00A4  
                     main@U_626 00A2                      _ADCON0bits 000FC2               ___wmul@multiplier 0057  
                    printf@flag 0085                      printf@fval 0093                      printf@prec 0087  
                    ?_init_UART 0001                       copy_data0 2D5C                        _Init_ADC 2F0C  
                   ??_OpenUSART 0003                 OpenUSART@config 0003                        __Hrparam 0000  
                      __Lrparam 0000                __size_of___awdiv 0096                __size_of___ftadd 01C4  
              __size_of___awmod 0082                __size_of___ftdiv 00E2                __size_of___ftneg 0024  
              __size_of___lldiv 008C                __size_of___ftmul 00F8                __size_of___llmod 0070  
              __size_of___ftsub 0044                __size_of___fttol 00E6                        ___awtoft 2D72  
               ??_SET_D2_YELLOW 0001                        ___ftpack 27CC                        ___lbtoft 2DFC  
                   _fround$1510 0063                     _fround$1511 0060                        ___lltoft 2C34  
                      ___lwtoft 2DD6                        __ptext10 2402                        __ptext11 2C34  
                      __ptext20 2DFC                        __ptext12 2B54                        __ptext21 2D72  
                      __ptext13 29BE                        __ptext30 2604                        __ptext22 2E6C  
                      __ptext14 2CEC                        __ptext31 2928                        __ptext23 2EEC  
                      __ptext15 212E                        __ptext32 26EA                        __ptext24 2EF8  
                      __ptext16 2E48                        __ptext33 27CC                        __ptext25 2F02  
                      __ptext17 2EB8                        __ptext34 2A4A                        __ptext26 2F0C  
                      __ptext18 2BC4                        __ptext35 2E8C                        __ptext27 2E22  
                      __ptext19 2DD6                        __ptext36 2ECC                        __ptext28 2F16  
                      __ptext29 2C94                        __powers_ 1050                   ?_Get_Full_ADC 0001  
              ?_Activate_Buzzer 0001                   __size_of_main 03AC          __size_of_DO_DISPLAY_D1 0058  
                     printf@exp 008D                       printf@val 0089                  OpenUSART@spbrg 0001  
                   ??_init_UART 0004                  ??_Get_Full_ADC 0003                        scale@scl 0063  
              __tdiv_to_l_@exp1 000F                __tdiv_to_l_@cntr 000E                __tdiv_to_l_@quot 000A  
              ___lldiv@dividend 0001                        printf@ap 0083                      _WAIT_1_SEC 2E6C  
                  ?__tdiv_to_l_ 0001                      _SET_D2_OFF 2F02                     _printf$1513 0080  
              ___lldiv@quotient 0009                   _DO_DISPLAY_D1 2C94     __size_of_Select_ADC_Channel 000C  
         _DO_DISPLAY_7SEG_Lower 2E8C           _DO_DISPLAY_7SEG_Upper 2A4A  
