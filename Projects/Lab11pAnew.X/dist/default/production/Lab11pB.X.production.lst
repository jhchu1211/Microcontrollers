

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Nov 06 13:07:29 2021

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           	psect	idataCOMRAM
    64  001122                     __pidataCOMRAM:
    65                           	opt stack 0
    66                           
    67                           ;initializer for _setup_fan_temp
    68  001122  4B                 	db	75
    69                           
    70                           ;initializer for _tempSecond
    71  001123  FF                 	db	255
    72                           
    73                           ;initializer for _wrap
    74  001124  01                 	db	1
    75                           
    76                           ;initializer for _tempC
    77  001125  2B                 	db	43
    78  001126  32                 	db	50
    79  001127  35                 	db	53
    80  001128  00                 	db	0
    81                           
    82                           ;initializer for _tempF
    83  001129  2B                 	db	43
    84  00112A  37                 	db	55
    85  00112B  37                 	db	55
    86  00112C  00                 	db	0
    87                           
    88                           	psect	idataBANK0
    89  000D1A                     __pidataBANK0:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _array1
    93  000D1A  A2                 	db	162
    94  000D1B  62                 	db	98
    95  000D1C  E2                 	db	226
    96  000D1D  22                 	db	34
    97  000D1E  02                 	db	2
    98  000D1F  C2                 	db	194
    99  000D20  E0                 	db	224
   100  000D21  A8                 	db	168
   101  000D22  90                 	db	144
   102  000D23  68                 	db	104
   103  000D24  98                 	db	152
   104  000D25  B0                 	db	176
   105  000D26  30                 	db	48
   106  000D27  18                 	db	24
   107  000D28  7A                 	db	122
   108  000D29  10                 	db	16
   109  000D2A  38                 	db	56
   110  000D2B  5A                 	db	90
   111  000D2C  42                 	db	66
   112  000D2D  4A                 	db	74
   113  000D2E  52                 	db	82
   114                           
   115                           ;initializer for _alarm_time
   116  000D2F  30                 	db	48
   117  000D30  30                 	db	48
   118  000D31  3A                 	db	58
   119  000D32  30                 	db	48
   120  000D33  30                 	db	48
   121  000D34  3A                 	db	58
   122  000D35  30                 	db	48
   123  000D36  30                 	db	48
   124  000D37  00                 	db	0
   125                           
   126                           ;initializer for _setup_alarm_time
   127  000D38  30                 	db	48
   128  000D39  30                 	db	48
   129  000D3A  3A                 	db	58
   130  000D3B  30                 	db	48
   131  000D3C  30                 	db	48
   132  000D3D  3A                 	db	58
   133  000D3E  30                 	db	48
   134  000D3F  30                 	db	48
   135  000D40  00                 	db	0
   136                           
   137                           ;initializer for _setup_date
   138  000D41  30                 	db	48
   139  000D42  31                 	db	49
   140  000D43  2F                 	db	47
   141  000D44  30                 	db	48
   142  000D45  31                 	db	49
   143  000D46  2F                 	db	47
   144  000D47  30                 	db	48
   145  000D48  30                 	db	48
   146  000D49  00                 	db	0
   147                           
   148                           ;initializer for _setup_time
   149  000D4A  30                 	db	48
   150  000D4B  30                 	db	48
   151  000D4C  3A                 	db	58
   152  000D4D  30                 	db	48
   153  000D4E  30                 	db	48
   154  000D4F  3A                 	db	58
   155  000D50  30                 	db	48
   156  000D51  30                 	db	48
   157  000D52  00                 	db	0
   158                           
   159                           ;initializer for _setup_fan_text
   160  000D53  30                 	db	48
   161  000D54  37                 	db	55
   162  000D55  35                 	db	53
   163  000D56  46                 	db	70
   164  000D57  00                 	db	0
   165                           
   166                           ;initializer for _Alarm_SW_Txt
   167  000D58  4F                 	db	79
   168  000D59  46                 	db	70
   169  000D5A  46                 	db	70
   170  000D5B  00                 	db	0
   171                           
   172                           ;initializer for _RTC_ALARM_Txt
   173  000D5C  30                 	db	48
   174  000D5D  00                 	db	0
   175                           
   176                           ;initializer for _date
   177  000D5E  30                 	db	48
   178  000D5F  30                 	db	48
   179  000D60  2F                 	db	47
   180  000D61  30                 	db	48
   181  000D62  30                 	db	48
   182  000D63  2F                 	db	47
   183  000D64  30                 	db	48
   184  000D65  30                 	db	48
   185  000D66  00                 	db	0
   186                           
   187                           ;initializer for _time
   188  000D67  30                 	db	48
   189  000D68  30                 	db	48
   190  000D69  3A                 	db	58
   191  000D6A  30                 	db	48
   192  000D6B  30                 	db	48
   193  000D6C  3A                 	db	58
   194  000D6D  30                 	db	48
   195  000D6E  30                 	db	48
   196  000D6F  00                 	db	0
   197                           
   198                           ;initializer for _RPM_Txt
   199  000D70  30                 	db	48
   200  000D71  30                 	db	48
   201  000D72  30                 	db	48
   202  000D73  30                 	db	48
   203  000D74  00                 	db	0
   204                           
   205                           ;initializer for _DC_Txt
   206  000D75  30                 	db	48
   207  000D76  30                 	db	48
   208  000D77  30                 	db	48
   209  000D78  00                 	db	0
   210                           
   211                           ;initializer for _Fan_SW_Txt
   212  000D79  4F                 	db	79
   213  000D7A  46                 	db	70
   214  000D7B  46                 	db	70
   215  000D7C  00                 	db	0
   216                           
   217                           	psect	idataBANK1
   218  001012                     __pidataBANK1:
   219                           	opt stack 0
   220                           
   221                           ;initializer for _buffer
   222  001012  20                 	db	32
   223  001013  45                 	db	69
   224  001014  43                 	db	67
   225  001015  45                 	db	69
   226  001016  33                 	db	51
   227  001017  33                 	db	51
   228  001018  30                 	db	48
   229  001019  31                 	db	49
   230  00101A  4C                 	db	76
   231  00101B  20                 	db	32
   232  00101C  53                 	db	83
   233  00101D  70                 	db	112
   234  00101E  27                 	db	39
   235  00101F  32                 	db	50
   236  001020  31                 	db	49
   237  001021  20                 	db	32
   238  001022  4C                 	db	76
   239  001023  31                 	db	49
   240  001024  32                 	db	50
   241  001025  00                 	db	0
   242  001026  00                 	db	0
   243  001027  00                 	db	0
   244  001028  00                 	db	0
   245  001029  00                 	db	0
   246  00102A  00                 	db	0
   247  00102B  00                 	db	0
   248  00102C  00                 	db	0
   249  00102D  00                 	db	0
   250  00102E  00                 	db	0
   251  00102F  00                 	db	0
   252  001030  00                 	db	0
   253  001031  00                 	db	0
   254  001032  00                 	db	0
   255                           
   256                           	psect	mediumconst
   257  00FD74                     __pmediumconst:
   258                           	opt stack 0
   259  00FD74  00                 	db	0
   260  00FD75                     _font:
   261                           	opt stack 0
   262  00FD75  00                 	db	0
   263  00FD76  00                 	db	0
   264  00FD77  00                 	db	0
   265  00FD78  00                 	db	0
   266  00FD79  00                 	db	0
   267  00FD7A  00                 	db	0
   268  00FD7B  00                 	db	0
   269  00FD7C  5F                 	db	95
   270  00FD7D  00                 	db	0
   271  00FD7E  00                 	db	0
   272  00FD7F  00                 	db	0
   273  00FD80  07                 	db	7
   274  00FD81  00                 	db	0
   275  00FD82  07                 	db	7
   276  00FD83  00                 	db	0
   277  00FD84  14                 	db	20
   278  00FD85  7F                 	db	127
   279  00FD86  14                 	db	20
   280  00FD87  7F                 	db	127
   281  00FD88  14                 	db	20
   282  00FD89  24                 	db	36
   283  00FD8A  2A                 	db	42
   284  00FD8B  7F                 	db	127
   285  00FD8C  2A                 	db	42
   286  00FD8D  12                 	db	18
   287  00FD8E  23                 	db	35
   288  00FD8F  13                 	db	19
   289  00FD90  08                 	db	8
   290  00FD91  64                 	db	100
   291  00FD92  62                 	db	98
   292  00FD93  36                 	db	54
   293  00FD94  49                 	db	73
   294  00FD95  56                 	db	86
   295  00FD96  20                 	db	32
   296  00FD97  50                 	db	80
   297  00FD98  00                 	db	0
   298  00FD99  08                 	db	8
   299  00FD9A  07                 	db	7
   300  00FD9B  03                 	db	3
   301  00FD9C  00                 	db	0
   302  00FD9D  00                 	db	0
   303  00FD9E  1C                 	db	28
   304  00FD9F  22                 	db	34
   305  00FDA0  41                 	db	65
   306  00FDA1  00                 	db	0
   307  00FDA2  00                 	db	0
   308  00FDA3  41                 	db	65
   309  00FDA4  22                 	db	34
   310  00FDA5  1C                 	db	28
   311  00FDA6  00                 	db	0
   312  00FDA7  2A                 	db	42
   313  00FDA8  1C                 	db	28
   314  00FDA9  7F                 	db	127
   315  00FDAA  1C                 	db	28
   316  00FDAB  2A                 	db	42
   317  00FDAC  08                 	db	8
   318  00FDAD  08                 	db	8
   319  00FDAE  3E                 	db	62
   320  00FDAF  08                 	db	8
   321  00FDB0  08                 	db	8
   322  00FDB1  00                 	db	0
   323  00FDB2  80                 	db	128
   324  00FDB3  70                 	db	112
   325  00FDB4  30                 	db	48
   326  00FDB5  00                 	db	0
   327  00FDB6  08                 	db	8
   328  00FDB7  08                 	db	8
   329  00FDB8  08                 	db	8
   330  00FDB9  08                 	db	8
   331  00FDBA  08                 	db	8
   332  00FDBB  00                 	db	0
   333  00FDBC  00                 	db	0
   334  00FDBD  60                 	db	96
   335  00FDBE  60                 	db	96
   336  00FDBF  00                 	db	0
   337  00FDC0  20                 	db	32
   338  00FDC1  10                 	db	16
   339  00FDC2  08                 	db	8
   340  00FDC3  04                 	db	4
   341  00FDC4  02                 	db	2
   342  00FDC5  3E                 	db	62
   343  00FDC6  51                 	db	81
   344  00FDC7  49                 	db	73
   345  00FDC8  45                 	db	69
   346  00FDC9  3E                 	db	62
   347  00FDCA  00                 	db	0
   348  00FDCB  42                 	db	66
   349  00FDCC  7F                 	db	127
   350  00FDCD  40                 	db	64
   351  00FDCE  00                 	db	0
   352  00FDCF  72                 	db	114
   353  00FDD0  49                 	db	73
   354  00FDD1  49                 	db	73
   355  00FDD2  49                 	db	73
   356  00FDD3  46                 	db	70
   357  00FDD4  21                 	db	33
   358  00FDD5  41                 	db	65
   359  00FDD6  49                 	db	73
   360  00FDD7  4D                 	db	77
   361  00FDD8  33                 	db	51
   362  00FDD9  18                 	db	24
   363  00FDDA  14                 	db	20
   364  00FDDB  12                 	db	18
   365  00FDDC  7F                 	db	127
   366  00FDDD  10                 	db	16
   367  00FDDE  27                 	db	39
   368  00FDDF  45                 	db	69
   369  00FDE0  45                 	db	69
   370  00FDE1  45                 	db	69
   371  00FDE2  39                 	db	57
   372  00FDE3  3C                 	db	60
   373  00FDE4  4A                 	db	74
   374  00FDE5  49                 	db	73
   375  00FDE6  49                 	db	73
   376  00FDE7  31                 	db	49
   377  00FDE8  41                 	db	65
   378  00FDE9  21                 	db	33
   379  00FDEA  11                 	db	17
   380  00FDEB  09                 	db	9
   381  00FDEC  07                 	db	7
   382  00FDED  36                 	db	54
   383  00FDEE  49                 	db	73
   384  00FDEF  49                 	db	73
   385  00FDF0  49                 	db	73
   386  00FDF1  36                 	db	54
   387  00FDF2  46                 	db	70
   388  00FDF3  49                 	db	73
   389  00FDF4  49                 	db	73
   390  00FDF5  29                 	db	41
   391  00FDF6  1E                 	db	30
   392  00FDF7  00                 	db	0
   393  00FDF8  00                 	db	0
   394  00FDF9  14                 	db	20
   395  00FDFA  00                 	db	0
   396  00FDFB  00                 	db	0
   397  00FDFC  00                 	db	0
   398  00FDFD  40                 	db	64
   399  00FDFE  34                 	db	52
   400  00FDFF  00                 	db	0
   401  00FE00  00                 	db	0
   402  00FE01  00                 	db	0
   403  00FE02  08                 	db	8
   404  00FE03  14                 	db	20
   405  00FE04  22                 	db	34
   406  00FE05  41                 	db	65
   407  00FE06  14                 	db	20
   408  00FE07  14                 	db	20
   409  00FE08  14                 	db	20
   410  00FE09  14                 	db	20
   411  00FE0A  14                 	db	20
   412  00FE0B  00                 	db	0
   413  00FE0C  41                 	db	65
   414  00FE0D  22                 	db	34
   415  00FE0E  14                 	db	20
   416  00FE0F  08                 	db	8
   417  00FE10  02                 	db	2
   418  00FE11  01                 	db	1
   419  00FE12  59                 	db	89
   420  00FE13  09                 	db	9
   421  00FE14  06                 	db	6
   422  00FE15  3E                 	db	62
   423  00FE16  41                 	db	65
   424  00FE17  5D                 	db	93
   425  00FE18  59                 	db	89
   426  00FE19  4E                 	db	78
   427  00FE1A  7C                 	db	124
   428  00FE1B  12                 	db	18
   429  00FE1C  11                 	db	17
   430  00FE1D  12                 	db	18
   431  00FE1E  7C                 	db	124
   432  00FE1F  7F                 	db	127
   433  00FE20  49                 	db	73
   434  00FE21  49                 	db	73
   435  00FE22  49                 	db	73
   436  00FE23  36                 	db	54
   437  00FE24  3E                 	db	62
   438  00FE25  41                 	db	65
   439  00FE26  41                 	db	65
   440  00FE27  41                 	db	65
   441  00FE28  22                 	db	34
   442  00FE29  7F                 	db	127
   443  00FE2A  41                 	db	65
   444  00FE2B  41                 	db	65
   445  00FE2C  41                 	db	65
   446  00FE2D  3E                 	db	62
   447  00FE2E  7F                 	db	127
   448  00FE2F  49                 	db	73
   449  00FE30  49                 	db	73
   450  00FE31  49                 	db	73
   451  00FE32  41                 	db	65
   452  00FE33  7F                 	db	127
   453  00FE34  09                 	db	9
   454  00FE35  09                 	db	9
   455  00FE36  09                 	db	9
   456  00FE37  01                 	db	1
   457  00FE38  3E                 	db	62
   458  00FE39  41                 	db	65
   459  00FE3A  41                 	db	65
   460  00FE3B  51                 	db	81
   461  00FE3C  73                 	db	115
   462  00FE3D  7F                 	db	127
   463  00FE3E  08                 	db	8
   464  00FE3F  08                 	db	8
   465  00FE40  08                 	db	8
   466  00FE41  7F                 	db	127
   467  00FE42  00                 	db	0
   468  00FE43  41                 	db	65
   469  00FE44  7F                 	db	127
   470  00FE45  41                 	db	65
   471  00FE46  00                 	db	0
   472  00FE47  20                 	db	32
   473  00FE48  40                 	db	64
   474  00FE49  41                 	db	65
   475  00FE4A  3F                 	db	63
   476  00FE4B  01                 	db	1
   477  00FE4C  7F                 	db	127
   478  00FE4D  08                 	db	8
   479  00FE4E  14                 	db	20
   480  00FE4F  22                 	db	34
   481  00FE50  41                 	db	65
   482  00FE51  7F                 	db	127
   483  00FE52  40                 	db	64
   484  00FE53  40                 	db	64
   485  00FE54  40                 	db	64
   486  00FE55  40                 	db	64
   487  00FE56  7F                 	db	127
   488  00FE57  02                 	db	2
   489  00FE58  1C                 	db	28
   490  00FE59  02                 	db	2
   491  00FE5A  7F                 	db	127
   492  00FE5B  7F                 	db	127
   493  00FE5C  04                 	db	4
   494  00FE5D  08                 	db	8
   495  00FE5E  10                 	db	16
   496  00FE5F  7F                 	db	127
   497  00FE60  3E                 	db	62
   498  00FE61  41                 	db	65
   499  00FE62  41                 	db	65
   500  00FE63  41                 	db	65
   501  00FE64  3E                 	db	62
   502  00FE65  7F                 	db	127
   503  00FE66  09                 	db	9
   504  00FE67  09                 	db	9
   505  00FE68  09                 	db	9
   506  00FE69  06                 	db	6
   507  00FE6A  3E                 	db	62
   508  00FE6B  41                 	db	65
   509  00FE6C  51                 	db	81
   510  00FE6D  21                 	db	33
   511  00FE6E  5E                 	db	94
   512  00FE6F  7F                 	db	127
   513  00FE70  09                 	db	9
   514  00FE71  19                 	db	25
   515  00FE72  29                 	db	41
   516  00FE73  46                 	db	70
   517  00FE74                     __end_of_font:
   518                           	opt stack 0
   519  00FE74                     _font2:
   520                           	opt stack 0
   521  00FE74  26                 	db	38
   522  00FE75  49                 	db	73
   523  00FE76  49                 	db	73
   524  00FE77  49                 	db	73
   525  00FE78  32                 	db	50
   526  00FE79  03                 	db	3
   527  00FE7A  01                 	db	1
   528  00FE7B  7F                 	db	127
   529  00FE7C  01                 	db	1
   530  00FE7D  03                 	db	3
   531  00FE7E  3F                 	db	63
   532  00FE7F  40                 	db	64
   533  00FE80  40                 	db	64
   534  00FE81  40                 	db	64
   535  00FE82  3F                 	db	63
   536  00FE83  1F                 	db	31
   537  00FE84  20                 	db	32
   538  00FE85  40                 	db	64
   539  00FE86  20                 	db	32
   540  00FE87  1F                 	db	31
   541  00FE88  3F                 	db	63
   542  00FE89  40                 	db	64
   543  00FE8A  38                 	db	56
   544  00FE8B  40                 	db	64
   545  00FE8C  3F                 	db	63
   546  00FE8D  63                 	db	99
   547  00FE8E  14                 	db	20
   548  00FE8F  08                 	db	8
   549  00FE90  14                 	db	20
   550  00FE91  63                 	db	99
   551  00FE92  03                 	db	3
   552  00FE93  04                 	db	4
   553  00FE94  78                 	db	120
   554  00FE95  04                 	db	4
   555  00FE96  03                 	db	3
   556  00FE97  61                 	db	97
   557  00FE98  59                 	db	89
   558  00FE99  49                 	db	73
   559  00FE9A  4D                 	db	77
   560  00FE9B  43                 	db	67
   561  00FE9C  00                 	db	0
   562  00FE9D  7F                 	db	127
   563  00FE9E  41                 	db	65
   564  00FE9F  41                 	db	65
   565  00FEA0  41                 	db	65
   566  00FEA1  02                 	db	2
   567  00FEA2  04                 	db	4
   568  00FEA3  08                 	db	8
   569  00FEA4  10                 	db	16
   570  00FEA5  20                 	db	32
   571  00FEA6  00                 	db	0
   572  00FEA7  41                 	db	65
   573  00FEA8  41                 	db	65
   574  00FEA9  41                 	db	65
   575  00FEAA  7F                 	db	127
   576  00FEAB  04                 	db	4
   577  00FEAC  02                 	db	2
   578  00FEAD  01                 	db	1
   579  00FEAE  02                 	db	2
   580  00FEAF  04                 	db	4
   581  00FEB0  40                 	db	64
   582  00FEB1  40                 	db	64
   583  00FEB2  40                 	db	64
   584  00FEB3  40                 	db	64
   585  00FEB4  40                 	db	64
   586  00FEB5  00                 	db	0
   587  00FEB6  03                 	db	3
   588  00FEB7  07                 	db	7
   589  00FEB8  08                 	db	8
   590  00FEB9  00                 	db	0
   591  00FEBA  20                 	db	32
   592  00FEBB  54                 	db	84
   593  00FEBC  54                 	db	84
   594  00FEBD  78                 	db	120
   595  00FEBE  40                 	db	64
   596  00FEBF  7F                 	db	127
   597  00FEC0  28                 	db	40
   598  00FEC1  44                 	db	68
   599  00FEC2  44                 	db	68
   600  00FEC3  38                 	db	56
   601  00FEC4  38                 	db	56
   602  00FEC5  44                 	db	68
   603  00FEC6  44                 	db	68
   604  00FEC7  44                 	db	68
   605  00FEC8  28                 	db	40
   606  00FEC9  38                 	db	56
   607  00FECA  44                 	db	68
   608  00FECB  44                 	db	68
   609  00FECC  28                 	db	40
   610  00FECD  7F                 	db	127
   611  00FECE  38                 	db	56
   612  00FECF  54                 	db	84
   613  00FED0  54                 	db	84
   614  00FED1  54                 	db	84
   615  00FED2  18                 	db	24
   616  00FED3  00                 	db	0
   617  00FED4  08                 	db	8
   618  00FED5  7E                 	db	126
   619  00FED6  09                 	db	9
   620  00FED7  02                 	db	2
   621  00FED8  18                 	db	24
   622  00FED9  A4                 	db	164
   623  00FEDA  A4                 	db	164
   624  00FEDB  9C                 	db	156
   625  00FEDC  78                 	db	120
   626  00FEDD  7F                 	db	127
   627  00FEDE  08                 	db	8
   628  00FEDF  04                 	db	4
   629  00FEE0  04                 	db	4
   630  00FEE1  78                 	db	120
   631  00FEE2  00                 	db	0
   632  00FEE3  44                 	db	68
   633  00FEE4  7D                 	db	125
   634  00FEE5  40                 	db	64
   635  00FEE6  00                 	db	0
   636  00FEE7  20                 	db	32
   637  00FEE8  40                 	db	64
   638  00FEE9  40                 	db	64
   639  00FEEA  3D                 	db	61
   640  00FEEB  00                 	db	0
   641  00FEEC  7F                 	db	127
   642  00FEED  10                 	db	16
   643  00FEEE  28                 	db	40
   644  00FEEF  44                 	db	68
   645  00FEF0  00                 	db	0
   646  00FEF1  00                 	db	0
   647  00FEF2  41                 	db	65
   648  00FEF3  7F                 	db	127
   649  00FEF4  40                 	db	64
   650  00FEF5  00                 	db	0
   651  00FEF6  7C                 	db	124
   652  00FEF7  04                 	db	4
   653  00FEF8  78                 	db	120
   654  00FEF9  04                 	db	4
   655  00FEFA  78                 	db	120
   656  00FEFB  7C                 	db	124
   657  00FEFC  08                 	db	8
   658  00FEFD  04                 	db	4
   659  00FEFE  04                 	db	4
   660  00FEFF  78                 	db	120
   661  00FF00  38                 	db	56
   662  00FF01  44                 	db	68
   663  00FF02  44                 	db	68
   664  00FF03  44                 	db	68
   665  00FF04  38                 	db	56
   666  00FF05  FC                 	db	252
   667  00FF06  18                 	db	24
   668  00FF07  24                 	db	36
   669  00FF08  24                 	db	36
   670  00FF09  18                 	db	24
   671  00FF0A  18                 	db	24
   672  00FF0B  24                 	db	36
   673  00FF0C  24                 	db	36
   674  00FF0D  18                 	db	24
   675  00FF0E  FC                 	db	252
   676  00FF0F  7C                 	db	124
   677  00FF10  08                 	db	8
   678  00FF11  04                 	db	4
   679  00FF12  04                 	db	4
   680  00FF13  08                 	db	8
   681  00FF14  48                 	db	72
   682  00FF15  54                 	db	84
   683  00FF16  54                 	db	84
   684  00FF17  54                 	db	84
   685  00FF18  24                 	db	36
   686  00FF19  04                 	db	4
   687  00FF1A  04                 	db	4
   688  00FF1B  3F                 	db	63
   689  00FF1C  44                 	db	68
   690  00FF1D  24                 	db	36
   691  00FF1E  3C                 	db	60
   692  00FF1F  40                 	db	64
   693  00FF20  40                 	db	64
   694  00FF21  20                 	db	32
   695  00FF22  7C                 	db	124
   696  00FF23  1C                 	db	28
   697  00FF24  20                 	db	32
   698  00FF25  40                 	db	64
   699  00FF26  20                 	db	32
   700  00FF27  1C                 	db	28
   701  00FF28  3C                 	db	60
   702  00FF29  40                 	db	64
   703  00FF2A  30                 	db	48
   704  00FF2B  40                 	db	64
   705  00FF2C  3C                 	db	60
   706  00FF2D  44                 	db	68
   707  00FF2E  28                 	db	40
   708  00FF2F  10                 	db	16
   709  00FF30  28                 	db	40
   710  00FF31  44                 	db	68
   711  00FF32  4C                 	db	76
   712  00FF33  90                 	db	144
   713  00FF34  90                 	db	144
   714  00FF35  90                 	db	144
   715  00FF36  7C                 	db	124
   716  00FF37  44                 	db	68
   717  00FF38  64                 	db	100
   718  00FF39  54                 	db	84
   719  00FF3A  4C                 	db	76
   720  00FF3B  44                 	db	68
   721  00FF3C  00                 	db	0
   722  00FF3D  08                 	db	8
   723  00FF3E  36                 	db	54
   724  00FF3F  41                 	db	65
   725  00FF40  00                 	db	0
   726  00FF41  00                 	db	0
   727  00FF42  00                 	db	0
   728  00FF43  77                 	db	119
   729  00FF44  00                 	db	0
   730  00FF45  00                 	db	0
   731  00FF46  00                 	db	0
   732  00FF47  41                 	db	65
   733  00FF48  36                 	db	54
   734  00FF49  08                 	db	8
   735  00FF4A  00                 	db	0
   736  00FF4B  02                 	db	2
   737  00FF4C  01                 	db	1
   738  00FF4D  02                 	db	2
   739  00FF4E  04                 	db	4
   740  00FF4F  02                 	db	2
   741  00FF50                     __end_of_font2:
   742                           	opt stack 0
   743  00FF50                     _dpowers:
   744                           	opt stack 0
   745  00FF50  0001               	dw	1
   746  00FF52  000A               	dw	10
   747  00FF54  0064               	dw	100
   748  00FF56  03E8               	dw	1000
   749  00FF58  2710               	dw	10000
   750  00FF5A                     __end_of_dpowers:
   751                           	opt stack 0
   752  00FF5A                     _hexpowers:
   753                           	opt stack 0
   754  00FF5A  0001               	dw	1
   755  00FF5C  0010               	dw	16
   756  00FF5E  0100               	dw	256
   757  00FF60  1000               	dw	4096
   758  00FF62                     __end_of_hexpowers:
   759                           	opt stack 0
   760  0000                     _ADCON1	set	4033
   761  0000                     _CCP1CON	set	4029
   762  0000                     _CCP2CON	set	4026
   763  0000                     _CCPR1L	set	4030
   764  0000                     _CCPR2L	set	4027
   765  0000                     _INTCON2bits	set	4081
   766  0000                     _INTCONbits	set	4082
   767  0000                     _OSCCON	set	4051
   768  0000                     _PIE1bits	set	3997
   769  0000                     _PIR1bits	set	3998
   770  0000                     _PORTAbits	set	3968
   771  0000                     _PORTBbits	set	3969
   772  0000                     _PORTDbits	set	3971
   773  0000                     _PORTEbits	set	3972
   774  0000                     _PR2	set	4043
   775  0000                     _RCSTA	set	4011
   776  0000                     _RCSTAbits	set	4011
   777  0000                     _SPBRG	set	4015
   778  0000                     _SPBRGH	set	4016
   779  0000                     _SSPBUF	set	4041
   780  0000                     _SSPCON1	set	4038
   781  0000                     _SSPSTAT	set	4039
   782  0000                     _SSPSTATbits	set	4039
   783  0000                     _T0CON	set	4053
   784  0000                     _T0CONbits	set	4053
   785  0000                     _T1CON	set	4045
   786  0000                     _T1CONbits	set	4045
   787  0000                     _T2CON	set	4042
   788  0000                     _T3CON	set	4017
   789  0000                     _TMR0H	set	4055
   790  0000                     _TMR0L	set	4054
   791  0000                     _TMR1H	set	4047
   792  0000                     _TMR1L	set	4046
   793  0000                     _TMR3L	set	4018
   794  0000                     _TRISA	set	3986
   795  0000                     _TRISB	set	3987
   796  0000                     _TRISBbits	set	3987
   797  0000                     _TRISC	set	3988
   798  0000                     _TRISCbits	set	3988
   799  0000                     _TRISD	set	3989
   800  0000                     _TXREG	set	4013
   801  0000                     _TXSTA	set	4012
   802  0000                     _TXSTAbits	set	4012
   803  0000                     _RBPU	set	32655
   804  0000                     _TRMT	set	32097
   805  00FF62                     STR_12:
   806  00FF62  25                 	db	37
   807  00FF63  30                 	db	48	;'0'
   808  00FF64  32                 	db	50	;'2'
   809  00FF65  78                 	db	120	;'x'
   810  00FF66  3A                 	db	58	;':'
   811  00FF67  25                 	db	37
   812  00FF68  30                 	db	48	;'0'
   813  00FF69  32                 	db	50	;'2'
   814  00FF6A  78                 	db	120	;'x'
   815  00FF6B  3A                 	db	58	;':'
   816  00FF6C  25                 	db	37
   817  00FF6D  30                 	db	48	;'0'
   818  00FF6E  32                 	db	50	;'2'
   819  00FF6F  78                 	db	120	;'x'
   820  00FF70  20                 	db	32
   821  00FF71  25                 	db	37
   822  00FF72  30                 	db	48	;'0'
   823  00FF73  32                 	db	50	;'2'
   824  00FF74  78                 	db	120	;'x'
   825  00FF75  2F                 	db	47
   826  00FF76  25                 	db	37
   827  00FF77  30                 	db	48	;'0'
   828  00FF78  32                 	db	50	;'2'
   829  00FF79  78                 	db	120	;'x'
   830  00FF7A  2F                 	db	47
   831  00FF7B  25                 	db	37
   832  00FF7C  30                 	db	48	;'0'
   833  00FF7D  32                 	db	50	;'2'
   834  00FF7E  78                 	db	120	;'x'
   835  00FF7F  00                 	db	0
   836  00FF80  45                 	db	69	;'E'
   837  00FF81  43                 	db	67	;'C'
   838  00FF82  45                 	db	69	;'E'
   839  00FF83  33                 	db	51	;'3'
   840  00FF84  33                 	db	51	;'3'
   841  00FF85  30                 	db	48	;'0'
   842  00FF86  31                 	db	49	;'1'
   843  00FF87  4C                 	db	76	;'L'
   844  00FF88  20                 	db	32
   845  00FF89  53                 	db	83	;'S'
   846  00FF8A  70                 	db	112	;'p'
   847  00FF8B  72                 	db	114	;'r'
   848  00FF8C  69                 	db	105	;'i'
   849  00FF8D  6E                 	db	110	;'n'
   850  00FF8E  67                 	db	103	;'g'
   851  00FF8F  20                 	db	32
   852  00FF90  32                 	db	50	;'2'
   853  00FF91  31                 	db	49	;'1'
   854  00FF92  2D                 	db	45
   855  00FF93  53                 	db	83	;'S'
   856  00FF94  31                 	db	49	;'1'
   857  00FF95  00                 	db	0
   858  00FF96                     STR_13:
   859  00FF96  20                 	db	32
   860  00FF97  54                 	db	84	;'T'
   861  00FF98  65                 	db	101	;'e'
   862  00FF99  6D                 	db	109	;'m'
   863  00FF9A  70                 	db	112	;'p'
   864  00FF9B  20                 	db	32
   865  00FF9C  3D                 	db	61	;'='
   866  00FF9D  20                 	db	32
   867  00FF9E  25                 	db	37
   868  00FF9F  64                 	db	100	;'d'
   869  00FFA0  20                 	db	32
   870  00FFA1  43                 	db	67	;'C'
   871  00FFA2  20                 	db	32
   872  00FFA3  3D                 	db	61	;'='
   873  00FFA4  20                 	db	32
   874  00FFA5  25                 	db	37
   875  00FFA6  64                 	db	100	;'d'
   876  00FFA7  20                 	db	32
   877  00FFA8  46                 	db	70	;'F'
   878  00FFA9  20                 	db	32
   879  00FFAA  00                 	db	0
   880  00FFAB                     STR_14:
   881  00FFAB  52                 	db	82	;'R'
   882  00FFAC  50                 	db	80	;'P'
   883  00FFAD  4D                 	db	77	;'M'
   884  00FFAE  20                 	db	32
   885  00FFAF  3D                 	db	61	;'='
   886  00FFB0  20                 	db	32
   887  00FFB1  25                 	db	37
   888  00FFB2  64                 	db	100	;'d'
   889  00FFB3  20                 	db	32
   890  00FFB4  20                 	db	32
   891  00FFB5  64                 	db	100	;'d'
   892  00FFB6  63                 	db	99	;'c'
   893  00FFB7  20                 	db	32
   894  00FFB8  3D                 	db	61	;'='
   895  00FFB9  20                 	db	32
   896  00FFBA  25                 	db	37
   897  00FFBB  64                 	db	100	;'d'
   898  00FFBC  0D                 	db	13
   899  00FFBD  0A                 	db	10
   900  00FFBE  00                 	db	0
   901  00FFBF                     STR_15:
   902  00FFBF  30                 	db	48	;'0'
   903  00FFC0  31                 	db	49	;'1'
   904  00FFC1  32                 	db	50	;'2'
   905  00FFC2  33                 	db	51	;'3'
   906  00FFC3  34                 	db	52	;'4'
   907  00FFC4  35                 	db	53	;'5'
   908  00FFC5  36                 	db	54	;'6'
   909  00FFC6  37                 	db	55	;'7'
   910  00FFC7  38                 	db	56	;'8'
   911  00FFC8  39                 	db	57	;'9'
   912  00FFC9  61                 	db	97	;'a'
   913  00FFCA  62                 	db	98	;'b'
   914  00FFCB  63                 	db	99	;'c'
   915  00FFCC  64                 	db	100	;'d'
   916  00FFCD  65                 	db	101	;'e'
   917  00FFCE  66                 	db	102	;'f'
   918  00FFCF  00                 	db	0
   919  00FFD0  54                 	db	84	;'T'
   920  00FFD1  65                 	db	101	;'e'
   921  00FFD2  6D                 	db	109	;'m'
   922  00FFD3  70                 	db	112	;'p'
   923  00FFD4  65                 	db	101	;'e'
   924  00FFD5  72                 	db	114	;'r'
   925  00FFD6  61                 	db	97	;'a'
   926  00FFD7  74                 	db	116	;'t'
   927  00FFD8  75                 	db	117	;'u'
   928  00FFD9  72                 	db	114	;'r'
   929  00FFDA  65                 	db	101	;'e'
   930  00FFDB  3A                 	db	58	;':'
   931  00FFDC  00                 	db	0
   932  00FFDD  20                 	db	32
   933  00FFDE  20                 	db	32
   934  00FFDF  46                 	db	70	;'F'
   935  00FFE0  41                 	db	65	;'A'
   936  00FFE1  4E                 	db	78	;'N'
   937  00FFE2  00                 	db	0
   938  00FFE3  54                 	db	84	;'T'
   939  00FFE4  69                 	db	105	;'i'
   940  00FFE5  6D                 	db	109	;'m'
   941  00FFE6  65                 	db	101	;'e'
   942  00FFE7  00                 	db	0
   943  00FFE8  44                 	db	68	;'D'
   944  00FFE9  61                 	db	97	;'a'
   945  00FFEA  74                 	db	116	;'t'
   946  00FFEB  65                 	db	101	;'e'
   947  00FFEC  00                 	db	0
   948  00FFED  4F                 	db	79	;'O'
   949  00FFEE  4E                 	db	78	;'N'
   950  00FFEF  20                 	db	32
   951  00FFF0  00                 	db	0
   952  00FFF1                     STR_11:
   953  00FFF1  4F                 	db	79	;'O'
   954  00FFF2  46                 	db	70	;'F'
   955  00FFF3  46                 	db	70	;'F'
   956  00FFF4  00                 	db	0
   957  00FFF5  52                 	db	82	;'R'
   958  00FFF6  50                 	db	80	;'P'
   959  00FFF7  4D                 	db	77	;'M'
   960  00FFF8  00                 	db	0
   961  00FFF9  43                 	db	67	;'C'
   962  00FFFA  2F                 	db	47
   963  00FFFB  00                 	db	0
   964  00FFFC  44                 	db	68	;'D'
   965  00FFFD  43                 	db	67	;'C'
   966  00FFFE  00                 	db	0
   967  0000                     
   968                           ; #config settings
   969  00FFFF  00                 	db	0	; dummy byte at the end
   970  0000                     
   971                           	psect	cinit
   972  000B4E                     __pcinit:
   973                           	opt stack 0
   974  000B4E                     start_initialization:
   975                           	opt stack 0
   976  000B4E                     __initialization:
   977                           	opt stack 0
   978                           
   979                           ; Clear objects allocated to BANK0 (2 bytes)
   980  000B4E  0100               	movlb	0
   981  000B50  6BF6               	clrf	(__pbssBANK0+1)& (0+255),b
   982  000B52  6BF5               	clrf	__pbssBANK0& (0+255),b
   983                           
   984                           ; Clear objects allocated to COMRAM (49 bytes)
   985  000B54  EE00  F001         	lfsr	0,__pbssCOMRAM
   986  000B58  0E31               	movlw	49
   987  000B5A                     clear_0:
   988  000B5A  6AEE               	clrf	postinc0,c
   989  000B5C  06E8               	decf	wreg,f,c
   990  000B5E  E1FD               	bnz	clear_0
   991                           
   992                           ; Initialize objects allocated to BANK1 (33 bytes)
   993                           ; load TBLPTR registers with __pidataBANK1
   994  000B60  0E12               	movlw	low __pidataBANK1
   995  000B62  6EF6               	movwf	tblptrl,c
   996  000B64  0E10               	movlw	high __pidataBANK1
   997  000B66  6EF7               	movwf	tblptrh,c
   998  000B68  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   999  000B6A  6EF8               	movwf	tblptru,c
  1000  000B6C  EE01  F000         	lfsr	0,__pdataBANK1
  1001  000B70  EE10 F021          	lfsr	1,33
  1002  000B74                     copy_data0:
  1003  000B74  0009               	tblrd		*+
  1004  000B76  CFF5 FFEE          	movff	tablat,postinc0
  1005  000B7A  50E5               	movf	postdec1,w,c
  1006  000B7C  50E1               	movf	fsr1l,w,c
  1007  000B7E  E1FA               	bnz	copy_data0
  1008                           
  1009                           ; Initialize objects allocated to BANK0 (99 bytes)
  1010                           ; load TBLPTR registers with __pidataBANK0
  1011  000B80  0E1A               	movlw	low __pidataBANK0
  1012  000B82  6EF6               	movwf	tblptrl,c
  1013  000B84  0E0D               	movlw	high __pidataBANK0
  1014  000B86  6EF7               	movwf	tblptrh,c
  1015  000B88  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1016  000B8A  6EF8               	movwf	tblptru,c
  1017  000B8C  EE00  F080         	lfsr	0,__pdataBANK0
  1018  000B90  EE10 F063          	lfsr	1,99
  1019  000B94                     copy_data1:
  1020  000B94  0009               	tblrd		*+
  1021  000B96  CFF5 FFEE          	movff	tablat,postinc0
  1022  000B9A  50E5               	movf	postdec1,w,c
  1023  000B9C  50E1               	movf	fsr1l,w,c
  1024  000B9E  E1FA               	bnz	copy_data1
  1025                           
  1026                           ; Initialize objects allocated to COMRAM (11 bytes)
  1027                           ; load TBLPTR registers with __pidataCOMRAM
  1028  000BA0  0E22               	movlw	low __pidataCOMRAM
  1029  000BA2  6EF6               	movwf	tblptrl,c
  1030  000BA4  0E11               	movlw	high __pidataCOMRAM
  1031  000BA6  6EF7               	movwf	tblptrh,c
  1032  000BA8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1033  000BAA  6EF8               	movwf	tblptru,c
  1034  000BAC  EE00  F063         	lfsr	0,__pdataCOMRAM
  1035  000BB0  EE10 F00B          	lfsr	1,11
  1036  000BB4                     copy_data2:
  1037  000BB4  0009               	tblrd		*+
  1038  000BB6  CFF5 FFEE          	movff	tablat,postinc0
  1039  000BBA  50E5               	movf	postdec1,w,c
  1040  000BBC  50E1               	movf	fsr1l,w,c
  1041  000BBE  E1FA               	bnz	copy_data2
  1042  000BC0                     end_of_initialization:
  1043                           	opt stack 0
  1044  000BC0                     __end_of__initialization:
  1045                           	opt stack 0
  1046  000BC0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1047  000BC2  6EF8               	movwf	tblptru,c
  1048  000BC4  0100               	movlb	0
  1049  000BC6  EF20  F004         	goto	_main	;jump to C main() function
  1050                           tblptru	equ	0xFF8
  1051                           tblptrh	equ	0xFF7
  1052                           tblptrl	equ	0xFF6
  1053                           tablat	equ	0xFF5
  1054                           postinc0	equ	0xFEE
  1055                           wreg	equ	0xFE8
  1056                           postdec1	equ	0xFE5
  1057                           fsr1l	equ	0xFE1
  1058                           
  1059                           	psect	bssCOMRAM
  1060  000001                     __pbssCOMRAM:
  1061                           	opt stack 0
  1062  000001                     _Nec_code:
  1063                           	opt stack 0
  1064  000001                     	ds	4
  1065  000005                     _ALARMEN:
  1066                           	opt stack 0
  1067  000005                     	ds	2
  1068  000007                     _DS1621_tempC:
  1069                           	opt stack 0
  1070  000007                     	ds	2
  1071  000009                     _DS1621_tempF:
  1072                           	opt stack 0
  1073  000009                     	ds	2
  1074  00000B                     _Time_Elapsed:
  1075                           	opt stack 0
  1076  00000B                     	ds	2
  1077  00000D                     _nec_ok:
  1078                           	opt stack 0
  1079  00000D                     	ds	2
  1080  00000F                     _rpm:
  1081                           	opt stack 0
  1082  00000F                     	ds	2
  1083  000011                     _rps:
  1084                           	opt stack 0
  1085  000011                     	ds	2
  1086  000013                     _txt:
  1087                           	opt stack 0
  1088  000013                     	ds	2
  1089  000015                     _FAN:
  1090                           	opt stack 0
  1091  000015                     	ds	1
  1092  000016                     _Nec_code1:
  1093                           	opt stack 0
  1094  000016                     	ds	1
  1095  000017                     _Nec_state:
  1096                           	opt stack 0
  1097  000017                     	ds	1
  1098  000018                     __tft_type:
  1099                           	opt stack 0
  1100  000018                     	ds	1
  1101  000019                     _alarm_date:
  1102                           	opt stack 0
  1103  000019                     	ds	1
  1104  00001A                     _alarm_hour:
  1105                           	opt stack 0
  1106  00001A                     	ds	1
  1107  00001B                     _alarm_minute:
  1108                           	opt stack 0
  1109  00001B                     	ds	1
  1110  00001C                     _alarm_second:
  1111                           	opt stack 0
  1112  00001C                     	ds	1
  1113  00001D                     _bit_count:
  1114                           	opt stack 0
  1115  00001D                     	ds	1
  1116  00001E                     _colstart:
  1117                           	opt stack 0
  1118  00001E                     	ds	1
  1119  00001F                     _day:
  1120                           	opt stack 0
  1121  00001F                     	ds	1
  1122  000020                     _dow:
  1123                           	opt stack 0
  1124  000020                     	ds	1
  1125  000021                     _duty_cycle:
  1126                           	opt stack 0
  1127  000021                     	ds	1
  1128  000022                     _found:
  1129                           	opt stack 0
  1130  000022                     	ds	1
  1131  000023                     _hour:
  1132                           	opt stack 0
  1133  000023                     	ds	1
  1134  000024                     _minute:
  1135                           	opt stack 0
  1136  000024                     	ds	1
  1137  000025                     _month:
  1138                           	opt stack 0
  1139  000025                     	ds	1
  1140  000026                     _rowstart:
  1141                           	opt stack 0
  1142  000026                     	ds	1
  1143  000027                     _second:
  1144                           	opt stack 0
  1145  000027                     	ds	1
  1146  000028                     _setup_alarm_hour:
  1147                           	opt stack 0
  1148  000028                     	ds	1
  1149  000029                     _setup_alarm_minute:
  1150                           	opt stack 0
  1151  000029                     	ds	1
  1152  00002A                     _setup_alarm_second:
  1153                           	opt stack 0
  1154  00002A                     	ds	1
  1155  00002B                     _setup_day:
  1156                           	opt stack 0
  1157  00002B                     	ds	1
  1158  00002C                     _setup_hour:
  1159                           	opt stack 0
  1160  00002C                     	ds	1
  1161  00002D                     _setup_minute:
  1162                           	opt stack 0
  1163  00002D                     	ds	1
  1164  00002E                     _setup_month:
  1165                           	opt stack 0
  1166  00002E                     	ds	1
  1167  00002F                     _setup_second:
  1168                           	opt stack 0
  1169  00002F                     	ds	1
  1170  000030                     _setup_year:
  1171                           	opt stack 0
  1172  000030                     	ds	1
  1173  000031                     _year:
  1174                           	opt stack 0
  1175  000031                     	ds	1
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           postinc0	equ	0xFEE
  1181                           wreg	equ	0xFE8
  1182                           postdec1	equ	0xFE5
  1183                           fsr1l	equ	0xFE1
  1184                           
  1185                           	psect	dataCOMRAM
  1186  000063                     __pdataCOMRAM:
  1187                           	opt stack 0
  1188  000063                     _setup_fan_temp:
  1189                           	opt stack 0
  1190  000063                     	ds	1
  1191  000064                     _tempSecond:
  1192                           	opt stack 0
  1193  000064                     	ds	1
  1194  000065                     _wrap:
  1195                           	opt stack 0
  1196  000065                     	ds	1
  1197  000066                     _tempC:
  1198                           	opt stack 0
  1199  000066                     	ds	4
  1200  00006A                     _tempF:
  1201                           	opt stack 0
  1202  00006A                     	ds	4
  1203                           tblptru	equ	0xFF8
  1204                           tblptrh	equ	0xFF7
  1205                           tblptrl	equ	0xFF6
  1206                           tablat	equ	0xFF5
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           postdec1	equ	0xFE5
  1210                           fsr1l	equ	0xFE1
  1211                           
  1212                           	psect	bssBANK0
  1213  0000F5                     __pbssBANK0:
  1214                           	opt stack 0
  1215  0000F5                     _nbr:
  1216                           	opt stack 0
  1217  0000F5                     	ds	2
  1218                           tblptru	equ	0xFF8
  1219                           tblptrh	equ	0xFF7
  1220                           tblptrl	equ	0xFF6
  1221                           tablat	equ	0xFF5
  1222                           postinc0	equ	0xFEE
  1223                           wreg	equ	0xFE8
  1224                           postdec1	equ	0xFE5
  1225                           fsr1l	equ	0xFE1
  1226                           
  1227                           	psect	dataBANK0
  1228  000080                     __pdataBANK0:
  1229                           	opt stack 0
  1230  000080                     _array1:
  1231                           	opt stack 0
  1232  000080                     	ds	21
  1233  000095                     _alarm_time:
  1234                           	opt stack 0
  1235  000095                     	ds	9
  1236  00009E                     _setup_alarm_time:
  1237                           	opt stack 0
  1238  00009E                     	ds	9
  1239  0000A7                     _setup_date:
  1240                           	opt stack 0
  1241  0000A7                     	ds	9
  1242  0000B0                     _setup_time:
  1243                           	opt stack 0
  1244  0000B0                     	ds	9
  1245  0000B9                     _setup_fan_text:
  1246                           	opt stack 0
  1247  0000B9                     	ds	5
  1248  0000BE                     _Alarm_SW_Txt:
  1249                           	opt stack 0
  1250  0000BE                     	ds	4
  1251  0000C2                     _RTC_ALARM_Txt:
  1252                           	opt stack 0
  1253  0000C2                     	ds	2
  1254  0000C4                     _date:
  1255                           	opt stack 0
  1256  0000C4                     	ds	9
  1257  0000CD                     _time:
  1258                           	opt stack 0
  1259  0000CD                     	ds	9
  1260  0000D6                     _RPM_Txt:
  1261                           	opt stack 0
  1262  0000D6                     	ds	5
  1263  0000DB                     _DC_Txt:
  1264                           	opt stack 0
  1265  0000DB                     	ds	4
  1266  0000DF                     _Fan_SW_Txt:
  1267                           	opt stack 0
  1268  0000DF                     	ds	4
  1269                           tblptru	equ	0xFF8
  1270                           tblptrh	equ	0xFF7
  1271                           tblptrl	equ	0xFF6
  1272                           tablat	equ	0xFF5
  1273                           postinc0	equ	0xFEE
  1274                           wreg	equ	0xFE8
  1275                           postdec1	equ	0xFE5
  1276                           fsr1l	equ	0xFE1
  1277                           
  1278                           	psect	dataBANK1
  1279  000100                     __pdataBANK1:
  1280                           	opt stack 0
  1281  000100                     _buffer:
  1282                           	opt stack 0
  1283  000100                     	ds	33
  1284                           tblptru	equ	0xFF8
  1285                           tblptrh	equ	0xFF7
  1286                           tblptrl	equ	0xFF6
  1287                           tablat	equ	0xFF5
  1288                           postinc0	equ	0xFEE
  1289                           wreg	equ	0xFE8
  1290                           postdec1	equ	0xFE5
  1291                           fsr1l	equ	0xFE1
  1292                           
  1293                           	psect	cstackBANK0
  1294  0000E3                     __pcstackBANK0:
  1295                           	opt stack 0
  1296  0000E3                     ??___ftdiv:
  1297  0000E3                     printf@idx:
  1298                           	opt stack 0
  1299                           
  1300                           ; 1 bytes @ 0x0
  1301  0000E3                     	ds	1
  1302  0000E4                     printf@ap:
  1303                           	opt stack 0
  1304                           
  1305                           ; 2 bytes @ 0x1
  1306  0000E4                     	ds	2
  1307  0000E6                     printf@prec:
  1308                           	opt stack 0
  1309  0000E6                     ___ftdiv@cntr:
  1310                           	opt stack 0
  1311                           
  1312                           ; 1 bytes @ 0x3
  1313  0000E6                     	ds	1
  1314  0000E7                     printf@val:
  1315                           	opt stack 0
  1316  0000E7                     ___ftdiv@f3:
  1317                           	opt stack 0
  1318                           
  1319                           ; 3 bytes @ 0x4
  1320  0000E7                     	ds	2
  1321  0000E9                     printf@flag:
  1322                           	opt stack 0
  1323                           
  1324                           ; 1 bytes @ 0x6
  1325  0000E9                     	ds	1
  1326  0000EA                     ___ftdiv@exp:
  1327                           	opt stack 0
  1328  0000EA                     printf@width:
  1329                           	opt stack 0
  1330                           
  1331                           ; 2 bytes @ 0x7
  1332  0000EA                     	ds	1
  1333  0000EB                     ___ftdiv@sign:
  1334                           	opt stack 0
  1335                           
  1336                           ; 1 bytes @ 0x8
  1337  0000EB                     	ds	1
  1338  0000EC                     ??_do_update_pwm:
  1339  0000EC                     printf@c:
  1340                           	opt stack 0
  1341                           
  1342                           ; 1 bytes @ 0x9
  1343  0000EC                     	ds	3
  1344  0000EF                     do_update_pwm@dc_f:
  1345                           	opt stack 0
  1346                           
  1347                           ; 3 bytes @ 0xC
  1348  0000EF                     	ds	3
  1349  0000F2                     do_update_pwm@duty_cycle:
  1350                           	opt stack 0
  1351                           
  1352                           ; 1 bytes @ 0xF
  1353  0000F2                     	ds	1
  1354  0000F3                     do_update_pwm@dc_I:
  1355                           	opt stack 0
  1356                           
  1357                           ; 2 bytes @ 0x10
  1358  0000F3                     	ds	2
  1359                           tblptru	equ	0xFF8
  1360                           tblptrh	equ	0xFF7
  1361                           tblptrl	equ	0xFF6
  1362                           tablat	equ	0xFF5
  1363                           postinc0	equ	0xFEE
  1364                           wreg	equ	0xFE8
  1365                           postdec1	equ	0xFE5
  1366                           fsr1l	equ	0xFE1
  1367                           
  1368                           	psect	cstackCOMRAM
  1369  000032                     __pcstackCOMRAM:
  1370                           	opt stack 0
  1371  000032                     ??_INT0_isr:
  1372  000032                     
  1373                           ; 1 bytes @ 0x0
  1374  000032                     	ds	2
  1375  000034                     ??_chkisr:
  1376                           
  1377                           ; 0 bytes @ 0x2
  1378  000034                     	ds	14
  1379  000042                     ??_isdigit:
  1380  000042                     ?___wmul:
  1381                           	opt stack 0
  1382  000042                     ?___lwdiv:
  1383                           	opt stack 0
  1384  000042                     ?___ftpack:
  1385                           	opt stack 0
  1386  000042                     ?___fttol:
  1387                           	opt stack 0
  1388  000042                     I2C_Read@ack:
  1389                           	opt stack 0
  1390  000042                     I2C_Write@outByte:
  1391                           	opt stack 0
  1392  000042                     putch@c:
  1393                           	opt stack 0
  1394  000042                     OpenUSART@spbrg:
  1395                           	opt stack 0
  1396  000042                     ___wmul@multiplier:
  1397                           	opt stack 0
  1398  000042                     ___lwdiv@dividend:
  1399                           	opt stack 0
  1400  000042                     ___ftpack@arg:
  1401                           	opt stack 0
  1402  000042                     ___fttol@f1:
  1403                           	opt stack 0
  1404  000042                     I2C_Init@c:
  1405                           	opt stack 0
  1406                           
  1407                           ; 4 bytes @ 0x10
  1408  000042                     	ds	1
  1409  000043                     I2C_Read@n:
  1410                           	opt stack 0
  1411  000043                     I2C_Write@n:
  1412                           	opt stack 0
  1413  000043                     _isdigit$2279:
  1414                           	opt stack 0
  1415                           
  1416                           ; 1 bytes @ 0x11
  1417  000043                     	ds	1
  1418  000044                     I2C_Read@inByte:
  1419                           	opt stack 0
  1420  000044                     I2C_Write_Cmd_Only@Cmd:
  1421                           	opt stack 0
  1422  000044                     I2C_Write_Cmd_Write_Data@Cmd:
  1423                           	opt stack 0
  1424  000044                     OpenUSART@config:
  1425                           	opt stack 0
  1426  000044                     isdigit@c:
  1427                           	opt stack 0
  1428  000044                     ___wmul@multiplicand:
  1429                           	opt stack 0
  1430  000044                     ___lwdiv@divisor:
  1431                           	opt stack 0
  1432                           
  1433                           ; 2 bytes @ 0x12
  1434  000044                     	ds	1
  1435  000045                     ?_DS1621_Read_Temp:
  1436                           	opt stack 0
  1437  000045                     DS3231_Read_Time@Address:
  1438                           	opt stack 0
  1439  000045                     I2C_Write_Cmd_Only@Device:
  1440                           	opt stack 0
  1441  000045                     I2C_Write_Cmd_Write_Data@Data_Out:
  1442                           	opt stack 0
  1443  000045                     ___ftpack@exp:
  1444                           	opt stack 0
  1445                           
  1446                           ; 1 bytes @ 0x13
  1447  000045                     	ds	1
  1448  000046                     ??___fttol:
  1449  000046                     DS3231_Read_Time@Device:
  1450                           	opt stack 0
  1451  000046                     I2C_Write_Cmd_Write_Data@Device:
  1452                           	opt stack 0
  1453  000046                     ___ftpack@sign:
  1454                           	opt stack 0
  1455  000046                     ___lwdiv@counter:
  1456                           	opt stack 0
  1457  000046                     ___wmul@product:
  1458                           	opt stack 0
  1459                           
  1460                           ; 2 bytes @ 0x14
  1461  000046                     	ds	1
  1462  000047                     ??___ftpack:
  1463  000047                     DS1621_Init@Device:
  1464                           	opt stack 0
  1465  000047                     DS1621_Read_Temp@Cmd:
  1466                           	opt stack 0
  1467  000047                     ___lwdiv@quotient:
  1468                           	opt stack 0
  1469                           
  1470                           ; 2 bytes @ 0x15
  1471  000047                     	ds	1
  1472  000048                     ?___awdiv:
  1473                           	opt stack 0
  1474  000048                     DS1621_Read_Temp@Data_Ret:
  1475                           	opt stack 0
  1476  000048                     ___awdiv@dividend:
  1477                           	opt stack 0
  1478                           
  1479                           ; 2 bytes @ 0x16
  1480  000048                     	ds	1
  1481  000049                     ?___lwmod:
  1482                           	opt stack 0
  1483  000049                     DS1621_Read_Temp@Device:
  1484                           	opt stack 0
  1485  000049                     ___lwmod@dividend:
  1486                           	opt stack 0
  1487                           
  1488                           ; 2 bytes @ 0x17
  1489  000049                     	ds	1
  1490  00004A                     ?___lbtoft:
  1491                           	opt stack 0
  1492  00004A                     ___awdiv@divisor:
  1493                           	opt stack 0
  1494                           
  1495                           ; 2 bytes @ 0x18
  1496  00004A                     	ds	1
  1497  00004B                     ___fttol@sign1:
  1498                           	opt stack 0
  1499  00004B                     ___lwmod@divisor:
  1500                           	opt stack 0
  1501                           
  1502                           ; 2 bytes @ 0x19
  1503  00004B                     	ds	1
  1504  00004C                     ___awdiv@counter:
  1505                           	opt stack 0
  1506  00004C                     ___fttol@lval:
  1507                           	opt stack 0
  1508                           
  1509                           ; 4 bytes @ 0x1A
  1510  00004C                     	ds	1
  1511  00004D                     ___awdiv@sign:
  1512                           	opt stack 0
  1513  00004D                     ___lbtoft@c:
  1514                           	opt stack 0
  1515  00004D                     ___lwmod@counter:
  1516                           	opt stack 0
  1517                           
  1518                           ; 1 bytes @ 0x1B
  1519  00004D                     	ds	1
  1520  00004E                     ?_printf:
  1521                           	opt stack 0
  1522  00004E                     ?___ftmul:
  1523                           	opt stack 0
  1524  00004E                     printf@f:
  1525                           	opt stack 0
  1526  00004E                     ___awdiv@quotient:
  1527                           	opt stack 0
  1528  00004E                     ___ftmul@f1:
  1529                           	opt stack 0
  1530                           
  1531                           ; 3 bytes @ 0x1C
  1532  00004E                     	ds	2
  1533  000050                     ?_get_RPM:
  1534                           	opt stack 0
  1535  000050                     ___fttol@exp1:
  1536                           	opt stack 0
  1537                           
  1538                           ; 1 bytes @ 0x1E
  1539  000050                     	ds	1
  1540  000051                     ___ftmul@f2:
  1541                           	opt stack 0
  1542                           
  1543                           ; 3 bytes @ 0x1F
  1544  000051                     	ds	1
  1545  000052                     get_RPM@RPS:
  1546                           	opt stack 0
  1547                           
  1548                           ; 2 bytes @ 0x20
  1549  000052                     	ds	2
  1550  000054                     ??___ftmul:
  1551                           
  1552                           ; 0 bytes @ 0x22
  1553  000054                     	ds	3
  1554  000057                     ___ftmul@exp:
  1555                           	opt stack 0
  1556                           
  1557                           ; 1 bytes @ 0x25
  1558  000057                     	ds	1
  1559  000058                     ___ftmul@f3_as_product:
  1560                           	opt stack 0
  1561                           
  1562                           ; 3 bytes @ 0x26
  1563  000058                     	ds	3
  1564  00005B                     ___ftmul@cntr:
  1565                           	opt stack 0
  1566                           
  1567                           ; 1 bytes @ 0x29
  1568  00005B                     	ds	1
  1569  00005C                     ??_printf:
  1570  00005C                     ___ftmul@sign:
  1571                           	opt stack 0
  1572                           
  1573                           ; 1 bytes @ 0x2A
  1574  00005C                     	ds	1
  1575  00005D                     ?___ftdiv:
  1576                           	opt stack 0
  1577  00005D                     ___ftdiv@f1:
  1578                           	opt stack 0
  1579                           
  1580                           ; 3 bytes @ 0x2B
  1581  00005D                     	ds	3
  1582  000060                     ___ftdiv@f2:
  1583                           	opt stack 0
  1584                           
  1585                           ; 3 bytes @ 0x2E
  1586  000060                     	ds	3
  1587  000063                     tblptru	equ	0xFF8
  1588                           tblptrh	equ	0xFF7
  1589                           tblptrl	equ	0xFF6
  1590                           tablat	equ	0xFF5
  1591                           postinc0	equ	0xFEE
  1592                           wreg	equ	0xFE8
  1593                           postdec1	equ	0xFE5
  1594                           fsr1l	equ	0xFE1
  1595                           
  1596                           ; 0 bytes @ 0x31
  1597 ;;
  1598 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1599 ;;
  1600 ;; *************** function _main *****************
  1601 ;; Defined at:
  1602 ;;		line 126 in file "Lab11pC.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;		None               void
  1609 ;; Registers used:
  1610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;Total ram usage:        0 bytes
  1621 ;; Hardware stack levels required when called:    8
  1622 ;; This function calls:
  1623 ;;		_DS1621_Read_Temp
  1624 ;;		_DS3231_Read_Time
  1625 ;;		_Do_Init
  1626 ;;		_Turn_On_Fan
  1627 ;;		___awdiv
  1628 ;;		___wmul
  1629 ;;		_do_update_pwm
  1630 ;;		_get_RPM
  1631 ;;		_printf
  1632 ;; This function is called by:
  1633 ;;		Startup code after reset
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text0
  1638  000840                     __ptext0:
  1639                           	opt stack 0
  1640  000840                     _main:
  1641                           	opt stack 23
  1642                           
  1643                           ;Lab11pC.c: 128: Do_Init();
  1644                           
  1645                           ;incstack = 0
  1646  000840  EC13  F007         	call	_Do_Init	;wreg free
  1647                           
  1648                           ;Lab11pC.c: 152: Turn_On_Fan();
  1649  000844  EC76  F008         	call	_Turn_On_Fan	;wreg free
  1650                           
  1651                           ;Lab11pC.c: 153: duty_cycle = 50;
  1652  000848  0E32               	movlw	50
  1653  00084A  6E21               	movwf	_duty_cycle,c
  1654                           
  1655                           ;Lab11pC.c: 154: do_update_pwm(duty_cycle);
  1656  00084C  5021               	movf	_duty_cycle,w,c
  1657  00084E  EC8E  F004         	call	_do_update_pwm
  1658  000852  D000               	goto	l5667
  1659  000854                     l5667:
  1660                           
  1661                           ;Lab11pC.c: 156: {
  1662                           ;Lab11pC.c: 157: DS3231_Read_Time();
  1663  000854  EC5B  F006         	call	_DS3231_Read_Time	;wreg free
  1664                           
  1665                           ;Lab11pC.c: 159: if(tempSecond != second)
  1666  000858  5027               	movf	_second,w,c
  1667  00085A  1864               	xorwf	_tempSecond,w,c
  1668  00085C  B4D8               	btfsc	status,2,c
  1669  00085E  D7FA               	goto	l5667
  1670                           
  1671                           ;Lab11pC.c: 160: {
  1672                           ;Lab11pC.c: 161: tempSecond = second;
  1673  000860  C027  F064         	movff	_second,_tempSecond
  1674                           
  1675                           ;Lab11pC.c: 162: DS1621_tempC = DS1621_Read_Temp();
  1676  000864  EC9B  F007         	call	_DS1621_Read_Temp	;wreg free
  1677  000868  C045  F007         	movff	?_DS1621_Read_Temp,_DS1621_tempC
  1678  00086C  C046  F008         	movff	?_DS1621_Read_Temp+1,_DS1621_tempC+1
  1679                           
  1680                           ;Lab11pC.c: 163: DS1621_tempF = (DS1621_tempC * 9 / 5) + 32;
  1681  000870  C007  F042         	movff	_DS1621_tempC,___wmul@multiplier
  1682  000874  C008  F043         	movff	_DS1621_tempC+1,___wmul@multiplier+1
  1683  000878  0E00               	movlw	0
  1684  00087A  6E45               	movwf	___wmul@multiplicand+1,c
  1685  00087C  0E09               	movlw	9
  1686  00087E  6E44               	movwf	___wmul@multiplicand,c
  1687  000880  ECD1  F007         	call	___wmul	;wreg free
  1688  000884  C042  F048         	movff	?___wmul,___awdiv@dividend
  1689  000888  C043  F049         	movff	?___wmul+1,___awdiv@dividend+1
  1690  00088C  0E00               	movlw	0
  1691  00088E  6E4B               	movwf	___awdiv@divisor+1,c
  1692  000890  0E05               	movlw	5
  1693  000892  6E4A               	movwf	___awdiv@divisor,c
  1694  000894  EC5C  F005         	call	___awdiv	;wreg free
  1695  000898  0E20               	movlw	32
  1696  00089A  2448               	addwf	?___awdiv,w,c
  1697  00089C  6E09               	movwf	_DS1621_tempF,c
  1698  00089E  0E00               	movlw	0
  1699  0008A0  2049               	addwfc	?___awdiv+1,w,c
  1700  0008A2  6E0A               	movwf	_DS1621_tempF+1,c
  1701                           
  1702                           ;Lab11pC.c: 164: rpm = get_RPM();
  1703  0008A4  EC5D  F007         	call	_get_RPM	;wreg free
  1704  0008A8  C050  F00F         	movff	?_get_RPM,_rpm
  1705  0008AC  C051  F010         	movff	?_get_RPM+1,_rpm+1
  1706                           
  1707                           ;Lab11pC.c: 165: printf ("%02x:%02x:%02x %02x/%02x/%02x",hour,minute,second,month,day,ye
      +                          ar);
  1708  0008B0  0E62               	movlw	low STR_12
  1709  0008B2  6E4E               	movwf	printf@f,c
  1710  0008B4  0EFF               	movlw	high STR_12
  1711  0008B6  6E4F               	movwf	printf@f+1,c
  1712  0008B8  C023  F050         	movff	_hour,?_printf+2
  1713  0008BC  6A51               	clrf	?_printf+3,c
  1714  0008BE  C024  F052         	movff	_minute,?_printf+4
  1715  0008C2  6A53               	clrf	?_printf+5,c
  1716  0008C4  C027  F054         	movff	_second,?_printf+6
  1717  0008C8  6A55               	clrf	?_printf+7,c
  1718  0008CA  C025  F056         	movff	_month,?_printf+8
  1719  0008CE  6A57               	clrf	?_printf+9,c
  1720  0008D0  C01F  F058         	movff	_day,?_printf+10
  1721  0008D4  6A59               	clrf	?_printf+11,c
  1722  0008D6  C031  F05A         	movff	_year,?_printf+12
  1723  0008DA  6A5B               	clrf	?_printf+13,c
  1724  0008DC  EC0E  F000         	call	_printf	;wreg free
  1725                           
  1726                           ;Lab11pC.c: 166: printf (" Temp = %d C = %d F ", DS1621_tempC, DS1621_tempF);
  1727  0008E0  0E96               	movlw	low STR_13
  1728  0008E2  6E4E               	movwf	printf@f,c
  1729  0008E4  0EFF               	movlw	high STR_13
  1730  0008E6  6E4F               	movwf	printf@f+1,c
  1731  0008E8  C007  F050         	movff	_DS1621_tempC,?_printf+2
  1732  0008EC  C008  F051         	movff	_DS1621_tempC+1,?_printf+3
  1733  0008F0  C009  F052         	movff	_DS1621_tempF,?_printf+4
  1734  0008F4  C00A  F053         	movff	_DS1621_tempF+1,?_printf+5
  1735  0008F8  EC0E  F000         	call	_printf	;wreg free
  1736                           
  1737                           ;Lab11pC.c: 167: printf ("RPM = %d  dc = %d\r\n", rpm, duty_cycle);
  1738  0008FC  0EAB               	movlw	low STR_14
  1739  0008FE  6E4E               	movwf	printf@f,c
  1740  000900  0EFF               	movlw	high STR_14
  1741  000902  6E4F               	movwf	printf@f+1,c
  1742  000904  C00F  F050         	movff	_rpm,?_printf+2
  1743  000908  C010  F051         	movff	_rpm+1,?_printf+3
  1744  00090C  C021  F052         	movff	_duty_cycle,?_printf+4
  1745  000910  6A53               	clrf	?_printf+5,c
  1746  000912  EC0E  F000         	call	_printf	;wreg free
  1747  000916  D79E               	goto	l5667
  1748  000918  EF0C  F000         	goto	start
  1749  00091C                     __end_of_main:
  1750                           	opt stack 0
  1751                           tblptru	equ	0xFF8
  1752                           tblptrh	equ	0xFF7
  1753                           tblptrl	equ	0xFF6
  1754                           tablat	equ	0xFF5
  1755                           postinc0	equ	0xFEE
  1756                           wreg	equ	0xFE8
  1757                           postdec1	equ	0xFE5
  1758                           fsr1l	equ	0xFE1
  1759                           status	equ	0xFD8
  1760                           
  1761 ;; *************** function _printf *****************
  1762 ;; Defined at:
  1763 ;;		line 464 in file "E:\XC8\sources\common\doprnt.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  f               2   28[COMRAM] PTR const unsigned char 
  1766 ;;		 -> STR_14(20), STR_13(21), STR_12(30), 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  idx             1    0[BANK0 ] unsigned char 
  1769 ;;  tmpval          4    0        struct .
  1770 ;;  cp              3    0        PTR const unsigned char 
  1771 ;;  width           2    7[BANK0 ] int 
  1772 ;;  val             2    4[BANK0 ] unsigned int 
  1773 ;;  ap              2    1[BANK0 ] PTR void [1]
  1774 ;;		 -> ?_printf(2), 
  1775 ;;  len             2    0        unsigned int 
  1776 ;;  c               1    9[BANK0 ] char 
  1777 ;;  flag            1    6[BANK0 ] unsigned char 
  1778 ;;  prec            1    3[BANK0 ] char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  2   28[COMRAM] int 
  1781 ;; Registers used:
  1782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1788 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Totals:        18      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;Total ram usage:       28 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    4
  1795 ;; This function calls:
  1796 ;;		___lwdiv
  1797 ;;		___lwmod
  1798 ;;		___wmul
  1799 ;;		_isdigit
  1800 ;;		_putch
  1801 ;; This function is called by:
  1802 ;;		_main
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text1
  1807  00001C                     __ptext1:
  1808                           	opt stack 0
  1809  00001C                     _printf:
  1810                           	opt stack 26
  1811                           
  1812                           ;doprnt.c: 466: va_list ap;
  1813                           ;doprnt.c: 499: signed char c;
  1814                           ;doprnt.c: 501: int width;
  1815                           ;doprnt.c: 506: signed char prec;
  1816                           ;doprnt.c: 508: unsigned char flag;
  1817                           ;doprnt.c: 523: union {
  1818                           ;doprnt.c: 524: unsigned long vd;
  1819                           ;doprnt.c: 525: double integ;
  1820                           ;doprnt.c: 526: } tmpval;
  1821                           ;doprnt.c: 528: unsigned int val;
  1822                           ;doprnt.c: 529: unsigned len;
  1823                           ;doprnt.c: 530: const char * cp;
  1824                           ;doprnt.c: 533: *ap = __va_start();
  1825                           
  1826                           ;incstack = 0
  1827  00001C  0E50               	movlw	low (?_printf+2)
  1828  00001E  0100               	movlb	0	; () banked
  1829  000020  6FE4               	movwf	printf@ap& (0+255),b
  1830  000022  0E00               	movlw	high (?_printf+2)
  1831  000024  0100               	movlb	0	; () banked
  1832  000026  6FE5               	movwf	(printf@ap+1)& (0+255),b
  1833                           
  1834                           ;doprnt.c: 536: while(c = *f++) {
  1835  000028  D1D6               	goto	l5369
  1836  00002A                     l5243:
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;doprnt.c: 538: if(c != '%')
  1840  00002A  0E25               	movlw	37
  1841  00002C  0100               	movlb	0	; () banked
  1842  00002E  19EC               	xorwf	printf@c& (0+255),w,b
  1843  000030  B4D8               	btfsc	status,2,c
  1844  000032  D005               	goto	l5247
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;doprnt.c: 540: {
  1848                           ;doprnt.c: 541: (putch(c) );
  1849  000034  0100               	movlb	0	; () banked
  1850  000036  51EC               	movf	printf@c& (0+255),w,b
  1851  000038  EC7E  F008         	call	_putch
  1852                           
  1853                           ;doprnt.c: 542: continue;
  1854  00003C  D1CC               	goto	l5369
  1855  00003E                     l5247:
  1856                           
  1857                           ;doprnt.c: 543: }
  1858                           ;doprnt.c: 546: width = 0;
  1859  00003E  0E00               	movlw	0
  1860  000040  0100               	movlb	0	; () banked
  1861  000042  6FEB               	movwf	(printf@width+1)& (0+255),b
  1862  000044  0E00               	movlw	0
  1863  000046  6FEA               	movwf	printf@width& (0+255),b
  1864                           
  1865                           ;doprnt.c: 548: flag = 0;
  1866  000048  0E00               	movlw	0
  1867  00004A  0100               	movlb	0	; () banked
  1868  00004C  6FE9               	movwf	printf@flag& (0+255),b
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;doprnt.c: 551: switch(*f) {
  1872                           
  1873                           ;doprnt.c: 550: for(;;) {
  1874  00004E  D006               	goto	l5253
  1875  000050                     l5249:
  1876                           
  1877                           ;doprnt.c: 580: flag |= 0x04;
  1878  000050  0100               	movlb	0	; () banked
  1879  000052  85E9               	bsf	printf@flag& (0+255),2,b
  1880                           
  1881                           ;doprnt.c: 581: f++;
  1882  000054  4A4E               	infsnz	printf@f,f,c
  1883  000056  2A4F               	incf	printf@f+1,f,c
  1884                           
  1885                           ;doprnt.c: 582: continue;
  1886  000058  D001               	goto	l5253
  1887                           
  1888                           ; BSR set to: 0
  1889                           ;doprnt.c: 584: }
  1890  00005A  D00B               	goto	l5255
  1891  00005C                     l5253:
  1892  00005C  C04E  FFF6         	movff	printf@f,tblptrl
  1893  000060  C04F  FFF7         	movff	printf@f+1,tblptrh
  1894  000064                     	if	0	;tblptru may be non-zero
  1895  000064                     	endif
  1896  000064                     	if	0	;tblptru may be non-zero
  1897  000064                     	endif
  1898  000064  0008               	tblrd		*
  1899  000066  50F5               	movf	tablat,w,c
  1900                           
  1901                           ; Switch size 1, requested type "space"
  1902                           ; Number of cases is 1, Range of values is 48 to 48
  1903                           ; switch strategies available:
  1904                           ; Name         Instructions Cycles
  1905                           ; simple_byte            4     3 (average)
  1906                           ;	Chosen strategy is simple_byte
  1907  000068  0A30               	xorlw	48	; case 48
  1908  00006A  B4D8               	btfsc	status,2,c
  1909  00006C  D7F1               	goto	l5249
  1910                           
  1911                           ;doprnt.c: 585: break;
  1912  00006E  D001               	goto	l5255
  1913                           
  1914                           ;doprnt.c: 586: }
  1915  000070  D7F5               	goto	l5253
  1916  000072                     l5255:
  1917                           
  1918                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1919  000072  C04E  FFF6         	movff	printf@f,tblptrl
  1920  000076  C04F  FFF7         	movff	printf@f+1,tblptrh
  1921  00007A                     	if	0	;tblptru may be non-zero
  1922  00007A                     	endif
  1923  00007A                     	if	0	;tblptru may be non-zero
  1924  00007A                     	endif
  1925  00007A  0008               	tblrd		*
  1926  00007C  50F5               	movf	tablat,w,c
  1927  00007E  ECF8  F007         	call	_isdigit
  1928  000082  A0D8               	btfss	status,0,c
  1929  000084  D03F               	goto	l5271
  1930                           
  1931                           ;doprnt.c: 598: width = 0;
  1932  000086  0E00               	movlw	0
  1933  000088  0100               	movlb	0	; () banked
  1934  00008A  6FEB               	movwf	(printf@width+1)& (0+255),b
  1935  00008C  0E00               	movlw	0
  1936  00008E  6FEA               	movwf	printf@width& (0+255),b
  1937  000090  D000               	goto	l5259
  1938  000092                     l5259:
  1939                           
  1940                           ;doprnt.c: 600: width *= 10;
  1941  000092  C0EA  F042         	movff	printf@width,___wmul@multiplier
  1942  000096  C0EB  F043         	movff	printf@width+1,___wmul@multiplier+1
  1943  00009A  0E00               	movlw	0
  1944  00009C  6E45               	movwf	___wmul@multiplicand+1,c
  1945  00009E  0E0A               	movlw	10
  1946  0000A0  6E44               	movwf	___wmul@multiplicand,c
  1947  0000A2  ECD1  F007         	call	___wmul	;wreg free
  1948  0000A6  C042  F0EA         	movff	?___wmul,printf@width
  1949  0000AA  C043  F0EB         	movff	?___wmul+1,printf@width+1
  1950                           
  1951                           ;doprnt.c: 601: width += *f++ - '0';
  1952  0000AE  0ED0               	movlw	208
  1953  0000B0  6E5C               	movwf	??_printf& (0+255),c
  1954  0000B2  0EFF               	movlw	255
  1955  0000B4  6E5D               	movwf	(??_printf+1)& (0+255),c
  1956  0000B6  C04E  FFF6         	movff	printf@f,tblptrl
  1957  0000BA  C04F  FFF7         	movff	printf@f+1,tblptrh
  1958  0000BE                     	if	0	;tblptru may be non-zero
  1959  0000BE                     	endif
  1960  0000BE                     	if	0	;tblptru may be non-zero
  1961  0000BE                     	endif
  1962  0000BE  0008               	tblrd		*
  1963  0000C0  50F5               	movf	tablat,w,c
  1964  0000C2  6E5E               	movwf	(??_printf+2)& (0+255),c
  1965  0000C4  6A5F               	clrf	(??_printf+3)& (0+255),c
  1966  0000C6  505C               	movf	??_printf,w,c
  1967  0000C8  265E               	addwf	??_printf+2,f,c
  1968  0000CA  505D               	movf	??_printf+1,w,c
  1969  0000CC  225F               	addwfc	??_printf+3,f,c
  1970  0000CE  505E               	movf	??_printf+2,w,c
  1971  0000D0  0100               	movlb	0	; () banked
  1972  0000D2  27EA               	addwf	printf@width& (0+255),f,b
  1973  0000D4  505F               	movf	??_printf+3,w,c
  1974  0000D6  0100               	movlb	0	; () banked
  1975  0000D8  23EB               	addwfc	(printf@width+1)& (0+255),f,b
  1976                           
  1977                           ; BSR set to: 0
  1978  0000DA  4A4E               	infsnz	printf@f,f,c
  1979  0000DC  2A4F               	incf	printf@f+1,f,c
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1983  0000DE  C04E  FFF6         	movff	printf@f,tblptrl
  1984  0000E2  C04F  FFF7         	movff	printf@f+1,tblptrh
  1985  0000E6                     	if	0	;tblptru may be non-zero
  1986  0000E6                     	endif
  1987  0000E6                     	if	0	;tblptru may be non-zero
  1988  0000E6                     	endif
  1989  0000E6  0008               	tblrd		*
  1990  0000E8  50F5               	movf	tablat,w,c
  1991  0000EA  ECF8  F007         	call	_isdigit
  1992  0000EE  A0D8               	btfss	status,0,c
  1993  0000F0  D009               	goto	l5271
  1994  0000F2  D7CF               	goto	l5259
  1995                           
  1996                           ;doprnt.c: 608: }
  1997                           ;doprnt.c: 635: switch(c = *f++) {
  1998  0000F4  D007               	goto	l5271
  1999                           
  2000                           ;doprnt.c: 638: goto alldone;
  2001                           
  2002                           ;doprnt.c: 637: case 0:
  2003  0000F6  D17E               	goto	l813
  2004                           
  2005                           ;doprnt.c: 698: case 'i':
  2006                           ;doprnt.c: 699: break;
  2007                           
  2008                           ;doprnt.c: 697: case 'd':
  2009  0000F8  D01D               	goto	l776
  2010  0000FA                     l5267:
  2011                           
  2012                           ;doprnt.c: 721: flag |= 0x80;
  2013  0000FA  0100               	movlb	0	; () banked
  2014  0000FC  8FE9               	bsf	printf@flag& (0+255),7,b
  2015                           
  2016                           ;doprnt.c: 723: break;
  2017  0000FE  D01A               	goto	l776
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;doprnt.c: 813: continue;
  2021                           
  2022                           ;doprnt.c: 802: default:
  2023  000100  D16A               	goto	l5369
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;doprnt.c: 822: }
  2027  000102  D018               	goto	l776
  2028  000104                     l5271:
  2029  000104  C04E  FFF6         	movff	printf@f,tblptrl
  2030  000108  C04F  FFF7         	movff	printf@f+1,tblptrh
  2031  00010C  4A4E               	infsnz	printf@f,f,c
  2032  00010E  2A4F               	incf	printf@f+1,f,c
  2033  000110                     	if	0	;tblptru may be non-zero
  2034  000110                     	endif
  2035  000110                     	if	0	;tblptru may be non-zero
  2036  000110                     	endif
  2037  000110  0008               	tblrd		*
  2038  000112  CFF5 F0EC          	movff	tablat,printf@c
  2039  000116  0100               	movlb	0	; () banked
  2040  000118  51EC               	movf	printf@c& (0+255),w,b
  2041                           
  2042                           ; Switch size 1, requested type "space"
  2043                           ; Number of cases is 4, Range of values is 0 to 120
  2044                           ; switch strategies available:
  2045                           ; Name         Instructions Cycles
  2046                           ; simple_byte           13     7 (average)
  2047                           ;	Chosen strategy is simple_byte
  2048  00011A  0A00               	xorlw	0	; case 0
  2049  00011C  B4D8               	btfsc	status,2,c
  2050  00011E  D16A               	goto	l813
  2051  000120  0A64               	xorlw	100	; case 100
  2052  000122  B4D8               	btfsc	status,2,c
  2053  000124  D007               	goto	l776
  2054  000126  0A0D               	xorlw	13	; case 105
  2055  000128  B4D8               	btfsc	status,2,c
  2056  00012A  D004               	goto	l776
  2057  00012C  0A11               	xorlw	17	; case 120
  2058  00012E  B4D8               	btfsc	status,2,c
  2059  000130  D7E4               	goto	l5267
  2060  000132  D151               	goto	l5369
  2061  000134                     l776:
  2062                           
  2063                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  2064  000134  0100               	movlb	0	; () banked
  2065  000136  BFE9               	btfsc	printf@flag& (0+255),7,b
  2066  000138  D019               	goto	l5283
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;doprnt.c: 1253: {
  2070                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2071  00013A  C0E4  FFD9         	movff	printf@ap,fsr2l
  2072  00013E  C0E5  FFDA         	movff	printf@ap+1,fsr2h
  2073  000142  CFDE F0E7          	movff	postinc2,printf@val
  2074  000146  CFDD F0E8          	movff	postdec2,printf@val+1
  2075                           
  2076                           ; BSR set to: 0
  2077  00014A  0E02               	movlw	2
  2078  00014C  0100               	movlb	0	; () banked
  2079  00014E  27E4               	addwf	printf@ap& (0+255),f,b
  2080  000150  0E00               	movlw	0
  2081  000152  23E5               	addwfc	(printf@ap+1)& (0+255),f,b
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;doprnt.c: 1261: if((int)val < 0) {
  2085  000154  0100               	movlb	0	; () banked
  2086  000156  AFE8               	btfss	(printf@val+1)& (0+255),7,b
  2087  000158  D05D               	goto	l5317
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;doprnt.c: 1262: flag |= 0x03;
  2091  00015A  0E03               	movlw	3
  2092  00015C  0100               	movlb	0	; () banked
  2093  00015E  13E9               	iorwf	printf@flag& (0+255),f,b
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;doprnt.c: 1263: val = -val;
  2097  000160  0100               	movlb	0	; () banked
  2098  000162  6DE7               	negf	printf@val& (0+255),b
  2099  000164  1FE8               	comf	(printf@val+1)& (0+255),f,b
  2100  000166  B0D8               	btfsc	status,0,c
  2101  000168  2BE8               	incf	(printf@val+1)& (0+255),f,b
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;doprnt.c: 1264: }
  2105                           ;doprnt.c: 1266: }
  2106  00016A  D054               	goto	l5317
  2107  00016C                     l5283:
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;doprnt.c: 1268: else
  2111                           ;doprnt.c: 1273: {
  2112                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2113  00016C  C0E4  FFD9         	movff	printf@ap,fsr2l
  2114  000170  C0E5  FFDA         	movff	printf@ap+1,fsr2h
  2115  000174  CFDE F0E7          	movff	postinc2,printf@val
  2116  000178  CFDD F0E8          	movff	postdec2,printf@val+1
  2117                           
  2118                           ; BSR set to: 0
  2119  00017C  0E02               	movlw	2
  2120  00017E  0100               	movlb	0	; () banked
  2121  000180  27E4               	addwf	printf@ap& (0+255),f,b
  2122  000182  0E00               	movlw	0
  2123  000184  23E5               	addwfc	(printf@ap+1)& (0+255),f,b
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;doprnt.c: 1287: }
  2127                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  2128  000186  D046               	goto	l5317
  2129  000188                     l5287:
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2133  000188  0E01               	movlw	1
  2134  00018A  0100               	movlb	0	; () banked
  2135  00018C  6FEC               	movwf	printf@c& (0+255),b
  2136  00018E                     l5289:
  2137                           
  2138                           ; BSR set to: 0
  2139  00018E  0E05               	movlw	5
  2140  000190  0100               	movlb	0	; () banked
  2141  000192  19EC               	xorwf	printf@c& (0+255),w,b
  2142  000194  B4D8               	btfsc	status,2,c
  2143  000196  D048               	goto	l5319
  2144  000198  D001               	goto	l5293
  2145                           
  2146                           ; BSR set to: 0
  2147  00019A  D046               	goto	l5319
  2148  00019C                     l5293:
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;doprnt.c: 1306: if(val < dpowers[c])
  2152  00019C  0100               	movlb	0	; () banked
  2153  00019E  51EC               	movf	printf@c& (0+255),w,b
  2154  0001A0  0D02               	mullw	2
  2155  0001A2  0E50               	movlw	low _dpowers
  2156  0001A4  24F3               	addwf	prodl,w,c
  2157  0001A6  6EF6               	movwf	tblptrl,c
  2158  0001A8  0EFF               	movlw	high _dpowers
  2159  0001AA  20F4               	addwfc	prodh,w,c
  2160  0001AC  6EF7               	movwf	tblptrh,c
  2161  0001AE                     	if	0	;There are less than 3 active tblptr bytes
  2162  0001AE                     	endif
  2163  0001AE  0009               	tblrd		*+
  2164  0001B0  50F5               	movf	tablat,w,c
  2165  0001B2  0100               	movlb	0	; () banked
  2166  0001B4  5DE7               	subwf	printf@val& (0+255),w,b
  2167  0001B6  0009               	tblrd		*+
  2168  0001B8  50F5               	movf	tablat,w,c
  2169  0001BA  0100               	movlb	0	; () banked
  2170  0001BC  59E8               	subwfb	(printf@val+1)& (0+255),w,b
  2171  0001BE  A0D8               	btfss	status,0,c
  2172  0001C0  D033               	goto	l5319
  2173  0001C2  D001               	goto	l5297
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;doprnt.c: 1307: break;
  2177  0001C4  D031               	goto	l5319
  2178  0001C6                     l5297:
  2179                           
  2180                           ; BSR set to: 0
  2181  0001C6  0100               	movlb	0	; () banked
  2182  0001C8  2BEC               	incf	printf@c& (0+255),f,b
  2183  0001CA  D7E1               	goto	l5289
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;doprnt.c: 1309: break;
  2187                           
  2188                           ; BSR set to: 0
  2189  0001CC  D02D               	goto	l5319
  2190  0001CE                     l5301:
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  2194  0001CE  0E01               	movlw	1
  2195  0001D0  0100               	movlb	0	; () banked
  2196  0001D2  6FEC               	movwf	printf@c& (0+255),b
  2197  0001D4                     l5303:
  2198                           
  2199                           ; BSR set to: 0
  2200  0001D4  0E04               	movlw	4
  2201  0001D6  0100               	movlb	0	; () banked
  2202  0001D8  19EC               	xorwf	printf@c& (0+255),w,b
  2203  0001DA  B4D8               	btfsc	status,2,c
  2204  0001DC  D025               	goto	l5319
  2205  0001DE  D001               	goto	l5307
  2206                           
  2207                           ; BSR set to: 0
  2208  0001E0  D023               	goto	l5319
  2209  0001E2                     l5307:
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;doprnt.c: 1317: if(val < hexpowers[c])
  2213  0001E2  0100               	movlb	0	; () banked
  2214  0001E4  51EC               	movf	printf@c& (0+255),w,b
  2215  0001E6  0D02               	mullw	2
  2216  0001E8  0E5A               	movlw	low _hexpowers
  2217  0001EA  24F3               	addwf	prodl,w,c
  2218  0001EC  6EF6               	movwf	tblptrl,c
  2219  0001EE  0EFF               	movlw	high _hexpowers
  2220  0001F0  20F4               	addwfc	prodh,w,c
  2221  0001F2  6EF7               	movwf	tblptrh,c
  2222  0001F4                     	if	0	;There are less than 3 active tblptr bytes
  2223  0001F4                     	endif
  2224  0001F4  0009               	tblrd		*+
  2225  0001F6  50F5               	movf	tablat,w,c
  2226  0001F8  0100               	movlb	0	; () banked
  2227  0001FA  5DE7               	subwf	printf@val& (0+255),w,b
  2228  0001FC  0009               	tblrd		*+
  2229  0001FE  50F5               	movf	tablat,w,c
  2230  000200  0100               	movlb	0	; () banked
  2231  000202  59E8               	subwfb	(printf@val+1)& (0+255),w,b
  2232  000204  A0D8               	btfss	status,0,c
  2233  000206  D010               	goto	l5319
  2234  000208  D001               	goto	l5311
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;doprnt.c: 1318: break;
  2238  00020A  D00E               	goto	l5319
  2239  00020C                     l5311:
  2240                           
  2241                           ; BSR set to: 0
  2242  00020C  0100               	movlb	0	; () banked
  2243  00020E  2BEC               	incf	printf@c& (0+255),f,b
  2244  000210  D7E1               	goto	l5303
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;doprnt.c: 1336: }
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;doprnt.c: 1320: break;
  2251                           
  2252                           ; BSR set to: 0
  2253  000212  D00A               	goto	l5319
  2254  000214                     l5317:
  2255                           
  2256                           ; BSR set to: 0
  2257  000214  0100               	movlb	0	; () banked
  2258  000216  51E9               	movf	printf@flag& (0+255),w,b
  2259  000218  0B80               	andlw	128
  2260                           
  2261                           ; Switch size 1, requested type "space"
  2262                           ; Number of cases is 2, Range of values is 0 to 128
  2263                           ; switch strategies available:
  2264                           ; Name         Instructions Cycles
  2265                           ; simple_byte            7     4 (average)
  2266                           ;	Chosen strategy is simple_byte
  2267  00021A  0A00               	xorlw	0	; case 0
  2268  00021C  B4D8               	btfsc	status,2,c
  2269  00021E  D7B4               	goto	l5287
  2270  000220  0A80               	xorlw	128	; case 128
  2271  000222  B4D8               	btfsc	status,2,c
  2272  000224  D7D4               	goto	l5301
  2273  000226  D000               	goto	l5319
  2274  000228                     l5319:
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;doprnt.c: 1345: if(width && flag & 0x03)
  2278  000228  0100               	movlb	0	; () banked
  2279  00022A  51EA               	movf	printf@width& (0+255),w,b
  2280  00022C  0100               	movlb	0	; () banked
  2281  00022E  11EB               	iorwf	(printf@width+1)& (0+255),w,b
  2282  000230  B4D8               	btfsc	status,2,c
  2283  000232  D00B               	goto	l5325
  2284                           
  2285                           ; BSR set to: 0
  2286  000234  C0E9  F05C         	movff	printf@flag,??_printf
  2287  000238  0E03               	movlw	3
  2288  00023A  165C               	andwf	??_printf,f,c
  2289  00023C  B4D8               	btfsc	status,2,c
  2290  00023E  D005               	goto	l5325
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;doprnt.c: 1346: width--;
  2294  000240  0100               	movlb	0	; () banked
  2295  000242  07EA               	decf	printf@width& (0+255),f,b
  2296  000244  A0D8               	btfss	status,0,c
  2297  000246  07EB               	decf	(printf@width+1)& (0+255),f,b
  2298  000248  D000               	goto	l5325
  2299  00024A                     l5325:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;doprnt.c: 1381: if(width > c)
  2303  00024A  0E80               	movlw	128
  2304  00024C  0100               	movlb	0	; () banked
  2305  00024E  BFEC               	btfsc	printf@c& (0+255),7,b
  2306  000250  0E7F               	movlw	127
  2307  000252  6E5C               	movwf	??_printf& (0+255),c
  2308  000254  0100               	movlb	0	; () banked
  2309  000256  51EA               	movf	printf@width& (0+255),w,b
  2310  000258  0100               	movlb	0	; () banked
  2311  00025A  5DEC               	subwf	printf@c& (0+255),w,b
  2312  00025C  0100               	movlb	0	; () banked
  2313  00025E  51EB               	movf	(printf@width+1)& (0+255),w,b
  2314  000260  0A80               	xorlw	128
  2315  000262  585C               	subwfb	??_printf& (0+255),w,c
  2316  000264  B0D8               	btfsc	status,0,c
  2317  000266  D00B               	goto	l5329
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;doprnt.c: 1382: width -= c;
  2321  000268  0100               	movlb	0	; () banked
  2322  00026A  51EC               	movf	printf@c& (0+255),w,b
  2323  00026C  0100               	movlb	0	; () banked
  2324  00026E  5FEA               	subwf	printf@width& (0+255),f,b
  2325  000270  0E00               	movlw	0
  2326  000272  0100               	movlb	0	; () banked
  2327  000274  BFEC               	btfsc	printf@c& (0+255),7,b
  2328  000276  0EFF               	movlw	255
  2329  000278  0100               	movlb	0	; () banked
  2330  00027A  5BEB               	subwfb	(printf@width+1)& (0+255),f,b
  2331  00027C  D006               	goto	l5331
  2332  00027E                     l5329:
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;doprnt.c: 1383: else
  2336                           ;doprnt.c: 1384: width = 0;
  2337  00027E  0E00               	movlw	0
  2338  000280  0100               	movlb	0	; () banked
  2339  000282  6FEB               	movwf	(printf@width+1)& (0+255),b
  2340  000284  0E00               	movlw	0
  2341  000286  6FEA               	movwf	printf@width& (0+255),b
  2342  000288  D000               	goto	l5331
  2343  00028A                     l5331:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;doprnt.c: 1387: if(flag & 0x04) {
  2347  00028A  0100               	movlb	0	; () banked
  2348  00028C  A5E9               	btfss	printf@flag& (0+255),2,b
  2349  00028E  D01F               	goto	l5343
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;doprnt.c: 1392: if(flag & 0x03)
  2353  000290  C0E9  F05C         	movff	printf@flag,??_printf
  2354  000294  0E03               	movlw	3
  2355  000296  165C               	andwf	??_printf,f,c
  2356  000298  B4D8               	btfsc	status,2,c
  2357  00029A  D004               	goto	l5337
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;doprnt.c: 1393: (putch('-') );
  2361  00029C  0E2D               	movlw	45
  2362  00029E  EC7E  F008         	call	_putch
  2363  0002A2  D000               	goto	l5337
  2364  0002A4                     l5337:
  2365                           
  2366                           ;doprnt.c: 1415: if(width)
  2367  0002A4  0100               	movlb	0	; () banked
  2368  0002A6  51EA               	movf	printf@width& (0+255),w,b
  2369  0002A8  0100               	movlb	0	; () banked
  2370  0002AA  11EB               	iorwf	(printf@width+1)& (0+255),w,b
  2371  0002AC  B4D8               	btfsc	status,2,c
  2372  0002AE  D02E               	goto	l5353
  2373  0002B0                     l5339:
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;doprnt.c: 1417: (putch('0') );
  2377  0002B0  0E30               	movlw	48
  2378  0002B2  EC7E  F008         	call	_putch
  2379                           
  2380                           ;doprnt.c: 1418: while(--width);
  2381  0002B6  0100               	movlb	0	; () banked
  2382  0002B8  07EA               	decf	printf@width& (0+255),f,b
  2383  0002BA  A0D8               	btfss	status,0,c
  2384  0002BC  07EB               	decf	(printf@width+1)& (0+255),f,b
  2385  0002BE  0100               	movlb	0	; () banked
  2386  0002C0  51EA               	movf	printf@width& (0+255),w,b
  2387  0002C2  0100               	movlb	0	; () banked
  2388  0002C4  11EB               	iorwf	(printf@width+1)& (0+255),w,b
  2389  0002C6  B4D8               	btfsc	status,2,c
  2390  0002C8  D021               	goto	l5353
  2391  0002CA  D7F2               	goto	l5339
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;doprnt.c: 1420: } else
  2395                           
  2396                           ; BSR set to: 0
  2397  0002CC  D01F               	goto	l5353
  2398  0002CE                     l5343:
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;doprnt.c: 1422: {
  2402                           ;doprnt.c: 1424: if(width
  2403                           ;doprnt.c: 1428: )
  2404  0002CE  0100               	movlb	0	; () banked
  2405  0002D0  51EA               	movf	printf@width& (0+255),w,b
  2406  0002D2  0100               	movlb	0	; () banked
  2407  0002D4  11EB               	iorwf	(printf@width+1)& (0+255),w,b
  2408  0002D6  B4D8               	btfsc	status,2,c
  2409  0002D8  D00F               	goto	l5349
  2410  0002DA                     l5345:
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;doprnt.c: 1430: (putch(' ') );
  2414  0002DA  0E20               	movlw	32
  2415  0002DC  EC7E  F008         	call	_putch
  2416                           
  2417                           ;doprnt.c: 1431: while(--width);
  2418  0002E0  0100               	movlb	0	; () banked
  2419  0002E2  07EA               	decf	printf@width& (0+255),f,b
  2420  0002E4  A0D8               	btfss	status,0,c
  2421  0002E6  07EB               	decf	(printf@width+1)& (0+255),f,b
  2422  0002E8  0100               	movlb	0	; () banked
  2423  0002EA  51EA               	movf	printf@width& (0+255),w,b
  2424  0002EC  0100               	movlb	0	; () banked
  2425  0002EE  11EB               	iorwf	(printf@width+1)& (0+255),w,b
  2426  0002F0  B4D8               	btfsc	status,2,c
  2427  0002F2  D002               	goto	l5349
  2428  0002F4  D7F2               	goto	l5345
  2429                           
  2430                           ; BSR set to: 0
  2431  0002F6  D000               	goto	l5349
  2432  0002F8                     l5349:
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;doprnt.c: 1438: if(flag & 0x03)
  2436  0002F8  C0E9  F05C         	movff	printf@flag,??_printf
  2437  0002FC  0E03               	movlw	3
  2438  0002FE  165C               	andwf	??_printf,f,c
  2439  000300  B4D8               	btfsc	status,2,c
  2440  000302  D004               	goto	l5353
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;doprnt.c: 1439: (putch('-') );
  2444  000304  0E2D               	movlw	45
  2445  000306  EC7E  F008         	call	_putch
  2446  00030A  D000               	goto	l5353
  2447  00030C                     l5353:
  2448                           
  2449                           ;doprnt.c: 1469: }
  2450                           ;doprnt.c: 1472: prec = c;
  2451  00030C  C0EC  F0E6         	movff	printf@c,printf@prec
  2452                           
  2453                           ;doprnt.c: 1474: while(prec--) {
  2454  000310  D05A               	goto	l5367
  2455                           
  2456                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  2457  000312  D04A               	goto	l5363
  2458  000314                     l5355:
  2459                           
  2460                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2461  000314  0100               	movlb	0	; () banked
  2462  000316  51E6               	movf	printf@prec& (0+255),w,b
  2463  000318  0D02               	mullw	2
  2464  00031A  0E50               	movlw	low _dpowers
  2465  00031C  24F3               	addwf	prodl,w,c
  2466  00031E  6EF6               	movwf	tblptrl,c
  2467  000320  0EFF               	movlw	high _dpowers
  2468  000322  20F4               	addwfc	prodh,w,c
  2469  000324  6EF7               	movwf	tblptrh,c
  2470  000326                     	if	0	;There are less than 3 active tblptr bytes
  2471  000326                     	endif
  2472  000326  0009               	tblrd		*+
  2473  000328  CFF5 F044          	movff	tablat,___lwdiv@divisor
  2474  00032C  000A               	tblrd		*-
  2475  00032E  CFF5 F045          	movff	tablat,___lwdiv@divisor+1
  2476  000332  C0E7  F042         	movff	printf@val,___lwdiv@dividend
  2477  000336  C0E8  F043         	movff	printf@val+1,___lwdiv@dividend+1
  2478  00033A  ECBF  F006         	call	___lwdiv	;wreg free
  2479  00033E  C042  F049         	movff	?___lwdiv,___lwmod@dividend
  2480  000342  C043  F04A         	movff	?___lwdiv+1,___lwmod@dividend+1
  2481  000346  0E00               	movlw	0
  2482  000348  6E4C               	movwf	___lwmod@divisor+1,c
  2483  00034A  0E0A               	movlw	10
  2484  00034C  6E4B               	movwf	___lwmod@divisor,c
  2485  00034E  ECED  F006         	call	___lwmod	;wreg free
  2486  000352  5049               	movf	?___lwmod,w,c
  2487  000354  0F30               	addlw	48
  2488  000356  0100               	movlb	0	; () banked
  2489  000358  6FEC               	movwf	printf@c& (0+255),b
  2490                           
  2491                           ;doprnt.c: 1491: break;
  2492  00035A  D030               	goto	l5365
  2493  00035C                     l5357:
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;doprnt.c: 1499: {
  2497                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  2498  00035C  C0E7  F042         	movff	printf@val,___lwdiv@dividend
  2499  000360  C0E8  F043         	movff	printf@val+1,___lwdiv@dividend+1
  2500  000364  0100               	movlb	0	; () banked
  2501  000366  51E6               	movf	printf@prec& (0+255),w,b
  2502  000368  0D02               	mullw	2
  2503  00036A  0E5A               	movlw	low _hexpowers
  2504  00036C  24F3               	addwf	prodl,w,c
  2505  00036E  6EF6               	movwf	tblptrl,c
  2506  000370  0EFF               	movlw	high _hexpowers
  2507  000372  20F4               	addwfc	prodh,w,c
  2508  000374  6EF7               	movwf	tblptrh,c
  2509  000376                     	if	0	;There are less than 3 active tblptr bytes
  2510  000376                     	endif
  2511  000376  0009               	tblrd		*+
  2512  000378  CFF5 F044          	movff	tablat,___lwdiv@divisor
  2513  00037C  000A               	tblrd		*-
  2514  00037E  CFF5 F045          	movff	tablat,___lwdiv@divisor+1
  2515  000382  ECBF  F006         	call	___lwdiv	;wreg free
  2516  000386  5042               	movf	?___lwdiv,w,c
  2517  000388  0B0F               	andlw	15
  2518  00038A  0100               	movlb	0	; () banked
  2519  00038C  6FE3               	movwf	printf@idx& (0+255),b
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  2523  00038E  0100               	movlb	0	; () banked
  2524  000390  51E3               	movf	printf@idx& (0+255),w,b
  2525  000392  0D01               	mullw	1
  2526  000394  0EBF               	movlw	low STR_15
  2527  000396  24F3               	addwf	prodl,w,c
  2528  000398  6EF6               	movwf	tblptrl,c
  2529  00039A  0EFF               	movlw	high STR_15
  2530  00039C  20F4               	addwfc	prodh,w,c
  2531  00039E  6EF7               	movwf	tblptrh,c
  2532  0003A0                     	if	0	;There are less than 3 active tblptr bytes
  2533  0003A0                     	endif
  2534  0003A0  0008               	tblrd		*
  2535  0003A2  CFF5 F0EC          	movff	tablat,printf@c
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;doprnt.c: 1523: }
  2539                           
  2540                           ;doprnt.c: 1508: }
  2541                           ;doprnt.c: 1510: break;
  2542  0003A6  D00A               	goto	l5365
  2543  0003A8                     l5363:
  2544  0003A8  0100               	movlb	0	; () banked
  2545  0003AA  51E9               	movf	printf@flag& (0+255),w,b
  2546  0003AC  0B80               	andlw	128
  2547                           
  2548                           ; Switch size 1, requested type "space"
  2549                           ; Number of cases is 2, Range of values is 0 to 128
  2550                           ; switch strategies available:
  2551                           ; Name         Instructions Cycles
  2552                           ; simple_byte            7     4 (average)
  2553                           ;	Chosen strategy is simple_byte
  2554  0003AE  0A00               	xorlw	0	; case 0
  2555  0003B0  B4D8               	btfsc	status,2,c
  2556  0003B2  D7B0               	goto	l5355
  2557  0003B4  0A80               	xorlw	128	; case 128
  2558  0003B6  B4D8               	btfsc	status,2,c
  2559  0003B8  D7D1               	goto	l5357
  2560  0003BA  D000               	goto	l5365
  2561  0003BC                     l5365:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;doprnt.c: 1524: (putch(c) );
  2565  0003BC  0100               	movlb	0	; () banked
  2566  0003BE  51EC               	movf	printf@c& (0+255),w,b
  2567  0003C0  EC7E  F008         	call	_putch
  2568  0003C4  D000               	goto	l5367
  2569  0003C6                     l5367:
  2570  0003C6  0100               	movlb	0	; () banked
  2571  0003C8  07E6               	decf	printf@prec& (0+255),f,b
  2572  0003CA  0100               	movlb	0	; () banked
  2573  0003CC  29E6               	incf	printf@prec& (0+255),w,b
  2574  0003CE  B4D8               	btfsc	status,2,c
  2575  0003D0  D002               	goto	l5369
  2576  0003D2  D7EA               	goto	l5363
  2577                           
  2578                           ; BSR set to: 0
  2579  0003D4  D000               	goto	l5369
  2580  0003D6                     l5369:
  2581  0003D6  C04E  FFF6         	movff	printf@f,tblptrl
  2582  0003DA  C04F  FFF7         	movff	printf@f+1,tblptrh
  2583  0003DE  4A4E               	infsnz	printf@f,f,c
  2584  0003E0  2A4F               	incf	printf@f+1,f,c
  2585  0003E2                     	if	0	;tblptru may be non-zero
  2586  0003E2                     	endif
  2587  0003E2                     	if	0	;tblptru may be non-zero
  2588  0003E2                     	endif
  2589  0003E2  0008               	tblrd		*
  2590  0003E4  CFF5 F0EC          	movff	tablat,printf@c
  2591  0003E8  0100               	movlb	0	; () banked
  2592  0003EA  51EC               	movf	printf@c& (0+255),w,b
  2593  0003EC  B4D8               	btfsc	status,2,c
  2594  0003EE  D002               	goto	l813
  2595  0003F0  D61C               	goto	l5243
  2596                           
  2597                           ; BSR set to: 0
  2598  0003F2  D000               	goto	l813
  2599  0003F4                     l813:
  2600  0003F4  0012               	return		;funcret
  2601  0003F6                     __end_of_printf:
  2602                           	opt stack 0
  2603                           tblptru	equ	0xFF8
  2604                           tblptrh	equ	0xFF7
  2605                           tblptrl	equ	0xFF6
  2606                           tablat	equ	0xFF5
  2607                           prodh	equ	0xFF4
  2608                           prodl	equ	0xFF3
  2609                           postinc0	equ	0xFEE
  2610                           wreg	equ	0xFE8
  2611                           postdec1	equ	0xFE5
  2612                           fsr1l	equ	0xFE1
  2613                           postinc2	equ	0xFDE
  2614                           postdec2	equ	0xFDD
  2615                           fsr2h	equ	0xFDA
  2616                           fsr2l	equ	0xFD9
  2617                           status	equ	0xFD8
  2618                           
  2619 ;; *************** function _putch *****************
  2620 ;; Defined at:
  2621 ;;		line 91 in file "Lab11pC.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  c               1    wreg     unsigned char 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  c               1   16[COMRAM] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;		None               void
  2628 ;; Registers used:
  2629 ;;		wreg
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;Total ram usage:        1 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    3
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_printf
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text2
  2650  0010FC                     __ptext2:
  2651                           	opt stack 0
  2652  0010FC                     _putch:
  2653                           	opt stack 26
  2654                           
  2655                           ;incstack = 0
  2656                           ;putch@c stored from wreg
  2657  0010FC  6E42               	movwf	putch@c,c
  2658                           
  2659                           ;Lab11pC.c: 93: while (!TRMT);
  2660  0010FE  D000               	goto	l728
  2661  001100                     l728:
  2662  001100  A2AC               	btfss	4012,1,c	;volatile
  2663  001102  D7FE               	goto	l728
  2664                           
  2665                           ;Lab11pC.c: 94: TXREG = c;
  2666  001104  C042  FFAD         	movff	putch@c,4013	;volatile
  2667  001108  0012               	return		;funcret
  2668  00110A                     __end_of_putch:
  2669                           	opt stack 0
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           prodh	equ	0xFF4
  2675                           prodl	equ	0xFF3
  2676                           postinc0	equ	0xFEE
  2677                           wreg	equ	0xFE8
  2678                           postdec1	equ	0xFE5
  2679                           fsr1l	equ	0xFE1
  2680                           postinc2	equ	0xFDE
  2681                           postdec2	equ	0xFDD
  2682                           fsr2h	equ	0xFDA
  2683                           fsr2l	equ	0xFD9
  2684                           status	equ	0xFD8
  2685                           
  2686 ;; *************** function _isdigit *****************
  2687 ;; Defined at:
  2688 ;;		line 8 in file "E:\XC8\sources\common\isdigit.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  c               1    wreg     unsigned char 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  c               1   18[COMRAM] unsigned char 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;		None               void
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;Total ram usage:        3 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    3
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_printf
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text3
  2717  000FF0                     __ptext3:
  2718                           	opt stack 0
  2719  000FF0                     _isdigit:
  2720                           	opt stack 26
  2721                           
  2722                           ;incstack = 0
  2723                           ;isdigit@c stored from wreg
  2724  000FF0  6E44               	movwf	isdigit@c,c
  2725  000FF2  0E00               	movlw	0
  2726  000FF4  6E43               	movwf	_isdigit$2279,c
  2727  000FF6  0E3A               	movlw	58
  2728  000FF8  6044               	cpfslt	isdigit@c,c
  2729  000FFA  D006               	goto	l5119
  2730  000FFC  0E2F               	movlw	47
  2731  000FFE  6444               	cpfsgt	isdigit@c,c
  2732  001000  D003               	goto	l5119
  2733  001002  0E01               	movlw	1
  2734  001004  6E43               	movwf	_isdigit$2279,c
  2735  001006  D000               	goto	l5119
  2736  001008                     l5119:
  2737  001008  C043  F042         	movff	_isdigit$2279,??_isdigit
  2738  00100C  3042               	rrcf	??_isdigit,w,c
  2739  00100E  D000               	goto	l1280
  2740  001010                     l1280:
  2741  001010  0012               	return		;funcret
  2742  001012                     __end_of_isdigit:
  2743                           	opt stack 0
  2744                           tblptru	equ	0xFF8
  2745                           tblptrh	equ	0xFF7
  2746                           tblptrl	equ	0xFF6
  2747                           tablat	equ	0xFF5
  2748                           prodh	equ	0xFF4
  2749                           prodl	equ	0xFF3
  2750                           postinc0	equ	0xFEE
  2751                           wreg	equ	0xFE8
  2752                           postdec1	equ	0xFE5
  2753                           fsr1l	equ	0xFE1
  2754                           postinc2	equ	0xFDE
  2755                           postdec2	equ	0xFDD
  2756                           fsr2h	equ	0xFDA
  2757                           fsr2l	equ	0xFD9
  2758                           status	equ	0xFD8
  2759                           
  2760 ;; *************** function ___lwmod *****************
  2761 ;; Defined at:
  2762 ;;		line 8 in file "E:\XC8\sources\common\lwmod.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  dividend        2   23[COMRAM] unsigned int 
  2765 ;;  divisor         2   25[COMRAM] unsigned int 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  counter         1   27[COMRAM] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  2   23[COMRAM] unsigned int 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2777 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;Total ram usage:        5 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    3
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_printf
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text4
  2792  000DDA                     __ptext4:
  2793                           	opt stack 0
  2794  000DDA                     ___lwmod:
  2795                           	opt stack 26
  2796                           
  2797                           ;incstack = 0
  2798  000DDA  504B               	movf	___lwmod@divisor,w,c
  2799  000DDC  104C               	iorwf	___lwmod@divisor+1,w,c
  2800  000DDE  B4D8               	btfsc	status,2,c
  2801  000DE0  D01D               	goto	l1382
  2802  000DE2  0E01               	movlw	1
  2803  000DE4  6E4D               	movwf	___lwmod@counter,c
  2804  000DE6  D005               	goto	l5157
  2805  000DE8                     l5155:
  2806  000DE8  90D8               	bcf	status,0,c
  2807  000DEA  364B               	rlcf	___lwmod@divisor,f,c
  2808  000DEC  364C               	rlcf	___lwmod@divisor+1,f,c
  2809  000DEE  2A4D               	incf	___lwmod@counter,f,c
  2810  000DF0  D000               	goto	l5157
  2811  000DF2                     l5157:
  2812  000DF2  BE4C               	btfsc	___lwmod@divisor+1,7,c
  2813  000DF4  D002               	goto	l5159
  2814  000DF6  D7F8               	goto	l5155
  2815  000DF8  D000               	goto	l5159
  2816  000DFA                     l5159:
  2817  000DFA  504B               	movf	___lwmod@divisor,w,c
  2818  000DFC  5C49               	subwf	___lwmod@dividend,w,c
  2819  000DFE  504C               	movf	___lwmod@divisor+1,w,c
  2820  000E00  584A               	subwfb	___lwmod@dividend+1,w,c
  2821  000E02  A0D8               	btfss	status,0,c
  2822  000E04  D005               	goto	l5163
  2823  000E06  504B               	movf	___lwmod@divisor,w,c
  2824  000E08  5E49               	subwf	___lwmod@dividend,f,c
  2825  000E0A  504C               	movf	___lwmod@divisor+1,w,c
  2826  000E0C  5A4A               	subwfb	___lwmod@dividend+1,f,c
  2827  000E0E  D000               	goto	l5163
  2828  000E10                     l5163:
  2829  000E10  90D8               	bcf	status,0,c
  2830  000E12  324C               	rrcf	___lwmod@divisor+1,f,c
  2831  000E14  324B               	rrcf	___lwmod@divisor,f,c
  2832  000E16  2E4D               	decfsz	___lwmod@counter,f,c
  2833  000E18  D7F0               	goto	l5159
  2834  000E1A  D000               	goto	l1382
  2835  000E1C                     l1382:
  2836  000E1C  C049  F049         	movff	___lwmod@dividend,?___lwmod
  2837  000E20  C04A  F04A         	movff	___lwmod@dividend+1,?___lwmod+1
  2838  000E24  0012               	return		;funcret
  2839  000E26                     __end_of___lwmod:
  2840                           	opt stack 0
  2841                           tblptru	equ	0xFF8
  2842                           tblptrh	equ	0xFF7
  2843                           tblptrl	equ	0xFF6
  2844                           tablat	equ	0xFF5
  2845                           prodh	equ	0xFF4
  2846                           prodl	equ	0xFF3
  2847                           postinc0	equ	0xFEE
  2848                           wreg	equ	0xFE8
  2849                           postdec1	equ	0xFE5
  2850                           fsr1l	equ	0xFE1
  2851                           postinc2	equ	0xFDE
  2852                           postdec2	equ	0xFDD
  2853                           fsr2h	equ	0xFDA
  2854                           fsr2l	equ	0xFD9
  2855                           status	equ	0xFD8
  2856                           
  2857 ;; *************** function ___lwdiv *****************
  2858 ;; Defined at:
  2859 ;;		line 8 in file "E:\XC8\sources\common\lwdiv.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  dividend        2   16[COMRAM] unsigned int 
  2862 ;;  divisor         2   18[COMRAM] unsigned int 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  quotient        2   21[COMRAM] unsigned int 
  2865 ;;  counter         1   20[COMRAM] unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  2   16[COMRAM] unsigned int 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;Total ram usage:        7 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    3
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_printf
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text5
  2890  000D7E                     __ptext5:
  2891                           	opt stack 0
  2892  000D7E                     ___lwdiv:
  2893                           	opt stack 26
  2894                           
  2895                           ;incstack = 0
  2896  000D7E  0E00               	movlw	0
  2897  000D80  6E48               	movwf	___lwdiv@quotient+1,c
  2898  000D82  0E00               	movlw	0
  2899  000D84  6E47               	movwf	___lwdiv@quotient,c
  2900  000D86  5044               	movf	___lwdiv@divisor,w,c
  2901  000D88  1045               	iorwf	___lwdiv@divisor+1,w,c
  2902  000D8A  B4D8               	btfsc	status,2,c
  2903  000D8C  D021               	goto	l1372
  2904  000D8E  0E01               	movlw	1
  2905  000D90  6E46               	movwf	___lwdiv@counter,c
  2906  000D92  D005               	goto	l5137
  2907  000D94                     l5135:
  2908  000D94  90D8               	bcf	status,0,c
  2909  000D96  3644               	rlcf	___lwdiv@divisor,f,c
  2910  000D98  3645               	rlcf	___lwdiv@divisor+1,f,c
  2911  000D9A  2A46               	incf	___lwdiv@counter,f,c
  2912  000D9C  D000               	goto	l5137
  2913  000D9E                     l5137:
  2914  000D9E  BE45               	btfsc	___lwdiv@divisor+1,7,c
  2915  000DA0  D002               	goto	l5139
  2916  000DA2  D7F8               	goto	l5135
  2917  000DA4  D000               	goto	l5139
  2918  000DA6                     l5139:
  2919  000DA6  90D8               	bcf	status,0,c
  2920  000DA8  3647               	rlcf	___lwdiv@quotient,f,c
  2921  000DAA  3648               	rlcf	___lwdiv@quotient+1,f,c
  2922  000DAC  5044               	movf	___lwdiv@divisor,w,c
  2923  000DAE  5C42               	subwf	___lwdiv@dividend,w,c
  2924  000DB0  5045               	movf	___lwdiv@divisor+1,w,c
  2925  000DB2  5843               	subwfb	___lwdiv@dividend+1,w,c
  2926  000DB4  A0D8               	btfss	status,0,c
  2927  000DB6  D006               	goto	l5147
  2928  000DB8  5044               	movf	___lwdiv@divisor,w,c
  2929  000DBA  5E42               	subwf	___lwdiv@dividend,f,c
  2930  000DBC  5045               	movf	___lwdiv@divisor+1,w,c
  2931  000DBE  5A43               	subwfb	___lwdiv@dividend+1,f,c
  2932  000DC0  8047               	bsf	___lwdiv@quotient,0,c
  2933  000DC2  D000               	goto	l5147
  2934  000DC4                     l5147:
  2935  000DC4  90D8               	bcf	status,0,c
  2936  000DC6  3245               	rrcf	___lwdiv@divisor+1,f,c
  2937  000DC8  3244               	rrcf	___lwdiv@divisor,f,c
  2938  000DCA  2E46               	decfsz	___lwdiv@counter,f,c
  2939  000DCC  D7EC               	goto	l5139
  2940  000DCE  D000               	goto	l1372
  2941  000DD0                     l1372:
  2942  000DD0  C047  F042         	movff	___lwdiv@quotient,?___lwdiv
  2943  000DD4  C048  F043         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2944  000DD8  0012               	return		;funcret
  2945  000DDA                     __end_of___lwdiv:
  2946                           	opt stack 0
  2947                           tblptru	equ	0xFF8
  2948                           tblptrh	equ	0xFF7
  2949                           tblptrl	equ	0xFF6
  2950                           tablat	equ	0xFF5
  2951                           prodh	equ	0xFF4
  2952                           prodl	equ	0xFF3
  2953                           postinc0	equ	0xFEE
  2954                           wreg	equ	0xFE8
  2955                           postdec1	equ	0xFE5
  2956                           fsr1l	equ	0xFE1
  2957                           postinc2	equ	0xFDE
  2958                           postdec2	equ	0xFDD
  2959                           fsr2h	equ	0xFDA
  2960                           fsr2l	equ	0xFD9
  2961                           status	equ	0xFD8
  2962                           
  2963 ;; *************** function _get_RPM *****************
  2964 ;; Defined at:
  2965 ;;		line 18 in file "Fan_Support.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  RPS             2   32[COMRAM] int 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  2   30[COMRAM] int 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;Total ram usage:        4 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    4
  2986 ;; This function calls:
  2987 ;;		___awdiv
  2988 ;;		___wmul
  2989 ;; This function is called by:
  2990 ;;		_main
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text6
  2995  000EBA                     __ptext6:
  2996                           	opt stack 0
  2997  000EBA                     _get_RPM:
  2998                           	opt stack 26
  2999                           
  3000                           ;Fan_Support.c: 20: int RPS = TMR3L / 2;
  3001                           
  3002                           ;incstack = 0
  3003  000EBA  CFB2 F048          	movff	4018,___awdiv@dividend	;volatile
  3004  000EBE  6A49               	clrf	___awdiv@dividend+1,c
  3005  000EC0  0E00               	movlw	0
  3006  000EC2  6E4B               	movwf	___awdiv@divisor+1,c
  3007  000EC4  0E02               	movlw	2
  3008  000EC6  6E4A               	movwf	___awdiv@divisor,c
  3009  000EC8  EC5C  F005         	call	___awdiv	;wreg free
  3010  000ECC  C048  F052         	movff	?___awdiv,get_RPM@RPS
  3011  000ED0  C049  F053         	movff	?___awdiv+1,get_RPM@RPS+1
  3012                           
  3013                           ;Fan_Support.c: 22: TMR3L = 0;
  3014  000ED4  0E00               	movlw	0
  3015  000ED6  6EB2               	movwf	4018,c	;volatile
  3016                           
  3017                           ;Fan_Support.c: 23: return (RPS * 60);
  3018  000ED8  C052  F042         	movff	get_RPM@RPS,___wmul@multiplier
  3019  000EDC  C053  F043         	movff	get_RPM@RPS+1,___wmul@multiplier+1
  3020  000EE0  0E00               	movlw	0
  3021  000EE2  6E45               	movwf	___wmul@multiplicand+1,c
  3022  000EE4  0E3C               	movlw	60
  3023  000EE6  6E44               	movwf	___wmul@multiplicand,c
  3024  000EE8  ECD1  F007         	call	___wmul	;wreg free
  3025  000EEC  C042  F050         	movff	?___wmul,?_get_RPM
  3026  000EF0  C043  F051         	movff	?___wmul+1,?_get_RPM+1
  3027  000EF4  D000               	goto	l215
  3028  000EF6                     l215:
  3029  000EF6  0012               	return		;funcret
  3030  000EF8                     __end_of_get_RPM:
  3031                           	opt stack 0
  3032                           tblptru	equ	0xFF8
  3033                           tblptrh	equ	0xFF7
  3034                           tblptrl	equ	0xFF6
  3035                           tablat	equ	0xFF5
  3036                           prodh	equ	0xFF4
  3037                           prodl	equ	0xFF3
  3038                           postinc0	equ	0xFEE
  3039                           wreg	equ	0xFE8
  3040                           postdec1	equ	0xFE5
  3041                           fsr1l	equ	0xFE1
  3042                           postinc2	equ	0xFDE
  3043                           postdec2	equ	0xFDD
  3044                           fsr2h	equ	0xFDA
  3045                           fsr2l	equ	0xFD9
  3046                           status	equ	0xFD8
  3047                           
  3048 ;; *************** function ___wmul *****************
  3049 ;; Defined at:
  3050 ;;		line 15 in file "E:\XC8\sources\common\Umul16.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  multiplier      2   16[COMRAM] unsigned int 
  3053 ;;  multiplicand    2   18[COMRAM] unsigned int 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  product         2   20[COMRAM] unsigned int 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  2   16[COMRAM] unsigned int 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0, prodl, prodh
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;Total ram usage:        6 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    3
  3072 ;; This function calls:
  3073 ;;		Nothing
  3074 ;; This function is called by:
  3075 ;;		_get_RPM
  3076 ;;		_main
  3077 ;;		_printf
  3078 ;;		_delay_ms
  3079 ;;		_drawChar
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text7
  3084  000FA2                     __ptext7:
  3085                           	opt stack 0
  3086  000FA2                     ___wmul:
  3087                           	opt stack 26
  3088                           
  3089                           ;incstack = 0
  3090  000FA2  5042               	movf	___wmul@multiplier,w,c
  3091  000FA4  0244               	mulwf	___wmul@multiplicand,c
  3092  000FA6  CFF3 F046          	movff	prodl,___wmul@product
  3093  000FAA  CFF4 F047          	movff	prodh,___wmul@product+1
  3094  000FAE  5042               	movf	___wmul@multiplier,w,c
  3095  000FB0  0245               	mulwf	___wmul@multiplicand+1,c
  3096  000FB2  50F3               	movf	prodl,w,c
  3097  000FB4  2647               	addwf	___wmul@product+1,f,c
  3098  000FB6  5043               	movf	___wmul@multiplier+1,w,c
  3099  000FB8  0244               	mulwf	___wmul@multiplicand,c
  3100  000FBA  50F3               	movf	prodl,w,c
  3101  000FBC  2647               	addwf	___wmul@product+1,f,c
  3102  000FBE  C046  F042         	movff	___wmul@product,?___wmul
  3103  000FC2  C047  F043         	movff	___wmul@product+1,?___wmul+1
  3104  000FC6  D000               	goto	l849
  3105  000FC8                     l849:
  3106  000FC8  0012               	return		;funcret
  3107  000FCA                     __end_of___wmul:
  3108                           	opt stack 0
  3109                           tblptru	equ	0xFF8
  3110                           tblptrh	equ	0xFF7
  3111                           tblptrl	equ	0xFF6
  3112                           tablat	equ	0xFF5
  3113                           prodh	equ	0xFF4
  3114                           prodl	equ	0xFF3
  3115                           postinc0	equ	0xFEE
  3116                           wreg	equ	0xFE8
  3117                           postdec1	equ	0xFE5
  3118                           fsr1l	equ	0xFE1
  3119                           postinc2	equ	0xFDE
  3120                           postdec2	equ	0xFDD
  3121                           fsr2h	equ	0xFDA
  3122                           fsr2l	equ	0xFD9
  3123                           status	equ	0xFD8
  3124                           
  3125 ;; *************** function ___awdiv *****************
  3126 ;; Defined at:
  3127 ;;		line 8 in file "E:\XC8\sources\common\awdiv.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  dividend        2   22[COMRAM] int 
  3130 ;;  divisor         2   24[COMRAM] int 
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;  quotient        2   28[COMRAM] int 
  3133 ;;  sign            1   27[COMRAM] unsigned char 
  3134 ;;  counter         1   26[COMRAM] unsigned char 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  2   22[COMRAM] int 
  3137 ;; Registers used:
  3138 ;;		wreg, status,2, status,0
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3144 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;Total ram usage:        8 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:    3
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_get_RPM
  3155 ;;		_main
  3156 ;;		_Update_Screen
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text8
  3161  000AB8                     __ptext8:
  3162                           	opt stack 0
  3163  000AB8                     ___awdiv:
  3164                           	opt stack 26
  3165                           
  3166                           ;incstack = 0
  3167  000AB8  0E00               	movlw	0
  3168  000ABA  6E4D               	movwf	___awdiv@sign,c
  3169  000ABC  AE4B               	btfss	___awdiv@divisor+1,7,c
  3170  000ABE  D007               	goto	l3843
  3171  000AC0  6C4A               	negf	___awdiv@divisor,c
  3172  000AC2  1E4B               	comf	___awdiv@divisor+1,f,c
  3173  000AC4  B0D8               	btfsc	status,0,c
  3174  000AC6  2A4B               	incf	___awdiv@divisor+1,f,c
  3175  000AC8  0E01               	movlw	1
  3176  000ACA  6E4D               	movwf	___awdiv@sign,c
  3177  000ACC  D000               	goto	l3843
  3178  000ACE                     l3843:
  3179  000ACE  AE49               	btfss	___awdiv@dividend+1,7,c
  3180  000AD0  D007               	goto	l3849
  3181  000AD2  6C48               	negf	___awdiv@dividend,c
  3182  000AD4  1E49               	comf	___awdiv@dividend+1,f,c
  3183  000AD6  B0D8               	btfsc	status,0,c
  3184  000AD8  2A49               	incf	___awdiv@dividend+1,f,c
  3185  000ADA  0E01               	movlw	1
  3186  000ADC  1A4D               	xorwf	___awdiv@sign,f,c
  3187  000ADE  D000               	goto	l3849
  3188  000AE0                     l3849:
  3189  000AE0  0E00               	movlw	0
  3190  000AE2  6E4F               	movwf	___awdiv@quotient+1,c
  3191  000AE4  0E00               	movlw	0
  3192  000AE6  6E4E               	movwf	___awdiv@quotient,c
  3193  000AE8  504A               	movf	___awdiv@divisor,w,c
  3194  000AEA  104B               	iorwf	___awdiv@divisor+1,w,c
  3195  000AEC  B4D8               	btfsc	status,2,c
  3196  000AEE  D021               	goto	l3871
  3197  000AF0  0E01               	movlw	1
  3198  000AF2  6E4C               	movwf	___awdiv@counter,c
  3199  000AF4  D005               	goto	l3857
  3200  000AF6                     l3855:
  3201  000AF6  90D8               	bcf	status,0,c
  3202  000AF8  364A               	rlcf	___awdiv@divisor,f,c
  3203  000AFA  364B               	rlcf	___awdiv@divisor+1,f,c
  3204  000AFC  2A4C               	incf	___awdiv@counter,f,c
  3205  000AFE  D000               	goto	l3857
  3206  000B00                     l3857:
  3207  000B00  BE4B               	btfsc	___awdiv@divisor+1,7,c
  3208  000B02  D002               	goto	l3859
  3209  000B04  D7F8               	goto	l3855
  3210  000B06  D000               	goto	l3859
  3211  000B08                     l3859:
  3212  000B08  90D8               	bcf	status,0,c
  3213  000B0A  364E               	rlcf	___awdiv@quotient,f,c
  3214  000B0C  364F               	rlcf	___awdiv@quotient+1,f,c
  3215  000B0E  504A               	movf	___awdiv@divisor,w,c
  3216  000B10  5C48               	subwf	___awdiv@dividend,w,c
  3217  000B12  504B               	movf	___awdiv@divisor+1,w,c
  3218  000B14  5849               	subwfb	___awdiv@dividend+1,w,c
  3219  000B16  A0D8               	btfss	status,0,c
  3220  000B18  D006               	goto	l3867
  3221  000B1A  504A               	movf	___awdiv@divisor,w,c
  3222  000B1C  5E48               	subwf	___awdiv@dividend,f,c
  3223  000B1E  504B               	movf	___awdiv@divisor+1,w,c
  3224  000B20  5A49               	subwfb	___awdiv@dividend+1,f,c
  3225  000B22  804E               	bsf	___awdiv@quotient,0,c
  3226  000B24  D000               	goto	l3867
  3227  000B26                     l3867:
  3228  000B26  90D8               	bcf	status,0,c
  3229  000B28  324B               	rrcf	___awdiv@divisor+1,f,c
  3230  000B2A  324A               	rrcf	___awdiv@divisor,f,c
  3231  000B2C  2E4C               	decfsz	___awdiv@counter,f,c
  3232  000B2E  D7EC               	goto	l3859
  3233  000B30  D000               	goto	l3871
  3234  000B32                     l3871:
  3235  000B32  504D               	movf	___awdiv@sign,w,c
  3236  000B34  B4D8               	btfsc	status,2,c
  3237  000B36  D005               	goto	l3875
  3238  000B38  6C4E               	negf	___awdiv@quotient,c
  3239  000B3A  1E4F               	comf	___awdiv@quotient+1,f,c
  3240  000B3C  B0D8               	btfsc	status,0,c
  3241  000B3E  2A4F               	incf	___awdiv@quotient+1,f,c
  3242  000B40  D000               	goto	l3875
  3243  000B42                     l3875:
  3244  000B42  C04E  F048         	movff	___awdiv@quotient,?___awdiv
  3245  000B46  C04F  F049         	movff	___awdiv@quotient+1,?___awdiv+1
  3246  000B4A  D000               	goto	l1042
  3247  000B4C                     l1042:
  3248  000B4C  0012               	return		;funcret
  3249  000B4E                     __end_of___awdiv:
  3250                           	opt stack 0
  3251                           tblptru	equ	0xFF8
  3252                           tblptrh	equ	0xFF7
  3253                           tblptrl	equ	0xFF6
  3254                           tablat	equ	0xFF5
  3255                           prodh	equ	0xFF4
  3256                           prodl	equ	0xFF3
  3257                           postinc0	equ	0xFEE
  3258                           wreg	equ	0xFE8
  3259                           postdec1	equ	0xFE5
  3260                           fsr1l	equ	0xFE1
  3261                           postinc2	equ	0xFDE
  3262                           postdec2	equ	0xFDD
  3263                           fsr2h	equ	0xFDA
  3264                           fsr2l	equ	0xFD9
  3265                           status	equ	0xFD8
  3266                           
  3267 ;; *************** function _Turn_On_Fan *****************
  3268 ;; Defined at:
  3269 ;;		line 43 in file "Fan_Support.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;		None               void
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;Total ram usage:        0 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    6
  3290 ;; This function calls:
  3291 ;;		_do_update_pwm
  3292 ;; This function is called by:
  3293 ;;		_main
  3294 ;;		_Toggle_Fan
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text9
  3299  0010EC                     __ptext9:
  3300                           	opt stack 0
  3301  0010EC                     _Turn_On_Fan:
  3302                           	opt stack 24
  3303                           
  3304                           ;Fan_Support.c: 46: FAN=1;
  3305                           
  3306                           ;incstack = 0
  3307  0010EC  0E01               	movlw	1
  3308  0010EE  6E15               	movwf	_FAN,c
  3309                           
  3310                           ;Fan_Support.c: 47: do_update_pwm(duty_cycle);
  3311  0010F0  5021               	movf	_duty_cycle,w,c
  3312  0010F2  EC8E  F004         	call	_do_update_pwm
  3313                           
  3314                           ;Fan_Support.c: 48: PORTAbits.RA5=1;
  3315  0010F6  8A80               	bsf	3968,5,c	;volatile
  3316                           
  3317                           ;Fan_Support.c: 49: PORTEbits.RE2=1;
  3318  0010F8  8484               	bsf	3972,2,c	;volatile
  3319  0010FA  0012               	return		;funcret
  3320  0010FC                     __end_of_Turn_On_Fan:
  3321                           	opt stack 0
  3322                           tblptru	equ	0xFF8
  3323                           tblptrh	equ	0xFF7
  3324                           tblptrl	equ	0xFF6
  3325                           tablat	equ	0xFF5
  3326                           prodh	equ	0xFF4
  3327                           prodl	equ	0xFF3
  3328                           postinc0	equ	0xFEE
  3329                           wreg	equ	0xFE8
  3330                           postdec1	equ	0xFE5
  3331                           fsr1l	equ	0xFE1
  3332                           postinc2	equ	0xFDE
  3333                           postdec2	equ	0xFDD
  3334                           fsr2h	equ	0xFDA
  3335                           fsr2l	equ	0xFD9
  3336                           status	equ	0xFD8
  3337                           
  3338 ;; *************** function _do_update_pwm *****************
  3339 ;; Defined at:
  3340 ;;		line 84 in file "Fan_Support.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  duty_cycle      1    wreg     unsigned char 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  duty_cycle      1   15[BANK0 ] unsigned char 
  3345 ;;  dc_f            3   12[BANK0 ] float 
  3346 ;;  dc_I            2   16[BANK0 ] int 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;		None               void
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;Total ram usage:        9 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    5
  3363 ;; This function calls:
  3364 ;;		___ftdiv
  3365 ;;		___ftmul
  3366 ;;		___fttol
  3367 ;;		___lbtoft
  3368 ;; This function is called by:
  3369 ;;		_Turn_On_Fan
  3370 ;;		_main
  3371 ;;		_Increase_Speed
  3372 ;;		_Decrease_Speed
  3373 ;;		_Do_Beep
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text10
  3378  00091C                     __ptext10:
  3379                           	opt stack 0
  3380  00091C                     _do_update_pwm:
  3381                           	opt stack 25
  3382                           
  3383                           ;incstack = 0
  3384                           ;do_update_pwm@duty_cycle stored from wreg
  3385  00091C  0100               	movlb	0	; () banked
  3386  00091E  6FF2               	movwf	do_update_pwm@duty_cycle& (0+255),b
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;Fan_Support.c: 86: float dc_f;
  3390                           ;Fan_Support.c: 87: int dc_I;
  3391                           ;Fan_Support.c: 88: PR2 = 0b00000100 ;
  3392  000920  0E04               	movlw	4
  3393  000922  6ECB               	movwf	4043,c	;volatile
  3394                           
  3395                           ;Fan_Support.c: 89: T2CON = 0b00000111 ;
  3396  000924  0E07               	movlw	7
  3397  000926  6ECA               	movwf	4042,c	;volatile
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;Fan_Support.c: 90: dc_f = ( 4.0 * duty_cycle / 20.0) ;
  3401  000928  0E00               	movlw	0
  3402  00092A  6E51               	movwf	___ftmul@f2,c
  3403  00092C  0E80               	movlw	128
  3404  00092E  6E52               	movwf	___ftmul@f2+1,c
  3405  000930  0E40               	movlw	64
  3406  000932  6E53               	movwf	___ftmul@f2+2,c
  3407  000934  0100               	movlb	0	; () banked
  3408  000936  51F2               	movf	do_update_pwm@duty_cycle& (0+255),w,b
  3409  000938  ECE5  F007         	call	___lbtoft
  3410  00093C  C04A  F04E         	movff	?___lbtoft,___ftmul@f1
  3411  000940  C04B  F04F         	movff	?___lbtoft+1,___ftmul@f1+1
  3412  000944  C04C  F050         	movff	?___lbtoft+2,___ftmul@f1+2
  3413  000948  EC31  F003         	call	___ftmul	;wreg free
  3414  00094C  C04E  F05D         	movff	?___ftmul,___ftdiv@f1
  3415  000950  C04F  F05E         	movff	?___ftmul+1,___ftdiv@f1+1
  3416  000954  C050  F05F         	movff	?___ftmul+2,___ftdiv@f1+2
  3417  000958  0E00               	movlw	0
  3418  00095A  6E60               	movwf	___ftdiv@f2,c
  3419  00095C  0EA0               	movlw	160
  3420  00095E  6E61               	movwf	___ftdiv@f2+1,c
  3421  000960  0E41               	movlw	65
  3422  000962  6E62               	movwf	___ftdiv@f2+2,c
  3423  000964  ECAB  F002         	call	___ftdiv	;wreg free
  3424  000968  C05D  F0EF         	movff	?___ftdiv,do_update_pwm@dc_f
  3425  00096C  C05E  F0F0         	movff	?___ftdiv+1,do_update_pwm@dc_f+1
  3426  000970  C05F  F0F1         	movff	?___ftdiv+2,do_update_pwm@dc_f+2
  3427                           
  3428                           ;Fan_Support.c: 92: dc_I = (int) dc_f;
  3429  000974  C0EF  F042         	movff	do_update_pwm@dc_f,___fttol@f1
  3430  000978  C0F0  F043         	movff	do_update_pwm@dc_f+1,___fttol@f1+1
  3431  00097C  C0F1  F044         	movff	do_update_pwm@dc_f+2,___fttol@f1+2
  3432  000980  ECAD  F003         	call	___fttol	;wreg free
  3433  000984  C042  F0F3         	movff	?___fttol,do_update_pwm@dc_I
  3434  000988  C043  F0F4         	movff	?___fttol+1,do_update_pwm@dc_I+1
  3435                           
  3436                           ;Fan_Support.c: 93: if (dc_I > duty_cycle) dc_I++;
  3437  00098C  0100               	movlb	0	; () banked
  3438  00098E  51F2               	movf	do_update_pwm@duty_cycle& (0+255),w,b
  3439  000990  0100               	movlb	0	; () banked
  3440  000992  6FEC               	movwf	??_do_update_pwm& (0+255),b
  3441  000994  6BED               	clrf	(??_do_update_pwm+1)& (0+255),b
  3442  000996  0100               	movlb	0	; () banked
  3443  000998  51F3               	movf	do_update_pwm@dc_I& (0+255),w,b
  3444  00099A  0100               	movlb	0	; () banked
  3445  00099C  5DEC               	subwf	??_do_update_pwm& (0+255),w,b
  3446  00099E  0100               	movlb	0	; () banked
  3447  0009A0  51ED               	movf	(??_do_update_pwm+1)& (0+255),w,b
  3448  0009A2  0A80               	xorlw	128
  3449  0009A4  0100               	movlb	0	; () banked
  3450  0009A6  6FEE               	movwf	(??_do_update_pwm+2)& (0+255),b
  3451  0009A8  0100               	movlb	0	; () banked
  3452  0009AA  51F4               	movf	(do_update_pwm@dc_I+1)& (0+255),w,b
  3453  0009AC  0A80               	xorlw	128
  3454  0009AE  0100               	movlb	0	; () banked
  3455  0009B0  59EE               	subwfb	(??_do_update_pwm+2)& (0+255),w,b
  3456  0009B2  B0D8               	btfsc	status,0,c
  3457  0009B4  D004               	goto	l4959
  3458                           
  3459                           ; BSR set to: 0
  3460  0009B6  0100               	movlb	0	; () banked
  3461  0009B8  4BF3               	infsnz	do_update_pwm@dc_I& (0+255),f,b
  3462  0009BA  2BF4               	incf	(do_update_pwm@dc_I+1)& (0+255),f,b
  3463  0009BC  D000               	goto	l4959
  3464  0009BE                     l4959:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;Fan_Support.c: 94: CCP1CON = ((dc_I & 0x03) << 4) | 0b00001100;
  3468  0009BE  C0F3  F0EC         	movff	do_update_pwm@dc_I,??_do_update_pwm
  3469  0009C2  0E03               	movlw	3
  3470  0009C4  0100               	movlb	0	; () banked
  3471  0009C6  17EC               	andwf	??_do_update_pwm& (0+255),f,b
  3472  0009C8  0100               	movlb	0	; () banked
  3473  0009CA  39EC               	swapf	??_do_update_pwm& (0+255),w,b
  3474  0009CC  0BF0               	andlw	240
  3475  0009CE  090C               	iorlw	12
  3476  0009D0  6EBD               	movwf	4029,c	;volatile
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;Fan_Support.c: 95: CCPR1L = (dc_I) >> 2;
  3480  0009D2  C0F3  F0EC         	movff	do_update_pwm@dc_I,??_do_update_pwm
  3481  0009D6  C0F4  F0ED         	movff	do_update_pwm@dc_I+1,??_do_update_pwm+1
  3482  0009DA  0100               	movlb	0	; () banked
  3483  0009DC  35ED               	rlcf	(??_do_update_pwm+1)& (0+255),w,b
  3484  0009DE  33ED               	rrcf	(??_do_update_pwm+1)& (0+255),f,b
  3485  0009E0  33EC               	rrcf	??_do_update_pwm& (0+255),f,b
  3486  0009E2  0100               	movlb	0	; () banked
  3487  0009E4  35ED               	rlcf	(??_do_update_pwm+1)& (0+255),w,b
  3488  0009E6  33ED               	rrcf	(??_do_update_pwm+1)& (0+255),f,b
  3489  0009E8  33EC               	rrcf	??_do_update_pwm& (0+255),f,b
  3490  0009EA  0100               	movlb	0	; () banked
  3491  0009EC  51EC               	movf	??_do_update_pwm& (0+255),w,b
  3492  0009EE  6EBE               	movwf	4030,c	;volatile
  3493                           
  3494                           ; BSR set to: 0
  3495  0009F0  0012               	return		;funcret
  3496  0009F2                     __end_of_do_update_pwm:
  3497                           	opt stack 0
  3498                           tblptru	equ	0xFF8
  3499                           tblptrh	equ	0xFF7
  3500                           tblptrl	equ	0xFF6
  3501                           tablat	equ	0xFF5
  3502                           prodh	equ	0xFF4
  3503                           prodl	equ	0xFF3
  3504                           postinc0	equ	0xFEE
  3505                           wreg	equ	0xFE8
  3506                           postdec1	equ	0xFE5
  3507                           fsr1l	equ	0xFE1
  3508                           postinc2	equ	0xFDE
  3509                           postdec2	equ	0xFDD
  3510                           fsr2h	equ	0xFDA
  3511                           fsr2l	equ	0xFD9
  3512                           status	equ	0xFD8
  3513                           
  3514 ;; *************** function ___lbtoft *****************
  3515 ;; Defined at:
  3516 ;;		line 27 in file "E:\XC8\sources\common\lbtoft.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;  c               1    wreg     unsigned char 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  c               1   27[COMRAM] unsigned char 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  3   24[COMRAM] float 
  3523 ;; Registers used:
  3524 ;;		wreg, status,2, status,0, cstack
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3530 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;Total ram usage:        4 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:    4
  3537 ;; This function calls:
  3538 ;;		___ftpack
  3539 ;; This function is called by:
  3540 ;;		_do_update_pwm
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text11
  3545  000FCA                     __ptext11:
  3546                           	opt stack 0
  3547  000FCA                     ___lbtoft:
  3548                           	opt stack 25
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;incstack = 0
  3552                           ;___lbtoft@c stored from wreg
  3553  000FCA  6E4D               	movwf	___lbtoft@c,c
  3554  000FCC  504D               	movf	___lbtoft@c,w,c
  3555  000FCE  6E42               	movwf	___ftpack@arg,c
  3556  000FD0  6A43               	clrf	___ftpack@arg+1,c
  3557  000FD2  6A44               	clrf	___ftpack@arg+2,c
  3558  000FD4  0E8E               	movlw	142
  3559  000FD6  6E45               	movwf	___ftpack@exp,c
  3560  000FD8  0E00               	movlw	0
  3561  000FDA  6E46               	movwf	___ftpack@sign,c
  3562  000FDC  ECF9  F004         	call	___ftpack	;wreg free
  3563  000FE0  C042  F04A         	movff	?___ftpack,?___lbtoft
  3564  000FE4  C043  F04B         	movff	?___ftpack+1,?___lbtoft+1
  3565  000FE8  C044  F04C         	movff	?___ftpack+2,?___lbtoft+2
  3566  000FEC  D000               	goto	l1306
  3567  000FEE                     l1306:
  3568  000FEE  0012               	return		;funcret
  3569  000FF0                     __end_of___lbtoft:
  3570                           	opt stack 0
  3571                           tblptru	equ	0xFF8
  3572                           tblptrh	equ	0xFF7
  3573                           tblptrl	equ	0xFF6
  3574                           tablat	equ	0xFF5
  3575                           prodh	equ	0xFF4
  3576                           prodl	equ	0xFF3
  3577                           postinc0	equ	0xFEE
  3578                           wreg	equ	0xFE8
  3579                           postdec1	equ	0xFE5
  3580                           fsr1l	equ	0xFE1
  3581                           postinc2	equ	0xFDE
  3582                           postdec2	equ	0xFDD
  3583                           fsr2h	equ	0xFDA
  3584                           fsr2l	equ	0xFD9
  3585                           status	equ	0xFD8
  3586                           
  3587 ;; *************** function ___fttol *****************
  3588 ;; Defined at:
  3589 ;;		line 44 in file "E:\XC8\sources\common\fttol.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  f1              3   16[COMRAM] float 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  lval            4   26[COMRAM] unsigned long 
  3594 ;;  exp1            1   30[COMRAM] unsigned char 
  3595 ;;  sign1           1   25[COMRAM] unsigned char 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  4   16[COMRAM] long 
  3598 ;; Registers used:
  3599 ;;		wreg, status,2, status,0
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3605 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;Total ram usage:       15 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; Hardware stack levels required when called:    3
  3612 ;; This function calls:
  3613 ;;		Nothing
  3614 ;; This function is called by:
  3615 ;;		_do_update_pwm
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           	psect	text12
  3620  00075A                     __ptext12:
  3621                           	opt stack 0
  3622  00075A                     ___fttol:
  3623                           	opt stack 26
  3624                           
  3625                           ;incstack = 0
  3626  00075A  C044  F046         	movff	___fttol@f1+2,??___fttol
  3627  00075E  6A47               	clrf	(??___fttol+1)& (0+255),c
  3628  000760  6A48               	clrf	(??___fttol+2)& (0+255),c
  3629  000762  3443               	rlcf	___fttol@f1+1,w,c
  3630  000764  3646               	rlcf	??___fttol& (0+255),f,c
  3631  000766  E301               	bnc	u3561
  3632  000768  8047               	bsf	(??___fttol+1)& (0+255),0,c
  3633  00076A                     u3561:
  3634  00076A  5046               	movf	??___fttol,w,c
  3635  00076C  6E50               	movwf	___fttol@exp1,c
  3636  00076E  5050               	movf	___fttol@exp1,w,c
  3637  000770  A4D8               	btfss	status,2,c
  3638  000772  D002               	goto	l4905
  3639  000774  D039               	goto	l4929
  3640  000776  D063               	goto	l1265
  3641  000778                     l4905:
  3642  000778  0E17               	movlw	23
  3643  00077A  6E46               	movwf	??___fttol& (0+255),c
  3644  00077C  C042  F047         	movff	___fttol@f1,??___fttol+1
  3645  000780  C043  F048         	movff	___fttol@f1+1,??___fttol+2
  3646  000784  C044  F049         	movff	___fttol@f1+2,??___fttol+3
  3647  000788  2846               	incf	??___fttol,w,c
  3648  00078A  6E4A               	movwf	(??___fttol+4)& (0+255),c
  3649  00078C  D004               	goto	u3580
  3650  00078E                     u3585:
  3651  00078E  90D8               	bcf	status,0,c
  3652  000790  3249               	rrcf	??___fttol+3,f,c
  3653  000792  3248               	rrcf	??___fttol+2,f,c
  3654  000794  3247               	rrcf	??___fttol+1,f,c
  3655  000796                     u3580:
  3656  000796  2E4A               	decfsz	(??___fttol+4)& (0+255),f,c
  3657  000798  D7FA               	goto	u3585
  3658  00079A  5047               	movf	??___fttol+1,w,c
  3659  00079C  6E4B               	movwf	___fttol@sign1,c
  3660  00079E  8E43               	bsf	___fttol@f1+1,7,c
  3661  0007A0  0EFF               	movlw	255
  3662  0007A2  1642               	andwf	___fttol@f1,f,c
  3663  0007A4  0EFF               	movlw	255
  3664  0007A6  1643               	andwf	___fttol@f1+1,f,c
  3665  0007A8  0E00               	movlw	0
  3666  0007AA  1644               	andwf	___fttol@f1+2,f,c
  3667  0007AC  5042               	movf	___fttol@f1,w,c
  3668  0007AE  6E4C               	movwf	___fttol@lval,c
  3669  0007B0  5043               	movf	___fttol@f1+1,w,c
  3670  0007B2  6E4D               	movwf	___fttol@lval+1,c
  3671  0007B4  5044               	movf	___fttol@f1+2,w,c
  3672  0007B6  6E4E               	movwf	___fttol@lval+2,c
  3673  0007B8  6A4F               	clrf	___fttol@lval+3,c
  3674  0007BA  0E8E               	movlw	142
  3675  0007BC  5E50               	subwf	___fttol@exp1,f,c
  3676  0007BE  AE50               	btfss	___fttol@exp1,7,c
  3677  0007C0  D010               	goto	l4927
  3678  0007C2  5050               	movf	___fttol@exp1,w,c
  3679  0007C4  0A80               	xorlw	128
  3680  0007C6  0F8F               	addlw	143
  3681  0007C8  B0D8               	btfsc	status,0,c
  3682  0007CA  D003               	goto	l4923
  3683  0007CC  D00D               	goto	l4929
  3684  0007CE  D037               	goto	l1265
  3685  0007D0  D000               	goto	l4923
  3686  0007D2                     l4923:
  3687  0007D2  90D8               	bcf	status,0,c
  3688  0007D4  324F               	rrcf	___fttol@lval+3,f,c
  3689  0007D6  324E               	rrcf	___fttol@lval+2,f,c
  3690  0007D8  324D               	rrcf	___fttol@lval+1,f,c
  3691  0007DA  324C               	rrcf	___fttol@lval,f,c
  3692  0007DC  3E50               	incfsz	___fttol@exp1,f,c
  3693  0007DE  D7F9               	goto	l4923
  3694  0007E0  D019               	goto	l4937
  3695  0007E2                     l4927:
  3696  0007E2  0E17               	movlw	23
  3697  0007E4  6450               	cpfsgt	___fttol@exp1,c
  3698  0007E6  D011               	goto	l4935
  3699  0007E8                     l4929:
  3700  0007E8  0E00               	movlw	0
  3701  0007EA  6E42               	movwf	?___fttol,c
  3702  0007EC  0E00               	movlw	0
  3703  0007EE  6E43               	movwf	?___fttol+1,c
  3704  0007F0  0E00               	movlw	0
  3705  0007F2  6E44               	movwf	?___fttol+2,c
  3706  0007F4  0E00               	movlw	0
  3707  0007F6  6E45               	movwf	?___fttol+3,c
  3708  0007F8  D022               	goto	l1265
  3709  0007FA  D007               	goto	l4935
  3710  0007FC                     l4933:
  3711  0007FC  90D8               	bcf	status,0,c
  3712  0007FE  364C               	rlcf	___fttol@lval,f,c
  3713  000800  364D               	rlcf	___fttol@lval+1,f,c
  3714  000802  364E               	rlcf	___fttol@lval+2,f,c
  3715  000804  364F               	rlcf	___fttol@lval+3,f,c
  3716  000806  0650               	decf	___fttol@exp1,f,c
  3717  000808  D000               	goto	l4935
  3718  00080A                     l4935:
  3719  00080A  5050               	movf	___fttol@exp1,w,c
  3720  00080C  B4D8               	btfsc	status,2,c
  3721  00080E  D002               	goto	l4937
  3722  000810  D7F5               	goto	l4933
  3723  000812  D000               	goto	l4937
  3724  000814                     l4937:
  3725  000814  504B               	movf	___fttol@sign1,w,c
  3726  000816  B4D8               	btfsc	status,2,c
  3727  000818  D009               	goto	l4941
  3728  00081A  1E4F               	comf	___fttol@lval+3,f,c
  3729  00081C  1E4E               	comf	___fttol@lval+2,f,c
  3730  00081E  1E4D               	comf	___fttol@lval+1,f,c
  3731  000820  6C4C               	negf	___fttol@lval,c
  3732  000822  0E00               	movlw	0
  3733  000824  224D               	addwfc	___fttol@lval+1,f,c
  3734  000826  224E               	addwfc	___fttol@lval+2,f,c
  3735  000828  224F               	addwfc	___fttol@lval+3,f,c
  3736  00082A  D000               	goto	l4941
  3737  00082C                     l4941:
  3738  00082C  C04C  F042         	movff	___fttol@lval,?___fttol
  3739  000830  C04D  F043         	movff	___fttol@lval+1,?___fttol+1
  3740  000834  C04E  F044         	movff	___fttol@lval+2,?___fttol+2
  3741  000838  C04F  F045         	movff	___fttol@lval+3,?___fttol+3
  3742  00083C  D000               	goto	l1265
  3743  00083E                     l1265:
  3744  00083E  0012               	return		;funcret
  3745  000840                     __end_of___fttol:
  3746                           	opt stack 0
  3747                           tblptru	equ	0xFF8
  3748                           tblptrh	equ	0xFF7
  3749                           tblptrl	equ	0xFF6
  3750                           tablat	equ	0xFF5
  3751                           prodh	equ	0xFF4
  3752                           prodl	equ	0xFF3
  3753                           postinc0	equ	0xFEE
  3754                           wreg	equ	0xFE8
  3755                           postdec1	equ	0xFE5
  3756                           fsr1l	equ	0xFE1
  3757                           postinc2	equ	0xFDE
  3758                           postdec2	equ	0xFDD
  3759                           fsr2h	equ	0xFDA
  3760                           fsr2l	equ	0xFD9
  3761                           status	equ	0xFD8
  3762                           
  3763 ;; *************** function ___ftmul *****************
  3764 ;; Defined at:
  3765 ;;		line 62 in file "E:\XC8\sources\common\ftmul.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  f1              3   28[COMRAM] float 
  3768 ;;  f2              3   31[COMRAM] float 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;  f3_as_produc    3   38[COMRAM] unsigned um
  3771 ;;  sign            1   42[COMRAM] unsigned char 
  3772 ;;  cntr            1   41[COMRAM] unsigned char 
  3773 ;;  exp             1   37[COMRAM] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  3   28[COMRAM] float 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3783 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;Total ram usage:       15 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    4
  3790 ;; This function calls:
  3791 ;;		___ftpack
  3792 ;; This function is called by:
  3793 ;;		_do_update_pwm
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text13
  3798  000662                     __ptext13:
  3799                           	opt stack 0
  3800  000662                     ___ftmul:
  3801                           	opt stack 25
  3802                           
  3803                           ;incstack = 0
  3804  000662  C050  F054         	movff	___ftmul@f1+2,??___ftmul
  3805  000666  6A55               	clrf	(??___ftmul+1)& (0+255),c
  3806  000668  6A56               	clrf	(??___ftmul+2)& (0+255),c
  3807  00066A  344F               	rlcf	___ftmul@f1+1,w,c
  3808  00066C  3654               	rlcf	??___ftmul& (0+255),f,c
  3809  00066E  E301               	bnc	u3501
  3810  000670  8055               	bsf	(??___ftmul+1)& (0+255),0,c
  3811  000672                     u3501:
  3812  000672  5054               	movf	??___ftmul,w,c
  3813  000674  6E57               	movwf	___ftmul@exp,c
  3814  000676  5057               	movf	___ftmul@exp,w,c
  3815  000678  A4D8               	btfss	status,2,c
  3816  00067A  D002               	goto	l4857
  3817  00067C  D00E               	goto	l4859
  3818  00067E  D06C               	goto	l1244
  3819  000680                     l4857:
  3820  000680  C053  F054         	movff	___ftmul@f2+2,??___ftmul
  3821  000684  6A55               	clrf	(??___ftmul+1)& (0+255),c
  3822  000686  6A56               	clrf	(??___ftmul+2)& (0+255),c
  3823  000688  3452               	rlcf	___ftmul@f2+1,w,c
  3824  00068A  3654               	rlcf	??___ftmul& (0+255),f,c
  3825  00068C  E301               	bnc	u3521
  3826  00068E  8055               	bsf	(??___ftmul+1)& (0+255),0,c
  3827  000690                     u3521:
  3828  000690  5054               	movf	??___ftmul,w,c
  3829  000692  6E5C               	movwf	___ftmul@sign,c
  3830  000694  505C               	movf	___ftmul@sign,w,c
  3831  000696  A4D8               	btfss	status,2,c
  3832  000698  D007               	goto	l4863
  3833  00069A                     l4859:
  3834  00069A  0E00               	movlw	0
  3835  00069C  6E4E               	movwf	?___ftmul,c
  3836  00069E  0E00               	movlw	0
  3837  0006A0  6E4F               	movwf	?___ftmul+1,c
  3838  0006A2  0E00               	movlw	0
  3839  0006A4  6E50               	movwf	?___ftmul+2,c
  3840  0006A6  D058               	goto	l1244
  3841  0006A8                     l4863:
  3842  0006A8  505C               	movf	___ftmul@sign,w,c
  3843  0006AA  0F7B               	addlw	123
  3844  0006AC  2657               	addwf	___ftmul@exp,f,c
  3845  0006AE  C050  F05C         	movff	___ftmul@f1+2,___ftmul@sign
  3846  0006B2  5053               	movf	___ftmul@f2+2,w,c
  3847  0006B4  1A5C               	xorwf	___ftmul@sign,f,c
  3848  0006B6  0E80               	movlw	128
  3849  0006B8  165C               	andwf	___ftmul@sign,f,c
  3850  0006BA  8E4F               	bsf	___ftmul@f1+1,7,c
  3851  0006BC  8E52               	bsf	___ftmul@f2+1,7,c
  3852  0006BE  0EFF               	movlw	255
  3853  0006C0  1651               	andwf	___ftmul@f2,f,c
  3854  0006C2  0EFF               	movlw	255
  3855  0006C4  1652               	andwf	___ftmul@f2+1,f,c
  3856  0006C6  0E00               	movlw	0
  3857  0006C8  1653               	andwf	___ftmul@f2+2,f,c
  3858  0006CA  0E00               	movlw	0
  3859  0006CC  6E58               	movwf	___ftmul@f3_as_product,c
  3860  0006CE  0E00               	movlw	0
  3861  0006D0  6E59               	movwf	___ftmul@f3_as_product+1,c
  3862  0006D2  0E00               	movlw	0
  3863  0006D4  6E5A               	movwf	___ftmul@f3_as_product+2,c
  3864  0006D6  0E07               	movlw	7
  3865  0006D8  6E5B               	movwf	___ftmul@cntr,c
  3866  0006DA  D000               	goto	l4877
  3867  0006DC                     l4877:
  3868  0006DC  A04E               	btfss	___ftmul@f1,0,c
  3869  0006DE  D007               	goto	l4881
  3870  0006E0  5051               	movf	___ftmul@f2,w,c
  3871  0006E2  2658               	addwf	___ftmul@f3_as_product,f,c
  3872  0006E4  5052               	movf	___ftmul@f2+1,w,c
  3873  0006E6  2259               	addwfc	___ftmul@f3_as_product+1,f,c
  3874  0006E8  5053               	movf	___ftmul@f2+2,w,c
  3875  0006EA  225A               	addwfc	___ftmul@f3_as_product+2,f,c
  3876  0006EC  D000               	goto	l4881
  3877  0006EE                     l4881:
  3878  0006EE  90D8               	bcf	status,0,c
  3879  0006F0  3250               	rrcf	___ftmul@f1+2,f,c
  3880  0006F2  324F               	rrcf	___ftmul@f1+1,f,c
  3881  0006F4  324E               	rrcf	___ftmul@f1,f,c
  3882  0006F6  90D8               	bcf	status,0,c
  3883  0006F8  3651               	rlcf	___ftmul@f2,f,c
  3884  0006FA  3652               	rlcf	___ftmul@f2+1,f,c
  3885  0006FC  3653               	rlcf	___ftmul@f2+2,f,c
  3886  0006FE  2E5B               	decfsz	___ftmul@cntr,f,c
  3887  000700  D7ED               	goto	l4877
  3888  000702  D000               	goto	l4885
  3889  000704                     l4885:
  3890  000704  0E09               	movlw	9
  3891  000706  6E5B               	movwf	___ftmul@cntr,c
  3892  000708  D000               	goto	l4887
  3893  00070A                     l4887:
  3894  00070A  A04E               	btfss	___ftmul@f1,0,c
  3895  00070C  D007               	goto	l4891
  3896  00070E  5051               	movf	___ftmul@f2,w,c
  3897  000710  2658               	addwf	___ftmul@f3_as_product,f,c
  3898  000712  5052               	movf	___ftmul@f2+1,w,c
  3899  000714  2259               	addwfc	___ftmul@f3_as_product+1,f,c
  3900  000716  5053               	movf	___ftmul@f2+2,w,c
  3901  000718  225A               	addwfc	___ftmul@f3_as_product+2,f,c
  3902  00071A  D000               	goto	l4891
  3903  00071C                     l4891:
  3904  00071C  90D8               	bcf	status,0,c
  3905  00071E  3250               	rrcf	___ftmul@f1+2,f,c
  3906  000720  324F               	rrcf	___ftmul@f1+1,f,c
  3907  000722  324E               	rrcf	___ftmul@f1,f,c
  3908  000724  90D8               	bcf	status,0,c
  3909  000726  325A               	rrcf	___ftmul@f3_as_product+2,f,c
  3910  000728  3259               	rrcf	___ftmul@f3_as_product+1,f,c
  3911  00072A  3258               	rrcf	___ftmul@f3_as_product,f,c
  3912  00072C  2E5B               	decfsz	___ftmul@cntr,f,c
  3913  00072E  D7ED               	goto	l4887
  3914  000730  D000               	goto	l4895
  3915  000732                     l4895:
  3916  000732  C058  F042         	movff	___ftmul@f3_as_product,___ftpack@arg
  3917  000736  C059  F043         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3918  00073A  C05A  F044         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3919  00073E  C057  F045         	movff	___ftmul@exp,___ftpack@exp
  3920  000742  C05C  F046         	movff	___ftmul@sign,___ftpack@sign
  3921  000746  ECF9  F004         	call	___ftpack	;wreg free
  3922  00074A  C042  F04E         	movff	?___ftpack,?___ftmul
  3923  00074E  C043  F04F         	movff	?___ftpack+1,?___ftmul+1
  3924  000752  C044  F050         	movff	?___ftpack+2,?___ftmul+2
  3925  000756  D000               	goto	l1244
  3926  000758                     l1244:
  3927  000758  0012               	return		;funcret
  3928  00075A                     __end_of___ftmul:
  3929                           	opt stack 0
  3930                           tblptru	equ	0xFF8
  3931                           tblptrh	equ	0xFF7
  3932                           tblptrl	equ	0xFF6
  3933                           tablat	equ	0xFF5
  3934                           prodh	equ	0xFF4
  3935                           prodl	equ	0xFF3
  3936                           postinc0	equ	0xFEE
  3937                           wreg	equ	0xFE8
  3938                           postdec1	equ	0xFE5
  3939                           fsr1l	equ	0xFE1
  3940                           postinc2	equ	0xFDE
  3941                           postdec2	equ	0xFDD
  3942                           fsr2h	equ	0xFDA
  3943                           fsr2l	equ	0xFD9
  3944                           status	equ	0xFD8
  3945                           
  3946 ;; *************** function ___ftdiv *****************
  3947 ;; Defined at:
  3948 ;;		line 54 in file "E:\XC8\sources\common\ftdiv.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  f1              3   43[COMRAM] float 
  3951 ;;  f2              3   46[COMRAM] float 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  f3              3    4[BANK0 ] float 
  3954 ;;  sign            1    8[BANK0 ] unsigned char 
  3955 ;;  exp             1    7[BANK0 ] unsigned char 
  3956 ;;  cntr            1    3[BANK0 ] unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  3   43[COMRAM] float 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0, cstack
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3966 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3968 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3970 ;;Total ram usage:       15 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    4
  3973 ;; This function calls:
  3974 ;;		___ftpack
  3975 ;; This function is called by:
  3976 ;;		_do_update_pwm
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text14
  3981  000556                     __ptext14:
  3982                           	opt stack 0
  3983  000556                     ___ftdiv:
  3984                           	opt stack 25
  3985                           
  3986                           ;incstack = 0
  3987  000556  C05F  F0E3         	movff	___ftdiv@f1+2,??___ftdiv
  3988  00055A  0100               	movlb	0	; () banked
  3989  00055C  6BE4               	clrf	(??___ftdiv+1)& (0+255),b
  3990  00055E  6BE5               	clrf	(??___ftdiv+2)& (0+255),b
  3991  000560  345E               	rlcf	___ftdiv@f1+1,w,c
  3992  000562  0100               	movlb	0	; () banked
  3993  000564  37E3               	rlcf	??___ftdiv& (0+255),f,b
  3994  000566  E301               	bnc	u3451
  3995  000568  81E4               	bsf	(??___ftdiv+1)& (0+255),0,b
  3996  00056A                     u3451:
  3997  00056A  0100               	movlb	0	; () banked
  3998  00056C  51E3               	movf	??___ftdiv& (0+255),w,b
  3999  00056E  0100               	movlb	0	; () banked
  4000  000570  6FEA               	movwf	___ftdiv@exp& (0+255),b
  4001  000572  0100               	movlb	0	; () banked
  4002  000574  51EA               	movf	___ftdiv@exp& (0+255),w,b
  4003  000576  A4D8               	btfss	status,2,c
  4004  000578  D002               	goto	l4811
  4005  00057A  D013               	goto	l4813
  4006                           
  4007                           ; BSR set to: 0
  4008                           
  4009                           ; BSR set to: 0
  4010  00057C  D071               	goto	l1229
  4011  00057E                     l4811:
  4012                           
  4013                           ; BSR set to: 0
  4014  00057E  C062  F0E3         	movff	___ftdiv@f2+2,??___ftdiv
  4015  000582  0100               	movlb	0	; () banked
  4016  000584  6BE4               	clrf	(??___ftdiv+1)& (0+255),b
  4017  000586  6BE5               	clrf	(??___ftdiv+2)& (0+255),b
  4018  000588  3461               	rlcf	___ftdiv@f2+1,w,c
  4019  00058A  0100               	movlb	0	; () banked
  4020  00058C  37E3               	rlcf	??___ftdiv& (0+255),f,b
  4021  00058E  E301               	bnc	u3471
  4022  000590  81E4               	bsf	(??___ftdiv+1)& (0+255),0,b
  4023  000592                     u3471:
  4024  000592  0100               	movlb	0	; () banked
  4025  000594  51E3               	movf	??___ftdiv& (0+255),w,b
  4026  000596  0100               	movlb	0	; () banked
  4027  000598  6FEB               	movwf	___ftdiv@sign& (0+255),b
  4028  00059A  0100               	movlb	0	; () banked
  4029  00059C  51EB               	movf	___ftdiv@sign& (0+255),w,b
  4030  00059E  A4D8               	btfss	status,2,c
  4031  0005A0  D007               	goto	l4817
  4032  0005A2                     l4813:
  4033                           
  4034                           ; BSR set to: 0
  4035  0005A2  0E00               	movlw	0
  4036  0005A4  6E5D               	movwf	?___ftdiv,c
  4037  0005A6  0E00               	movlw	0
  4038  0005A8  6E5E               	movwf	?___ftdiv+1,c
  4039  0005AA  0E00               	movlw	0
  4040  0005AC  6E5F               	movwf	?___ftdiv+2,c
  4041                           
  4042                           ; BSR set to: 0
  4043  0005AE  D058               	goto	l1229
  4044  0005B0                     l4817:
  4045                           
  4046                           ; BSR set to: 0
  4047  0005B0  0E00               	movlw	0
  4048  0005B2  0100               	movlb	0	; () banked
  4049  0005B4  6FE7               	movwf	___ftdiv@f3& (0+255),b
  4050  0005B6  0E00               	movlw	0
  4051  0005B8  0100               	movlb	0	; () banked
  4052  0005BA  6FE8               	movwf	(___ftdiv@f3+1)& (0+255),b
  4053  0005BC  0E00               	movlw	0
  4054  0005BE  0100               	movlb	0	; () banked
  4055  0005C0  6FE9               	movwf	(___ftdiv@f3+2)& (0+255),b
  4056                           
  4057                           ; BSR set to: 0
  4058  0005C2  0100               	movlb	0	; () banked
  4059  0005C4  51EB               	movf	___ftdiv@sign& (0+255),w,b
  4060  0005C6  0F89               	addlw	137
  4061  0005C8  0100               	movlb	0	; () banked
  4062  0005CA  5FEA               	subwf	___ftdiv@exp& (0+255),f,b
  4063                           
  4064                           ; BSR set to: 0
  4065  0005CC  C05F  F0EB         	movff	___ftdiv@f1+2,___ftdiv@sign
  4066                           
  4067                           ; BSR set to: 0
  4068  0005D0  5062               	movf	___ftdiv@f2+2,w,c
  4069  0005D2  0100               	movlb	0	; () banked
  4070  0005D4  1BEB               	xorwf	___ftdiv@sign& (0+255),f,b
  4071                           
  4072                           ; BSR set to: 0
  4073  0005D6  0E80               	movlw	128
  4074  0005D8  0100               	movlb	0	; () banked
  4075  0005DA  17EB               	andwf	___ftdiv@sign& (0+255),f,b
  4076                           
  4077                           ; BSR set to: 0
  4078  0005DC  8E5E               	bsf	___ftdiv@f1+1,7,c
  4079                           
  4080                           ; BSR set to: 0
  4081  0005DE  0EFF               	movlw	255
  4082  0005E0  165D               	andwf	___ftdiv@f1,f,c
  4083  0005E2  0EFF               	movlw	255
  4084  0005E4  165E               	andwf	___ftdiv@f1+1,f,c
  4085  0005E6  0E00               	movlw	0
  4086  0005E8  165F               	andwf	___ftdiv@f1+2,f,c
  4087                           
  4088                           ; BSR set to: 0
  4089  0005EA  8E61               	bsf	___ftdiv@f2+1,7,c
  4090                           
  4091                           ; BSR set to: 0
  4092  0005EC  0EFF               	movlw	255
  4093  0005EE  1660               	andwf	___ftdiv@f2,f,c
  4094  0005F0  0EFF               	movlw	255
  4095  0005F2  1661               	andwf	___ftdiv@f2+1,f,c
  4096  0005F4  0E00               	movlw	0
  4097  0005F6  1662               	andwf	___ftdiv@f2+2,f,c
  4098                           
  4099                           ; BSR set to: 0
  4100  0005F8  0E18               	movlw	24
  4101  0005FA  0100               	movlb	0	; () banked
  4102  0005FC  6FE6               	movwf	___ftdiv@cntr& (0+255),b
  4103  0005FE  D000               	goto	l4837
  4104  000600                     l4837:
  4105                           
  4106                           ; BSR set to: 0
  4107  000600  0100               	movlb	0	; () banked
  4108  000602  90D8               	bcf	status,0,c
  4109  000604  37E7               	rlcf	___ftdiv@f3& (0+255),f,b
  4110  000606  37E8               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  4111  000608  37E9               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  4112                           
  4113                           ; BSR set to: 0
  4114  00060A  5060               	movf	___ftdiv@f2,w,c
  4115  00060C  5C5D               	subwf	___ftdiv@f1,w,c
  4116  00060E  5061               	movf	___ftdiv@f2+1,w,c
  4117  000610  585E               	subwfb	___ftdiv@f1+1,w,c
  4118  000612  5062               	movf	___ftdiv@f2+2,w,c
  4119  000614  585F               	subwfb	___ftdiv@f1+2,w,c
  4120  000616  A0D8               	btfss	status,0,c
  4121  000618  D008               	goto	l1232
  4122                           
  4123                           ; BSR set to: 0
  4124  00061A  5060               	movf	___ftdiv@f2,w,c
  4125  00061C  5E5D               	subwf	___ftdiv@f1,f,c
  4126  00061E  5061               	movf	___ftdiv@f2+1,w,c
  4127  000620  5A5E               	subwfb	___ftdiv@f1+1,f,c
  4128  000622  5062               	movf	___ftdiv@f2+2,w,c
  4129  000624  5A5F               	subwfb	___ftdiv@f1+2,f,c
  4130                           
  4131                           ; BSR set to: 0
  4132  000626  0100               	movlb	0	; () banked
  4133  000628  81E7               	bsf	___ftdiv@f3& (0+255),0,b
  4134  00062A                     l1232:
  4135                           
  4136                           ; BSR set to: 0
  4137  00062A  90D8               	bcf	status,0,c
  4138  00062C  365D               	rlcf	___ftdiv@f1,f,c
  4139  00062E  365E               	rlcf	___ftdiv@f1+1,f,c
  4140  000630  365F               	rlcf	___ftdiv@f1+2,f,c
  4141                           
  4142                           ; BSR set to: 0
  4143  000632  0100               	movlb	0	; () banked
  4144  000634  2FE6               	decfsz	___ftdiv@cntr& (0+255),f,b
  4145  000636  D7E4               	goto	l4837
  4146  000638  D000               	goto	l4847
  4147  00063A                     l4847:
  4148                           
  4149                           ; BSR set to: 0
  4150  00063A  C0E7  F042         	movff	___ftdiv@f3,___ftpack@arg
  4151  00063E  C0E8  F043         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4152  000642  C0E9  F044         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4153  000646  C0EA  F045         	movff	___ftdiv@exp,___ftpack@exp
  4154  00064A  C0EB  F046         	movff	___ftdiv@sign,___ftpack@sign
  4155  00064E  ECF9  F004         	call	___ftpack	;wreg free
  4156  000652  C042  F05D         	movff	?___ftpack,?___ftdiv
  4157  000656  C043  F05E         	movff	?___ftpack+1,?___ftdiv+1
  4158  00065A  C044  F05F         	movff	?___ftpack+2,?___ftdiv+2
  4159  00065E  D000               	goto	l1229
  4160  000660                     l1229:
  4161  000660  0012               	return		;funcret
  4162  000662                     __end_of___ftdiv:
  4163                           	opt stack 0
  4164                           tblptru	equ	0xFF8
  4165                           tblptrh	equ	0xFF7
  4166                           tblptrl	equ	0xFF6
  4167                           tablat	equ	0xFF5
  4168                           prodh	equ	0xFF4
  4169                           prodl	equ	0xFF3
  4170                           postinc0	equ	0xFEE
  4171                           wreg	equ	0xFE8
  4172                           postdec1	equ	0xFE5
  4173                           fsr1l	equ	0xFE1
  4174                           postinc2	equ	0xFDE
  4175                           postdec2	equ	0xFDD
  4176                           fsr2h	equ	0xFDA
  4177                           fsr2l	equ	0xFD9
  4178                           status	equ	0xFD8
  4179                           
  4180 ;; *************** function ___ftpack *****************
  4181 ;; Defined at:
  4182 ;;		line 62 in file "E:\XC8\sources\common\float.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  arg             3   16[COMRAM] unsigned um
  4185 ;;  exp             1   19[COMRAM] unsigned char 
  4186 ;;  sign            1   20[COMRAM] unsigned char 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;		None
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  3   16[COMRAM] float 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2, status,0
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4198 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4200 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;Total ram usage:        8 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    3
  4205 ;; This function calls:
  4206 ;;		Nothing
  4207 ;; This function is called by:
  4208 ;;		___ftdiv
  4209 ;;		___ftmul
  4210 ;;		___lbtoft
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text15
  4215  0009F2                     __ptext15:
  4216                           	opt stack 0
  4217  0009F2                     ___ftpack:
  4218                           	opt stack 25
  4219                           
  4220                           ;incstack = 0
  4221  0009F2  5045               	movf	___ftpack@exp,w,c
  4222  0009F4  B4D8               	btfsc	status,2,c
  4223  0009F6  D005               	goto	l4759
  4224  0009F8  5042               	movf	___ftpack@arg,w,c
  4225  0009FA  1043               	iorwf	___ftpack@arg+1,w,c
  4226  0009FC  1044               	iorwf	___ftpack@arg+2,w,c
  4227  0009FE  A4D8               	btfss	status,2,c
  4228  000A00  D00E               	goto	l4765
  4229  000A02                     l4759:
  4230  000A02  0E00               	movlw	0
  4231  000A04  6E42               	movwf	?___ftpack,c
  4232  000A06  0E00               	movlw	0
  4233  000A08  6E43               	movwf	?___ftpack+1,c
  4234  000A0A  0E00               	movlw	0
  4235  000A0C  6E44               	movwf	?___ftpack+2,c
  4236  000A0E  D053               	goto	l1157
  4237  000A10  D006               	goto	l4765
  4238  000A12                     l4763:
  4239  000A12  2A45               	incf	___ftpack@exp,f,c
  4240  000A14  90D8               	bcf	status,0,c
  4241  000A16  3244               	rrcf	___ftpack@arg+2,f,c
  4242  000A18  3243               	rrcf	___ftpack@arg+1,f,c
  4243  000A1A  3242               	rrcf	___ftpack@arg,f,c
  4244  000A1C  D000               	goto	l4765
  4245  000A1E                     l4765:
  4246  000A1E  0E00               	movlw	0
  4247  000A20  1442               	andwf	___ftpack@arg,w,c
  4248  000A22  6E47               	movwf	??___ftpack& (0+255),c
  4249  000A24  0E00               	movlw	0
  4250  000A26  1443               	andwf	___ftpack@arg+1,w,c
  4251  000A28  6E48               	movwf	(??___ftpack+1)& (0+255),c
  4252  000A2A  0EFE               	movlw	254
  4253  000A2C  1444               	andwf	___ftpack@arg+2,w,c
  4254  000A2E  6E49               	movwf	(??___ftpack+2)& (0+255),c
  4255  000A30  5047               	movf	??___ftpack,w,c
  4256  000A32  1048               	iorwf	??___ftpack+1,w,c
  4257  000A34  1049               	iorwf	??___ftpack+2,w,c
  4258  000A36  B4D8               	btfsc	status,2,c
  4259  000A38  D00E               	goto	l4771
  4260  000A3A  D7EB               	goto	l4763
  4261  000A3C  D00C               	goto	l4771
  4262  000A3E                     l4767:
  4263  000A3E  2A45               	incf	___ftpack@exp,f,c
  4264  000A40  0E01               	movlw	1
  4265  000A42  2642               	addwf	___ftpack@arg,f,c
  4266  000A44  0E00               	movlw	0
  4267  000A46  2243               	addwfc	___ftpack@arg+1,f,c
  4268  000A48  0E00               	movlw	0
  4269  000A4A  2244               	addwfc	___ftpack@arg+2,f,c
  4270  000A4C  90D8               	bcf	status,0,c
  4271  000A4E  3244               	rrcf	___ftpack@arg+2,f,c
  4272  000A50  3243               	rrcf	___ftpack@arg+1,f,c
  4273  000A52  3242               	rrcf	___ftpack@arg,f,c
  4274  000A54  D000               	goto	l4771
  4275  000A56                     l4771:
  4276  000A56  0E00               	movlw	0
  4277  000A58  1442               	andwf	___ftpack@arg,w,c
  4278  000A5A  6E47               	movwf	??___ftpack& (0+255),c
  4279  000A5C  0E00               	movlw	0
  4280  000A5E  1443               	andwf	___ftpack@arg+1,w,c
  4281  000A60  6E48               	movwf	(??___ftpack+1)& (0+255),c
  4282  000A62  0EFF               	movlw	255
  4283  000A64  1444               	andwf	___ftpack@arg+2,w,c
  4284  000A66  6E49               	movwf	(??___ftpack+2)& (0+255),c
  4285  000A68  5047               	movf	??___ftpack,w,c
  4286  000A6A  1048               	iorwf	??___ftpack+1,w,c
  4287  000A6C  1049               	iorwf	??___ftpack+2,w,c
  4288  000A6E  B4D8               	btfsc	status,2,c
  4289  000A70  D008               	goto	l4775
  4290  000A72  D7E5               	goto	l4767
  4291  000A74  D006               	goto	l4775
  4292  000A76                     l4773:
  4293  000A76  0645               	decf	___ftpack@exp,f,c
  4294  000A78  90D8               	bcf	status,0,c
  4295  000A7A  3642               	rlcf	___ftpack@arg,f,c
  4296  000A7C  3643               	rlcf	___ftpack@arg+1,f,c
  4297  000A7E  3644               	rlcf	___ftpack@arg+2,f,c
  4298  000A80  D000               	goto	l4775
  4299  000A82                     l4775:
  4300  000A82  BE43               	btfsc	___ftpack@arg+1,7,c
  4301  000A84  D004               	goto	l1168
  4302  000A86  0E02               	movlw	2
  4303  000A88  6045               	cpfslt	___ftpack@exp,c
  4304  000A8A  D7F5               	goto	l4773
  4305  000A8C  D000               	goto	l1168
  4306  000A8E                     l1168:
  4307  000A8E  B045               	btfsc	___ftpack@exp,0,c
  4308  000A90  D002               	goto	l4781
  4309  000A92  9E43               	bcf	___ftpack@arg+1,7,c
  4310  000A94  D000               	goto	l4781
  4311  000A96                     l4781:
  4312  000A96  90D8               	bcf	status,0,c
  4313  000A98  3245               	rrcf	___ftpack@exp,f,c
  4314  000A9A  5045               	movf	___ftpack@exp,w,c
  4315  000A9C  1244               	iorwf	___ftpack@arg+2,f,c
  4316  000A9E  5046               	movf	___ftpack@sign,w,c
  4317  000AA0  B4D8               	btfsc	status,2,c
  4318  000AA2  D002               	goto	l4787
  4319  000AA4  8E44               	bsf	___ftpack@arg+2,7,c
  4320  000AA6  D000               	goto	l4787
  4321  000AA8                     l4787:
  4322  000AA8  C042  F042         	movff	___ftpack@arg,?___ftpack
  4323  000AAC  C043  F043         	movff	___ftpack@arg+1,?___ftpack+1
  4324  000AB0  C044  F044         	movff	___ftpack@arg+2,?___ftpack+2
  4325  000AB4  D000               	goto	l1157
  4326  000AB6                     l1157:
  4327  000AB6  0012               	return		;funcret
  4328  000AB8                     __end_of___ftpack:
  4329                           	opt stack 0
  4330                           tblptru	equ	0xFF8
  4331                           tblptrh	equ	0xFF7
  4332                           tblptrl	equ	0xFF6
  4333                           tablat	equ	0xFF5
  4334                           prodh	equ	0xFF4
  4335                           prodl	equ	0xFF3
  4336                           postinc0	equ	0xFEE
  4337                           wreg	equ	0xFE8
  4338                           postdec1	equ	0xFE5
  4339                           fsr1l	equ	0xFE1
  4340                           postinc2	equ	0xFDE
  4341                           postdec2	equ	0xFDD
  4342                           fsr2h	equ	0xFDA
  4343                           fsr2l	equ	0xFD9
  4344                           status	equ	0xFD8
  4345                           
  4346 ;; *************** function _Do_Init *****************
  4347 ;; Defined at:
  4348 ;;		line 104 in file "Lab11pC.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;		None
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;		None
  4353 ;; Return value:  Size  Location     Type
  4354 ;;		None               void
  4355 ;; Registers used:
  4356 ;;		wreg, status,2, status,0, cstack
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;Total ram usage:        0 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; Hardware stack levels required when called:    7
  4369 ;; This function calls:
  4370 ;;		_DS1621_Init
  4371 ;;		_I2C_Init
  4372 ;;		_Turn_Off_Fan
  4373 ;;		_init_INTERRUPT
  4374 ;;		_init_UART
  4375 ;; This function is called by:
  4376 ;;		_main
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text16
  4381  000E26                     __ptext16:
  4382                           	opt stack 0
  4383  000E26                     _Do_Init:
  4384                           	opt stack 23
  4385                           
  4386                           ;Lab11pC.c: 106: init_UART();
  4387                           
  4388                           ;incstack = 0
  4389  000E26  EC51  F008         	call	_init_UART	;wreg free
  4390                           
  4391                           ;Lab11pC.c: 107: OSCCON=0x70;
  4392  000E2A  0E70               	movlw	112
  4393  000E2C  6ED3               	movwf	4051,c	;volatile
  4394                           
  4395                           ;Lab11pC.c: 109: ADCON1=0x0F;
  4396  000E2E  0E0F               	movlw	15
  4397  000E30  6EC1               	movwf	4033,c	;volatile
  4398                           
  4399                           ;Lab11pC.c: 110: TRISA = 0x00;
  4400  000E32  0E00               	movlw	0
  4401  000E34  6E92               	movwf	3986,c	;volatile
  4402                           
  4403                           ;Lab11pC.c: 111: TRISB = 0x01;
  4404  000E36  0E01               	movlw	1
  4405  000E38  6E93               	movwf	3987,c	;volatile
  4406                           
  4407                           ;Lab11pC.c: 112: TRISC = 0x01;
  4408  000E3A  0E01               	movlw	1
  4409  000E3C  6E94               	movwf	3988,c	;volatile
  4410                           
  4411                           ;Lab11pC.c: 113: TRISD = 0x00;
  4412  000E3E  0E00               	movlw	0
  4413  000E40  6E95               	movwf	3989,c	;volatile
  4414                           
  4415                           ;Lab11pC.c: 115: FAN=0;
  4416  000E42  0E00               	movlw	0
  4417  000E44  6E15               	movwf	_FAN,c
  4418                           
  4419                           ;Lab11pC.c: 116: RBPU=0;
  4420  000E46  9EF1               	bcf	intcon2,7,c	;volatile
  4421                           
  4422                           ;Lab11pC.c: 117: TMR3L = 0x00;
  4423  000E48  0E00               	movlw	0
  4424  000E4A  6EB2               	movwf	4018,c	;volatile
  4425                           
  4426                           ;Lab11pC.c: 118: T3CON = 0x03;
  4427  000E4C  0E03               	movlw	3
  4428  000E4E  6EB1               	movwf	4017,c	;volatile
  4429                           
  4430                           ;Lab11pC.c: 119: I2C_Init(100000);
  4431  000E50  0EA0               	movlw	160
  4432  000E52  6E42               	movwf	I2C_Init@c,c
  4433  000E54  0E86               	movlw	134
  4434  000E56  6E43               	movwf	I2C_Init@c+1,c
  4435  000E58  0E01               	movlw	1
  4436  000E5A  6E44               	movwf	I2C_Init@c+2,c
  4437  000E5C  0E00               	movlw	0
  4438  000E5E  6E45               	movwf	I2C_Init@c+3,c
  4439  000E60  EC9C  F008         	call	_I2C_Init	;wreg free
  4440                           
  4441                           ;Lab11pC.c: 121: DS1621_Init();
  4442  000E64  EC2A  F008         	call	_DS1621_Init	;wreg free
  4443                           
  4444                           ;Lab11pC.c: 122: init_INTERRUPT();
  4445  000E68  ECB9  F007         	call	_init_INTERRUPT	;wreg free
  4446                           
  4447                           ;Lab11pC.c: 123: Turn_Off_Fan();
  4448  000E6C  EC97  F008         	call	_Turn_Off_Fan	;wreg free
  4449  000E70  0012               	return		;funcret
  4450  000E72                     __end_of_Do_Init:
  4451                           	opt stack 0
  4452                           tblptru	equ	0xFF8
  4453                           tblptrh	equ	0xFF7
  4454                           tblptrl	equ	0xFF6
  4455                           tablat	equ	0xFF5
  4456                           prodh	equ	0xFF4
  4457                           prodl	equ	0xFF3
  4458                           intcon2	equ	0xFF1
  4459                           postinc0	equ	0xFEE
  4460                           wreg	equ	0xFE8
  4461                           postdec1	equ	0xFE5
  4462                           fsr1l	equ	0xFE1
  4463                           postinc2	equ	0xFDE
  4464                           postdec2	equ	0xFDD
  4465                           fsr2h	equ	0xFDA
  4466                           fsr2l	equ	0xFD9
  4467                           status	equ	0xFD8
  4468                           
  4469 ;; *************** function _init_UART *****************
  4470 ;; Defined at:
  4471 ;;		line 97 in file "Lab11pC.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;		None               void
  4478 ;; Registers used:
  4479 ;;		wreg, status,2, cstack
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;Total ram usage:        0 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    4
  4492 ;; This function calls:
  4493 ;;		_OpenUSART
  4494 ;; This function is called by:
  4495 ;;		_Do_Init
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text17
  4500  0010A2                     __ptext17:
  4501                           	opt stack 0
  4502  0010A2                     _init_UART:
  4503                           	opt stack 25
  4504                           
  4505                           ;Lab11pC.c: 99: OpenUSART (0b01111111 & 0b10111111 & 0b11111110 &
  4506                           ;Lab11pC.c: 100: 0b11111101 & 0b11111111 & 0b11111111, 25);
  4507                           
  4508                           ;incstack = 0
  4509  0010A2  0E00               	movlw	0
  4510  0010A4  6E43               	movwf	OpenUSART@spbrg+1,c
  4511  0010A6  0E19               	movlw	25
  4512  0010A8  6E42               	movwf	OpenUSART@spbrg,c
  4513  0010AA  0E3C               	movlw	60
  4514  0010AC  EC23  F006         	call	_OpenUSART
  4515                           
  4516                           ;Lab11pC.c: 101: OSCCON = 0x70;
  4517  0010B0  0E70               	movlw	112
  4518  0010B2  6ED3               	movwf	4051,c	;volatile
  4519  0010B4  0012               	return		;funcret
  4520  0010B6                     __end_of_init_UART:
  4521                           	opt stack 0
  4522                           tblptru	equ	0xFF8
  4523                           tblptrh	equ	0xFF7
  4524                           tblptrl	equ	0xFF6
  4525                           tablat	equ	0xFF5
  4526                           prodh	equ	0xFF4
  4527                           prodl	equ	0xFF3
  4528                           intcon2	equ	0xFF1
  4529                           postinc0	equ	0xFEE
  4530                           wreg	equ	0xFE8
  4531                           postdec1	equ	0xFE5
  4532                           fsr1l	equ	0xFE1
  4533                           postinc2	equ	0xFDE
  4534                           postdec2	equ	0xFDD
  4535                           fsr2h	equ	0xFDA
  4536                           fsr2l	equ	0xFD9
  4537                           status	equ	0xFD8
  4538                           
  4539 ;; *************** function _OpenUSART *****************
  4540 ;; Defined at:
  4541 ;;		line 73 in file "E:\XC8\sources\pic18\plib\USART\uopen.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  config          1    wreg     unsigned char 
  4544 ;;  spbrg           2   16[COMRAM] unsigned int 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  config          1   18[COMRAM] unsigned char 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;		None               void
  4549 ;; Registers used:
  4550 ;;		wreg, status,2
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;Total ram usage:        3 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    3
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_init_UART
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text18
  4571  000C46                     __ptext18:
  4572                           	opt stack 0
  4573  000C46                     _OpenUSART:
  4574                           	opt stack 25
  4575                           
  4576                           ;incstack = 0
  4577                           ;OpenUSART@config stored from wreg
  4578  000C46  6E44               	movwf	OpenUSART@config,c
  4579  000C48  0E00               	movlw	0
  4580  000C4A  6EAC               	movwf	4012,c	;volatile
  4581  000C4C  0E00               	movlw	0
  4582  000C4E  6EAB               	movwf	4011,c	;volatile
  4583  000C50  A044               	btfss	OpenUSART@config,0,c
  4584  000C52  D002               	goto	l3415
  4585  000C54  88AC               	bsf	4012,4,c	;volatile
  4586  000C56  D000               	goto	l3415
  4587  000C58                     l3415:
  4588  000C58  A244               	btfss	OpenUSART@config,1,c
  4589  000C5A  D003               	goto	l3419
  4590  000C5C  8CAC               	bsf	4012,6,c	;volatile
  4591  000C5E  8CAB               	bsf	4011,6,c	;volatile
  4592  000C60  D000               	goto	l3419
  4593  000C62                     l3419:
  4594  000C62  A444               	btfss	OpenUSART@config,2,c
  4595  000C64  D002               	goto	l3423
  4596  000C66  8EAC               	bsf	4012,7,c	;volatile
  4597  000C68  D000               	goto	l3423
  4598  000C6A                     l3423:
  4599  000C6A  A644               	btfss	OpenUSART@config,3,c
  4600  000C6C  D002               	goto	l837
  4601  000C6E  88AB               	bsf	4011,4,c	;volatile
  4602  000C70  D002               	goto	l3427
  4603  000C72                     l837:
  4604  000C72  8AAB               	bsf	4011,5,c	;volatile
  4605  000C74  D000               	goto	l3427
  4606  000C76                     l3427:
  4607  000C76  B844               	btfsc	OpenUSART@config,4,c
  4608  000C78  84AC               	bsf	4012,2,c	;volatile
  4609  000C7A  989E               	bcf	3998,4,c	;volatile
  4610  000C7C  AA44               	btfss	OpenUSART@config,5,c
  4611  000C7E  D002               	goto	l3435
  4612  000C80  86AB               	bsf	4011,3,c	;volatile
  4613  000C82  D000               	goto	l3435
  4614  000C84                     l3435:
  4615  000C84  AC44               	btfss	OpenUSART@config,6,c
  4616  000C86  D002               	goto	l841
  4617  000C88  8A9D               	bsf	3997,5,c	;volatile
  4618  000C8A  D001               	goto	l842
  4619  000C8C                     l841:
  4620  000C8C  9A9D               	bcf	3997,5,c	;volatile
  4621  000C8E                     l842:
  4622  000C8E  9A9E               	bcf	3998,5,c	;volatile
  4623  000C90  AE44               	btfss	OpenUSART@config,7,c
  4624  000C92  D002               	goto	l843
  4625  000C94  889D               	bsf	3997,4,c	;volatile
  4626  000C96  D001               	goto	l844
  4627  000C98                     l843:
  4628  000C98  989D               	bcf	3997,4,c	;volatile
  4629  000C9A                     l844:
  4630  000C9A  C042  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4631  000C9E  5043               	movf	OpenUSART@spbrg+1,w,c
  4632  000CA0  6EB0               	movwf	4016,c	;volatile
  4633  000CA2  8AAC               	bsf	4012,5,c	;volatile
  4634  000CA4  8EAB               	bsf	4011,7,c	;volatile
  4635  000CA6  9C94               	bcf	3988,6,c	;volatile
  4636  000CA8  8E94               	bsf	3988,7,c	;volatile
  4637  000CAA  B8AC               	btfsc	4012,4,c	;volatile
  4638  000CAC  BEAC               	btfsc	4012,7,c	;volatile
  4639  000CAE  D002               	goto	l846
  4640  000CB0  8C94               	bsf	3988,6,c	;volatile
  4641  000CB2  D000               	goto	l846
  4642  000CB4                     l846:
  4643  000CB4  0012               	return		;funcret
  4644  000CB6                     __end_of_OpenUSART:
  4645                           	opt stack 0
  4646                           tblptru	equ	0xFF8
  4647                           tblptrh	equ	0xFF7
  4648                           tblptrl	equ	0xFF6
  4649                           tablat	equ	0xFF5
  4650                           prodh	equ	0xFF4
  4651                           prodl	equ	0xFF3
  4652                           intcon2	equ	0xFF1
  4653                           postinc0	equ	0xFEE
  4654                           wreg	equ	0xFE8
  4655                           postdec1	equ	0xFE5
  4656                           fsr1l	equ	0xFE1
  4657                           postinc2	equ	0xFDE
  4658                           postdec2	equ	0xFDD
  4659                           fsr2h	equ	0xFDA
  4660                           fsr2l	equ	0xFD9
  4661                           status	equ	0xFD8
  4662                           
  4663 ;; *************** function _init_INTERRUPT *****************
  4664 ;; Defined at:
  4665 ;;		line 14 in file "Interrupt.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;		None
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;		None               void
  4672 ;; Registers used:
  4673 ;;		wreg, status,2
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;Total ram usage:        0 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    3
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_Do_Init
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text19
  4694  000F72                     __ptext19:
  4695                           	opt stack 0
  4696  000F72                     _init_INTERRUPT:
  4697                           	opt stack 26
  4698                           
  4699                           ;Interrupt.c: 16: INTCONbits.INT0IF = 0;
  4700                           
  4701                           ;incstack = 0
  4702  000F72  92F2               	bcf	intcon,1,c	;volatile
  4703                           
  4704                           ;Interrupt.c: 17: INTCON2bits.INTEDG0 = 0;
  4705  000F74  9CF1               	bcf	intcon2,6,c	;volatile
  4706                           
  4707                           ;Interrupt.c: 18: INTCONbits.INT0IE = 1;
  4708  000F76  88F2               	bsf	intcon,4,c	;volatile
  4709                           
  4710                           ;Interrupt.c: 19: TMR1H = 0;
  4711  000F78  0E00               	movlw	0
  4712  000F7A  6ECF               	movwf	4047,c	;volatile
  4713                           
  4714                           ;Interrupt.c: 20: TMR1L = 0;
  4715  000F7C  0E00               	movlw	0
  4716  000F7E  6ECE               	movwf	4046,c	;volatile
  4717                           
  4718                           ;Interrupt.c: 21: PIR1bits.TMR1IF = 0;
  4719  000F80  909E               	bcf	3998,0,c	;volatile
  4720                           
  4721                           ;Interrupt.c: 22: PIE1bits.TMR1IE = 1;
  4722  000F82  809D               	bsf	3997,0,c	;volatile
  4723                           
  4724                           ;Interrupt.c: 23: INTCONbits.PEIE = 1;
  4725  000F84  8CF2               	bsf	intcon,6,c	;volatile
  4726                           
  4727                           ;Interrupt.c: 24: INTCONbits.GIE = 1;
  4728  000F86  8EF2               	bsf	intcon,7,c	;volatile
  4729                           
  4730                           ;Interrupt.c: 25: nec_ok = 0;
  4731  000F88  0E00               	movlw	0
  4732  000F8A  6E0E               	movwf	_nec_ok+1,c
  4733  000F8C  0E00               	movlw	0
  4734  000F8E  6E0D               	movwf	_nec_ok,c
  4735                           
  4736                           ;Interrupt.c: 26: Nec_code = 0x0;
  4737  000F90  0E00               	movlw	0
  4738  000F92  6E01               	movwf	_Nec_code,c
  4739  000F94  0E00               	movlw	0
  4740  000F96  6E02               	movwf	_Nec_code+1,c
  4741  000F98  0E00               	movlw	0
  4742  000F9A  6E03               	movwf	_Nec_code+2,c
  4743  000F9C  0E00               	movlw	0
  4744  000F9E  6E04               	movwf	_Nec_code+3,c
  4745  000FA0  0012               	return		;funcret
  4746  000FA2                     __end_of_init_INTERRUPT:
  4747                           	opt stack 0
  4748                           tblptru	equ	0xFF8
  4749                           tblptrh	equ	0xFF7
  4750                           tblptrl	equ	0xFF6
  4751                           tablat	equ	0xFF5
  4752                           prodh	equ	0xFF4
  4753                           prodl	equ	0xFF3
  4754                           intcon	equ	0xFF2
  4755                           intcon2	equ	0xFF1
  4756                           postinc0	equ	0xFEE
  4757                           wreg	equ	0xFE8
  4758                           postdec1	equ	0xFE5
  4759                           fsr1l	equ	0xFE1
  4760                           postinc2	equ	0xFDE
  4761                           postdec2	equ	0xFDD
  4762                           fsr2h	equ	0xFDA
  4763                           fsr2l	equ	0xFD9
  4764                           status	equ	0xFD8
  4765                           
  4766 ;; *************** function _Turn_Off_Fan *****************
  4767 ;; Defined at:
  4768 ;;		line 34 in file "Fan_Support.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;		None
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;		None
  4773 ;; Return value:  Size  Location     Type
  4774 ;;		None               void
  4775 ;; Registers used:
  4776 ;;		wreg, status,2
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;Total ram usage:        0 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    3
  4789 ;; This function calls:
  4790 ;;		Nothing
  4791 ;; This function is called by:
  4792 ;;		_Do_Init
  4793 ;;		_Toggle_Fan
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text20
  4798  00112E                     __ptext20:
  4799                           	opt stack 0
  4800  00112E                     _Turn_Off_Fan:
  4801                           	opt stack 26
  4802                           
  4803                           ;Fan_Support.c: 37: FAN=0;
  4804                           
  4805                           ;incstack = 0
  4806  00112E  0E00               	movlw	0
  4807  001130  6E15               	movwf	_FAN,c
  4808                           
  4809                           ;Fan_Support.c: 38: PORTAbits.RA5=0;
  4810  001132  9A80               	bcf	3968,5,c	;volatile
  4811                           
  4812                           ;Fan_Support.c: 39: PORTEbits.RE2=0;
  4813  001134  9484               	bcf	3972,2,c	;volatile
  4814  001136  0012               	return		;funcret
  4815  001138                     __end_of_Turn_Off_Fan:
  4816                           	opt stack 0
  4817                           tblptru	equ	0xFF8
  4818                           tblptrh	equ	0xFF7
  4819                           tblptrl	equ	0xFF6
  4820                           tablat	equ	0xFF5
  4821                           prodh	equ	0xFF4
  4822                           prodl	equ	0xFF3
  4823                           intcon	equ	0xFF2
  4824                           intcon2	equ	0xFF1
  4825                           postinc0	equ	0xFEE
  4826                           wreg	equ	0xFE8
  4827                           postdec1	equ	0xFE5
  4828                           fsr1l	equ	0xFE1
  4829                           postinc2	equ	0xFDE
  4830                           postdec2	equ	0xFDD
  4831                           fsr2h	equ	0xFDA
  4832                           fsr2l	equ	0xFD9
  4833                           status	equ	0xFD8
  4834                           
  4835 ;; *************** function _I2C_Init *****************
  4836 ;; Defined at:
  4837 ;;		line 14 in file "I2C.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  c               4   16[COMRAM] unsigned long 
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;		None
  4842 ;; Return value:  Size  Location     Type
  4843 ;;		None               void
  4844 ;; Registers used:
  4845 ;;		wreg, cstack
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4851 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;Total ram usage:        4 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; Hardware stack levels required when called:    4
  4858 ;; This function calls:
  4859 ;;		_i2cHighScl
  4860 ;;		_i2cHighSda
  4861 ;; This function is called by:
  4862 ;;		_Do_Init
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           	psect	text21
  4867  001138                     __ptext21:
  4868                           	opt stack 0
  4869  001138                     _I2C_Init:
  4870                           	opt stack 25
  4871                           
  4872                           ;I2C.c: 16: i2cHighScl();
  4873                           
  4874                           ;incstack = 0
  4875  001138  EC85  F008         	call	_i2cHighScl	;wreg free
  4876                           
  4877                           ;I2C.c: 17: i2cHighSda();
  4878  00113C  ECAF  F008         	call	_i2cHighSda	;wreg free
  4879  001140  0012               	return		;funcret
  4880  001142                     __end_of_I2C_Init:
  4881                           	opt stack 0
  4882                           tblptru	equ	0xFF8
  4883                           tblptrh	equ	0xFF7
  4884                           tblptrl	equ	0xFF6
  4885                           tablat	equ	0xFF5
  4886                           prodh	equ	0xFF4
  4887                           prodl	equ	0xFF3
  4888                           intcon	equ	0xFF2
  4889                           intcon2	equ	0xFF1
  4890                           postinc0	equ	0xFEE
  4891                           wreg	equ	0xFE8
  4892                           postdec1	equ	0xFE5
  4893                           fsr1l	equ	0xFE1
  4894                           postinc2	equ	0xFDE
  4895                           postdec2	equ	0xFDD
  4896                           fsr2h	equ	0xFDA
  4897                           fsr2l	equ	0xFD9
  4898                           status	equ	0xFD8
  4899                           
  4900 ;; *************** function _DS1621_Init *****************
  4901 ;; Defined at:
  4902 ;;		line 21 in file "I2C_Support.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  Device          1   21[COMRAM] unsigned char 
  4907 ;; Return value:  Size  Location     Type
  4908 ;;		None               void
  4909 ;; Registers used:
  4910 ;;		wreg, status,2, status,0, cstack
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4920 ;;Total ram usage:        1 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    6
  4923 ;; This function calls:
  4924 ;;		_I2C_Write_Cmd_Only
  4925 ;;		_I2C_Write_Cmd_Write_Data
  4926 ;; This function is called by:
  4927 ;;		_Do_Init
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text22
  4932  001054                     __ptext22:
  4933                           	opt stack 0
  4934  001054                     _DS1621_Init:
  4935                           	opt stack 23
  4936                           
  4937                           ;I2C_Support.c: 23: char Device = 0x48;
  4938                           
  4939                           ;incstack = 0
  4940  001054  0E48               	movlw	72
  4941  001056  6E47               	movwf	DS1621_Init@Device,c
  4942                           
  4943                           ;I2C_Support.c: 24: I2C_Write_Cmd_Write_Data (Device, 0xAC, 0x02);
  4944  001058  0EAC               	movlw	172
  4945  00105A  6E44               	movwf	I2C_Write_Cmd_Write_Data@Cmd,c
  4946  00105C  0E02               	movlw	2
  4947  00105E  6E45               	movwf	I2C_Write_Cmd_Write_Data@Data_Out,c
  4948  001060  5047               	movf	DS1621_Init@Device,w,c
  4949  001062  EC1A  F008         	call	_I2C_Write_Cmd_Write_Data
  4950                           
  4951                           ;I2C_Support.c: 25: I2C_Write_Cmd_Only(Device, 0xEE);
  4952  001066  0EEE               	movlw	238
  4953  001068  6E44               	movwf	I2C_Write_Cmd_Only@Cmd,c
  4954  00106A  5047               	movf	DS1621_Init@Device,w,c
  4955  00106C  EC39  F008         	call	_I2C_Write_Cmd_Only
  4956  001070  0012               	return		;funcret
  4957  001072                     __end_of_DS1621_Init:
  4958                           	opt stack 0
  4959                           tblptru	equ	0xFF8
  4960                           tblptrh	equ	0xFF7
  4961                           tblptrl	equ	0xFF6
  4962                           tablat	equ	0xFF5
  4963                           prodh	equ	0xFF4
  4964                           prodl	equ	0xFF3
  4965                           intcon	equ	0xFF2
  4966                           intcon2	equ	0xFF1
  4967                           postinc0	equ	0xFEE
  4968                           wreg	equ	0xFE8
  4969                           postdec1	equ	0xFE5
  4970                           fsr1l	equ	0xFE1
  4971                           postinc2	equ	0xFDE
  4972                           postdec2	equ	0xFDD
  4973                           fsr2h	equ	0xFDA
  4974                           fsr2l	equ	0xFD9
  4975                           status	equ	0xFD8
  4976                           
  4977 ;; *************** function _I2C_Write_Cmd_Write_Data *****************
  4978 ;; Defined at:
  4979 ;;		line 152 in file "I2C.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;  Device          1    wreg     unsigned char 
  4982 ;;  Cmd             1   18[COMRAM] unsigned char 
  4983 ;;  Data_Out        1   19[COMRAM] unsigned char 
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  Device          1   20[COMRAM] unsigned char 
  4986 ;; Return value:  Size  Location     Type
  4987 ;;		None               void
  4988 ;; Registers used:
  4989 ;;		wreg, status,2, status,0, cstack
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4998 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4999 ;;Total ram usage:        3 bytes
  5000 ;; Hardware stack levels used:    1
  5001 ;; Hardware stack levels required when called:    5
  5002 ;; This function calls:
  5003 ;;		_I2C_Start
  5004 ;;		_I2C_Stop
  5005 ;;		_I2C_Write
  5006 ;; This function is called by:
  5007 ;;		_DS1621_Init
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text23
  5012  001034                     __ptext23:
  5013                           	opt stack 0
  5014  001034                     _I2C_Write_Cmd_Write_Data:
  5015                           	opt stack 23
  5016                           
  5017                           ;incstack = 0
  5018                           ;I2C_Write_Cmd_Write_Data@Device stored from wreg
  5019  001034  6E46               	movwf	I2C_Write_Cmd_Write_Data@Device,c
  5020                           
  5021                           ;I2C.c: 154: I2C_Start();
  5022  001036  EC64  F008         	call	_I2C_Start	;wreg free
  5023                           
  5024                           ;I2C.c: 155: I2C_Write((Device << 1) | 0);
  5025  00103A  5046               	movf	I2C_Write_Cmd_Write_Data@Device,w,c
  5026  00103C  2446               	addwf	I2C_Write_Cmd_Write_Data@Device,w,c
  5027  00103E  EC7C  F007         	call	_I2C_Write
  5028                           
  5029                           ;I2C.c: 156: I2C_Write(Cmd);
  5030  001042  5044               	movf	I2C_Write_Cmd_Write_Data@Cmd,w,c
  5031  001044  EC7C  F007         	call	_I2C_Write
  5032                           
  5033                           ;I2C.c: 157: I2C_Write(Data_Out);
  5034  001048  5045               	movf	I2C_Write_Cmd_Write_Data@Data_Out,w,c
  5035  00104A  EC7C  F007         	call	_I2C_Write
  5036                           
  5037                           ;I2C.c: 158: I2C_Stop();
  5038  00104E  EC5B  F008         	call	_I2C_Stop	;wreg free
  5039  001052  0012               	return		;funcret
  5040  001054                     __end_of_I2C_Write_Cmd_Write_Data:
  5041                           	opt stack 0
  5042                           tblptru	equ	0xFF8
  5043                           tblptrh	equ	0xFF7
  5044                           tblptrl	equ	0xFF6
  5045                           tablat	equ	0xFF5
  5046                           prodh	equ	0xFF4
  5047                           prodl	equ	0xFF3
  5048                           intcon	equ	0xFF2
  5049                           intcon2	equ	0xFF1
  5050                           postinc0	equ	0xFEE
  5051                           wreg	equ	0xFE8
  5052                           postdec1	equ	0xFE5
  5053                           fsr1l	equ	0xFE1
  5054                           postinc2	equ	0xFDE
  5055                           postdec2	equ	0xFDD
  5056                           fsr2h	equ	0xFDA
  5057                           fsr2l	equ	0xFD9
  5058                           status	equ	0xFD8
  5059                           
  5060 ;; *************** function _I2C_Write_Cmd_Only *****************
  5061 ;; Defined at:
  5062 ;;		line 144 in file "I2C.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;  Device          1    wreg     unsigned char 
  5065 ;;  Cmd             1   18[COMRAM] unsigned char 
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;  Device          1   19[COMRAM] unsigned char 
  5068 ;; Return value:  Size  Location     Type
  5069 ;;		None               void
  5070 ;; Registers used:
  5071 ;;		wreg, status,2, status,0, cstack
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5077 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;Total ram usage:        2 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:    5
  5084 ;; This function calls:
  5085 ;;		_I2C_Start
  5086 ;;		_I2C_Stop
  5087 ;;		_I2C_Write
  5088 ;; This function is called by:
  5089 ;;		_DS1621_Init
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text24
  5094  001072                     __ptext24:
  5095                           	opt stack 0
  5096  001072                     _I2C_Write_Cmd_Only:
  5097                           	opt stack 23
  5098                           
  5099                           ;incstack = 0
  5100                           ;I2C_Write_Cmd_Only@Device stored from wreg
  5101  001072  6E45               	movwf	I2C_Write_Cmd_Only@Device,c
  5102                           
  5103                           ;I2C.c: 146: I2C_Start();
  5104  001074  EC64  F008         	call	_I2C_Start	;wreg free
  5105                           
  5106                           ;I2C.c: 147: I2C_Write((Device << 1) | 0);
  5107  001078  5045               	movf	I2C_Write_Cmd_Only@Device,w,c
  5108  00107A  2445               	addwf	I2C_Write_Cmd_Only@Device,w,c
  5109  00107C  EC7C  F007         	call	_I2C_Write
  5110                           
  5111                           ;I2C.c: 148: I2C_Write(Cmd);
  5112  001080  5044               	movf	I2C_Write_Cmd_Only@Cmd,w,c
  5113  001082  EC7C  F007         	call	_I2C_Write
  5114                           
  5115                           ;I2C.c: 149: I2C_Stop();
  5116  001086  EC5B  F008         	call	_I2C_Stop	;wreg free
  5117  00108A  0012               	return		;funcret
  5118  00108C                     __end_of_I2C_Write_Cmd_Only:
  5119                           	opt stack 0
  5120                           tblptru	equ	0xFF8
  5121                           tblptrh	equ	0xFF7
  5122                           tblptrl	equ	0xFF6
  5123                           tablat	equ	0xFF5
  5124                           prodh	equ	0xFF4
  5125                           prodl	equ	0xFF3
  5126                           intcon	equ	0xFF2
  5127                           intcon2	equ	0xFF1
  5128                           postinc0	equ	0xFEE
  5129                           wreg	equ	0xFE8
  5130                           postdec1	equ	0xFE5
  5131                           fsr1l	equ	0xFE1
  5132                           postinc2	equ	0xFDE
  5133                           postdec2	equ	0xFDD
  5134                           fsr2h	equ	0xFDA
  5135                           fsr2l	equ	0xFD9
  5136                           status	equ	0xFD8
  5137                           
  5138 ;; *************** function _DS3231_Read_Time *****************
  5139 ;; Defined at:
  5140 ;;		line 45 in file "I2C_Support.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;		None
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;  Device          1   20[COMRAM] unsigned char 
  5145 ;;  Address         1   19[COMRAM] unsigned char 
  5146 ;;  Data_Ret        1    0        unsigned char 
  5147 ;; Return value:  Size  Location     Type
  5148 ;;		None               void
  5149 ;; Registers used:
  5150 ;;		wreg, status,2, status,0, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5157 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;Total ram usage:        2 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; Hardware stack levels required when called:    6
  5163 ;; This function calls:
  5164 ;;		_I2C_ReStart
  5165 ;;		_I2C_Read
  5166 ;;		_I2C_Start
  5167 ;;		_I2C_Stop
  5168 ;;		_I2C_Write
  5169 ;; This function is called by:
  5170 ;;		_main
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text25
  5175  000CB6                     __ptext25:
  5176                           	opt stack 0
  5177  000CB6                     _DS3231_Read_Time:
  5178                           	opt stack 24
  5179                           
  5180                           ;I2C_Support.c: 47: char Device = 0x68;
  5181                           
  5182                           ;incstack = 0
  5183  000CB6  0E68               	movlw	104
  5184  000CB8  6E46               	movwf	DS3231_Read_Time@Device,c
  5185                           
  5186                           ;I2C_Support.c: 48: char Address = 0x00;
  5187  000CBA  0E00               	movlw	0
  5188  000CBC  6E45               	movwf	DS3231_Read_Time@Address,c
  5189                           
  5190                           ;I2C_Support.c: 49: char Data_Ret;
  5191                           ;I2C_Support.c: 50: I2C_Start();
  5192  000CBE  EC64  F008         	call	_I2C_Start	;wreg free
  5193                           
  5194                           ;I2C_Support.c: 51: I2C_Write((Device << 1) | 0);
  5195  000CC2  5046               	movf	DS3231_Read_Time@Device,w,c
  5196  000CC4  2446               	addwf	DS3231_Read_Time@Device,w,c
  5197  000CC6  EC7C  F007         	call	_I2C_Write
  5198                           
  5199                           ;I2C_Support.c: 52: I2C_Write(Address);
  5200  000CCA  5045               	movf	DS3231_Read_Time@Address,w,c
  5201  000CCC  EC7C  F007         	call	_I2C_Write
  5202                           
  5203                           ;I2C_Support.c: 53: I2C_ReStart();
  5204  000CD0  EC46  F008         	call	_I2C_ReStart	;wreg free
  5205                           
  5206                           ;I2C_Support.c: 54: I2C_Write((Device << 1) | 1);
  5207  000CD4  80D8               	bsf	status,0,c
  5208  000CD6  3446               	rlcf	DS3231_Read_Time@Device,w,c
  5209  000CD8  EC7C  F007         	call	_I2C_Write
  5210                           
  5211                           ;I2C_Support.c: 56: second = I2C_Read(1);
  5212  000CDC  0E01               	movlw	1
  5213  000CDE  EC39  F007         	call	_I2C_Read
  5214  000CE2  6E27               	movwf	_second,c
  5215                           
  5216                           ;I2C_Support.c: 57: minute = I2C_Read(1);
  5217  000CE4  0E01               	movlw	1
  5218  000CE6  EC39  F007         	call	_I2C_Read
  5219  000CEA  6E24               	movwf	_minute,c
  5220                           
  5221                           ;I2C_Support.c: 58: hour = I2C_Read(1);
  5222  000CEC  0E01               	movlw	1
  5223  000CEE  EC39  F007         	call	_I2C_Read
  5224  000CF2  6E23               	movwf	_hour,c
  5225                           
  5226                           ;I2C_Support.c: 59: dow = I2C_Read(1);
  5227  000CF4  0E01               	movlw	1
  5228  000CF6  EC39  F007         	call	_I2C_Read
  5229  000CFA  6E20               	movwf	_dow,c
  5230                           
  5231                           ;I2C_Support.c: 60: day = I2C_Read(1);
  5232  000CFC  0E01               	movlw	1
  5233  000CFE  EC39  F007         	call	_I2C_Read
  5234  000D02  6E1F               	movwf	_day,c
  5235                           
  5236                           ;I2C_Support.c: 61: month = I2C_Read(1);
  5237  000D04  0E01               	movlw	1
  5238  000D06  EC39  F007         	call	_I2C_Read
  5239  000D0A  6E25               	movwf	_month,c
  5240                           
  5241                           ;I2C_Support.c: 62: year = I2C_Read(0);
  5242  000D0C  0E00               	movlw	0
  5243  000D0E  EC39  F007         	call	_I2C_Read
  5244  000D12  6E31               	movwf	_year,c
  5245                           
  5246                           ;I2C_Support.c: 64: I2C_Stop();
  5247  000D14  EC5B  F008         	call	_I2C_Stop	;wreg free
  5248  000D18  0012               	return		;funcret
  5249  000D1A                     __end_of_DS3231_Read_Time:
  5250                           	opt stack 0
  5251                           tblptru	equ	0xFF8
  5252                           tblptrh	equ	0xFF7
  5253                           tblptrl	equ	0xFF6
  5254                           tablat	equ	0xFF5
  5255                           prodh	equ	0xFF4
  5256                           prodl	equ	0xFF3
  5257                           intcon	equ	0xFF2
  5258                           intcon2	equ	0xFF1
  5259                           postinc0	equ	0xFEE
  5260                           wreg	equ	0xFE8
  5261                           postdec1	equ	0xFE5
  5262                           fsr1l	equ	0xFE1
  5263                           postinc2	equ	0xFDE
  5264                           postdec2	equ	0xFDD
  5265                           fsr2h	equ	0xFDA
  5266                           fsr2l	equ	0xFD9
  5267                           status	equ	0xFD8
  5268                           
  5269 ;; *************** function _DS1621_Read_Temp *****************
  5270 ;; Defined at:
  5271 ;;		line 29 in file "I2C_Support.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;		None
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  Device          1   23[COMRAM] unsigned char 
  5276 ;;  Data_Ret        1   22[COMRAM] unsigned char 
  5277 ;;  Cmd             1   21[COMRAM] unsigned char 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  2   19[COMRAM] int 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2, status,0, cstack
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5287 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;Total ram usage:        5 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:    6
  5294 ;; This function calls:
  5295 ;;		_I2C_ReStart
  5296 ;;		_I2C_Read
  5297 ;;		_I2C_Start
  5298 ;;		_I2C_Stop
  5299 ;;		_I2C_Write
  5300 ;; This function is called by:
  5301 ;;		_main
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text26
  5306  000F36                     __ptext26:
  5307                           	opt stack 0
  5308  000F36                     _DS1621_Read_Temp:
  5309                           	opt stack 24
  5310                           
  5311                           ;I2C_Support.c: 31: char Device = 0x48;
  5312                           
  5313                           ;incstack = 0
  5314  000F36  0E48               	movlw	72
  5315  000F38  6E49               	movwf	DS1621_Read_Temp@Device,c
  5316                           
  5317                           ;I2C_Support.c: 32: char Cmd = 0xAA;
  5318  000F3A  0EAA               	movlw	170
  5319  000F3C  6E47               	movwf	DS1621_Read_Temp@Cmd,c
  5320                           
  5321                           ;I2C_Support.c: 34: char Data_Ret;
  5322                           ;I2C_Support.c: 35: I2C_Start();
  5323  000F3E  EC64  F008         	call	_I2C_Start	;wreg free
  5324                           
  5325                           ;I2C_Support.c: 36: I2C_Write((Device << 1) | 0);
  5326  000F42  5049               	movf	DS1621_Read_Temp@Device,w,c
  5327  000F44  2449               	addwf	DS1621_Read_Temp@Device,w,c
  5328  000F46  EC7C  F007         	call	_I2C_Write
  5329                           
  5330                           ;I2C_Support.c: 37: I2C_Write(Cmd);
  5331  000F4A  5047               	movf	DS1621_Read_Temp@Cmd,w,c
  5332  000F4C  EC7C  F007         	call	_I2C_Write
  5333                           
  5334                           ;I2C_Support.c: 38: I2C_ReStart();
  5335  000F50  EC46  F008         	call	_I2C_ReStart	;wreg free
  5336                           
  5337                           ;I2C_Support.c: 39: I2C_Write((Device << 1) | 1);
  5338  000F54  80D8               	bsf	status,0,c
  5339  000F56  3449               	rlcf	DS1621_Read_Temp@Device,w,c
  5340  000F58  EC7C  F007         	call	_I2C_Write
  5341                           
  5342                           ;I2C_Support.c: 40: Data_Ret = I2C_Read(0);
  5343  000F5C  0E00               	movlw	0
  5344  000F5E  EC39  F007         	call	_I2C_Read
  5345  000F62  6E48               	movwf	DS1621_Read_Temp@Data_Ret,c
  5346                           
  5347                           ;I2C_Support.c: 41: I2C_Stop();
  5348  000F64  EC5B  F008         	call	_I2C_Stop	;wreg free
  5349                           
  5350                           ;I2C_Support.c: 42: return Data_Ret;
  5351  000F68  C048  F045         	movff	DS1621_Read_Temp@Data_Ret,?_DS1621_Read_Temp
  5352  000F6C  6A46               	clrf	?_DS1621_Read_Temp+1,c
  5353  000F6E  D000               	goto	l99
  5354  000F70                     l99:
  5355  000F70  0012               	return		;funcret
  5356  000F72                     __end_of_DS1621_Read_Temp:
  5357                           	opt stack 0
  5358                           tblptru	equ	0xFF8
  5359                           tblptrh	equ	0xFF7
  5360                           tblptrl	equ	0xFF6
  5361                           tablat	equ	0xFF5
  5362                           prodh	equ	0xFF4
  5363                           prodl	equ	0xFF3
  5364                           intcon	equ	0xFF2
  5365                           intcon2	equ	0xFF1
  5366                           postinc0	equ	0xFEE
  5367                           wreg	equ	0xFE8
  5368                           postdec1	equ	0xFE5
  5369                           fsr1l	equ	0xFE1
  5370                           postinc2	equ	0xFDE
  5371                           postdec2	equ	0xFDD
  5372                           fsr2h	equ	0xFDA
  5373                           fsr2l	equ	0xFD9
  5374                           status	equ	0xFD8
  5375                           
  5376 ;; *************** function _I2C_Write *****************
  5377 ;; Defined at:
  5378 ;;		line 41 in file "I2C.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;  outByte         1    wreg     unsigned char 
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;  outByte         1   16[COMRAM] unsigned char 
  5383 ;;  n               1   17[COMRAM] unsigned char 
  5384 ;; Return value:  Size  Location     Type
  5385 ;;		None               void
  5386 ;; Registers used:
  5387 ;;		wreg, status,2, status,0, cstack
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5394 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5397 ;;Total ram usage:        2 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; Hardware stack levels required when called:    4
  5400 ;; This function calls:
  5401 ;;		_i2cHighScl
  5402 ;;		_i2cHighSda
  5403 ;;		_i2cLowScl
  5404 ;;		_i2cLowSda
  5405 ;; This function is called by:
  5406 ;;		_DS1621_Read_Temp
  5407 ;;		_DS3231_Read_Time
  5408 ;;		_I2C_Write_Cmd_Only
  5409 ;;		_I2C_Write_Cmd_Write_Data
  5410 ;;		_DS3231_Setup_Time
  5411 ;;		_I2C_Write_Address_Read_One_Byte
  5412 ;;		_I2C_Write_Address_Write_One_Byte
  5413 ;;		_I2C_Write_Cmd_Read_One_Byte
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text27
  5418  000EF8                     __ptext27:
  5419                           	opt stack 0
  5420  000EF8                     _I2C_Write:
  5421                           	opt stack 23
  5422                           
  5423                           ;incstack = 0
  5424                           ;I2C_Write@outByte stored from wreg
  5425  000EF8  6E42               	movwf	I2C_Write@outByte,c
  5426                           
  5427                           ;I2C.c: 43: unsigned char n;
  5428                           ;I2C.c: 44: for(n=0; n<8; n++)
  5429  000EFA  0E00               	movlw	0
  5430  000EFC  6E43               	movwf	I2C_Write@n,c
  5431  000EFE                     l1503:
  5432  000EFE  0E07               	movlw	7
  5433  000F00  6443               	cpfsgt	I2C_Write@n,c
  5434  000F02  D001               	goto	l138
  5435  000F04  D011               	goto	l1521
  5436  000F06                     l138:
  5437                           
  5438                           ;I2C.c: 45: {
  5439                           ;I2C.c: 46: if(outByte&0x80) i2cHighSda();
  5440  000F06  AE42               	btfss	I2C_Write@outByte,7,c
  5441  000F08  D003               	goto	l1509
  5442  000F0A  ECAF  F008         	call	_i2cHighSda	;wreg free
  5443  000F0E  D003               	goto	l1511
  5444  000F10                     l1509:
  5445                           
  5446                           ;I2C.c: 47: else i2cLowSda();
  5447  000F10  ECA6  F008         	call	_i2cLowSda	;wreg free
  5448  000F14  D000               	goto	l1511
  5449  000F16                     l1511:
  5450                           
  5451                           ;I2C.c: 48: i2cHighScl();
  5452  000F16  EC85  F008         	call	_i2cHighScl	;wreg free
  5453                           
  5454                           ;I2C.c: 49: i2cLowScl();
  5455  000F1A  ECAB  F008         	call	_i2cLowScl	;wreg free
  5456                           
  5457                           ;I2C.c: 50: outByte = outByte << 1;
  5458  000F1E  5042               	movf	I2C_Write@outByte,w,c
  5459  000F20  2442               	addwf	I2C_Write@outByte,w,c
  5460  000F22  6E42               	movwf	I2C_Write@outByte,c
  5461  000F24  2A43               	incf	I2C_Write@n,f,c
  5462  000F26  D7EB               	goto	l1503
  5463  000F28                     l1521:
  5464                           
  5465                           ;I2C.c: 51: }
  5466                           ;I2C.c: 52: i2cHighSda();
  5467  000F28  ECAF  F008         	call	_i2cHighSda	;wreg free
  5468                           
  5469                           ;I2C.c: 53: i2cHighScl();
  5470  000F2C  EC85  F008         	call	_i2cHighScl	;wreg free
  5471                           
  5472                           ;I2C.c: 54: i2cLowScl();
  5473  000F30  ECAB  F008         	call	_i2cLowScl	;wreg free
  5474  000F34  0012               	return		;funcret
  5475  000F36                     __end_of_I2C_Write:
  5476                           	opt stack 0
  5477                           tblptru	equ	0xFF8
  5478                           tblptrh	equ	0xFF7
  5479                           tblptrl	equ	0xFF6
  5480                           tablat	equ	0xFF5
  5481                           prodh	equ	0xFF4
  5482                           prodl	equ	0xFF3
  5483                           intcon	equ	0xFF2
  5484                           intcon2	equ	0xFF1
  5485                           postinc0	equ	0xFEE
  5486                           wreg	equ	0xFE8
  5487                           postdec1	equ	0xFE5
  5488                           fsr1l	equ	0xFE1
  5489                           postinc2	equ	0xFDE
  5490                           postdec2	equ	0xFDD
  5491                           fsr2h	equ	0xFDA
  5492                           fsr2l	equ	0xFD9
  5493                           status	equ	0xFD8
  5494                           
  5495 ;; *************** function _I2C_Stop *****************
  5496 ;; Defined at:
  5497 ;;		line 88 in file "I2C.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;		None
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;		None
  5502 ;; Return value:  Size  Location     Type
  5503 ;;		None               void
  5504 ;; Registers used:
  5505 ;;		wreg, cstack
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5515 ;;Total ram usage:        0 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:    4
  5518 ;; This function calls:
  5519 ;;		_i2cHighScl
  5520 ;;		_i2cHighSda
  5521 ;;		_i2cLowScl
  5522 ;;		_i2cLowSda
  5523 ;; This function is called by:
  5524 ;;		_DS1621_Read_Temp
  5525 ;;		_DS3231_Read_Time
  5526 ;;		_I2C_Write_Cmd_Only
  5527 ;;		_I2C_Write_Cmd_Write_Data
  5528 ;;		_DS3231_Setup_Time
  5529 ;;		_I2C_Write_Address_Read_One_Byte
  5530 ;;		_I2C_Write_Address_Write_One_Byte
  5531 ;;		_I2C_Write_Cmd_Read_One_Byte
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text28
  5536  0010B6                     __ptext28:
  5537                           	opt stack 0
  5538  0010B6                     _I2C_Stop:
  5539                           	opt stack 23
  5540                           
  5541                           ;I2C.c: 90: i2cLowScl();
  5542                           
  5543                           ;incstack = 0
  5544  0010B6  ECAB  F008         	call	_i2cLowScl	;wreg free
  5545                           
  5546                           ;I2C.c: 91: i2cLowSda();
  5547  0010BA  ECA6  F008         	call	_i2cLowSda	;wreg free
  5548                           
  5549                           ;I2C.c: 92: i2cHighScl();
  5550  0010BE  EC85  F008         	call	_i2cHighScl	;wreg free
  5551                           
  5552                           ;I2C.c: 93: i2cHighSda();
  5553  0010C2  ECAF  F008         	call	_i2cHighSda	;wreg free
  5554  0010C6  0012               	return		;funcret
  5555  0010C8                     __end_of_I2C_Stop:
  5556                           	opt stack 0
  5557                           tblptru	equ	0xFF8
  5558                           tblptrh	equ	0xFF7
  5559                           tblptrl	equ	0xFF6
  5560                           tablat	equ	0xFF5
  5561                           prodh	equ	0xFF4
  5562                           prodl	equ	0xFF3
  5563                           intcon	equ	0xFF2
  5564                           intcon2	equ	0xFF1
  5565                           postinc0	equ	0xFEE
  5566                           wreg	equ	0xFE8
  5567                           postdec1	equ	0xFE5
  5568                           fsr1l	equ	0xFE1
  5569                           postinc2	equ	0xFDE
  5570                           postdec2	equ	0xFDD
  5571                           fsr2h	equ	0xFDA
  5572                           fsr2l	equ	0xFD9
  5573                           status	equ	0xFD8
  5574                           
  5575 ;; *************** function _I2C_Start *****************
  5576 ;; Defined at:
  5577 ;;		line 71 in file "I2C.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;		None
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;		None
  5582 ;; Return value:  Size  Location     Type
  5583 ;;		None               void
  5584 ;; Registers used:
  5585 ;;		wreg, cstack
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5595 ;;Total ram usage:        0 bytes
  5596 ;; Hardware stack levels used:    1
  5597 ;; Hardware stack levels required when called:    4
  5598 ;; This function calls:
  5599 ;;		_i2cHighScl
  5600 ;;		_i2cHighSda
  5601 ;;		_i2cLowScl
  5602 ;;		_i2cLowSda
  5603 ;; This function is called by:
  5604 ;;		_DS1621_Read_Temp
  5605 ;;		_DS3231_Read_Time
  5606 ;;		_I2C_Write_Cmd_Only
  5607 ;;		_I2C_Write_Cmd_Write_Data
  5608 ;;		_DS3231_Setup_Time
  5609 ;;		_I2C_Write_Address_Read_One_Byte
  5610 ;;		_I2C_Write_Address_Write_One_Byte
  5611 ;;		_I2C_Write_Cmd_Read_One_Byte
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text29
  5616  0010C8                     __ptext29:
  5617                           	opt stack 0
  5618  0010C8                     _I2C_Start:
  5619                           	opt stack 23
  5620                           
  5621                           ;I2C.c: 73: i2cHighSda();
  5622                           
  5623                           ;incstack = 0
  5624  0010C8  ECAF  F008         	call	_i2cHighSda	;wreg free
  5625                           
  5626                           ;I2C.c: 74: i2cHighScl();
  5627  0010CC  EC85  F008         	call	_i2cHighScl	;wreg free
  5628                           
  5629                           ;I2C.c: 75: i2cLowSda();
  5630  0010D0  ECA6  F008         	call	_i2cLowSda	;wreg free
  5631                           
  5632                           ;I2C.c: 76: i2cLowScl();
  5633  0010D4  ECAB  F008         	call	_i2cLowScl	;wreg free
  5634  0010D8  0012               	return		;funcret
  5635  0010DA                     __end_of_I2C_Start:
  5636                           	opt stack 0
  5637                           tblptru	equ	0xFF8
  5638                           tblptrh	equ	0xFF7
  5639                           tblptrl	equ	0xFF6
  5640                           tablat	equ	0xFF5
  5641                           prodh	equ	0xFF4
  5642                           prodl	equ	0xFF3
  5643                           intcon	equ	0xFF2
  5644                           intcon2	equ	0xFF1
  5645                           postinc0	equ	0xFEE
  5646                           wreg	equ	0xFE8
  5647                           postdec1	equ	0xFE5
  5648                           fsr1l	equ	0xFE1
  5649                           postinc2	equ	0xFDE
  5650                           postdec2	equ	0xFDD
  5651                           fsr2h	equ	0xFDA
  5652                           fsr2l	equ	0xFD9
  5653                           status	equ	0xFD8
  5654                           
  5655 ;; *************** function _I2C_Read *****************
  5656 ;; Defined at:
  5657 ;;		line 20 in file "I2C.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;  ack             1    wreg     unsigned char 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  ack             1   16[COMRAM] unsigned char 
  5662 ;;  inByte          1   18[COMRAM] unsigned char 
  5663 ;;  n               1   17[COMRAM] unsigned char 
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  1    wreg      unsigned char 
  5666 ;; Registers used:
  5667 ;;		wreg, status,2, status,0, cstack
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;Total ram usage:        3 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:    5
  5680 ;; This function calls:
  5681 ;;		_i2cAck
  5682 ;;		_i2cHighScl
  5683 ;;		_i2cHighSda
  5684 ;;		_i2cLowScl
  5685 ;;		_i2cNack
  5686 ;; This function is called by:
  5687 ;;		_DS1621_Read_Temp
  5688 ;;		_DS3231_Read_Time
  5689 ;;		_I2C_Write_Address_Read_One_Byte
  5690 ;;		_I2C_Write_Cmd_Read_One_Byte
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text30
  5695  000E72                     __ptext30:
  5696                           	opt stack 0
  5697  000E72                     _I2C_Read:
  5698                           	opt stack 24
  5699                           
  5700                           ;incstack = 0
  5701                           ;I2C_Read@ack stored from wreg
  5702  000E72  6E42               	movwf	I2C_Read@ack,c
  5703                           
  5704                           ;I2C.c: 22: unsigned char inByte, n;
  5705                           ;I2C.c: 23: i2cHighSda();
  5706  000E74  ECAF  F008         	call	_i2cHighSda	;wreg free
  5707                           
  5708                           ;I2C.c: 24: for (n=0; n<8; n++)
  5709  000E78  0E00               	movlw	0
  5710  000E7A  6E43               	movwf	I2C_Read@n,c
  5711  000E7C                     l1879:
  5712  000E7C  0E07               	movlw	7
  5713  000E7E  6443               	cpfsgt	I2C_Read@n,c
  5714  000E80  D001               	goto	l1883
  5715  000E82  D00F               	goto	l1897
  5716  000E84                     l1883:
  5717                           
  5718                           ;I2C.c: 25: {
  5719                           ;I2C.c: 26: i2cHighScl();
  5720  000E84  EC85  F008         	call	_i2cHighScl	;wreg free
  5721                           
  5722                           ;I2C.c: 28: if (PORTBbits.RB5)
  5723  000E88  AA81               	btfss	3969,5,c	;volatile
  5724  000E8A  D003               	goto	l1889
  5725                           
  5726                           ;I2C.c: 29: inByte = (inByte << 1) | 0x01;
  5727  000E8C  80D8               	bsf	status,0,c
  5728  000E8E  3644               	rlcf	I2C_Read@inByte,f,c
  5729  000E90  D004               	goto	l1891
  5730  000E92                     l1889:
  5731                           
  5732                           ;I2C.c: 30: else
  5733                           ;I2C.c: 31: inByte = inByte << 1;
  5734  000E92  5044               	movf	I2C_Read@inByte,w,c
  5735  000E94  2444               	addwf	I2C_Read@inByte,w,c
  5736  000E96  6E44               	movwf	I2C_Read@inByte,c
  5737  000E98  D000               	goto	l1891
  5738  000E9A                     l1891:
  5739                           
  5740                           ;I2C.c: 32: i2cLowScl();
  5741  000E9A  ECAB  F008         	call	_i2cLowScl	;wreg free
  5742  000E9E  2A43               	incf	I2C_Read@n,f,c
  5743  000EA0  D7ED               	goto	l1879
  5744  000EA2                     l1897:
  5745                           
  5746                           ;I2C.c: 33: }
  5747                           ;I2C.c: 34: if (ack) i2cAck();
  5748  000EA2  5042               	movf	I2C_Read@ack,w,c
  5749  000EA4  B4D8               	btfsc	status,2,c
  5750  000EA6  D003               	goto	l1901
  5751  000EA8  EC6D  F008         	call	_i2cAck	;wreg free
  5752  000EAC  D003               	goto	l1903
  5753  000EAE                     l1901:
  5754                           
  5755                           ;I2C.c: 35: else i2cNack();
  5756  000EAE  ECA1  F008         	call	_i2cNack	;wreg free
  5757  000EB2  D000               	goto	l1903
  5758  000EB4                     l1903:
  5759                           
  5760                           ;I2C.c: 38: return(inByte);
  5761  000EB4  5044               	movf	I2C_Read@inByte,w,c
  5762  000EB6  D000               	goto	l135
  5763  000EB8                     l135:
  5764  000EB8  0012               	return		;funcret
  5765  000EBA                     __end_of_I2C_Read:
  5766                           	opt stack 0
  5767                           tblptru	equ	0xFF8
  5768                           tblptrh	equ	0xFF7
  5769                           tblptrl	equ	0xFF6
  5770                           tablat	equ	0xFF5
  5771                           prodh	equ	0xFF4
  5772                           prodl	equ	0xFF3
  5773                           intcon	equ	0xFF2
  5774                           intcon2	equ	0xFF1
  5775                           postinc0	equ	0xFEE
  5776                           wreg	equ	0xFE8
  5777                           postdec1	equ	0xFE5
  5778                           fsr1l	equ	0xFE1
  5779                           postinc2	equ	0xFDE
  5780                           postdec2	equ	0xFDD
  5781                           fsr2h	equ	0xFDA
  5782                           fsr2l	equ	0xFD9
  5783                           status	equ	0xFD8
  5784                           
  5785 ;; *************** function _i2cNack *****************
  5786 ;; Defined at:
  5787 ;;		line 57 in file "I2C.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;		None
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;		None
  5792 ;; Return value:  Size  Location     Type
  5793 ;;		None               void
  5794 ;; Registers used:
  5795 ;;		wreg, cstack
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;Total ram usage:        0 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; Hardware stack levels required when called:    4
  5808 ;; This function calls:
  5809 ;;		_i2cHighScl
  5810 ;;		_i2cLowScl
  5811 ;; This function is called by:
  5812 ;;		_I2C_Read
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text31
  5817  001142                     __ptext31:
  5818                           	opt stack 0
  5819  001142                     _i2cNack:
  5820                           	opt stack 24
  5821                           
  5822                           ;I2C.c: 59: i2cHighScl();
  5823                           
  5824                           ;incstack = 0
  5825  001142  EC85  F008         	call	_i2cHighScl	;wreg free
  5826                           
  5827                           ;I2C.c: 60: i2cLowScl();
  5828  001146  ECAB  F008         	call	_i2cLowScl	;wreg free
  5829  00114A  0012               	return		;funcret
  5830  00114C                     __end_of_i2cNack:
  5831                           	opt stack 0
  5832                           tblptru	equ	0xFF8
  5833                           tblptrh	equ	0xFF7
  5834                           tblptrl	equ	0xFF6
  5835                           tablat	equ	0xFF5
  5836                           prodh	equ	0xFF4
  5837                           prodl	equ	0xFF3
  5838                           intcon	equ	0xFF2
  5839                           intcon2	equ	0xFF1
  5840                           postinc0	equ	0xFEE
  5841                           wreg	equ	0xFE8
  5842                           postdec1	equ	0xFE5
  5843                           fsr1l	equ	0xFE1
  5844                           postinc2	equ	0xFDE
  5845                           postdec2	equ	0xFDD
  5846                           fsr2h	equ	0xFDA
  5847                           fsr2l	equ	0xFD9
  5848                           status	equ	0xFD8
  5849                           
  5850 ;; *************** function _i2cAck *****************
  5851 ;; Defined at:
  5852 ;;		line 63 in file "I2C.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;		None
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;		None
  5857 ;; Return value:  Size  Location     Type
  5858 ;;		None               void
  5859 ;; Registers used:
  5860 ;;		wreg, cstack
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5870 ;;Total ram usage:        0 bytes
  5871 ;; Hardware stack levels used:    1
  5872 ;; Hardware stack levels required when called:    4
  5873 ;; This function calls:
  5874 ;;		_i2cHighScl
  5875 ;;		_i2cHighSda
  5876 ;;		_i2cLowScl
  5877 ;;		_i2cLowSda
  5878 ;; This function is called by:
  5879 ;;		_I2C_Read
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text32
  5884  0010DA                     __ptext32:
  5885                           	opt stack 0
  5886  0010DA                     _i2cAck:
  5887                           	opt stack 24
  5888                           
  5889                           ;I2C.c: 65: i2cLowSda();
  5890                           
  5891                           ;incstack = 0
  5892  0010DA  ECA6  F008         	call	_i2cLowSda	;wreg free
  5893                           
  5894                           ;I2C.c: 66: i2cHighScl();
  5895  0010DE  EC85  F008         	call	_i2cHighScl	;wreg free
  5896                           
  5897                           ;I2C.c: 67: i2cLowScl();
  5898  0010E2  ECAB  F008         	call	_i2cLowScl	;wreg free
  5899                           
  5900                           ;I2C.c: 68: i2cHighSda();
  5901  0010E6  ECAF  F008         	call	_i2cHighSda	;wreg free
  5902  0010EA  0012               	return		;funcret
  5903  0010EC                     __end_of_i2cAck:
  5904                           	opt stack 0
  5905                           tblptru	equ	0xFF8
  5906                           tblptrh	equ	0xFF7
  5907                           tblptrl	equ	0xFF6
  5908                           tablat	equ	0xFF5
  5909                           prodh	equ	0xFF4
  5910                           prodl	equ	0xFF3
  5911                           intcon	equ	0xFF2
  5912                           intcon2	equ	0xFF1
  5913                           postinc0	equ	0xFEE
  5914                           wreg	equ	0xFE8
  5915                           postdec1	equ	0xFE5
  5916                           fsr1l	equ	0xFE1
  5917                           postinc2	equ	0xFDE
  5918                           postdec2	equ	0xFDD
  5919                           fsr2h	equ	0xFDA
  5920                           fsr2l	equ	0xFD9
  5921                           status	equ	0xFD8
  5922                           
  5923 ;; *************** function _I2C_ReStart *****************
  5924 ;; Defined at:
  5925 ;;		line 79 in file "I2C.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;		None
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;		None
  5930 ;; Return value:  Size  Location     Type
  5931 ;;		None               void
  5932 ;; Registers used:
  5933 ;;		wreg, cstack
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5943 ;;Total ram usage:        0 bytes
  5944 ;; Hardware stack levels used:    1
  5945 ;; Hardware stack levels required when called:    4
  5946 ;; This function calls:
  5947 ;;		_i2cHighScl
  5948 ;;		_i2cHighSda
  5949 ;;		_i2cLowScl
  5950 ;;		_i2cLowSda
  5951 ;; This function is called by:
  5952 ;;		_DS1621_Read_Temp
  5953 ;;		_DS3231_Read_Time
  5954 ;;		_I2C_Write_Address_Read_One_Byte
  5955 ;;		_I2C_Write_Cmd_Read_One_Byte
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           	psect	text33
  5960  00108C                     __ptext33:
  5961                           	opt stack 0
  5962  00108C                     _I2C_ReStart:
  5963                           	opt stack 25
  5964                           
  5965                           ;I2C.c: 81: i2cLowScl();
  5966                           
  5967                           ;incstack = 0
  5968  00108C  ECAB  F008         	call	_i2cLowScl	;wreg free
  5969                           
  5970                           ;I2C.c: 82: i2cHighSda();
  5971  001090  ECAF  F008         	call	_i2cHighSda	;wreg free
  5972                           
  5973                           ;I2C.c: 83: i2cHighScl();
  5974  001094  EC85  F008         	call	_i2cHighScl	;wreg free
  5975                           
  5976                           ;I2C.c: 84: i2cLowSda();
  5977  001098  ECA6  F008         	call	_i2cLowSda	;wreg free
  5978                           
  5979                           ;I2C.c: 85: i2cLowScl();
  5980  00109C  ECAB  F008         	call	_i2cLowScl	;wreg free
  5981  0010A0  0012               	return		;funcret
  5982  0010A2                     __end_of_I2C_ReStart:
  5983                           	opt stack 0
  5984                           tblptru	equ	0xFF8
  5985                           tblptrh	equ	0xFF7
  5986                           tblptrl	equ	0xFF6
  5987                           tablat	equ	0xFF5
  5988                           prodh	equ	0xFF4
  5989                           prodl	equ	0xFF3
  5990                           intcon	equ	0xFF2
  5991                           intcon2	equ	0xFF1
  5992                           postinc0	equ	0xFEE
  5993                           wreg	equ	0xFE8
  5994                           postdec1	equ	0xFE5
  5995                           fsr1l	equ	0xFE1
  5996                           postinc2	equ	0xFDE
  5997                           postdec2	equ	0xFDD
  5998                           fsr2h	equ	0xFDA
  5999                           fsr2l	equ	0xFD9
  6000                           status	equ	0xFD8
  6001                           
  6002 ;; *************** function _i2cLowSda *****************
  6003 ;; Defined at:
  6004 ;;		line 102 in file "I2C.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;		None
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;		None
  6009 ;; Return value:  Size  Location     Type
  6010 ;;		None               void
  6011 ;; Registers used:
  6012 ;;		None
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6022 ;;Total ram usage:        0 bytes
  6023 ;; Hardware stack levels used:    1
  6024 ;; Hardware stack levels required when called:    3
  6025 ;; This function calls:
  6026 ;;		Nothing
  6027 ;; This function is called by:
  6028 ;;		_I2C_Write
  6029 ;;		_i2cAck
  6030 ;;		_I2C_Start
  6031 ;;		_I2C_ReStart
  6032 ;;		_I2C_Stop
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035                           
  6036                           	psect	text34
  6037  00114C                     __ptext34:
  6038                           	opt stack 0
  6039  00114C                     _i2cLowSda:
  6040                           	opt stack 23
  6041                           
  6042                           ;I2C.c: 104: PORTBbits.RB5 = 0;
  6043                           
  6044                           ;incstack = 0
  6045  00114C  9A81               	bcf	3969,5,c	;volatile
  6046                           
  6047                           ;I2C.c: 105: TRISBbits.RB5 = 0;
  6048  00114E  9A93               	bcf	3987,5,c	;volatile
  6049                           
  6050                           ;I2C.c: 106: _delay((unsigned long)((2)*(8000000/4000000.0)));
  6051  001150  D000               	nop2		;2 cycle nop
  6052  001152  D000               	nop2		;2 cycle nop
  6053  001154  0012               	return		;funcret
  6054  001156                     __end_of_i2cLowSda:
  6055                           	opt stack 0
  6056                           tblptru	equ	0xFF8
  6057                           tblptrh	equ	0xFF7
  6058                           tblptrl	equ	0xFF6
  6059                           tablat	equ	0xFF5
  6060                           prodh	equ	0xFF4
  6061                           prodl	equ	0xFF3
  6062                           intcon	equ	0xFF2
  6063                           intcon2	equ	0xFF1
  6064                           postinc0	equ	0xFEE
  6065                           wreg	equ	0xFE8
  6066                           postdec1	equ	0xFE5
  6067                           fsr1l	equ	0xFE1
  6068                           postinc2	equ	0xFDE
  6069                           postdec2	equ	0xFDD
  6070                           fsr2h	equ	0xFDA
  6071                           fsr2l	equ	0xFD9
  6072                           status	equ	0xFD8
  6073                           
  6074 ;; *************** function _i2cLowScl *****************
  6075 ;; Defined at:
  6076 ;;		line 115 in file "I2C.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;		None
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;		None
  6081 ;; Return value:  Size  Location     Type
  6082 ;;		None               void
  6083 ;; Registers used:
  6084 ;;		None
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6094 ;;Total ram usage:        0 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; Hardware stack levels required when called:    3
  6097 ;; This function calls:
  6098 ;;		Nothing
  6099 ;; This function is called by:
  6100 ;;		_I2C_Read
  6101 ;;		_I2C_Write
  6102 ;;		_i2cNack
  6103 ;;		_i2cAck
  6104 ;;		_I2C_Start
  6105 ;;		_I2C_ReStart
  6106 ;;		_I2C_Stop
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           	psect	text35
  6111  001156                     __ptext35:
  6112                           	opt stack 0
  6113  001156                     _i2cLowScl:
  6114                           	opt stack 23
  6115                           
  6116                           ;I2C.c: 117: PORTBbits.RB4 = 0;
  6117                           
  6118                           ;incstack = 0
  6119  001156  9881               	bcf	3969,4,c	;volatile
  6120                           
  6121                           ;I2C.c: 118: TRISBbits.RB4 = 0;
  6122  001158  9893               	bcf	3987,4,c	;volatile
  6123                           
  6124                           ;I2C.c: 119: _delay((unsigned long)((1)*(8000000/4000000.0)));
  6125  00115A  D000               	nop2		;2 cycle nop
  6126  00115C  0012               	return		;funcret
  6127  00115E                     __end_of_i2cLowScl:
  6128                           	opt stack 0
  6129                           tblptru	equ	0xFF8
  6130                           tblptrh	equ	0xFF7
  6131                           tblptrl	equ	0xFF6
  6132                           tablat	equ	0xFF5
  6133                           prodh	equ	0xFF4
  6134                           prodl	equ	0xFF3
  6135                           intcon	equ	0xFF2
  6136                           intcon2	equ	0xFF1
  6137                           postinc0	equ	0xFEE
  6138                           wreg	equ	0xFE8
  6139                           postdec1	equ	0xFE5
  6140                           fsr1l	equ	0xFE1
  6141                           postinc2	equ	0xFDE
  6142                           postdec2	equ	0xFDD
  6143                           fsr2h	equ	0xFDA
  6144                           fsr2l	equ	0xFD9
  6145                           status	equ	0xFD8
  6146                           
  6147 ;; *************** function _i2cHighSda *****************
  6148 ;; Defined at:
  6149 ;;		line 96 in file "I2C.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;		None
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;		None               void
  6156 ;; Registers used:
  6157 ;;		None
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6167 ;;Total ram usage:        0 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:    3
  6170 ;; This function calls:
  6171 ;;		Nothing
  6172 ;; This function is called by:
  6173 ;;		_I2C_Init
  6174 ;;		_I2C_Read
  6175 ;;		_I2C_Write
  6176 ;;		_i2cAck
  6177 ;;		_I2C_Start
  6178 ;;		_I2C_ReStart
  6179 ;;		_I2C_Stop
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text36
  6184  00115E                     __ptext36:
  6185                           	opt stack 0
  6186  00115E                     _i2cHighSda:
  6187                           	opt stack 25
  6188                           
  6189                           ;I2C.c: 98: TRISBbits.RB5 = 1;
  6190                           
  6191                           ;incstack = 0
  6192  00115E  8A93               	bsf	3987,5,c	;volatile
  6193                           
  6194                           ;I2C.c: 99: _delay((unsigned long)((2)*(8000000/4000000.0)));
  6195  001160  D000               	nop2		;2 cycle nop
  6196  001162  D000               	nop2		;2 cycle nop
  6197  001164  0012               	return		;funcret
  6198  001166                     __end_of_i2cHighSda:
  6199                           	opt stack 0
  6200                           tblptru	equ	0xFF8
  6201                           tblptrh	equ	0xFF7
  6202                           tblptrl	equ	0xFF6
  6203                           tablat	equ	0xFF5
  6204                           prodh	equ	0xFF4
  6205                           prodl	equ	0xFF3
  6206                           intcon	equ	0xFF2
  6207                           intcon2	equ	0xFF1
  6208                           postinc0	equ	0xFEE
  6209                           wreg	equ	0xFE8
  6210                           postdec1	equ	0xFE5
  6211                           fsr1l	equ	0xFE1
  6212                           postinc2	equ	0xFDE
  6213                           postdec2	equ	0xFDD
  6214                           fsr2h	equ	0xFDA
  6215                           fsr2l	equ	0xFD9
  6216                           status	equ	0xFD8
  6217                           
  6218 ;; *************** function _i2cHighScl *****************
  6219 ;; Defined at:
  6220 ;;		line 109 in file "I2C.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;		None
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;		None
  6225 ;; Return value:  Size  Location     Type
  6226 ;;		None               void
  6227 ;; Registers used:
  6228 ;;		wreg
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;Total ram usage:        0 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    3
  6241 ;; This function calls:
  6242 ;;		Nothing
  6243 ;; This function is called by:
  6244 ;;		_I2C_Init
  6245 ;;		_I2C_Read
  6246 ;;		_I2C_Write
  6247 ;;		_i2cNack
  6248 ;;		_i2cAck
  6249 ;;		_I2C_Start
  6250 ;;		_I2C_ReStart
  6251 ;;		_I2C_Stop
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text37
  6256  00110A                     __ptext37:
  6257                           	opt stack 0
  6258  00110A                     _i2cHighScl:
  6259                           	opt stack 25
  6260                           
  6261                           ;I2C.c: 111: TRISBbits.RB4 = 1;
  6262                           
  6263                           ;incstack = 0
  6264  00110A  8893               	bsf	3987,4,c	;volatile
  6265                           
  6266                           ;I2C.c: 112: _delay((unsigned long)((10)*(8000000/4000000.0)));
  6267  00110C  0E06               	movlw	6
  6268  00110E                     u4247:
  6269  00110E  2EE8               	decfsz	wreg,f,c
  6270  001110  D7FE               	goto	u4247
  6271  001112  D000               	nop2		;nop
  6272  001114  0012               	return		;funcret
  6273  001116                     __end_of_i2cHighScl:
  6274                           	opt stack 0
  6275                           tblptru	equ	0xFF8
  6276                           tblptrh	equ	0xFF7
  6277                           tblptrl	equ	0xFF6
  6278                           tablat	equ	0xFF5
  6279                           prodh	equ	0xFF4
  6280                           prodl	equ	0xFF3
  6281                           intcon	equ	0xFF2
  6282                           intcon2	equ	0xFF1
  6283                           postinc0	equ	0xFEE
  6284                           wreg	equ	0xFE8
  6285                           postdec1	equ	0xFE5
  6286                           fsr1l	equ	0xFE1
  6287                           postinc2	equ	0xFDE
  6288                           postdec2	equ	0xFDD
  6289                           fsr2h	equ	0xFDA
  6290                           fsr2l	equ	0xFD9
  6291                           status	equ	0xFD8
  6292                           
  6293 ;; *************** function _chkisr *****************
  6294 ;; Defined at:
  6295 ;;		line 29 in file "Interrupt.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;		None
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;		None               void
  6302 ;; Registers used:
  6303 ;;		wreg, status,2, status,0, cstack
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6311 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6312 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6313 ;;Total ram usage:       14 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    2
  6316 ;; This function calls:
  6317 ;;		_INT0_isr
  6318 ;;		_TIMER1_isr
  6319 ;; This function is called by:
  6320 ;;		Interrupt level 2
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324                           	psect	intcode
  6325  000008                     __pintcode:
  6326                           	opt stack 0
  6327  000008                     _chkisr:
  6328                           	opt stack 23
  6329                           
  6330                           ;incstack = 0
  6331  000008  CFFA F034          	movff	pclath,??_chkisr
  6332  00000C  CFFB F035          	movff	pclatu,??_chkisr+1
  6333  000010  CFE9 F036          	movff	fsr0l,??_chkisr+2
  6334  000014  EDE5  F005         	call	int_func,f	;refresh shadow registers
  6335                           pclatu	equ	0xFFB
  6336                           pclath	equ	0xFFA
  6337                           tblptru	equ	0xFF8
  6338                           tblptrh	equ	0xFF7
  6339                           tblptrl	equ	0xFF6
  6340                           tablat	equ	0xFF5
  6341                           prodh	equ	0xFF4
  6342                           prodl	equ	0xFF3
  6343                           intcon	equ	0xFF2
  6344                           intcon2	equ	0xFF1
  6345                           postinc0	equ	0xFEE
  6346                           fsr0l	equ	0xFE9
  6347                           wreg	equ	0xFE8
  6348                           postdec1	equ	0xFE5
  6349                           fsr1l	equ	0xFE1
  6350                           postinc2	equ	0xFDE
  6351                           postdec2	equ	0xFDD
  6352                           fsr2h	equ	0xFDA
  6353                           fsr2l	equ	0xFD9
  6354                           status	equ	0xFD8
  6355                           
  6356                           	psect	intcode_body
  6357  000BCA                     __pintcode_body:
  6358                           	opt stack 23
  6359  000BCA                     int_func:
  6360                           	opt stack 23
  6361  000BCA  0006               	pop		; remove dummy address from shadow register refresh
  6362  000BCC  CFEA F037          	movff	fsr0h,??_chkisr+3
  6363  000BD0  CFE1 F038          	movff	fsr1l,??_chkisr+4
  6364  000BD4  CFE2 F039          	movff	fsr1h,??_chkisr+5
  6365  000BD8  CFD9 F03A          	movff	fsr2l,??_chkisr+6
  6366  000BDC  CFDA F03B          	movff	fsr2h,??_chkisr+7
  6367  000BE0  CFF3 F03C          	movff	prodl,??_chkisr+8
  6368  000BE4  CFF4 F03D          	movff	prodh,??_chkisr+9
  6369  000BE8  CFF6 F03E          	movff	tblptrl,??_chkisr+10
  6370  000BEC  CFF7 F03F          	movff	tblptrh,??_chkisr+11
  6371  000BF0  CFF8 F040          	movff	tblptru,??_chkisr+12
  6372  000BF4  CFF5 F041          	movff	tablat,??_chkisr+13
  6373                           
  6374                           ;Interrupt.c: 31: if (PIR1bits.TMR1IF == 1) TIMER1_isr();
  6375  000BF8  A09E               	btfss	3998,0,c	;volatile
  6376  000BFA  D003               	goto	i2l2709
  6377  000BFC  EC8B  F008         	call	_TIMER1_isr	;wreg free
  6378  000C00  D000               	goto	i2l2709
  6379  000C02                     i2l2709:
  6380                           
  6381                           ;Interrupt.c: 32: if (INTCONbits.INT0IF == 1) INT0_isr();
  6382  000C02  A2F2               	btfss	intcon,1,c	;volatile
  6383  000C04  D003               	goto	i2l38
  6384  000C06  ECFB  F001         	call	_INT0_isr	;wreg free
  6385  000C0A  D000               	goto	i2l38
  6386  000C0C                     i2l38:
  6387  000C0C  C041  FFF5         	movff	??_chkisr+13,tablat
  6388  000C10  C040  FFF8         	movff	??_chkisr+12,tblptru
  6389  000C14  C03F  FFF7         	movff	??_chkisr+11,tblptrh
  6390  000C18  C03E  FFF6         	movff	??_chkisr+10,tblptrl
  6391  000C1C  C03D  FFF4         	movff	??_chkisr+9,prodh
  6392  000C20  C03C  FFF3         	movff	??_chkisr+8,prodl
  6393  000C24  C03B  FFDA         	movff	??_chkisr+7,fsr2h
  6394  000C28  C03A  FFD9         	movff	??_chkisr+6,fsr2l
  6395  000C2C  C039  FFE2         	movff	??_chkisr+5,fsr1h
  6396  000C30  C038  FFE1         	movff	??_chkisr+4,fsr1l
  6397  000C34  C037  FFEA         	movff	??_chkisr+3,fsr0h
  6398  000C38  C036  FFE9         	movff	??_chkisr+2,fsr0l
  6399  000C3C  C035  FFFB         	movff	??_chkisr+1,pclatu
  6400  000C40  C034  FFFA         	movff	??_chkisr,pclath
  6401  000C44  0011               	retfie		f
  6402  000C46                     __end_of_chkisr:
  6403                           	opt stack 0
  6404                           pclatu	equ	0xFFB
  6405                           pclath	equ	0xFFA
  6406                           tblptru	equ	0xFF8
  6407                           tblptrh	equ	0xFF7
  6408                           tblptrl	equ	0xFF6
  6409                           tablat	equ	0xFF5
  6410                           prodh	equ	0xFF4
  6411                           prodl	equ	0xFF3
  6412                           intcon	equ	0xFF2
  6413                           intcon2	equ	0xFF1
  6414                           postinc0	equ	0xFEE
  6415                           fsr0h	equ	0xFEA
  6416                           fsr0l	equ	0xFE9
  6417                           wreg	equ	0xFE8
  6418                           postdec1	equ	0xFE5
  6419                           fsr1h	equ	0xFE2
  6420                           fsr1l	equ	0xFE1
  6421                           postinc2	equ	0xFDE
  6422                           postdec2	equ	0xFDD
  6423                           fsr2h	equ	0xFDA
  6424                           fsr2l	equ	0xFD9
  6425                           status	equ	0xFD8
  6426                           
  6427 ;; *************** function _TIMER1_isr *****************
  6428 ;; Defined at:
  6429 ;;		line 35 in file "Interrupt.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;		None
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;		None
  6434 ;; Return value:  Size  Location     Type
  6435 ;;		None               void
  6436 ;; Registers used:
  6437 ;;		wreg, status,2
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6447 ;;Total ram usage:        0 bytes
  6448 ;; Hardware stack levels used:    1
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		_chkisr
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text39
  6457  001116                     __ptext39:
  6458                           	opt stack 0
  6459  001116                     _TIMER1_isr:
  6460                           	opt stack 24
  6461                           
  6462                           ;Interrupt.c: 37: Nec_state = 0;
  6463                           
  6464                           ;incstack = 0
  6465  001116  0E00               	movlw	0
  6466  001118  6E17               	movwf	_Nec_state,c
  6467                           
  6468                           ;Interrupt.c: 38: INTCON2bits.INTEDG0 = 0;
  6469  00111A  9CF1               	bcf	intcon2,6,c	;volatile
  6470                           
  6471                           ;Interrupt.c: 39: T1CONbits.TMR1ON = 0;
  6472  00111C  90CD               	bcf	4045,0,c	;volatile
  6473                           
  6474                           ;Interrupt.c: 40: PIR1bits.TMR1IF = 0;
  6475  00111E  909E               	bcf	3998,0,c	;volatile
  6476  001120  0012               	return		;funcret
  6477  001122                     __end_of_TIMER1_isr:
  6478                           	opt stack 0
  6479                           pclatu	equ	0xFFB
  6480                           pclath	equ	0xFFA
  6481                           tblptru	equ	0xFF8
  6482                           tblptrh	equ	0xFF7
  6483                           tblptrl	equ	0xFF6
  6484                           tablat	equ	0xFF5
  6485                           prodh	equ	0xFF4
  6486                           prodl	equ	0xFF3
  6487                           intcon	equ	0xFF2
  6488                           intcon2	equ	0xFF1
  6489                           postinc0	equ	0xFEE
  6490                           fsr0h	equ	0xFEA
  6491                           fsr0l	equ	0xFE9
  6492                           wreg	equ	0xFE8
  6493                           postdec1	equ	0xFE5
  6494                           fsr1h	equ	0xFE2
  6495                           fsr1l	equ	0xFE1
  6496                           postinc2	equ	0xFDE
  6497                           postdec2	equ	0xFDD
  6498                           fsr2h	equ	0xFDA
  6499                           fsr2l	equ	0xFD9
  6500                           status	equ	0xFD8
  6501                           
  6502 ;; *************** function _INT0_isr *****************
  6503 ;; Defined at:
  6504 ;;		line 49 in file "Interrupt.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;		None
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;		None
  6509 ;; Return value:  Size  Location     Type
  6510 ;;		None               void
  6511 ;; Registers used:
  6512 ;;		wreg, status,2, status,0, cstack
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;Total ram usage:        2 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; Hardware stack levels required when called:    1
  6525 ;; This function calls:
  6526 ;;		_force_nec_state0
  6527 ;; This function is called by:
  6528 ;;		_chkisr
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           	psect	text40
  6533  0003F6                     __ptext40:
  6534                           	opt stack 0
  6535  0003F6                     _INT0_isr:
  6536                           	opt stack 23
  6537                           
  6538                           ;Interrupt.c: 52: INTCONbits.INT0IF = 0;
  6539                           
  6540                           ;incstack = 0
  6541  0003F6  92F2               	bcf	intcon,1,c	;volatile
  6542                           
  6543                           ;Interrupt.c: 53: if (Nec_state != 0)
  6544  0003F8  5017               	movf	_Nec_state,w,c
  6545  0003FA  B4D8               	btfsc	status,2,c
  6546  0003FC  D09A               	goto	i2l2309
  6547                           
  6548                           ;Interrupt.c: 54: {
  6549                           ;Interrupt.c: 55: Time_Elapsed = (TMR1H << 8) | TMR1L;
  6550  0003FE  50CE               	movf	4046,w,c	;volatile
  6551  000400  CFCF F032          	movff	4047,??_INT0_isr	;volatile
  6552  000404  6A33               	clrf	(??_INT0_isr+1)& (0+255),c
  6553  000406  C032  F033         	movff	??_INT0_isr,??_INT0_isr+1
  6554  00040A  6A32               	clrf	??_INT0_isr,c
  6555  00040C  1032               	iorwf	??_INT0_isr,w,c
  6556  00040E  6E0B               	movwf	_Time_Elapsed,c
  6557  000410  5033               	movf	??_INT0_isr+1,w,c
  6558  000412  6E0C               	movwf	_Time_Elapsed+1,c
  6559                           
  6560                           ;Interrupt.c: 56: TMR1H = 0;
  6561  000414  0E00               	movlw	0
  6562  000416  6ECF               	movwf	4047,c	;volatile
  6563                           
  6564                           ;Interrupt.c: 57: TMR1L = 0;
  6565  000418  0E00               	movlw	0
  6566  00041A  6ECE               	movwf	4046,c	;volatile
  6567                           
  6568                           ;Interrupt.c: 58: }
  6569                           ;Interrupt.c: 60: switch(Nec_state)
  6570  00041C  D08A               	goto	i2l2309
  6571  00041E                     i2l2243:
  6572                           
  6573                           ;Interrupt.c: 63: {
  6574                           ;Interrupt.c: 64: TMR1H = 0;
  6575  00041E  0E00               	movlw	0
  6576  000420  6ECF               	movwf	4047,c	;volatile
  6577                           
  6578                           ;Interrupt.c: 65: TMR1L = 0;
  6579  000422  0E00               	movlw	0
  6580  000424  6ECE               	movwf	4046,c	;volatile
  6581                           
  6582                           ;Interrupt.c: 66: PIR1bits.TMR1IF = 0;
  6583  000426  909E               	bcf	3998,0,c	;volatile
  6584                           
  6585                           ;Interrupt.c: 67: T1CON= 0x90;
  6586  000428  0E90               	movlw	144
  6587  00042A  6ECD               	movwf	4045,c	;volatile
  6588                           
  6589                           ;Interrupt.c: 68: T1CONbits.TMR1ON = 1;
  6590  00042C  80CD               	bsf	4045,0,c	;volatile
  6591                           
  6592                           ;Interrupt.c: 69: bit_count = 0;
  6593  00042E  0E00               	movlw	0
  6594  000430  6E1D               	movwf	_bit_count,c
  6595                           
  6596                           ;Interrupt.c: 70: Nec_code = 0;
  6597  000432  0E00               	movlw	0
  6598  000434  6E01               	movwf	_Nec_code,c
  6599  000436  0E00               	movlw	0
  6600  000438  6E02               	movwf	_Nec_code+1,c
  6601  00043A  0E00               	movlw	0
  6602  00043C  6E03               	movwf	_Nec_code+2,c
  6603  00043E  0E00               	movlw	0
  6604  000440  6E04               	movwf	_Nec_code+3,c
  6605                           
  6606                           ;Interrupt.c: 71: Nec_state = 1;
  6607  000442  0E01               	movlw	1
  6608  000444  6E17               	movwf	_Nec_state,c
  6609  000446  D073               	goto	i2l2303
  6610                           
  6611                           ;Interrupt.c: 73: return;
  6612                           
  6613                           ;Interrupt.c: 72: INTCON2bits.INTEDG0 = 1;
  6614  000448  D085               	goto	i2l50
  6615  00044A                     i2l2253:
  6616                           
  6617                           ;Interrupt.c: 77: {
  6618                           ;Interrupt.c: 78: if (Time_Elapsed > 8500 && Time_Elapsed < 9500)
  6619  00044A  0E35               	movlw	53
  6620  00044C  5C0B               	subwf	_Time_Elapsed,w,c
  6621  00044E  0E21               	movlw	33
  6622  000450  580C               	subwfb	_Time_Elapsed+1,w,c
  6623  000452  A0D8               	btfss	status,0,c
  6624  000454  D009               	goto	i2l2259
  6625  000456  0E1C               	movlw	28
  6626  000458  5C0B               	subwf	_Time_Elapsed,w,c
  6627  00045A  0E25               	movlw	37
  6628  00045C  580C               	subwfb	_Time_Elapsed+1,w,c
  6629  00045E  B0D8               	btfsc	status,0,c
  6630  000460  D003               	goto	i2l2259
  6631                           
  6632                           ;Interrupt.c: 79: {
  6633                           ;Interrupt.c: 80: Nec_state = 2;
  6634  000462  0E02               	movlw	2
  6635  000464  6E17               	movwf	_Nec_state,c
  6636                           
  6637                           ;Interrupt.c: 81: }
  6638  000466  D02A               	goto	i2l2285
  6639  000468                     i2l2259:
  6640                           
  6641                           ;Interrupt.c: 82: else
  6642                           ;Interrupt.c: 83: {
  6643                           ;Interrupt.c: 84: force_nec_state0();
  6644  000468  ECB3  F008         	call	_force_nec_state0	;wreg free
  6645  00046C  D027               	goto	i2l2285
  6646  00046E  D026               	goto	i2l2285
  6647                           
  6648                           ;Interrupt.c: 87: return;
  6649                           
  6650                           ;Interrupt.c: 85: }
  6651                           ;Interrupt.c: 86: INTCON2bits.INTEDG0 = 0;
  6652  000470  D071               	goto	i2l50
  6653  000472                     i2l2265:
  6654                           
  6655                           ;Interrupt.c: 91: {
  6656                           ;Interrupt.c: 92: if (Time_Elapsed > 4000 && Time_Elapsed < 5000 )
  6657  000472  0EA1               	movlw	161
  6658  000474  5C0B               	subwf	_Time_Elapsed,w,c
  6659  000476  0E0F               	movlw	15
  6660  000478  580C               	subwfb	_Time_Elapsed+1,w,c
  6661  00047A  A0D8               	btfss	status,0,c
  6662  00047C  D009               	goto	i2l2271
  6663  00047E  0E88               	movlw	136
  6664  000480  5C0B               	subwf	_Time_Elapsed,w,c
  6665  000482  0E13               	movlw	19
  6666  000484  580C               	subwfb	_Time_Elapsed+1,w,c
  6667  000486  B0D8               	btfsc	status,0,c
  6668  000488  D003               	goto	i2l2271
  6669  00048A                     
  6670                           ;Interrupt.c: 93: {
  6671                           ;Interrupt.c: 94: Nec_state = 3;
  6672  00048A  0E03               	movlw	3
  6673  00048C  6E17               	movwf	_Nec_state,c
  6674                           
  6675                           ;Interrupt.c: 95: }
  6676  00048E  D04F               	goto	i2l2303
  6677  000490                     i2l2271:
  6678                           
  6679                           ;Interrupt.c: 96: else
  6680                           ;Interrupt.c: 97: {
  6681                           ;Interrupt.c: 98: force_nec_state0();
  6682  000490  ECB3  F008         	call	_force_nec_state0	;wreg free
  6683  000494  D04C               	goto	i2l2303
  6684  000496  D04B               	goto	i2l2303
  6685                           
  6686                           ;Interrupt.c: 101: return;
  6687                           
  6688                           ;Interrupt.c: 99: }
  6689                           ;Interrupt.c: 100: INTCON2bits.INTEDG0 = 1;
  6690  000498  D05D               	goto	i2l50
  6691  00049A                     i2l2277:
  6692                           
  6693                           ;Interrupt.c: 105: {
  6694                           ;Interrupt.c: 106: if (Time_Elapsed > 400 && Time_Elapsed < 700)
  6695  00049A  0E91               	movlw	145
  6696  00049C  5C0B               	subwf	_Time_Elapsed,w,c
  6697  00049E  0E01               	movlw	1
  6698  0004A0  580C               	subwfb	_Time_Elapsed+1,w,c
  6699  0004A2  A0D8               	btfss	status,0,c
  6700  0004A4  D008               	goto	i2l2283
  6701  0004A6  0EBC               	movlw	188
  6702  0004A8  5C0B               	subwf	_Time_Elapsed,w,c
  6703  0004AA  0E02               	movlw	2
  6704  0004AC  580C               	subwfb	_Time_Elapsed+1,w,c
  6705  0004AE  B0D8               	btfsc	status,0,c
  6706  0004B0  D002               	goto	i2l2283
  6707                           
  6708                           ;Interrupt.c: 107: {
  6709                           ;Interrupt.c: 108: Nec_state = 4;
  6710  0004B2  0E04               	movlw	4
  6711  0004B4  D7D7               	goto	L1
  6712  0004B6                     i2l2283:
  6713                           
  6714                           ;Interrupt.c: 110: else
  6715                           ;Interrupt.c: 111: {
  6716                           ;Interrupt.c: 112: force_nec_state0();
  6717  0004B6  ECB3  F008         	call	_force_nec_state0	;wreg free
  6718  0004BA  D000               	goto	i2l2285
  6719  0004BC                     i2l2285:
  6720                           
  6721                           ;Interrupt.c: 113: }
  6722                           ;Interrupt.c: 114: INTCON2bits.INTEDG0 = 0;
  6723  0004BC  9CF1               	bcf	intcon2,6,c	;volatile
  6724                           
  6725                           ;Interrupt.c: 115: return;
  6726  0004BE  D04A               	goto	i2l50
  6727  0004C0                     i2l2289:
  6728                           
  6729                           ;Interrupt.c: 119: {
  6730                           ;Interrupt.c: 120: if (Time_Elapsed > 400 && Time_Elapsed < 1800)
  6731  0004C0  0E91               	movlw	145
  6732  0004C2  5C0B               	subwf	_Time_Elapsed,w,c
  6733  0004C4  0E01               	movlw	1
  6734  0004C6  580C               	subwfb	_Time_Elapsed+1,w,c
  6735  0004C8  A0D8               	btfss	status,0,c
  6736  0004CA  D02E               	goto	i2l2301
  6737  0004CC  0E08               	movlw	8
  6738  0004CE  5C0B               	subwf	_Time_Elapsed,w,c
  6739  0004D0  0E07               	movlw	7
  6740  0004D2  580C               	subwfb	_Time_Elapsed+1,w,c
  6741  0004D4  B0D8               	btfsc	status,0,c
  6742  0004D6  D028               	goto	i2l2301
  6743                           
  6744                           ;Interrupt.c: 121: {
  6745                           ;Interrupt.c: 122: Nec_code = Nec_code << 1;
  6746  0004D8  90D8               	bcf	status,0,c
  6747  0004DA  3401               	rlcf	_Nec_code,w,c
  6748  0004DC  6E01               	movwf	_Nec_code,c
  6749  0004DE  3402               	rlcf	_Nec_code+1,w,c
  6750  0004E0  6E02               	movwf	_Nec_code+1,c
  6751  0004E2  3403               	rlcf	_Nec_code+2,w,c
  6752  0004E4  6E03               	movwf	_Nec_code+2,c
  6753  0004E6  3404               	rlcf	_Nec_code+3,w,c
  6754  0004E8  6E04               	movwf	_Nec_code+3,c
  6755                           
  6756                           ;Interrupt.c: 123: if (Time_Elapsed > 1000)
  6757  0004EA  0EE9               	movlw	233
  6758  0004EC  5C0B               	subwf	_Time_Elapsed,w,c
  6759  0004EE  0E03               	movlw	3
  6760  0004F0  580C               	subwfb	_Time_Elapsed+1,w,c
  6761  0004F2  A0D8               	btfss	status,0,c
  6762  0004F4  D00C               	goto	i2l62
  6763                           
  6764                           ;Interrupt.c: 124: {
  6765                           ;Interrupt.c: 125: Nec_code = Nec_code + 1;
  6766  0004F6  0E01               	movlw	1
  6767  0004F8  2401               	addwf	_Nec_code,w,c
  6768  0004FA  6E01               	movwf	_Nec_code,c
  6769  0004FC  0E00               	movlw	0
  6770  0004FE  2002               	addwfc	_Nec_code+1,w,c
  6771  000500  6E02               	movwf	_Nec_code+1,c
  6772  000502  0E00               	movlw	0
  6773  000504  2003               	addwfc	_Nec_code+2,w,c
  6774  000506  6E03               	movwf	_Nec_code+2,c
  6775  000508  0E00               	movlw	0
  6776  00050A  2004               	addwfc	_Nec_code+3,w,c
  6777  00050C  6E04               	movwf	_Nec_code+3,c
  6778  00050E                     i2l62:
  6779                           
  6780                           ;Interrupt.c: 126: }
  6781                           ;Interrupt.c: 127: bit_count = bit_count + 1;
  6782  00050E  281D               	incf	_bit_count,w,c
  6783  000510  6E1D               	movwf	_bit_count,c
  6784                           
  6785                           ;Interrupt.c: 128: if (bit_count > 31)
  6786  000512  0E1F               	movlw	31
  6787  000514  641D               	cpfsgt	_bit_count,c
  6788  000516  D7B9               	goto	L2
  6789                           
  6790                           ;Interrupt.c: 129: {
  6791                           ;Interrupt.c: 130: nec_ok = 1;
  6792  000518  0E00               	movlw	0
  6793  00051A  6E0E               	movwf	_nec_ok+1,c
  6794  00051C  0E01               	movlw	1
  6795  00051E  6E0D               	movwf	_nec_ok,c
  6796                           
  6797                           ;Interrupt.c: 131: INTCONbits.INT0IE = 0;
  6798  000520  98F2               	bcf	intcon,4,c	;volatile
  6799                           
  6800                           ;Interrupt.c: 132: Nec_state = 0;
  6801  000522  0E00               	movlw	0
  6802  000524  6E17               	movwf	_Nec_state,c
  6803  000526  D7B1               	goto	L2
  6804  000528                     i2l2301:
  6805                           
  6806                           ;Interrupt.c: 136: else
  6807                           ;Interrupt.c: 137: {
  6808                           ;Interrupt.c: 138: force_nec_state0();
  6809  000528  ECB3  F008         	call	_force_nec_state0	;wreg free
  6810  00052C  D000               	goto	i2l2303
  6811  00052E                     i2l2303:
  6812                           
  6813                           ;Interrupt.c: 139: }
  6814                           ;Interrupt.c: 140: INTCON2bits.INTEDG0 = 1;
  6815  00052E  8CF1               	bsf	intcon2,6,c	;volatile
  6816                           
  6817                           ;Interrupt.c: 142: }
  6818                           ;Interrupt.c: 143: }
  6819                           
  6820                           ;Interrupt.c: 141: return;
  6821  000530  D011               	goto	i2l50
  6822  000532                     i2l2309:
  6823  000532  5017               	movf	_Nec_state,w,c
  6824                           
  6825                           ; Switch size 1, requested type "space"
  6826                           ; Number of cases is 5, Range of values is 0 to 4
  6827                           ; switch strategies available:
  6828                           ; Name         Instructions Cycles
  6829                           ; simple_byte           16     9 (average)
  6830                           ;	Chosen strategy is simple_byte
  6831  000534  0A00               	xorlw	0	; case 0
  6832  000536  B4D8               	btfsc	status,2,c
  6833  000538  D772               	goto	i2l2243
  6834  00053A  0A01               	xorlw	1	; case 1
  6835  00053C  B4D8               	btfsc	status,2,c
  6836  00053E  D785               	goto	i2l2253
  6837  000540  0A03               	xorlw	3	; case 2
  6838  000542  B4D8               	btfsc	status,2,c
  6839  000544  D796               	goto	i2l2265
  6840  000546  0A01               	xorlw	1	; case 3
  6841  000548  B4D8               	btfsc	status,2,c
  6842  00054A  D7A7               	goto	i2l2277
  6843  00054C  0A07               	xorlw	7	; case 4
  6844  00054E  B4D8               	btfsc	status,2,c
  6845  000550  D7B7               	goto	i2l2289
  6846  000552  D000               	goto	i2l50
  6847  000554                     i2l50:
  6848  000554  0012               	return		;funcret
  6849  000556                     __end_of_INT0_isr:
  6850                           	opt stack 0
  6851                           pclatu	equ	0xFFB
  6852                           pclath	equ	0xFFA
  6853                           tblptru	equ	0xFF8
  6854                           tblptrh	equ	0xFF7
  6855                           tblptrl	equ	0xFF6
  6856                           tablat	equ	0xFF5
  6857                           prodh	equ	0xFF4
  6858                           prodl	equ	0xFF3
  6859                           intcon	equ	0xFF2
  6860                           intcon2	equ	0xFF1
  6861                           postinc0	equ	0xFEE
  6862                           fsr0h	equ	0xFEA
  6863                           fsr0l	equ	0xFE9
  6864                           wreg	equ	0xFE8
  6865                           postdec1	equ	0xFE5
  6866                           fsr1h	equ	0xFE2
  6867                           fsr1l	equ	0xFE1
  6868                           postinc2	equ	0xFDE
  6869                           postdec2	equ	0xFDD
  6870                           fsr2h	equ	0xFDA
  6871                           fsr2l	equ	0xFD9
  6872                           status	equ	0xFD8
  6873                           
  6874 ;; *************** function _force_nec_state0 *****************
  6875 ;; Defined at:
  6876 ;;		line 43 in file "Interrupt.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;		None
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;		None
  6881 ;; Return value:  Size  Location     Type
  6882 ;;		None               void
  6883 ;; Registers used:
  6884 ;;		wreg, status,2
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6894 ;;Total ram usage:        0 bytes
  6895 ;; Hardware stack levels used:    1
  6896 ;; This function calls:
  6897 ;;		Nothing
  6898 ;; This function is called by:
  6899 ;;		_INT0_isr
  6900 ;; This function uses a non-reentrant model
  6901 ;;
  6902                           
  6903                           	psect	text41
  6904  001166                     __ptext41:
  6905                           	opt stack 0
  6906  001166                     _force_nec_state0:
  6907                           	opt stack 23
  6908                           
  6909                           ;Interrupt.c: 45: Nec_state=0;
  6910                           
  6911                           ;incstack = 0
  6912  001166  0E00               	movlw	0
  6913  001168  6E17               	movwf	_Nec_state,c
  6914                           
  6915                           ;Interrupt.c: 46: T1CONbits.TMR1ON = 0;
  6916  00116A  90CD               	bcf	4045,0,c	;volatile
  6917  00116C  0012               	return		;funcret
  6918  00116E                     __end_of_force_nec_state0:
  6919                           	opt stack 0
  6920                           pclatu	equ	0xFFB
  6921                           pclath	equ	0xFFA
  6922                           tblptru	equ	0xFF8
  6923                           tblptrh	equ	0xFF7
  6924                           tblptrl	equ	0xFF6
  6925                           tablat	equ	0xFF5
  6926                           prodh	equ	0xFF4
  6927                           prodl	equ	0xFF3
  6928                           intcon	equ	0xFF2
  6929                           intcon2	equ	0xFF1
  6930                           postinc0	equ	0xFEE
  6931                           fsr0h	equ	0xFEA
  6932                           fsr0l	equ	0xFE9
  6933                           wreg	equ	0xFE8
  6934                           postdec1	equ	0xFE5
  6935                           fsr1h	equ	0xFE2
  6936                           fsr1l	equ	0xFE1
  6937                           postinc2	equ	0xFDE
  6938                           postdec2	equ	0xFDD
  6939                           fsr2h	equ	0xFDA
  6940                           fsr2l	equ	0xFD9
  6941                           status	equ	0xFD8
  6942                           pclatu	equ	0xFFB
  6943                           pclath	equ	0xFFA
  6944                           tblptru	equ	0xFF8
  6945                           tblptrh	equ	0xFF7
  6946                           tblptrl	equ	0xFF6
  6947                           tablat	equ	0xFF5
  6948                           prodh	equ	0xFF4
  6949                           prodl	equ	0xFF3
  6950                           intcon	equ	0xFF2
  6951                           intcon2	equ	0xFF1
  6952                           postinc0	equ	0xFEE
  6953                           fsr0h	equ	0xFEA
  6954                           fsr0l	equ	0xFE9
  6955                           wreg	equ	0xFE8
  6956                           postdec1	equ	0xFE5
  6957                           fsr1h	equ	0xFE2
  6958                           fsr1l	equ	0xFE1
  6959                           postinc2	equ	0xFDE
  6960                           postdec2	equ	0xFDD
  6961                           fsr2h	equ	0xFDA
  6962                           fsr2l	equ	0xFD9
  6963                           status	equ	0xFD8
  6964                           
  6965                           	psect	rparam
  6966  0000                     pclatu	equ	0xFFB
  6967                           pclath	equ	0xFFA
  6968                           tblptru	equ	0xFF8
  6969                           tblptrh	equ	0xFF7
  6970                           tblptrl	equ	0xFF6
  6971                           tablat	equ	0xFF5
  6972                           prodh	equ	0xFF4
  6973                           prodl	equ	0xFF3
  6974                           intcon	equ	0xFF2
  6975                           intcon2	equ	0xFF1
  6976                           postinc0	equ	0xFEE
  6977                           fsr0h	equ	0xFEA
  6978                           fsr0l	equ	0xFE9
  6979                           wreg	equ	0xFE8
  6980                           postdec1	equ	0xFE5
  6981                           fsr1h	equ	0xFE2
  6982                           fsr1l	equ	0xFE1
  6983                           postinc2	equ	0xFDE
  6984                           postdec2	equ	0xFDD
  6985                           fsr2h	equ	0xFDA
  6986                           fsr2l	equ	0xFD9
  6987                           status	equ	0xFD8


Data Sizes:
    Strings     157
    Constant    493
    Data        143
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     49     109
    BANK0           128     18     119
    BANK1           256      0      33
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    nbr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_14(CODE[20]), STR_13(CODE[21]), STR_12(CODE[30]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), Fan_SW_Txt(BANK0[4]), buffer(BANK1[33]), 

    txt	PTR unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), buffer(BANK1[33]), 


Critical Paths under _main in COMRAM

    _printf->___lwmod
    ___lwmod->___lwdiv
    _get_RPM->___awdiv
    ___awdiv->___wmul
    _do_update_pwm->___ftdiv
    ___lbtoft->___ftpack
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul
    _Do_Init->_DS1621_Init
    _init_UART->_OpenUSART
    _DS1621_Init->_I2C_Write_Cmd_Write_Data
    _I2C_Write_Cmd_Write_Data->_I2C_Write
    _I2C_Write_Cmd_Only->_I2C_Write
    _DS3231_Read_Time->_I2C_Read
    _DS1621_Read_Temp->_I2C_Read

Critical Paths under _chkisr in COMRAM

    _chkisr->_INT0_isr

Critical Paths under _main in BANK0

    _main->_do_update_pwm
    _Turn_On_Fan->_do_update_pwm
    _do_update_pwm->___ftdiv

Critical Paths under _chkisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _chkisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _chkisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chkisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chkisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chkisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _chkisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _chkisr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _chkisr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _chkisr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _chkisr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _chkisr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _chkisr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _chkisr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _chkisr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _chkisr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   25260
                   _DS1621_Read_Temp
                   _DS3231_Read_Time
                            _Do_Init
                        _Turn_On_Fan
                            ___awdiv
                             ___wmul
                      _do_update_pwm
                            _get_RPM
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              37    23     14    3642
                                             28 COMRAM    18     4     14
                                              0 BANK0     10    10      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             16 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     362
                                             23 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     501
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _get_RPM                                              4     2      2    2194
                                             30 COMRAM     4     2      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1012
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1148
                                             22 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Turn_On_Fan                                          0     0      0    8034
                      _do_update_pwm
 ---------------------------------------------------------------------------------
 (1) _do_update_pwm                                        9     9      0    8034
                                              9 BANK0      9     9      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2039
                                             24 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     436
                                             16 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2716
                                             28 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2648
                                             43 COMRAM     6     0      6
                                              0 BANK0      9     9      0
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2008
                                             16 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Do_Init                                              0     0      0     760
                        _DS1621_Init
                           _I2C_Init
                       _Turn_Off_Fan
                     _init_INTERRUPT
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     273
                                             16 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _init_INTERRUPT                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Turn_Off_Fan                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             4     0      4      53
                                             16 COMRAM     4     0      4
                         _i2cHighScl
                         _i2cHighSda
 ---------------------------------------------------------------------------------
 (2) _DS1621_Init                                          1     1      0     434
                                             21 COMRAM     1     1      0
                 _I2C_Write_Cmd_Only
           _I2C_Write_Cmd_Write_Data
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Write_Data                             3     1      2     232
                                             18 COMRAM     3     1      2
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Only                                   2     1      1     157
                                             18 COMRAM     2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS3231_Read_Time                                     3     3      0     195
                                             19 COMRAM     2     2      0
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS1621_Read_Temp                                     5     3      2     241
                                             19 COMRAM     5     3      2
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            2     2      0      60
                                             16 COMRAM     2     2      0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      90
                                             16 COMRAM     3     3      0
                             _i2cAck
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                            _i2cNack
 ---------------------------------------------------------------------------------
 (3) _i2cNack                                              0     0      0       0
                         _i2cHighScl
                          _i2cLowScl
 ---------------------------------------------------------------------------------
 (3) _i2cAck                                               0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (5) _i2cLowSda                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2cLowScl                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2cHighSda                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2cHighScl                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _chkisr                                              14    14      0       0
                                              2 COMRAM    14    14      0
                           _INT0_isr
                         _TIMER1_isr
 ---------------------------------------------------------------------------------
 (7) _TIMER1_isr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT0_isr                                             2     2      0       0
                                              0 COMRAM     2     2      0
                   _force_nec_state0
 ---------------------------------------------------------------------------------
 (8) _force_nec_state0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1621_Read_Temp
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Read_Time
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _Do_Init
     _DS1621_Init
       _I2C_Write_Cmd_Only
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _I2C_Write_Cmd_Write_Data
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
     _I2C_Init
       _i2cHighScl
       _i2cHighSda
     _Turn_Off_Fan
     _init_INTERRUPT
     _init_UART
       _OpenUSART
   _Turn_On_Fan
     _do_update_pwm
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
       ___lbtoft
         ___ftpack
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _do_update_pwm
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___fttol
     ___lbtoft
       ___ftpack
   _get_RPM
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch

 _chkisr (ROOT)
   _INT0_isr
     _force_nec_state0
   _TIMER1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      21       7       12.9%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     12      77       5       93.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     31      6D       1       85.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     105      34        0.0%
DATA                 0      0     105       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Nov 06 13:07:29 2021

               __size_of_I2C_Start 0012                        _SSPSTATbits 000FC7  
               __size_of_I2C_Write 003E                                 l99 0F70  
                     ___awdiv@sign 004D               __size_of_Turn_On_Fan 0010  
              ___wmul@multiplicand 0044                                l135 0EB8  
                              l215 0EF6                                l138 0F06  
                              l813 03F4                                l728 1100  
                              l841 0C8C                                l842 0C8E  
                              l843 0C98                                l844 0C9A  
                              l837 0C72                                l846 0CB4  
                              l776 0134                                _FAN 0015  
                              l849 0FC8                                _PR2 000FCB  
                              _day 001F               __size_of_I2C_ReStart 0016  
                              _dow 0020                                _nbr 00F5  
                              _rpm 000F              __size_of_Turn_Off_Fan 000A  
                              _rps 0011                                _txt 0013  
                              wreg 000FE8                         _Fan_SW_Txt 00DF  
                     __CFG_LVP$OFF 000000                       ___ftdiv@cntr 00E6  
                     ___ftdiv@sign 00EB                       __CFG_WDT$OFF 000000  
                             l1042 0B4C                               l1232 062A  
                             l1306 0FEE                               l1244 0758  
                             l1157 0AB6                               l1229 0660  
                             l1511 0F16                               l1503 0EFE  
                             l1168 0A8E                               l1280 1010  
                             l1521 0F28                               l1265 083E  
                             l1372 0DD0                               l1509 0F10  
                             l1382 0E1C                               l1901 0EAE  
                             l1903 0EB4                               l3423 0C6A  
                             l3415 0C58                               l3435 0C84  
                             l3427 0C76                               l3419 0C62  
                             l5301 01CE                               l5135 0D94  
                             l5119 1008                               l5311 020C  
                             l5303 01D4                               l5137 0D9E  
                             l1891 0E9A                               l1883 0E84  
                             l5147 0DC4                               l5139 0DA6  
                             l5163 0E10                               l5155 0DE8  
                             l5331 028A                               l5307 01E2  
                             l5243 002A                               l5157 0DF2  
                             l5325 024A                               l5317 0214  
                             l5253 005C                               l1879 0E7C  
                             l5159 0DFA                               l5343 02CE  
                             l5319 0228                               l5271 0104  
                             l5255 0072                               l5247 003E  
                             l1889 0E92                               l1897 0EA2  
                             l5345 02DA                               l5353 030C  
                             l5337 02A4                               l5329 027E  
                             l5249 0050                               l4811 057E  
                             l3843 0ACE                               l5355 0314  
                             l5363 03A8                               l5339 02B0  
                             l5283 016C                               l5267 00FA  
                             l5259 0092                               l4813 05A2  
                             l5357 035C                               l5365 03BC  
                             l5349 02F8                               l5293 019C  
   I2C_Write_Cmd_Write_Data@Device 0046                               l3855 0AF6  
                             l3871 0B32                               l5367 03C6  
                             l5287 0188                               l4817 05B0  
                             l4905 0778                               l3857 0B00  
                             l3849 0AE0                               l5297 01C6  
                             l5289 018E                               l5369 03D6  
                             l4771 0A56                               l4763 0A12  
                             l4923 07D2                               l3875 0B42  
                             l3867 0B26                               l3859 0B08  
                             l4781 0A96                               l4773 0A76  
                             l4765 0A1E                               l4837 0600  
                             l4941 082C                               l4933 07FC  
                             l4775 0A82                               l4767 0A3E  
                             l4759 0A02                               l4847 063A  
                             l4863 06A8                               l4935 080A  
                             l4927 07E2                               l4881 06EE  
                             l4857 0680                               l4929 07E8  
                             l4937 0814                               l4787 0AA8  
                             l4891 071C                               l4859 069A  
                             l5667 0854                               l4885 0704  
                             l4877 06DC                               l4895 0732  
                             l4887 070A                               l4959 09BE  
                             STR_1 FF80                               STR_2 FFD0  
                             STR_3 FFF9                               STR_5 FFE3  
                             STR_6 FFE8                               STR_7 FFDD  
                             STR_8 FFFC                               STR_9 FFF5  
                             u3501 0672                               u3521 0690  
                             u3451 056A                               u4247 110E  
                             u3471 0592                               u3561 076A  
                             u3580 0796                               u3585 078E  
                             i2l50 0554                               i2l62 050E  
                             i2l38 0C0C                               _RBPU 007F8F  
                             _TRMT 007D61                       _DS1621_tempC 0007  
                     _DS1621_tempF 0009                               _date 00C4  
                             _main 0840                               _font FD75  
                     ___ftpack@arg 0042                               _hour 0023  
                     ___ftpack@exp 0045                   __end_of_I2C_Init 1142  
                 __end_of_I2C_Read 0EBA                               _time 00CD  
                             _year 0031                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               fsr1l 000FE1  
                             fsr2l 000FD9                               _wrap 0065  
                 __end_of_I2C_Stop 10C8                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 0018        __size_of_I2C_Write_Cmd_Only 001A  
                  __end_of_Do_Init 0E72                       ___ftmul@cntr 005B  
                  __end_of_i2cNack 114C                       ___param_bank 000010  
                     ___ftmul@sign 005C                       ___fttol@exp1 0050  
                     _Turn_Off_Fan 112E                       ___fttol@lval 004C  
                      ?_TIMER1_isr 0032                   __end_of_INT0_isr 0556  
                  ??_do_update_pwm 00EC                              ?_main 0032  
                  __end_of___awdiv 0B4E                              STR_10 FFED  
                            STR_11 FFF1                              STR_12 FF62  
                            STR_13 FF96                              STR_14 FFAB  
                            STR_15 FFBF                    __end_of___ftdiv 0662  
                  __end_of___ftmul 075A                              _T0CON 000FD5  
                  ___awdiv@divisor 004A                              _T1CON 000FCD  
                  __end_of___fttol 0840                              _T2CON 000FCA  
                            _T3CON 000FB1                    __end_of___lwdiv 0DDA  
                  __end_of___lwmod 0E26                    ___awdiv@counter 004C  
                            _RCSTA 000FAB                              _TMR0H 000FD7  
                            _TMR1H 000FCF                              _TMR0L 000FD6  
                            _TMR1L 000FCE                              _TMR3L 000FB2  
                            _SPBRG 000FAF                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TXREG 000FAD  
                            _TXSTA 000FAC                    __end_of_get_RPM 0EF8  
                       _i2cHighSda 115E                         _i2cHighScl 110A  
                  __end_of_dpowers FF5A                              _font2 FE74  
                            _found 0022                    __end_of_isdigit 1012  
                            _tempC 0066                              _tempF 006A  
                            _month 0025                      ___ftpack@sign 0046  
                            _putch 10FC                  __end_of_I2C_Start 10DA  
                __end_of_I2C_Write 0F36                     __CFG_BOREN$OFF 000000  
                            tablat 000FF5                              status 000FD8  
                ?_DS1621_Read_Temp 0045                 ??_DS1621_Read_Temp 0047  
                  __initialization 0B4E                       __end_of_main 091C  
                     __end_of_font FE74                             ??_main 0063  
                    ___fttol@sign1 004B                      __activetblptr 000002  
                ?_DS3231_Read_Time 0032                 ??_DS3231_Read_Time 0045  
          __size_of_init_INTERRUPT 0030                          I2C_Init@c 0042  
                        I2C_Read@n 0043                             _ADCON1 000FC1  
              DS1621_Read_Temp@Cmd 0047                             _CCPR1L 000FBE  
                           _CCPR2L 000FBB                   ___awdiv@dividend 0048  
               __size_of_i2cLowSda 000A                 __size_of_i2cLowScl 0008  
                           ?_putch 0032                   __end_of___ftpack 0AB8  
                 __end_of___lbtoft 0FF0                             _DC_Txt 00DB  
                           i2l2301 0528                             i2l2303 052E  
                           i2l2243 041E                             i2l2253 044A  
                           i2l2309 0532                             i2l2271 0490  
                           i2l2265 0472                             i2l2283 04B6  
                           i2l2259 0468                             i2l2285 04BC  
                           i2l2277 049A                             i2l2289 04C0  
                           i2l2709 0C02                          ??_Do_Init 0048  
                           _OSCCON 000FD3                __size_of_TIMER1_isr 000C  
                           _SPBRGH 000FB0                             _SSPBUF 000FC9  
                        ??_i2cNack 0042                       _Alarm_SW_Txt 00BE  
                 _force_nec_state0 1166                             _i2cAck 10DA  
               __size_of_OpenUSART 0070                             ___wmul 0FA2  
                        ??___awdiv 004C                          ??___ftdiv 00E3  
                        ??___ftmul 0054                          ??___fttol 0046  
                           _chkisr 0008                          ??___lwdiv 0046  
                           _array1 0080                          ??___lwmod 004D  
                           _buffer 0100                             _nec_ok 000D  
                           clear_0 0B5A                   ___awdiv@quotient 004E  
                           _minute 0024                             _second 0027  
                        ??_get_RPM 0052                             _printf 001C  
            ___ftmul@f3_as_product 0058                       __pdataCOMRAM 0063  
                        ??_isdigit 0042                          ?_I2C_Init 0042  
                        ?_I2C_Read 0032                          ?_I2C_Stop 0032  
                     __mediumconst FD74                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
 __end_of_I2C_Write_Cmd_Write_Data 1054                        ?_i2cHighSda 0032  
                      ?_i2cHighScl 0032                             putch@c 0042  
                       __accesstop 0080            __end_of__initialization 0BC0  
                        ?_INT0_isr 0032                 _setup_alarm_minute 0029  
               _setup_alarm_second 002A                      ___rparam_used 000001  
                       ___ftdiv@f1 005D                         ___ftdiv@f2 0060  
                       ___ftdiv@f3 00E7                         ___lbtoft@c 004D  
                       ___ftmul@f1 004E                         ___ftmul@f2 0051  
                       ___fttol@f1 0042                     __pcstackCOMRAM 0032  
                     __pidataBANK0 0D1A                       __pidataBANK1 1012  
                    __end_of_font2 FF50                  __end_of_i2cLowSda 1156  
                __end_of_i2cLowScl 115E                      __end_of_putch 110A  
                       ??_I2C_Init 0046                         ??_I2C_Read 0042  
                     _alarm_minute 001B                       _alarm_second 001C  
                       ??_I2C_Stop 0042                  __end_of_OpenUSART 0CB6  
                          ??_putch 0042                         __pbssBANK0 00F5  
                 _setup_alarm_hour 0028                   _setup_alarm_time 009E  
                    ??_DS1621_Init 0047                 __size_of_init_UART 0014  
                       _alarm_date 0019                         ??_INT0_isr 0032  
                       _alarm_hour 001A                         _alarm_time 0095  
                          ?_i2cAck 0032                 __CFG_CCP2MX$PORTBE 000000  
                    ??_Turn_On_Fan 0063                     I2C_Read@inByte 0044  
                          ?___wmul 0042                __size_of_i2cHighSda 0008  
              __size_of_i2cHighScl 000C                            ?_chkisr 0032  
                          _CCP1CON 000FBD   I2C_Write_Cmd_Write_Data@Data_Out 0045  
                          _CCP2CON 000FBA                       ??_TIMER1_isr 0032  
                    ??_I2C_ReStart 0042                            _ALARMEN 0005  
                        ?___ftpack 0042                          ?___lbtoft 004A  
                       I2C_Write@n 0043                            ?_printf 004E  
                   _init_INTERRUPT 0F72                            _SSPCON1 000FC6  
                          _SSPSTAT 000FC7                            _RPM_Txt 00D6  
                          _Do_Init 0E26           _I2C_Write_Cmd_Write_Data 1034  
       __end_of_I2C_Write_Cmd_Only 108C             DS1621_Read_Temp@Device 0049  
                          _i2cNack 1142                 __end_of_TIMER1_isr 1122  
                        _I2C_Start 10C8                          _I2C_Write 0EF8  
                  __size_of_i2cAck 0012                            __Hparam 0000  
                          __Lparam 0000                __end_of_DS1621_Init 1072  
                          ___awdiv 0AB8                            ___ftdiv 0556  
                  __size_of___wmul 0028                            ___ftmul 0662  
                          ___fttol 075A                            ___lwdiv 0D7E  
                          ___lwmod 0DDA                    __size_of_chkisr 0C3E  
                          __pcinit 0B4E                         ??___ftpack 0047  
                       ??___lbtoft 004D                            __ramtop 1000  
                          _get_RPM 0EBA                            __ptext0 0840  
                          __ptext1 001C                            __ptext2 10FC  
                          __ptext3 0FF0                            __ptext4 0DDA  
                          __ptext5 0D7E          __size_of_DS1621_Read_Temp 003C  
                          __ptext6 0EBA                            __ptext7 0FA2  
                          __ptext8 0AB8                            __ptext9 10EC  
                  __size_of_printf 03DA                  __end_of_init_UART 10B6  
              __end_of_Turn_On_Fan 10FC             __end_of_init_INTERRUPT 0FA2  
                        _T0CONbits 000FD5                  __end_of_hexpowers FF62  
         __end_of_force_nec_state0 116E                          _T1CONbits 000FCD  
                          _dpowers FF50              __end_of_do_update_pwm 09F2  
                          _isdigit 0FF0                         _duty_cycle 0021  
              __end_of_I2C_ReStart 10A2                     __pintcode_body 0BCA  
             end_of_initialization 0BC0                      __Lmediumconst FD74  
        __size_of_DS3231_Read_Time 0064                            int_func 0BCA  
          DS3231_Read_Time@Address 0045                         ?_I2C_Start 0032  
                       ?_I2C_Write 0032                         get_RPM@RPS 0052  
                       _tempSecond 0064                          _RCSTAbits 000FAB  
                          printf@c 00EC                            printf@f 004E  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
      I2C_Write_Cmd_Write_Data@Cmd 0044                          _PORTAbits 000F80  
                        _PORTBbits 000F81                          _PORTDbits 000F83  
                        _PORTEbits 000F84                   I2C_Write@outByte 0042  
                  ?_init_INTERRUPT 0032                         _setup_date 00A7  
                       _setup_hour 002C                         _setup_time 00B0  
                       _setup_year 0030                          _TRISBbits 000F93  
                        _TRISCbits 000F94                       ??_i2cHighSda 0042  
                     ??_i2cHighScl 0042                  __size_of_I2C_Init 000A  
                __size_of_I2C_Read 0048                  __size_of_I2C_Stop 0012  
                      _DS1621_Init 1054                        ___ftdiv@exp 00EA  
                      printf@width 00EA                          _TXSTAbits 000FAC  
                __size_of_INT0_isr 0160                     __end_of_i2cAck 10EC  
                      ___ftmul@exp 0057           DS1621_Read_Temp@Data_Ret 0048  
                      _Turn_On_Fan 10EC                 __end_of_i2cHighSda 1166  
               __end_of_i2cHighScl 1116                     __end_of___wmul 0FCA  
                    __pidataCOMRAM 1122                     __end_of_chkisr 0C46  
                      _I2C_ReStart 108C                          _Nec_code1 0016  
                        _i2cLowSda 114C                          _i2cLowScl 1156  
                   __end_of_printf 03F6                          _Nec_state 0017  
              start_initialization 0B4E                          _OpenUSART 0C46  
                 __CFG_OSC$INTIO67 000000                        ??_I2C_Start 0042  
                      ??_I2C_Write 0042                           ??_i2cAck 0042  
                         ??___wmul 0046                      ?_Turn_Off_Fan 0032  
                         ??_chkisr 0034                        __pdataBANK0 0080  
                      __pdataBANK1 0100                           ??_printf 005C  
                 _DS1621_Read_Temp 0F36                         ?_i2cLowSda 0032  
                       ?_i2cLowScl 0032                  __size_of___ftpack 00C6  
                __size_of___lbtoft 0026                        __pbssCOMRAM 0001  
       ??_I2C_Write_Cmd_Write_Data 0046                      __pcstackBANK0 00E3  
                     _isdigit$2279 0043                           ?_Do_Init 0032  
                       ?_OpenUSART 0042                   _DS3231_Read_Time 0CB6  
                         ?_i2cNack 0032                   ___lwdiv@dividend 0042  
                      I2C_Read@ack 0042                          _bit_count 001D  
                        __pintcode 0008                     ??_Turn_Off_Fan 0042  
                    __pmediumconst FD74                           ?___awdiv 0048  
                         ?___ftdiv 005D                           ?___ftmul 004E  
                         ?___fttol 0042                          __tft_type 0018  
                         ?___lwdiv 0042                 _I2C_Write_Cmd_Only 1072  
                         ?___lwmod 0049                           ?_get_RPM 0050  
              ?_I2C_Write_Cmd_Only 0044                  ?_force_nec_state0 0032  
                         ?_isdigit 0032                           _I2C_Init 1138  
                         _I2C_Read 0E72                           _I2C_Stop 10B6  
                        _init_UART 10A2                 ??_force_nec_state0 0032  
         I2C_Write_Cmd_Only@Device 0045                          _hexpowers FF5A  
                 ___lwdiv@quotient 0047                     __size_of_putch 000E  
                   ___wmul@product 0046                           _INT0_isr 03F6  
             ??_I2C_Write_Cmd_Only 0045                           _PIE1bits 000F9D  
           DS3231_Read_Time@Device 0046                           _PIR1bits 000F9E  
                 ??_init_INTERRUPT 0042                          _setup_day 002B  
                DS1621_Init@Device 0047                  ___wmul@multiplier 0042  
                      ??_i2cLowSda 0042                        ??_i2cLowScl 0042  
                       printf@flag 00E9                         printf@prec 00E6  
                       ?_init_UART 0032                        _INTCON2bits 000FF1  
                        copy_data0 0B74                          copy_data1 0B94  
                        copy_data2 0BB4                           _Nec_code 0001  
                      ??_OpenUSART 0044                       ?_DS1621_Init 0032  
                 __size_of_Do_Init 004C                    OpenUSART@config 0044  
                     _Time_Elapsed 000B                   __size_of_i2cNack 000A  
                    _RTC_ALARM_Txt 00C2                           __Hrparam 0000  
           __size_of_do_update_pwm 00D6                           __Lrparam 0000  
                     ?_Turn_On_Fan 0032                   __size_of___awdiv 0096  
                 __size_of___ftdiv 010C                   __size_of___ftmul 00F8  
                 __size_of___fttol 00E6                   __size_of___lwdiv 005C  
                 __size_of___lwmod 004C                           ___ftpack 09F2  
                         ___lbtoft 0FCA                       ?_I2C_ReStart 0032  
                 __size_of_get_RPM 003E                     _setup_fan_temp 0063  
                   _setup_fan_text 00B9                   __size_of_isdigit 0022  
                  ___lwdiv@divisor 0044                    ___lwdiv@counter 0046  
                         __ptext10 091C                           __ptext11 0FCA  
                         __ptext20 112E                           __ptext12 075A  
                         __ptext21 1138                           __ptext13 0662  
                         __ptext30 0E72                           __ptext22 1054  
                         __ptext14 0556                           __ptext31 1142  
                         __ptext23 1034                           __ptext15 09F2  
                         __ptext40 03F6                           __ptext32 10DA  
                         __ptext24 1072                           __ptext16 0E26  
                         __ptext41 1166                           __ptext33 108C  
                         __ptext25 0CB6                           __ptext17 10A2  
                         __ptext34 114C                           __ptext26 0F36  
                         __ptext18 0C46                           __ptext35 1156  
                         __ptext27 0EF8                           __ptext19 0F72  
                         __ptext36 115E                           __ptext28 10B6  
                         __ptext37 110A                           __ptext29 10C8  
                         __ptext39 1116               __end_of_Turn_Off_Fan 1138  
                         _colstart 001E           __end_of_DS1621_Read_Temp 0F72  
                    __size_of_main 00DC                          printf@idx 00E3  
                        printf@val 00E7                           _rowstart 0026  
         __end_of_DS3231_Read_Time 0D1A                         _INTCONbits 000FF2  
                    _do_update_pwm 091C                     OpenUSART@spbrg 0042  
                      ??_init_UART 0045                           isdigit@c 0044  
                         intlevel2 0000                   ___lwmod@dividend 0049  
          do_update_pwm@duty_cycle 00F2                           printf@ap 00E4  
                       _TIMER1_isr 1116                     ?_do_update_pwm 0032  
                  ___lwmod@divisor 004B              I2C_Write_Cmd_Only@Cmd 0044  
                  ___lwmod@counter 004D                       _setup_minute 002D  
                     _setup_second 002F                  do_update_pwm@dc_I 00F3  
                do_update_pwm@dc_f 00EF                        _setup_month 002E  
        __size_of_force_nec_state0 0008  __size_of_I2C_Write_Cmd_Write_Data 0020  
             __size_of_DS1621_Init 001E          ?_I2C_Write_Cmd_Write_Data 0044  
